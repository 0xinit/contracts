{
    "contractName": "DraggableSharesWithPredecessor",
    "abi": [
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "newBaseToken_",
                    "type": "address"
                },
                {
                    "internalType": "string",
                    "name": "_terms",
                    "type": "string"
                },
                {
                    "internalType": "address",
                    "name": "offerFactory",
                    "type": "address"
                },
                {
                    "internalType": "address",
                    "name": "predecessor",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "quorum",
                    "type": "uint256"
                },
                {
                    "internalType": "uint256",
                    "name": "votePeriod",
                    "type": "uint256"
                }
            ],
            "stateMutability": "nonpayable",
            "type": "constructor"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "owner",
                    "type": "address"
                },
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "spender",
                    "type": "address"
                },
                {
                    "indexed": false,
                    "internalType": "uint256",
                    "name": "value",
                    "type": "uint256"
                }
            ],
            "name": "Approval",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "lostAddress",
                    "type": "address"
                },
                {
                    "indexed": false,
                    "internalType": "uint256",
                    "name": "collateral",
                    "type": "uint256"
                }
            ],
            "name": "ClaimCleared",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "lostAddress",
                    "type": "address"
                },
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "claimant",
                    "type": "address"
                },
                {
                    "indexed": false,
                    "internalType": "uint256",
                    "name": "collateral",
                    "type": "uint256"
                }
            ],
            "name": "ClaimDeleted",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "lostAddress",
                    "type": "address"
                },
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "claimant",
                    "type": "address"
                },
                {
                    "indexed": false,
                    "internalType": "uint256",
                    "name": "balance",
                    "type": "uint256"
                }
            ],
            "name": "ClaimMade",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "lostAddress",
                    "type": "address"
                },
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "claimant",
                    "type": "address"
                },
                {
                    "indexed": false,
                    "internalType": "uint256",
                    "name": "collateral",
                    "type": "uint256"
                }
            ],
            "name": "ClaimResolved",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": false,
                    "internalType": "address",
                    "name": "newCustomCollateralAddress",
                    "type": "address"
                },
                {
                    "indexed": false,
                    "internalType": "uint256",
                    "name": "newCustomCollareralRate",
                    "type": "uint256"
                }
            ],
            "name": "CustomClaimCollateralChanged",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": false,
                    "internalType": "address",
                    "name": "newContractAddress",
                    "type": "address"
                }
            ],
            "name": "MigrationSucceeded",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "from",
                    "type": "address"
                },
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "to",
                    "type": "address"
                },
                {
                    "indexed": false,
                    "internalType": "uint256",
                    "name": "value",
                    "type": "uint256"
                }
            ],
            "name": "Transfer",
            "type": "event"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "owner",
                    "type": "address"
                },
                {
                    "internalType": "address",
                    "name": "spender",
                    "type": "address"
                }
            ],
            "name": "allowance",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "spender",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "value",
                    "type": "uint256"
                }
            ],
            "name": "approve",
            "outputs": [
                {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool"
                }
            ],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "account",
                    "type": "address"
                }
            ],
            "name": "balanceOf",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "uint256",
                    "name": "amount",
                    "type": "uint256"
                }
            ],
            "name": "burn",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "claimPeriod",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address"
                }
            ],
            "name": "claims",
            "outputs": [
                {
                    "internalType": "address",
                    "name": "claimant",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "collateral",
                    "type": "uint256"
                },
                {
                    "internalType": "uint256",
                    "name": "timestamp",
                    "type": "uint256"
                },
                {
                    "internalType": "address",
                    "name": "currencyUsed",
                    "type": "address"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "clearClaim",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "convert",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "convert1",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "oldWrapped",
                    "type": "address"
                }
            ],
            "name": "convert2",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "customCollateralAddress",
            "outputs": [
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "customCollateralRate",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "decimals",
            "outputs": [
                {
                    "internalType": "uint8",
                    "name": "",
                    "type": "uint8"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "collateralType",
                    "type": "address"
                },
                {
                    "internalType": "address",
                    "name": "lostAddress",
                    "type": "address"
                }
            ],
            "name": "declareLost",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "lostAddress",
                    "type": "address"
                }
            ],
            "name": "deleteClaim",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "buyer",
                    "type": "address"
                },
                {
                    "internalType": "address",
                    "name": "currency",
                    "type": "address"
                }
            ],
            "name": "drag",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "factory",
            "outputs": [
                {
                    "internalType": "contract IOfferFactory",
                    "name": "",
                    "type": "address"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "getClaimDeleter",
            "outputs": [
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "lostAddress",
                    "type": "address"
                }
            ],
            "name": "getClaimant",
            "outputs": [
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "lostAddress",
                    "type": "address"
                }
            ],
            "name": "getCollateral",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "collateralType",
                    "type": "address"
                }
            ],
            "name": "getCollateralRate",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "lostAddress",
                    "type": "address"
                }
            ],
            "name": "getCollateralType",
            "outputs": [
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "getOldBase",
            "outputs": [
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "lostAddress",
                    "type": "address"
                }
            ],
            "name": "getTimeStamp",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "isBinding",
            "outputs": [
                {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "target",
                    "type": "address"
                }
            ],
            "name": "isRecoveryEnabled",
            "outputs": [
                {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "bytes32",
                    "name": "salt",
                    "type": "bytes32"
                },
                {
                    "internalType": "uint256",
                    "name": "pricePerShare",
                    "type": "uint256"
                },
                {
                    "internalType": "address",
                    "name": "currency",
                    "type": "address"
                }
            ],
            "name": "makeAcquisitionOffer",
            "outputs": [],
            "stateMutability": "payable",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "migrate",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "name",
            "outputs": [
                {
                    "internalType": "string",
                    "name": "",
                    "type": "string"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "notifyOfferEnded",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "offer",
            "outputs": [
                {
                    "internalType": "contract IOffer",
                    "name": "",
                    "type": "address"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "from",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "amount",
                    "type": "uint256"
                },
                {
                    "internalType": "bytes",
                    "name": "",
                    "type": "bytes"
                }
            ],
            "name": "onTokenTransfer",
            "outputs": [
                {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool"
                }
            ],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "quorum",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "lostAddress",
                    "type": "address"
                }
            ],
            "name": "recover",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address"
                }
            ],
            "name": "recoveryDisabled",
            "outputs": [
                {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "bool",
                    "name": "enabled",
                    "type": "bool"
                }
            ],
            "name": "setRecoverable",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "symbol",
            "outputs": [
                {
                    "internalType": "string",
                    "name": "",
                    "type": "string"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "terms",
            "outputs": [
                {
                    "internalType": "string",
                    "name": "",
                    "type": "string"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "totalSupply",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "to",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "value",
                    "type": "uint256"
                }
            ],
            "name": "transfer",
            "outputs": [
                {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool"
                }
            ],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "recipient",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "amount",
                    "type": "uint256"
                },
                {
                    "internalType": "bytes",
                    "name": "data",
                    "type": "bytes"
                }
            ],
            "name": "transferAndCall",
            "outputs": [
                {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool"
                }
            ],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "sender",
                    "type": "address"
                },
                {
                    "internalType": "address",
                    "name": "recipient",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "amount",
                    "type": "uint256"
                }
            ],
            "name": "transferFrom",
            "outputs": [
                {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool"
                }
            ],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "uint256",
                    "name": "amount",
                    "type": "uint256"
                }
            ],
            "name": "unwrap",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "unwrapConversionFactor",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "votePeriod",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "shareholder",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "amount",
                    "type": "uint256"
                }
            ],
            "name": "wrap",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "wrapped",
            "outputs": [
                {
                    "internalType": "contract IERC20",
                    "name": "",
                    "type": "address"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        }
    ],
    "metadata": "{\"compiler\":{\"version\":\"0.8.1+commit.df193b15\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newBaseToken_\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_terms\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"offerFactory\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"predecessor\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"quorum\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"votePeriod\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"lostAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"collateral\",\"type\":\"uint256\"}],\"name\":\"ClaimCleared\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"lostAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"claimant\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"collateral\",\"type\":\"uint256\"}],\"name\":\"ClaimDeleted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"lostAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"claimant\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"name\":\"ClaimMade\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"lostAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"claimant\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"collateral\",\"type\":\"uint256\"}],\"name\":\"ClaimResolved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newCustomCollateralAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newCustomCollareralRate\",\"type\":\"uint256\"}],\"name\":\"CustomClaimCollateralChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newContractAddress\",\"type\":\"address\"}],\"name\":\"MigrationSucceeded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimPeriod\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"claims\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"claimant\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"collateral\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"currencyUsed\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"clearClaim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"convert\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"convert1\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"oldWrapped\",\"type\":\"address\"}],\"name\":\"convert2\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"customCollateralAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"customCollateralRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"collateralType\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"lostAddress\",\"type\":\"address\"}],\"name\":\"declareLost\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"lostAddress\",\"type\":\"address\"}],\"name\":\"deleteClaim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"}],\"name\":\"drag\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"contract IOfferFactory\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getClaimDeleter\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"lostAddress\",\"type\":\"address\"}],\"name\":\"getClaimant\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"lostAddress\",\"type\":\"address\"}],\"name\":\"getCollateral\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"collateralType\",\"type\":\"address\"}],\"name\":\"getCollateralRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"lostAddress\",\"type\":\"address\"}],\"name\":\"getCollateralType\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOldBase\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"lostAddress\",\"type\":\"address\"}],\"name\":\"getTimeStamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isBinding\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"isRecoveryEnabled\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"pricePerShare\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"}],\"name\":\"makeAcquisitionOffer\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"notifyOfferEnded\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"offer\",\"outputs\":[{\"internalType\":\"contract IOffer\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onTokenTransfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"quorum\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"lostAddress\",\"type\":\"address\"}],\"name\":\"recover\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"recoveryDisabled\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"enabled\",\"type\":\"bool\"}],\"name\":\"setRecoverable\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"terms\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"unwrap\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unwrapConversionFactor\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"votePeriod\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"shareholder\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"wrap\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"wrapped\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Luzius Meisser, luzius@aktionariat.com This is an ERC-20 token representing shares of CompanyName AG that are bound to a shareholder agreement that can be found at the URL defined in the constant 'terms'. The shareholder agreement is partially enforced through this smart contract. The agreement is designed to facilitate a complete acquisition of the firm even if a minority of shareholders disagree with the acquisition, to protect the interest of the minority shareholders by requiring the acquirer to offer the same conditions to everyone when acquiring the company, and to facilitate an update of the shareholder agreement even if a minority of the shareholders that are bound to this agreement disagree. The name \\\"draggable\\\" stems from the convention of calling the right to drag a minority along with a sale of the company \\\"drag-along\\\" rights. The name is chosen to ensure that token holders are aware that they are bound to such an agreement. The percentage of token holders that must agree with an update of the terms is defined by the constant UPDATE_QUORUM. The percentage of yes-votes that is needed to successfully complete an acquisition is defined in the constant ACQUISITION_QUORUM. Note that the update quorum is based on the total number of tokens in circulation. In contrast, the acquisition quorum is based on the number of votes cast during the voting period, not taking into account those who did not bother to vote.\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See `IERC20.allowance`.\"},\"approve(address,uint256)\":{\"details\":\"See `IERC20.approve`. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See `IERC20.balanceOf`.\"},\"totalSupply()\":{\"details\":\"See `IERC20.totalSupply`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See `IERC20.transferFrom`. Emits an `Approval` event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of `ERC20`; Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `value`. - the caller must have allowance for `sender`'s tokens of at least `amount`.\"}},\"title\":\"Draggable CompanyName AG Shares\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"burn(uint256)\":{\"notice\":\"Burns both the token itself as well as the wrapped token! If you want to get out of the shareholder agreement, use unwrap after it has been deactivated by a majority vote or acquisition. Burning only works if wrapped token supports burning. Also, the exact meaning of this operation might depend on the circumstances. Burning and reussing the wrapped token does not free the sender from the legal obligations of the shareholder agreement.\"},\"clearClaim()\":{\"notice\":\"Clears a claim after the key has been found again and assigns the collateral to the \\\"lost\\\" address. This is the price an adverse claimer pays for filing a false claim and makes it risky to do so.\"},\"declareLost(address,address)\":{\"notice\":\"Anyone can declare that the private key to a certain address was lost by calling declareLost providing a deposit/collateral. There are three possibilities of what can happen with the claim: 1) The claim period expires and the claimant can get the deposit and the shares back by calling recover 2) The \\\"lost\\\" private key is used at any time to call clearClaim. In that case, the claim is deleted and    the deposit sent to the shareholder (the owner of the private key). It is recommended to call recover    whenever someone transfers funds to let claims be resolved automatically when the \\\"lost\\\" private key is    used again. 3) The owner deletes the claim and assigns the deposit to the claimant. This is intended to be used to resolve    disputes. Generally, using this function implies that you have to trust the issuer of the tokens to handle    the situation well. As a rule of thumb, the contract owner should assume the owner of the lost address to be the    rightful owner of the deposit. It is highly recommended that the owner observes the claims made and informs the owners of the claimed addresses whenever a claim is made for their address (this of course is only possible if they are known to the owner, e.g. through a shareholder register).\"},\"deleteClaim(address)\":{\"notice\":\"This function is to be executed by the claim deleter only in case a dispute needs to be resolved manually.\"},\"getCollateralRate(address)\":{\"notice\":\"Returns the collateral rate for the given collateral type and 0 if that type of collateral is not accepted. By default, only the token itself is accepted at a rate of 1:1. Subclasses should override this method if they want to add additional types of collateral.\"},\"isBinding()\":{\"notice\":\"Indicates that the token holders are bound to the token terms and that: - Conversions back to the wrapped token (unwrap) are not allowed - The drag-along can be performed by making an according offer - They can be migrated to a new version of this contract in accordance with the terms\"},\"isRecoveryEnabled(address)\":{\"notice\":\"Some users might want to disable claims for their address completely. For example if they use a deep cold storage solution or paper wallet.\"},\"recover(address)\":{\"notice\":\"After the claim period has passed, the claimant can call this function to send the tokens on the lost address as well as the collateral to himself.\"},\"unwrap(uint256)\":{\"notice\":\"Decrease the number of drag-along tokens. The user gets back their shares in return \"},\"wrap(address,uint256)\":{\"notice\":\"Increases the number of drag-along tokens. Requires minter to deposit an equal amount of share tokens \"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"c:/Users/luziu/Documents/aktionariat/contracts/src/DraggableSharesWithPredecessor.sol\":\"DraggableSharesWithPredecessor\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"c:/Users/luziu/Documents/aktionariat/contracts/src/DraggableShares.sol\":{\"keccak256\":\"0x353b48d828c0a6fb5e19daf432d9eff969f7b70c94a8c81d58109834d1167330\",\"license\":\"LicenseRef-Aktionariat\",\"urls\":[\"bzz-raw://f5bae08b01a827fce33b4ddf947eb89c45b75e3a5e0e69bd92d9d829601133a5\",\"dweb:/ipfs/QmYEptPEn6AxeUJtZadpJagfgixf7cwo8xh1vh6VpytT7k\"]},\"c:/Users/luziu/Documents/aktionariat/contracts/src/DraggableSharesWithPredecessor.sol\":{\"keccak256\":\"0x8ce7064f5b7ef5409cdaf66f6c2f1905f7d576a4aba224a0d981de87b18cb5e4\",\"license\":\"LicenseRef-Aktionariat\",\"urls\":[\"bzz-raw://8a036bc7e73201437507a99f40ade1336a5a70e4857d09a76156936fbd0c7120\",\"dweb:/ipfs/QmYMfKYBHqdwAn8GZz38JWNV3yMDy44yUeyEEiYXZS5XBA\"]},\"c:/Users/luziu/Documents/aktionariat/contracts/src/ERC20.sol\":{\"keccak256\":\"0x49a62dec4bce9d2a4ace92aafe96733a9c43553bf3b6d914829ead7cb730bd09\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://24189fc1f42e40abf812c09e61d411cdfbd2dd5c3aa779ba30a8b9867bb9bcd7\",\"dweb:/ipfs/QmStB2NZ3g33pnL3oafkLgLFSETMmAU1etdZdjNwEyxKsy\"]},\"c:/Users/luziu/Documents/aktionariat/contracts/src/ERC20Draggable.sol\":{\"keccak256\":\"0x7f82719d1a0907dcc5932c6366d0a00da4df3e63a454da35fb46bf620d453f86\",\"license\":\"LicenseRef-Aktionariat\",\"urls\":[\"bzz-raw://eddf2ca78382518725256d8888e9aa7db5812b2660bd78153170baca19bdc430\",\"dweb:/ipfs/QmYMtmv2mvddCM4D9yvW4ysutYXFgexLu4PARrsDpKKH1w\"]},\"c:/Users/luziu/Documents/aktionariat/contracts/src/ERC20Recoverable.sol\":{\"keccak256\":\"0x6c5148711c2532e4ce0fb6a6dabf1c4443d96e0cc85646279900a55831dced66\",\"license\":\"LicenseRef-Aktionariat\",\"urls\":[\"bzz-raw://e45e012147251bb913fa4e92b6d0d84e06c64ffe59acf9fb1312505ad5c55b21\",\"dweb:/ipfs/QmUrdavyekxMdwvic2xg7tYs6Mg15tTtFJuU34rUBDULRj\"]},\"c:/Users/luziu/Documents/aktionariat/contracts/src/IERC20.sol\":{\"keccak256\":\"0xdd9ef23be041b279c4815ae1483703e0532d8839865b8081e12955a52d4e148f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2eef9ae3fc010bd8012716c89852c245aacf07474f3a52b84280f9f7958210fe\",\"dweb:/ipfs/QmSsjJBfgFw8PzaBTaZwCLzHkqM6pfS6NDrrFysNkCbS2M\"]},\"c:/Users/luziu/Documents/aktionariat/contracts/src/IERC677Receiver.sol\":{\"keccak256\":\"0x04613a7a3e5c67889c1476fca1c9b4c606e3527aa379e1ede01a9dfc7b9ae48d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://53dce0f0d8286dd9a720386b52ac8e9964c2986762aaa13f7d1e303ba400f4f8\",\"dweb:/ipfs/QmY2AocHahfW5JFGi4m5EVqh2JywqH8tHrABe9Y4fC93CL\"]}},\"version\":1}",
    "bytecode": "60a06040526000600a553480156200001657600080fd5b50604051620032c9380380620032c983398101604081905262000039916200029a565b6003805460ff19169055600980546001600160a01b0319166001600160a01b038616179055600c829055600d8190558484848484838383836200007c83620000ba565b50508651620000959250600e91506020880190620001d7565b505050505060609690961b6001600160601b031916608052506200044a945050505050565b604080518082018252601781527f7365745265636f76657261626c6528626f6f6c65616e29000000000000000000602090910152516001600160a01b038216907f0b40210b15aff3e3e4a5dfbf1cb4d5380d1319ece2bb84fe19077f99fdaaa9d2906200012d90600090602401620003b9565b60408051601f198184030181529181526020820180516001600160e01b03166001600160e01b03199094169390931790925290516200016d91906200039b565b6000604051808303816000865af19150503d8060008114620001ac576040519150601f19603f3d011682016040523d82523d6000602084013e620001b1565b606091505b5050600880546001600160a01b0319166001600160a01b03939093169290921790915550565b828054620001e590620003f7565b90600052602060002090601f01602090048101928262000209576000855562000254565b82601f106200022457805160ff191683800117855562000254565b8280016001018555821562000254579182015b828111156200025457825182559160200191906001019062000237565b506200026292915062000266565b5090565b5b8082111562000262576000815560010162000267565b80516001600160a01b03811681146200029557600080fd5b919050565b60008060008060008060c08789031215620002b3578182fd5b620002be876200027d565b60208801519096506001600160401b0380821115620002db578384fd5b818901915089601f830112620002ef578384fd5b81518181111562000304576200030462000434565b604051601f8201601f19908116603f011681019083821181831017156200032f576200032f62000434565b816040528281528c602084870101111562000348578687fd5b6200035b836020830160208801620003c4565b809950505050505062000371604088016200027d565b935062000381606088016200027d565b92506080870151915060a087015190509295509295509295565b60008251620003af818460208701620003c4565b9190910192915050565b901515815260200190565b60005b83811015620003e1578181015183820152602001620003c7565b83811115620003f1576000848401525b50505050565b6002810460018216806200040c57607f821691505b602082108114156200042e57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fd5b60805160601c612e4b6200047e6000396000818161172301528181611c2d01528181611d250152611d9b0152612e4b6000f3fe6080604052600436106102885760003560e01c80637dc2cd981161015a578063b40e80d1116100c1578063dcc7d4ad1161007a578063dcc7d4ad14610717578063dd62ed3e1461072a578063de0e9a3e1461074a578063e056a7651461076a578063eb470ebf1461078a578063fcb79a7e146107aa57610288565b8063b40e80d114610668578063bf376c7a14610688578063c028df06146106a8578063c45a0155146106bd578063c6788bdd146106d2578063d50256251461070257610288565b8063a09295f811610113578063a09295f8146105c9578063a3ec1883146105de578063a4c0ed36146105fe578063a78135871461061e578063a9059cbb14610633578063aa3f3b751461065357610288565b80637dc2cd98146105405780638fd3ab801461055557806391bbdcc71461056a57806395d89b411461057f5780639b56d6c9146105945780639e4b5745146105b457610288565b8063313ce567116101fe57806350e70d48116101b757806350e70d48146104a157806360918117146104b65780636427ed97146104cb5780636b03ed5f146104eb57806370a082311461050057806377e071ad1461052057610288565b8063313ce567146103ea57806332a7ae951461040c57806332bc320b1461042c5780633bcc45ba146104415780634000aea01461046157806342966c681461048157610288565b80631703a018116102505780631703a0181461034b57806318160ddd146103605780631e3b9de51461037557806323b872dd1461039557806326773ddd146103b55780632a0a4ed5146103d557610288565b806306fdde031461028d5780630832e470146102b8578063095ea7b3146102da5780630c6f0e5d146103075780630cd865ec14610329575b600080fd5b34801561029957600080fd5b506102a26107ca565b6040516102af9190612a17565b60405180910390f35b3480156102c457600080fd5b506102cd610926565b6040516102af9190612cdc565b3480156102e657600080fd5b506102fa6102f5366004612658565b61092c565b6040516102af91906129d7565b34801561031357600080fd5b5061031c610942565b6040516102af9190612913565b34801561033557600080fd5b506103496103443660046125a8565b610951565b005b34801561035757600080fd5b506102cd610b64565b34801561036c57600080fd5b506102cd610b6a565b34801561038157600080fd5b5061031c6103903660046125a8565b610b70565b3480156103a157600080fd5b506102fa6103b0366004612618565b610b91565b3480156103c157600080fd5b506103496103d03660046125e0565b610bed565b3480156103e157600080fd5b5061031c610e0b565b3480156103f657600080fd5b506103ff610e8d565b6040516102af9190612ce5565b34801561041857600080fd5b506103496104273660046125a8565b610e96565b34801561043857600080fd5b50610349611070565b34801561044d57600080fd5b5061031c61045c3660046125a8565b611096565b34801561046d57600080fd5b506102fa61047c366004612683565b6110b7565b34801561048d57600080fd5b5061034961049c366004612820565b61115c565b3480156104ad57600080fd5b5061031c6111ef565b3480156104c257600080fd5b506102cd6111fe565b3480156104d757600080fd5b506103496104e6366004612707565b611204565b3480156104f757600080fd5b50610349611223565b34801561050c57600080fd5b506102cd61051b3660046125a8565b61135f565b34801561052c57600080fd5b506102cd61053b3660046125a8565b61137a565b34801561054c57600080fd5b506102cd611450565b34801561056157600080fd5b50610349611457565b34801561057657600080fd5b506103496114f5565b34801561058b57600080fd5b506102a2611515565b3480156105a057600080fd5b506102cd6105af3660046125a8565b611658565b3480156105c057600080fd5b506102fa611676565b3480156105d557600080fd5b5061031c61167d565b3480156105ea57600080fd5b506102fa6105f93660046125a8565b6116c2565b34801561060a57600080fd5b506102fa610619366004612683565b6116e1565b34801561062a57600080fd5b506102cd611705565b34801561063f57600080fd5b506102fa61064e366004612658565b61170b565b34801561065f57600080fd5b5061034961171e565b34801561067457600080fd5b506102fa6106833660046125a8565b61187a565b34801561069457600080fd5b506103496106a3366004612658565b61188f565b3480156106b457600080fd5b5061031c61192c565b3480156106c957600080fd5b5061031c61193b565b3480156106de57600080fd5b506106f26106ed3660046125a8565b61194a565b6040516102af94939291906129ac565b34801561070e57600080fd5b506102a261197c565b61034961072536600461273f565b611a0a565b34801561073657600080fd5b506102cd6107453660046125e0565b611bc1565b34801561075657600080fd5b50610349610765366004612820565b611bec565b34801561077657600080fd5b506103496107853660046125a8565b611c0b565b34801561079657600080fd5b506102cd6107a53660046125a8565b611e64565b3480156107b657600080fd5b506103496107c53660046125e0565b611e82565b60606107d4611676565b1561088957600860009054906101000a90046001600160a01b03166001600160a01b03166306fdde036040518163ffffffff1660e01b815260040160006040518083038186803b15801561082757600080fd5b505afa15801561083b573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526108639190810190612777565b60405160200161087391906128b1565b6040516020818303038152906040529050610923565b600860009054906101000a90046001600160a01b03166001600160a01b03166306fdde036040518163ffffffff1660e01b815260040160006040518083038186803b1580156108d757600080fd5b505afa1580156108eb573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526109139190810190612777565b60405160200161087391906128e3565b90565b600a5481565b6000610939338484611eb7565b50600192915050565b6006546001600160a01b031681565b6001600160a01b03808216600090815260046020908152604091829020825160808101845281548516815260018201549281018390526002820154938101939093526003015490921660608201819052909190816109ca5760405162461bcd60e51b81526004016109c190612b51565b60405180910390fd5b82516001600160a01b031633146109f35760405162461bcd60e51b81526004016109c190612a4a565b4262ed4e008460400151610a079190612cf3565b1115610a255760405162461bcd60e51b81526004016109c190612a81565b82516001600160a01b03808616600090815260046020819052604080832080546001600160a01b031990811682556001820185905560028201949094556003018054909316909255905163a9059cbb60e01b81529184169163a9059cbb91610a9191859188910161294b565b602060405180830381600087803b158015610aab57600080fd5b505af1158015610abf573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ae39190612723565b610aff5760405162461bcd60e51b81526004016109c190612b79565b610b128582610b0d8861135f565b611f12565b806001600160a01b0316856001600160a01b03167f52a5c2b28bc6eb9712d0ced43463103b486b13ccc9cda499fd3b2d7b6a74a8ee85604051610b559190612cdc565b60405180910390a35050505050565b600c5481565b60025490565b6001600160a01b03808216600090815260046020526040902054165b919050565b6000610b9e848484611f12565b6001600160a01b0384166000908152600160209081526040808320338452909152902054600160ff1b811015610be257610be28533610bdd8685612d4a565b611eb7565b506001949350505050565b610bf6816116c2565b610c125760405162461bcd60e51b81526004016109c190612bb0565b6000610c1d8361137a565b905060008111610c3f5760405162461bcd60e51b81526004016109c190612b21565b336000610c4b8461135f565b90506000610c598483612d2b565b90508582610c795760405162461bcd60e51b81526004016109c190612c1c565b6001600160a01b03861660009081526004602052604090206001015415610cb25760405162461bcd60e51b81526004016109c190612be5565b6040516323b872dd60e01b81526001600160a01b038216906323b872dd90610ce290879030908790600401612927565b602060405180830381600087803b158015610cfc57600080fd5b505af1158015610d10573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d349190612723565b610d505760405162461bcd60e51b81526004016109c190612b79565b604080516080810182526001600160a01b038087168083526020808401878152428587019081528d8516606087019081528d86166000818152600490955293889020965187549087166001600160a01b0319918216178855925160018801559051600287015551600390950180549590941694169390931790915591517f1982ca8958fc8a8176cb52be509260f4bc5af7ce04e1533711793f1c56dd535990610dfa908790612cdc565b60405180910390a350505050505050565b60085460408051632a0a4ed560e01b815290516000926001600160a01b031691632a0a4ed5916004808301926020929190829003018186803b158015610e5057600080fd5b505afa158015610e64573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e8891906125c4565b905090565b60035460ff1681565b610e9e610e0b565b6001600160a01b0316336001600160a01b031614610ece5760405162461bcd60e51b81526004016109c190612ca5565b6001600160a01b038082166000908152600460209081526040918290208251608081018452815485168152600182015492810183905260028201549381019390935260030154909216606082018190529091610f3c5760405162461bcd60e51b81526004016109c190612b51565b6001600160a01b03808416600090815260046020818152604080842080546001600160a01b031990811682556001820186905560028201959095556003018054909416909355855190860151925163a9059cbb60e01b81529385169363a9059cbb93610faa9390910161294b565b602060405180830381600087803b158015610fc457600080fd5b505af1158015610fd8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ffc9190612723565b6110185760405162461bcd60e51b81526004016109c190612b79565b81600001516001600160a01b0316836001600160a01b03167fbb036e629a9f4c0897ee5d48440dfdb36f7e772117723a2ed603a6514244c2d584602001516040516110639190612cdc565b60405180910390a3505050565b600b546001600160a01b031633141561109457600b80546001600160a01b03191690555b565b6001600160a01b039081166000908152600460205260409020600301541690565b6000806110c4868661170b565b9050801561115357604051635260769b60e11b81526001600160a01b0387169063a4c0ed36906110fe903390899089908990600401612964565b602060405180830381600087803b15801561111857600080fd5b505af115801561112c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111509190612723565b90505b95945050505050565b6111663382611fcf565b6000611170611676565b61117c57600a5461117f565b60015b6008549091506001600160a01b03166342966c6861119d8385612d2b565b6040518263ffffffff1660e01b81526004016111b99190612cdc565b600060405180830381600087803b1580156111d357600080fd5b505af11580156111e7573d6000803e3d6000fd5b505050505050565b6008546001600160a01b031681565b60075481565b336000908152600560205260409020805460ff19169115919091179055565b33600090815260046020526040902060010154156110945733600081815260046020819052604080832060018101805460038301805484546001600160a01b0319908116865593889055600290940196909655908216909455905163a9059cbb60e01b815292936001600160a01b0390911692839263a9059cbb926112ac92909187910161294b565b602060405180830381600087803b1580156112c657600080fd5b505af11580156112da573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112fe9190612723565b61131a5760405162461bcd60e51b81526004016109c190612b79565b336001600160a01b03167f203627483d943880619f4b7e0cca21dbefd6204b4d85b124eb99540e17ba86dd836040516113539190612cdc565b60405180910390a25050565b6001600160a01b031660009081526020819052604090205490565b60008061138683612069565b90508015611395579050610b8c565b6008546001600160a01b03848116911614156113b5575050600a54610b8c565b600a546008546040516377e071ad60e01b81526001600160a01b03909116906377e071ad906113e8908790600401612913565b60206040518083038186803b15801561140057600080fd5b505afa158015611414573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114389190612838565b6114429190612d2b565b915050610b8c565b50919050565b62ed4e0081565b336114606120ab565b1561146a57600080fd5b611472610b6a565b61147e90611f40612d2b565b6114878261135f565b61149390612710612d2b565b10156114b15760405162461bcd60e51b81526004016109c190612b01565b6114bb81826120bc565b7f3b6b79a09e9fd230e8591b65c97236bf7df7a604edf733db0658e66b0e6eb2a9816040516114ea9190612913565b60405180910390a150565b60006114ff61167d565b905061150961171e565b61151281611c0b565b50565b606061151f611676565b156115be57600860009054906101000a90046001600160a01b03166001600160a01b03166395d89b416040518163ffffffff1660e01b815260040160006040518083038186803b15801561157257600080fd5b505afa158015611586573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526115ae9190810190612777565b604051602001610873919061286c565b600860009054906101000a90046001600160a01b03166001600160a01b03166395d89b416040518163ffffffff1660e01b815260040160006040518083038186803b15801561160c57600080fd5b505afa158015611620573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526116489190810190612777565b6040516020016108739190612895565b6001600160a01b031660009081526004602052604090206001015490565b600a541590565b60085460408051635804791360e01b815290516000926001600160a01b0316916358047913916004808301926020929190829003018186803b158015610e5057600080fd5b6001600160a01b031660009081526005602052604090205460ff161590565b6008546000906001600160a01b031633146116fb57600080fd5b610be28585612272565b600d5481565b60006117178383612313565b9392505050565b6008547f00000000000000000000000000000000000000000000000000000000000000006001600160a01b039081169116141561176d5760405162461bcd60e51b81526004016109c190612c53565b600854604080516318160ddd60e01b815290516001600160a01b039092169160009183916318160ddd9160048082019260209290919082900301818787803b1580156117b857600080fd5b505af11580156117cc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117f09190612838565b905060006117fc610b6a565b9050600061180a8284612d4a565b90506118163082612272565b611821308583611eb7565b836001600160a01b0316638fd3ab806040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561185c57600080fd5b505af1158015611870573d6000803e3d6000fd5b5050505050505050565b60056020526000908152604090205460ff1681565b6008546040516323b872dd60e01b81526001600160a01b03909116906323b872dd906118c390339030908690600401612927565b602060405180830381600087803b1580156118dd57600080fd5b505af11580156118f1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119159190612723565b61191e57600080fd5b6119288282612272565b5050565b600b546001600160a01b031681565b6009546001600160a01b031681565b60046020526000908152604090208054600182015460028301546003909301546001600160a01b039283169391921684565b600e805461198990612d91565b80601f01602080910402602001604051908101604052809291908181526020018280546119b590612d91565b8015611a025780601f106119d757610100808354040283529160200191611a02565b820191906000526020600020905b8154815290600101906020018083116119e557829003601f168201915b505050505081565b611a12611676565b611a1b57600080fd5b600954600c54600d54604051634dc5e43160e01b81526000936001600160a01b031692634dc5e431923492611a5c928a9233928b928b9290916004016129e2565b6020604051808303818588803b158015611a7557600080fd5b505af1158015611a89573d6000803e3d6000fd5b50505050506040513d601f19601f82011682018060405250810190611aae91906125c4565b9050611ab86120ab565b15611b9c57806001600160a01b0316633f5e3e7f6040518163ffffffff1660e01b8152600401602060405180830381600087803b158015611af857600080fd5b505af1158015611b0c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611b309190612723565b611b3957600080fd5b600b546040516306a169ed60e01b81526001600160a01b03909116906306a169ed90611b69908490600401612913565b600060405180830381600087803b158015611b8357600080fd5b505af1158015611b97573d6000803e3d6000fd5b505050505b600b80546001600160a01b0319166001600160a01b0392909216919091179055505050565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b611bf4611676565b15611bfe57600080fd5b6115123382600a54612343565b6040516370a0823160e01b815281906001600160a01b0382169063095ea7b3907f00000000000000000000000000000000000000000000000000000000000000009083906370a0823190611c63903090600401612913565b60206040518083038186803b158015611c7b57600080fd5b505afa158015611c8f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611cb39190612838565b6040518363ffffffff1660e01b8152600401611cd092919061294b565b602060405180830381600087803b158015611cea57600080fd5b505af1158015611cfe573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611d229190612723565b507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663e9850eb36040518163ffffffff1660e01b8152600401600060405180830381600087803b158015611d7e57600080fd5b505af1158015611d92573d6000803e3d6000fd5b50505050611dbf7f00000000000000000000000000000000000000000000000000000000000000006123e6565b6008546040516370a0823160e01b81526001600160a01b03909116906370a0823190611def903090600401612913565b60206040518083038186803b158015611e0757600080fd5b505afa158015611e1b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e3f9190612838565b611e47610b6a565b146119285760405162461bcd60e51b81526004016109c190612c7e565b6001600160a01b031660009081526004602052604090206002015490565b600b546001600160a01b03163314611e9957600080fd5b611ead82611ea68461135f565b6001612343565b61192881836120bc565b6001600160a01b0380841660008181526001602090815260408083209487168084529490915290819020849055517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92590611063908590612cdc565b6001600160a01b038216611f2557600080fd5b611f308383836124fd565b6001600160a01b03831660009081526020819052604081208054839290611f58908490612d4a565b90915550506001600160a01b03821660009081526020819052604081208054839290611f85908490612cf3565b92505081905550816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516110639190612cdc565b611fdb826000836124fd565b8060026000828254611fed9190612d4a565b90915550506001600160a01b0382166000908152602081905260408120805483929061201a908490612d4a565b90915550506040516000906001600160a01b038416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9061205d908590612cdc565b60405180910390a35050565b60006001600160a01b03821630141561208457506001610b8c565b6006546001600160a01b03838116911614156120a35750600754610b8c565b506000610b8c565b600b546001600160a01b0316151590565b6120c4611676565b6120cd57600080fd5b6008546040516370a0823160e01b81526001600160a01b039091169063a9059cbb90839083906370a0823190612107903090600401612913565b60206040518083038186803b15801561211f57600080fd5b505afa158015612133573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906121579190612838565b6040518363ffffffff1660e01b815260040161217492919061294b565b602060405180830381600087803b15801561218e57600080fd5b505af11580156121a2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906121c69190612723565b6121cf57600080fd5b6121d8826123e6565b6119286121e3610b6a565b6008546040516370a0823160e01b81526001600160a01b03909116906370a0823190612213903090600401612913565b60206040518083038186803b15801561222b57600080fd5b505afa15801561223f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906122639190612838565b61226d9190612d0b565b612575565b6001600160a01b03821661228557600080fd5b612291600083836124fd565b80600260008282546122a39190612cf3565b90915550506001600160a01b038216600090815260208190526040812080548392906122d0908490612cf3565b90915550506040516001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9061205d908590612cdc565b600061231f838361259b565b61233b5760405162461bcd60e51b81526004016109c190612ad8565b610939611223565b61234d8383611fcf565b6008546001600160a01b031663a9059cbb846123698486612d2b565b6040518363ffffffff1660e01b815260040161238692919061294b565b602060405180830381600087803b1580156123a057600080fd5b505af11580156123b4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906123d89190612723565b6123e157600080fd5b505050565b604080518082018252601781527f7365745265636f76657261626c6528626f6f6c65616e29000000000000000000602090910152516001600160a01b038216907f0b40210b15aff3e3e4a5dfbf1cb4d5380d1319ece2bb84fe19077f99fdaaa9d290612457906000906024016129d7565b60408051601f198184030181529181526020820180516001600160e01b03166001600160e01b03199094169390931790925290516124959190612850565b6000604051808303816000865af19150503d80600081146124d2576040519150601f19603f3d011682016040523d82523d6000602084013e6124d7565b606091505b5050600880546001600160a01b0319166001600160a01b03939093169290921790915550565b6125056120ab565b156123e157600b5460405163e1a1810f60e01b81526001600160a01b039091169063e1a1810f9061253e90869086908690600401612927565b600060405180830381600087803b15801561255857600080fd5b505af115801561256c573d6000803e3d6000fd5b50505050505050565b60018110156125965760405162461bcd60e51b81526004016109c190612ab8565b600a55565b6000610939338484611f12565b6000602082840312156125b9578081fd5b813561171781612df2565b6000602082840312156125d5578081fd5b815161171781612df2565b600080604083850312156125f2578081fd5b82356125fd81612df2565b9150602083013561260d81612df2565b809150509250929050565b60008060006060848603121561262c578081fd5b833561263781612df2565b9250602084013561264781612df2565b929592945050506040919091013590565b6000806040838503121561266a578182fd5b823561267581612df2565b946020939093013593505050565b60008060008060608587031215612698578081fd5b84356126a381612df2565b935060208501359250604085013567ffffffffffffffff808211156126c6578283fd5b818701915087601f8301126126d9578283fd5b8135818111156126e7578384fd5b8860208285010111156126f8578384fd5b95989497505060200194505050565b600060208284031215612718578081fd5b813561171781612e07565b600060208284031215612734578081fd5b815161171781612e07565b600080600060608486031215612753578283fd5b8335925060208401359150604084013561276c81612df2565b809150509250925092565b600060208284031215612788578081fd5b815167ffffffffffffffff8082111561279f578283fd5b818401915084601f8301126127b2578283fd5b8151818111156127c4576127c4612ddc565b604051601f8201601f19908116603f011681019083821181831017156127ec576127ec612ddc565b81604052828152876020848701011115612804578586fd5b612815836020830160208801612d61565b979650505050505050565b600060208284031215612831578081fd5b5035919050565b600060208284031215612849578081fd5b5051919050565b60008251612862818460208701612d61565b9190910192915050565b6000601160fa1b82528251612888816001850160208701612d61565b9190910160010192915050565b6000605760f81b82528251612888816001850160208701612d61565b6000690223930b3b3b0b13632960b51b825282516128d681600a850160208701612d61565b91909101600a0192915050565b60006702bb930b83832b2160c51b82528251612906816008850160208701612d61565b9190910160080192915050565b6001600160a01b0391909116815260200190565b6001600160a01b039384168152919092166020820152604081019190915260600190565b6001600160a01b03929092168252602082015260400190565b6001600160a01b0385168152602081018490526060604082018190528101829052600082846080840137818301608090810191909152601f909201601f191601019392505050565b6001600160a01b03948516815260208101939093526040830191909152909116606082015260800190565b901515815260200190565b9586526001600160a01b039485166020870152604086019390935292166060840152608083019190915260a082015260c00190565b6000602082528251806020840152612a36816040850160208701612d61565b601f01601f19169190910160400192915050565b6020808252601f908201527f4f6e6c7920636c61696d616e742063616e207265736f6c766520636c61696d00604082015260600190565b60208082526019908201527f436c61696d20706572696f64206e6f74206f7665722079657400000000000000604082015260600190565b6020808252600690820152653330b1ba37b960d11b604082015260600190565b6020808252600f908201526e151c985b9cd9995c8819985a5b1959608a1b604082015260600190565b60208082526006908201526571756f72756d60d01b604082015260600190565b602080825260169082015275155b9cdd5c1c1bdc9d19590818dbdb1b185d195c985b60521b604082015260600190565b6020808252600e908201526d139bc818db185a5b48199bdd5b9960921b604082015260600190565b6020808252601a908201527f436f6c6c61746572616c207472616e73666572206661696c6564000000000000604082015260600190565b6020808252818101527f436c61696d732064697361626c656420666f7220746869732061646472657373604082015260600190565b60208082526017908201527f4164647265737320616c726561647920636c61696d6564000000000000000000604082015260600190565b6020808252601f908201527f436c61696d6564206164647265737320686f6c6473206e6f2073686172657300604082015260600190565b602080825260119082015270185b1c9958591e4818dbdb9d995c9d1959607a1b604082015260600190565b6020808252600d908201526c77726f6e672062616c616e636560981b604082015260600190565b60208082526018908201527f596f752063616e6e6f742064656c65746520636c61696d730000000000000000604082015260600190565b90815260200190565b60ff91909116815260200190565b60008219821115612d0657612d06612dc6565b500190565b600082612d2657634e487b7160e01b81526012600452602481fd5b500490565b6000816000190483118215151615612d4557612d45612dc6565b500290565b600082821015612d5c57612d5c612dc6565b500390565b60005b83811015612d7c578181015183820152602001612d64565b83811115612d8b576000848401525b50505050565b600281046001821680612da557607f821691505b6020821081141561144a57634e487b7160e01b600052602260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b038116811461151257600080fd5b801515811461151257600080fdfea2646970667358221220c30657e0e1a5bda81153ff7dedd7b054ebd9de2d8485297f67705972ce51b3ce64736f6c63430008010033",
    "deployedBytecode": "6080604052600436106102885760003560e01c80637dc2cd981161015a578063b40e80d1116100c1578063dcc7d4ad1161007a578063dcc7d4ad14610717578063dd62ed3e1461072a578063de0e9a3e1461074a578063e056a7651461076a578063eb470ebf1461078a578063fcb79a7e146107aa57610288565b8063b40e80d114610668578063bf376c7a14610688578063c028df06146106a8578063c45a0155146106bd578063c6788bdd146106d2578063d50256251461070257610288565b8063a09295f811610113578063a09295f8146105c9578063a3ec1883146105de578063a4c0ed36146105fe578063a78135871461061e578063a9059cbb14610633578063aa3f3b751461065357610288565b80637dc2cd98146105405780638fd3ab801461055557806391bbdcc71461056a57806395d89b411461057f5780639b56d6c9146105945780639e4b5745146105b457610288565b8063313ce567116101fe57806350e70d48116101b757806350e70d48146104a157806360918117146104b65780636427ed97146104cb5780636b03ed5f146104eb57806370a082311461050057806377e071ad1461052057610288565b8063313ce567146103ea57806332a7ae951461040c57806332bc320b1461042c5780633bcc45ba146104415780634000aea01461046157806342966c681461048157610288565b80631703a018116102505780631703a0181461034b57806318160ddd146103605780631e3b9de51461037557806323b872dd1461039557806326773ddd146103b55780632a0a4ed5146103d557610288565b806306fdde031461028d5780630832e470146102b8578063095ea7b3146102da5780630c6f0e5d146103075780630cd865ec14610329575b600080fd5b34801561029957600080fd5b506102a26107ca565b6040516102af9190612a17565b60405180910390f35b3480156102c457600080fd5b506102cd610926565b6040516102af9190612cdc565b3480156102e657600080fd5b506102fa6102f5366004612658565b61092c565b6040516102af91906129d7565b34801561031357600080fd5b5061031c610942565b6040516102af9190612913565b34801561033557600080fd5b506103496103443660046125a8565b610951565b005b34801561035757600080fd5b506102cd610b64565b34801561036c57600080fd5b506102cd610b6a565b34801561038157600080fd5b5061031c6103903660046125a8565b610b70565b3480156103a157600080fd5b506102fa6103b0366004612618565b610b91565b3480156103c157600080fd5b506103496103d03660046125e0565b610bed565b3480156103e157600080fd5b5061031c610e0b565b3480156103f657600080fd5b506103ff610e8d565b6040516102af9190612ce5565b34801561041857600080fd5b506103496104273660046125a8565b610e96565b34801561043857600080fd5b50610349611070565b34801561044d57600080fd5b5061031c61045c3660046125a8565b611096565b34801561046d57600080fd5b506102fa61047c366004612683565b6110b7565b34801561048d57600080fd5b5061034961049c366004612820565b61115c565b3480156104ad57600080fd5b5061031c6111ef565b3480156104c257600080fd5b506102cd6111fe565b3480156104d757600080fd5b506103496104e6366004612707565b611204565b3480156104f757600080fd5b50610349611223565b34801561050c57600080fd5b506102cd61051b3660046125a8565b61135f565b34801561052c57600080fd5b506102cd61053b3660046125a8565b61137a565b34801561054c57600080fd5b506102cd611450565b34801561056157600080fd5b50610349611457565b34801561057657600080fd5b506103496114f5565b34801561058b57600080fd5b506102a2611515565b3480156105a057600080fd5b506102cd6105af3660046125a8565b611658565b3480156105c057600080fd5b506102fa611676565b3480156105d557600080fd5b5061031c61167d565b3480156105ea57600080fd5b506102fa6105f93660046125a8565b6116c2565b34801561060a57600080fd5b506102fa610619366004612683565b6116e1565b34801561062a57600080fd5b506102cd611705565b34801561063f57600080fd5b506102fa61064e366004612658565b61170b565b34801561065f57600080fd5b5061034961171e565b34801561067457600080fd5b506102fa6106833660046125a8565b61187a565b34801561069457600080fd5b506103496106a3366004612658565b61188f565b3480156106b457600080fd5b5061031c61192c565b3480156106c957600080fd5b5061031c61193b565b3480156106de57600080fd5b506106f26106ed3660046125a8565b61194a565b6040516102af94939291906129ac565b34801561070e57600080fd5b506102a261197c565b61034961072536600461273f565b611a0a565b34801561073657600080fd5b506102cd6107453660046125e0565b611bc1565b34801561075657600080fd5b50610349610765366004612820565b611bec565b34801561077657600080fd5b506103496107853660046125a8565b611c0b565b34801561079657600080fd5b506102cd6107a53660046125a8565b611e64565b3480156107b657600080fd5b506103496107c53660046125e0565b611e82565b60606107d4611676565b1561088957600860009054906101000a90046001600160a01b03166001600160a01b03166306fdde036040518163ffffffff1660e01b815260040160006040518083038186803b15801561082757600080fd5b505afa15801561083b573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526108639190810190612777565b60405160200161087391906128b1565b6040516020818303038152906040529050610923565b600860009054906101000a90046001600160a01b03166001600160a01b03166306fdde036040518163ffffffff1660e01b815260040160006040518083038186803b1580156108d757600080fd5b505afa1580156108eb573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526109139190810190612777565b60405160200161087391906128e3565b90565b600a5481565b6000610939338484611eb7565b50600192915050565b6006546001600160a01b031681565b6001600160a01b03808216600090815260046020908152604091829020825160808101845281548516815260018201549281018390526002820154938101939093526003015490921660608201819052909190816109ca5760405162461bcd60e51b81526004016109c190612b51565b60405180910390fd5b82516001600160a01b031633146109f35760405162461bcd60e51b81526004016109c190612a4a565b4262ed4e008460400151610a079190612cf3565b1115610a255760405162461bcd60e51b81526004016109c190612a81565b82516001600160a01b03808616600090815260046020819052604080832080546001600160a01b031990811682556001820185905560028201949094556003018054909316909255905163a9059cbb60e01b81529184169163a9059cbb91610a9191859188910161294b565b602060405180830381600087803b158015610aab57600080fd5b505af1158015610abf573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ae39190612723565b610aff5760405162461bcd60e51b81526004016109c190612b79565b610b128582610b0d8861135f565b611f12565b806001600160a01b0316856001600160a01b03167f52a5c2b28bc6eb9712d0ced43463103b486b13ccc9cda499fd3b2d7b6a74a8ee85604051610b559190612cdc565b60405180910390a35050505050565b600c5481565b60025490565b6001600160a01b03808216600090815260046020526040902054165b919050565b6000610b9e848484611f12565b6001600160a01b0384166000908152600160209081526040808320338452909152902054600160ff1b811015610be257610be28533610bdd8685612d4a565b611eb7565b506001949350505050565b610bf6816116c2565b610c125760405162461bcd60e51b81526004016109c190612bb0565b6000610c1d8361137a565b905060008111610c3f5760405162461bcd60e51b81526004016109c190612b21565b336000610c4b8461135f565b90506000610c598483612d2b565b90508582610c795760405162461bcd60e51b81526004016109c190612c1c565b6001600160a01b03861660009081526004602052604090206001015415610cb25760405162461bcd60e51b81526004016109c190612be5565b6040516323b872dd60e01b81526001600160a01b038216906323b872dd90610ce290879030908790600401612927565b602060405180830381600087803b158015610cfc57600080fd5b505af1158015610d10573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d349190612723565b610d505760405162461bcd60e51b81526004016109c190612b79565b604080516080810182526001600160a01b038087168083526020808401878152428587019081528d8516606087019081528d86166000818152600490955293889020965187549087166001600160a01b0319918216178855925160018801559051600287015551600390950180549590941694169390931790915591517f1982ca8958fc8a8176cb52be509260f4bc5af7ce04e1533711793f1c56dd535990610dfa908790612cdc565b60405180910390a350505050505050565b60085460408051632a0a4ed560e01b815290516000926001600160a01b031691632a0a4ed5916004808301926020929190829003018186803b158015610e5057600080fd5b505afa158015610e64573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e8891906125c4565b905090565b60035460ff1681565b610e9e610e0b565b6001600160a01b0316336001600160a01b031614610ece5760405162461bcd60e51b81526004016109c190612ca5565b6001600160a01b038082166000908152600460209081526040918290208251608081018452815485168152600182015492810183905260028201549381019390935260030154909216606082018190529091610f3c5760405162461bcd60e51b81526004016109c190612b51565b6001600160a01b03808416600090815260046020818152604080842080546001600160a01b031990811682556001820186905560028201959095556003018054909416909355855190860151925163a9059cbb60e01b81529385169363a9059cbb93610faa9390910161294b565b602060405180830381600087803b158015610fc457600080fd5b505af1158015610fd8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ffc9190612723565b6110185760405162461bcd60e51b81526004016109c190612b79565b81600001516001600160a01b0316836001600160a01b03167fbb036e629a9f4c0897ee5d48440dfdb36f7e772117723a2ed603a6514244c2d584602001516040516110639190612cdc565b60405180910390a3505050565b600b546001600160a01b031633141561109457600b80546001600160a01b03191690555b565b6001600160a01b039081166000908152600460205260409020600301541690565b6000806110c4868661170b565b9050801561115357604051635260769b60e11b81526001600160a01b0387169063a4c0ed36906110fe903390899089908990600401612964565b602060405180830381600087803b15801561111857600080fd5b505af115801561112c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111509190612723565b90505b95945050505050565b6111663382611fcf565b6000611170611676565b61117c57600a5461117f565b60015b6008549091506001600160a01b03166342966c6861119d8385612d2b565b6040518263ffffffff1660e01b81526004016111b99190612cdc565b600060405180830381600087803b1580156111d357600080fd5b505af11580156111e7573d6000803e3d6000fd5b505050505050565b6008546001600160a01b031681565b60075481565b336000908152600560205260409020805460ff19169115919091179055565b33600090815260046020526040902060010154156110945733600081815260046020819052604080832060018101805460038301805484546001600160a01b0319908116865593889055600290940196909655908216909455905163a9059cbb60e01b815292936001600160a01b0390911692839263a9059cbb926112ac92909187910161294b565b602060405180830381600087803b1580156112c657600080fd5b505af11580156112da573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112fe9190612723565b61131a5760405162461bcd60e51b81526004016109c190612b79565b336001600160a01b03167f203627483d943880619f4b7e0cca21dbefd6204b4d85b124eb99540e17ba86dd836040516113539190612cdc565b60405180910390a25050565b6001600160a01b031660009081526020819052604090205490565b60008061138683612069565b90508015611395579050610b8c565b6008546001600160a01b03848116911614156113b5575050600a54610b8c565b600a546008546040516377e071ad60e01b81526001600160a01b03909116906377e071ad906113e8908790600401612913565b60206040518083038186803b15801561140057600080fd5b505afa158015611414573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114389190612838565b6114429190612d2b565b915050610b8c565b50919050565b62ed4e0081565b336114606120ab565b1561146a57600080fd5b611472610b6a565b61147e90611f40612d2b565b6114878261135f565b61149390612710612d2b565b10156114b15760405162461bcd60e51b81526004016109c190612b01565b6114bb81826120bc565b7f3b6b79a09e9fd230e8591b65c97236bf7df7a604edf733db0658e66b0e6eb2a9816040516114ea9190612913565b60405180910390a150565b60006114ff61167d565b905061150961171e565b61151281611c0b565b50565b606061151f611676565b156115be57600860009054906101000a90046001600160a01b03166001600160a01b03166395d89b416040518163ffffffff1660e01b815260040160006040518083038186803b15801561157257600080fd5b505afa158015611586573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526115ae9190810190612777565b604051602001610873919061286c565b600860009054906101000a90046001600160a01b03166001600160a01b03166395d89b416040518163ffffffff1660e01b815260040160006040518083038186803b15801561160c57600080fd5b505afa158015611620573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526116489190810190612777565b6040516020016108739190612895565b6001600160a01b031660009081526004602052604090206001015490565b600a541590565b60085460408051635804791360e01b815290516000926001600160a01b0316916358047913916004808301926020929190829003018186803b158015610e5057600080fd5b6001600160a01b031660009081526005602052604090205460ff161590565b6008546000906001600160a01b031633146116fb57600080fd5b610be28585612272565b600d5481565b60006117178383612313565b9392505050565b6008547f00000000000000000000000000000000000000000000000000000000000000006001600160a01b039081169116141561176d5760405162461bcd60e51b81526004016109c190612c53565b600854604080516318160ddd60e01b815290516001600160a01b039092169160009183916318160ddd9160048082019260209290919082900301818787803b1580156117b857600080fd5b505af11580156117cc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117f09190612838565b905060006117fc610b6a565b9050600061180a8284612d4a565b90506118163082612272565b611821308583611eb7565b836001600160a01b0316638fd3ab806040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561185c57600080fd5b505af1158015611870573d6000803e3d6000fd5b5050505050505050565b60056020526000908152604090205460ff1681565b6008546040516323b872dd60e01b81526001600160a01b03909116906323b872dd906118c390339030908690600401612927565b602060405180830381600087803b1580156118dd57600080fd5b505af11580156118f1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119159190612723565b61191e57600080fd5b6119288282612272565b5050565b600b546001600160a01b031681565b6009546001600160a01b031681565b60046020526000908152604090208054600182015460028301546003909301546001600160a01b039283169391921684565b600e805461198990612d91565b80601f01602080910402602001604051908101604052809291908181526020018280546119b590612d91565b8015611a025780601f106119d757610100808354040283529160200191611a02565b820191906000526020600020905b8154815290600101906020018083116119e557829003601f168201915b505050505081565b611a12611676565b611a1b57600080fd5b600954600c54600d54604051634dc5e43160e01b81526000936001600160a01b031692634dc5e431923492611a5c928a9233928b928b9290916004016129e2565b6020604051808303818588803b158015611a7557600080fd5b505af1158015611a89573d6000803e3d6000fd5b50505050506040513d601f19601f82011682018060405250810190611aae91906125c4565b9050611ab86120ab565b15611b9c57806001600160a01b0316633f5e3e7f6040518163ffffffff1660e01b8152600401602060405180830381600087803b158015611af857600080fd5b505af1158015611b0c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611b309190612723565b611b3957600080fd5b600b546040516306a169ed60e01b81526001600160a01b03909116906306a169ed90611b69908490600401612913565b600060405180830381600087803b158015611b8357600080fd5b505af1158015611b97573d6000803e3d6000fd5b505050505b600b80546001600160a01b0319166001600160a01b0392909216919091179055505050565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b611bf4611676565b15611bfe57600080fd5b6115123382600a54612343565b6040516370a0823160e01b815281906001600160a01b0382169063095ea7b3907f00000000000000000000000000000000000000000000000000000000000000009083906370a0823190611c63903090600401612913565b60206040518083038186803b158015611c7b57600080fd5b505afa158015611c8f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611cb39190612838565b6040518363ffffffff1660e01b8152600401611cd092919061294b565b602060405180830381600087803b158015611cea57600080fd5b505af1158015611cfe573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611d229190612723565b507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663e9850eb36040518163ffffffff1660e01b8152600401600060405180830381600087803b158015611d7e57600080fd5b505af1158015611d92573d6000803e3d6000fd5b50505050611dbf7f00000000000000000000000000000000000000000000000000000000000000006123e6565b6008546040516370a0823160e01b81526001600160a01b03909116906370a0823190611def903090600401612913565b60206040518083038186803b158015611e0757600080fd5b505afa158015611e1b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e3f9190612838565b611e47610b6a565b146119285760405162461bcd60e51b81526004016109c190612c7e565b6001600160a01b031660009081526004602052604090206002015490565b600b546001600160a01b03163314611e9957600080fd5b611ead82611ea68461135f565b6001612343565b61192881836120bc565b6001600160a01b0380841660008181526001602090815260408083209487168084529490915290819020849055517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92590611063908590612cdc565b6001600160a01b038216611f2557600080fd5b611f308383836124fd565b6001600160a01b03831660009081526020819052604081208054839290611f58908490612d4a565b90915550506001600160a01b03821660009081526020819052604081208054839290611f85908490612cf3565b92505081905550816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516110639190612cdc565b611fdb826000836124fd565b8060026000828254611fed9190612d4a565b90915550506001600160a01b0382166000908152602081905260408120805483929061201a908490612d4a565b90915550506040516000906001600160a01b038416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9061205d908590612cdc565b60405180910390a35050565b60006001600160a01b03821630141561208457506001610b8c565b6006546001600160a01b03838116911614156120a35750600754610b8c565b506000610b8c565b600b546001600160a01b0316151590565b6120c4611676565b6120cd57600080fd5b6008546040516370a0823160e01b81526001600160a01b039091169063a9059cbb90839083906370a0823190612107903090600401612913565b60206040518083038186803b15801561211f57600080fd5b505afa158015612133573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906121579190612838565b6040518363ffffffff1660e01b815260040161217492919061294b565b602060405180830381600087803b15801561218e57600080fd5b505af11580156121a2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906121c69190612723565b6121cf57600080fd5b6121d8826123e6565b6119286121e3610b6a565b6008546040516370a0823160e01b81526001600160a01b03909116906370a0823190612213903090600401612913565b60206040518083038186803b15801561222b57600080fd5b505afa15801561223f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906122639190612838565b61226d9190612d0b565b612575565b6001600160a01b03821661228557600080fd5b612291600083836124fd565b80600260008282546122a39190612cf3565b90915550506001600160a01b038216600090815260208190526040812080548392906122d0908490612cf3565b90915550506040516001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9061205d908590612cdc565b600061231f838361259b565b61233b5760405162461bcd60e51b81526004016109c190612ad8565b610939611223565b61234d8383611fcf565b6008546001600160a01b031663a9059cbb846123698486612d2b565b6040518363ffffffff1660e01b815260040161238692919061294b565b602060405180830381600087803b1580156123a057600080fd5b505af11580156123b4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906123d89190612723565b6123e157600080fd5b505050565b604080518082018252601781527f7365745265636f76657261626c6528626f6f6c65616e29000000000000000000602090910152516001600160a01b038216907f0b40210b15aff3e3e4a5dfbf1cb4d5380d1319ece2bb84fe19077f99fdaaa9d290612457906000906024016129d7565b60408051601f198184030181529181526020820180516001600160e01b03166001600160e01b03199094169390931790925290516124959190612850565b6000604051808303816000865af19150503d80600081146124d2576040519150601f19603f3d011682016040523d82523d6000602084013e6124d7565b606091505b5050600880546001600160a01b0319166001600160a01b03939093169290921790915550565b6125056120ab565b156123e157600b5460405163e1a1810f60e01b81526001600160a01b039091169063e1a1810f9061253e90869086908690600401612927565b600060405180830381600087803b15801561255857600080fd5b505af115801561256c573d6000803e3d6000fd5b50505050505050565b60018110156125965760405162461bcd60e51b81526004016109c190612ab8565b600a55565b6000610939338484611f12565b6000602082840312156125b9578081fd5b813561171781612df2565b6000602082840312156125d5578081fd5b815161171781612df2565b600080604083850312156125f2578081fd5b82356125fd81612df2565b9150602083013561260d81612df2565b809150509250929050565b60008060006060848603121561262c578081fd5b833561263781612df2565b9250602084013561264781612df2565b929592945050506040919091013590565b6000806040838503121561266a578182fd5b823561267581612df2565b946020939093013593505050565b60008060008060608587031215612698578081fd5b84356126a381612df2565b935060208501359250604085013567ffffffffffffffff808211156126c6578283fd5b818701915087601f8301126126d9578283fd5b8135818111156126e7578384fd5b8860208285010111156126f8578384fd5b95989497505060200194505050565b600060208284031215612718578081fd5b813561171781612e07565b600060208284031215612734578081fd5b815161171781612e07565b600080600060608486031215612753578283fd5b8335925060208401359150604084013561276c81612df2565b809150509250925092565b600060208284031215612788578081fd5b815167ffffffffffffffff8082111561279f578283fd5b818401915084601f8301126127b2578283fd5b8151818111156127c4576127c4612ddc565b604051601f8201601f19908116603f011681019083821181831017156127ec576127ec612ddc565b81604052828152876020848701011115612804578586fd5b612815836020830160208801612d61565b979650505050505050565b600060208284031215612831578081fd5b5035919050565b600060208284031215612849578081fd5b5051919050565b60008251612862818460208701612d61565b9190910192915050565b6000601160fa1b82528251612888816001850160208701612d61565b9190910160010192915050565b6000605760f81b82528251612888816001850160208701612d61565b6000690223930b3b3b0b13632960b51b825282516128d681600a850160208701612d61565b91909101600a0192915050565b60006702bb930b83832b2160c51b82528251612906816008850160208701612d61565b9190910160080192915050565b6001600160a01b0391909116815260200190565b6001600160a01b039384168152919092166020820152604081019190915260600190565b6001600160a01b03929092168252602082015260400190565b6001600160a01b0385168152602081018490526060604082018190528101829052600082846080840137818301608090810191909152601f909201601f191601019392505050565b6001600160a01b03948516815260208101939093526040830191909152909116606082015260800190565b901515815260200190565b9586526001600160a01b039485166020870152604086019390935292166060840152608083019190915260a082015260c00190565b6000602082528251806020840152612a36816040850160208701612d61565b601f01601f19169190910160400192915050565b6020808252601f908201527f4f6e6c7920636c61696d616e742063616e207265736f6c766520636c61696d00604082015260600190565b60208082526019908201527f436c61696d20706572696f64206e6f74206f7665722079657400000000000000604082015260600190565b6020808252600690820152653330b1ba37b960d11b604082015260600190565b6020808252600f908201526e151c985b9cd9995c8819985a5b1959608a1b604082015260600190565b60208082526006908201526571756f72756d60d01b604082015260600190565b602080825260169082015275155b9cdd5c1c1bdc9d19590818dbdb1b185d195c985b60521b604082015260600190565b6020808252600e908201526d139bc818db185a5b48199bdd5b9960921b604082015260600190565b6020808252601a908201527f436f6c6c61746572616c207472616e73666572206661696c6564000000000000604082015260600190565b6020808252818101527f436c61696d732064697361626c656420666f7220746869732061646472657373604082015260600190565b60208082526017908201527f4164647265737320616c726561647920636c61696d6564000000000000000000604082015260600190565b6020808252601f908201527f436c61696d6564206164647265737320686f6c6473206e6f2073686172657300604082015260600190565b602080825260119082015270185b1c9958591e4818dbdb9d995c9d1959607a1b604082015260600190565b6020808252600d908201526c77726f6e672062616c616e636560981b604082015260600190565b60208082526018908201527f596f752063616e6e6f742064656c65746520636c61696d730000000000000000604082015260600190565b90815260200190565b60ff91909116815260200190565b60008219821115612d0657612d06612dc6565b500190565b600082612d2657634e487b7160e01b81526012600452602481fd5b500490565b6000816000190483118215151615612d4557612d45612dc6565b500290565b600082821015612d5c57612d5c612dc6565b500390565b60005b83811015612d7c578181015183820152602001612d64565b83811115612d8b576000848401525b50505050565b600281046001821680612da557607f821691505b6020821081141561144a57634e487b7160e01b600052602260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b038116811461151257600080fd5b801515811461151257600080fdfea2646970667358221220c30657e0e1a5bda81153ff7dedd7b054ebd9de2d8485297f67705972ce51b3ce64736f6c63430008010033",
    "sourceMap": "3007:1710:1:-:0;;;2583:1:3;2543:41;;3114:263:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1971:8:2;:20;;-1:-1:-1;;1971:20:2;;;3056:7:3::1;:37:::0;;-1:-1:-1;;;;;;3056:37:3::1;-1:-1:-1::0;;;;;3056:37:3;::::1;;::::0;;3104:6:::1;:16:::0;;;3131:10:::1;:24:::0;;;3275:6:1;3056:37:3;3297:11:1;3104:16:3;3131:24;3056:37;3297:11:1;3104:16:3;3131:24;3166::::1;3297:11:1::0;3166:10:3::1;:24::i;:::-;-1:-1:-1::0;;3323:14:0;;::::1;::::0;-1:-1:-1;3323:5:0::1;::::0;-1:-1:-1;3323:14:0::1;::::0;::::1;::::0;::::1;:::i;:::-;-1:-1:-1::0;;;;;3341:28:1::1;::::0;;;;-1:-1:-1;;;;;;3341:28:1;::::1;::::0;-1:-1:-1;3007:1710:1;;-1:-1:-1;;;;;3007:1710:1;3206:355:3;3469:32;;;;;;;;;;;;;;;;;3429:82;-1:-1:-1;;;;;3411:17:3;;;3459:43;;3429:82;;-1:-1:-1;;3429:82:3;;;:::i;:::-;;;;-1:-1:-1;;3429:82:3;;;;;;;;;;;;;;-1:-1:-1;;;;;3429:82:3;-1:-1:-1;;;;;;3429:82:3;;;;;;;;;;3411:101;;;;3429:82;3411:101;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3523:7:3;:30;;-1:-1:-1;;;;;;3523:30:3;-1:-1:-1;;;;;3523:30:3;;;;;;;;;;;-1:-1:-1;3206:355:3:o;3007:1710:1:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3007:1710:1;;;-1:-1:-1;3007:1710:1;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:179:7;95:13;;-1:-1:-1;;;;;137:31:7;;127:42;;117:2;;183:1;180;173:12;117:2;76:117;;;:::o;198:1310::-;;;;;;;416:3;404:9;395:7;391:23;387:33;384:2;;;438:6;430;423:22;384:2;466:42;498:9;466:42;:::i;:::-;552:2;537:18;;531:25;456:52;;-1:-1:-1;;;;;;605:14:7;;;602:2;;;637:6;629;622:22;602:2;680:6;669:9;665:22;655:32;;725:7;718:4;714:2;710:13;706:27;696:2;;752:6;744;737:22;696:2;786;780:9;808:2;804;801:10;798:2;;;814:18;;:::i;:::-;889:2;883:9;857:2;943:13;;-1:-1:-1;;939:22:7;;;963:2;935:31;931:40;919:53;;;987:18;;;1007:22;;;984:46;981:2;;;1033:18;;:::i;:::-;1073:10;1069:2;1062:22;1108:2;1100:6;1093:18;1148:7;1143:2;1138;1134;1130:11;1126:20;1123:33;1120:2;;;1174:6;1166;1159:22;1120:2;1192:55;1244:2;1239;1231:6;1227:15;1222:2;1218;1214:11;1192:55;:::i;:::-;1266:6;1256:16;;;;;;;1291:51;1338:2;1327:9;1323:18;1291:51;:::i;:::-;1281:61;;1361:51;1408:2;1397:9;1393:18;1361:51;:::i;:::-;1351:61;;1452:3;1441:9;1437:19;1431:26;1421:36;;1497:3;1486:9;1482:19;1476:26;1466:36;;374:1134;;;;;;;;:::o;1513:274::-;;1680:6;1674:13;1696:53;1742:6;1737:3;1730:4;1722:6;1718:17;1696:53;:::i;:::-;1765:16;;;;;1650:137;-1:-1:-1;;1650:137:7:o;1792:187::-;1957:14;;1950:22;1932:41;;1920:2;1905:18;;1887:92::o;1984:258::-;2056:1;2066:113;2080:6;2077:1;2074:13;2066:113;;;2156:11;;;2150:18;2137:11;;;2130:39;2102:2;2095:10;2066:113;;;2197:6;2194:1;2191:13;2188:2;;;2232:1;2223:6;2218:3;2214:16;2207:27;2188:2;;2037:205;;;:::o;2247:380::-;2332:1;2322:12;;2379:1;2369:12;;;2390:2;;2444:4;2436:6;2432:17;2422:27;;2390:2;2497;2489:6;2486:14;2466:18;2463:38;2460:2;;;2543:10;2538:3;2534:20;2531:1;2524:31;2578:4;2575:1;2568:15;2606:4;2603:1;2596:15;2460:2;;2302:325;;;:::o;2632:127::-;2693:10;2688:3;2684:20;2681:1;2674:31;2724:4;2721:1;2714:15;2748:4;2745:1;2738:15;2664:95;3007:1710:1;;;;;;;;;;;;",
    "deployedSourceMap": "3007:1710:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3569:274:3;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2543:41;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;3085:157:2:-;;;;;;;;;;-1:-1:-1;3085:157:2;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;3397:38:4:-;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;10020:741::-;;;;;;;;;;-1:-1:-1;10020:741:4;;;;;:::i;:::-;;:::i;:::-;;2742:21:3;;;;;;;;;;;;;:::i;2064:100:2:-;;;;;;;;;;;;;:::i;8400:126:4:-;;;;;;;;;;-1:-1:-1;8400:126:4;;;;;:::i;:::-;;:::i;3713:508:2:-;;;;;;;;;;-1:-1:-1;3713:508:2;;;;;:::i;:::-;;:::i;7372:1020:4:-;;;;;;;;;;-1:-1:-1;7372:1020:4;;;;;:::i;:::-;;:::i;3646:140:0:-;;;;;;;;;;;;;:::i;1892:30:2:-;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;10902:514:4:-;;;;;;;;;;-1:-1:-1;10902:514:4;;;;;:::i;:::-;;:::i;7131:139:3:-;;;;;;;;;;;;;:::i;8672:136:4:-;;;;;;;;;;-1:-1:-1;8672:136:4;;;;;:::i;:::-;;:::i;5127:313:2:-;;;;;;;;;;-1:-1:-1;5127:313:2;;;;;:::i;:::-;;:::i;6268:209:3:-;;;;;;;;;;-1:-1:-1;6268:209:3;;;;;:::i;:::-;;:::i;2319:21::-;;;;;;;;;;;;;:::i;3442:35:4:-;;;;;;;;;;;;;:::i;5115:103::-;;;;;;;;;;-1:-1:-1;5115:103:4;;;;;:::i;:::-;;:::i;9407:427::-;;;;;;;;;;;;;:::i;2227:119:2:-;;;;;;;;;;-1:-1:-1;2227:119:2;;;;;:::i;:::-;;:::i;3794:648:0:-;;;;;;;;;;-1:-1:-1;3794:648:0;;;;;:::i;:::-;;:::i;3012:46:4:-;;;;;;;;;;;;;:::i;7695:354:3:-;;;;;;;;;;;;;:::i;3385:124:1:-;;;;;;;;;;;;;:::i;3851:264:3:-;;;;;;;;;;;;;:::i;8534:130:4:-;;;;;;;;;;-1:-1:-1;8534:130:4;;;;;:::i;:::-;;:::i;4979:101:3:-;;;;;;;;;;;;;:::i;4110:122:1:-;;;;;;;;;;;;;:::i;5400:121:4:-;;;;;;;;;;-1:-1:-1;5400:121:4;;;;;:::i;:::-;;:::i;4123:212:3:-;;;;;;;;;;-1:-1:-1;4123:212:3;;;;;:::i;:::-;;:::i;2793:25::-;;;;;;;;;;;;;:::i;3486:152:0:-;;;;;;;;;;-1:-1:-1;3486:152:0;;;;;:::i;:::-;;:::i;3577:525:1:-;;;;;;;;;;;;;:::i;3216:48:4:-;;;;;;;;;;-1:-1:-1;3216:48:4;;;;;:::i;:::-;;:::i;4457:178:3:-;;;;;;;;;;-1:-1:-1;4457:178:3;;;;;:::i;:::-;;:::i;2714:19::-;;;;;;;;;;;;;:::i;2400:28::-;;;;;;;;;;;;;:::i;3091:39:4:-;;;;;;;;;;-1:-1:-1;3091:39:4;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;:::i;3078:19:0:-;;;;;;;;;;;;;:::i;6485:433:3:-;;;;;;:::i;:::-;;:::i;2795:143:2:-;;;;;;;;;;-1:-1:-1;2795:143:2;;;;;:::i;:::-;;:::i;5424:140:3:-;;;;;;;;;;-1:-1:-1;5424:140:3;;;;;:::i;:::-;;:::i;4240:474:1:-;;;;;;;;;;-1:-1:-1;4240:474:1;;;;;:::i;:::-;;:::i;8816:128:4:-;;;;;;;;;;-1:-1:-1;8816:128:4;;;;;:::i;:::-;;:::i;6926:197:3:-;;;;;;;;;;-1:-1:-1;6926:197:3;;;;;:::i;:::-;;:::i;3569:274::-;3615:13;3644:11;:9;:11::i;:::-;3640:196;;;3716:7;;;;;;;;;-1:-1:-1;;;;;3716:7:3;-1:-1:-1;;;;;3716:12:3;;:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3716:14:3;;;;;;;;;;;;:::i;:::-;3685:46;;;;;;;;:::i;:::-;;;;;;;;;;;;;3671:61;;;;3640:196;3808:7;;;;;;;;;-1:-1:-1;;;;;3808:7:3;-1:-1:-1;;;;;3808:12:3;;:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3808:14:3;;;;;;;;;;;;:::i;:::-;3779:44;;;;;;;;:::i;3640:196::-;3569:274;:::o;2543:41::-;;;;:::o;3085:157:2:-;3159:4;3176:36;3185:10;3197:7;3206:5;3176:8;:36::i;:::-;-1:-1:-1;3230:4:2;3085:157;;;;:::o;3397:38:4:-;;;-1:-1:-1;;;;;3397:38:4;;:::o;10020:741::-;-1:-1:-1;;;;;10097:19:4;;;10076:18;10097:19;;;:6;:19;;;;;;;;;10076:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10238:15;10230:42;;;;-1:-1:-1;;;10230:42:4;;;;;;;:::i;:::-;;;;;;;;;10291:14;;-1:-1:-1;;;;;10291:28:4;10309:10;10291:28;10283:72;;;;-1:-1:-1;;;10283:72:4;;;;;;;:::i;:::-;10407:15;3050:8;10374:5;:15;;;:29;;;;:::i;:::-;:48;;10366:86;;;;-1:-1:-1;;;10366:86:4;;;;;;;:::i;:::-;10482:14;;-1:-1:-1;;;;;10514:19:4;;;10463:16;10514:19;;;:6;:19;;;;;;;;10507:26;;-1:-1:-1;;;;;;10507:26:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;10552:39;;-1:-1:-1;;;10552:39:4;;:17;;;;;;:39;;10482:14;;10580:10;;10552:39;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;10544:78;;;;-1:-1:-1;;;10544:78:4;;;;;;;:::i;:::-;10633:56;10643:11;10656:8;10666:22;10676:11;10666:9;:22::i;:::-;10633:9;:56::i;:::-;10732:8;-1:-1:-1;;;;;10705:48:4;10719:11;-1:-1:-1;;;;;10705:48:4;;10742:10;10705:48;;;;;;:::i;:::-;;;;;;;;10020:741;;;;;:::o;2742:21:3:-;;;;:::o;2064:100:2:-;2144:12;;2064:100;:::o;8400:126:4:-;-1:-1:-1;;;;;8490:19:4;;;8463:7;8490:19;;;:6;:19;;;;;:28;;8400:126;;;;:::o;3713:508:2:-;3811:4;3828:36;3838:6;3846:9;3857:6;3828:9;:36::i;:::-;-1:-1:-1;;;;;3902:19:2;;3875:24;3902:19;;;:11;:19;;;;;;;;3922:10;3902:31;;;;;;;;-1:-1:-1;;;3948:29:2;;3944:248;;;4125:55;4134:6;4142:10;4154:25;4173:6;4154:16;:25;:::i;:::-;4125:8;:55::i;:::-;-1:-1:-1;4209:4:2;;3713:508;-1:-1:-1;;;;3713:508:2:o;7372:1020:4:-;7464:30;7482:11;7464:17;:30::i;:::-;7456:75;;;;-1:-1:-1;;;7456:75:4;;;;;;;:::i;:::-;7542:22;7567:33;7585:14;7567:17;:33::i;:::-;7542:58;;7636:1;7619:14;:18;7611:53;;;;-1:-1:-1;;;7611:53:4;;;;;;;:::i;:::-;7694:10;7675:16;7733:22;7743:11;7733:9;:22::i;:::-;7715:40;-1:-1:-1;7766:18:4;7787:24;7797:14;7715:40;7787:24;:::i;:::-;7766:45;-1:-1:-1;7847:14:4;7881:11;7873:55;;;;-1:-1:-1;;;7873:55:4;;;;;;;:::i;:::-;-1:-1:-1;;;;;7947:19:4;;;;;;:6;:19;;;;;:30;;;:35;7939:71;;;;-1:-1:-1;;;7939:71:4;;;;;;;:::i;:::-;8029:58;;-1:-1:-1;;;8029:58:4;;-1:-1:-1;;;;;8029:21:4;;;;;:58;;8051:8;;8069:4;;8076:10;;8029:58;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8021:97;;;;-1:-1:-1;;;8021:97:4;;;;;;;:::i;:::-;8153:172;;;;;;;;-1:-1:-1;;;;;8153:172:4;;;;;;;;;;;;;8255:15;8153:172;;;;;;;;;;;;;;;8131:19;;;-1:-1:-1;8131:19:4;;;:6;:19;;;;;;;:194;;;;;;;-1:-1:-1;;;;;;8131:194:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8343:41;;;;;;8376:7;;8343:41;:::i;:::-;;;;;;;;7372:1020;;;;;;;:::o;3646:140:0:-;3751:7;;3730:48;;;-1:-1:-1;;;3730:48:0;;;;3703:7;;-1:-1:-1;;;;;3751:7:0;;3730:46;;:48;;;;;;;;;;;;;;3751:7;3730:48;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3723:55;;3646:140;:::o;1892:30:2:-;;;;;;:::o;10902:514:4:-;10984:17;:15;:17::i;:::-;-1:-1:-1;;;;;10970:31:4;:10;-1:-1:-1;;;;;10970:31:4;;10962:68;;;;-1:-1:-1;;;10962:68:4;;;;;;;:::i;:::-;-1:-1:-1;;;;;11062:19:4;;;11041:18;11062:19;;;:6;:19;;;;;;;;;11041:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11147:48;;;;-1:-1:-1;;;11147:48:4;;;;;;;:::i;:::-;-1:-1:-1;;;;;11213:19:4;;;;;;;:6;:19;;;;;;;;11206:26;;-1:-1:-1;;;;;;11206:26:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;11269:14;;11285:16;;;;11251:51;;-1:-1:-1;;;11251:51:4;;:17;;;;;;:51;;11285:16;;11251:51;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;11243:90;;;;-1:-1:-1;;;11243:90:4;;;;;;;:::i;:::-;11375:5;:14;;;-1:-1:-1;;;;;11349:59:4;11362:11;-1:-1:-1;;;;;11349:59:4;;11391:5;:16;;;11349:59;;;;;;:::i;:::-;;;;;;;;10902:514;;;:::o;7131:139:3:-;7203:5;;-1:-1:-1;;;;;7203:5:3;7181:10;:28;7177:86;;;7225:5;:26;;-1:-1:-1;;;;;;7225:26:3;;;7177:86;7131:139::o;8672:136:4:-;-1:-1:-1;;;;;8768:19:4;;;8741:7;8768:19;;;:6;:19;;;;;:32;;;;;8672:136::o;5127:313:2:-;5221:4;5238:12;5253:27;5262:9;5273:6;5253:8;:27::i;:::-;5238:42;;5295:7;5291:117;;;5328:68;;-1:-1:-1;;;5328:68:2;;-1:-1:-1;;;;;5328:42:2;;;;;:68;;5371:10;;5383:6;;5391:4;;;;5328:68;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5318:78;;5291:117;5425:7;5127:313;-1:-1:-1;;;;;5127:313:2:o;6268:209:3:-;6316:25;6322:10;6334:6;6316:5;:25::i;:::-;6352:14;6369:11;:9;:11::i;:::-;:40;;6387:22;;6369:40;;;6383:1;6369:40;6438:7;;6352:57;;-1:-1:-1;;;;;;6438:7:3;6420:32;6453:15;6352:57;6453:6;:15;:::i;:::-;6420:49;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6268:209;;:::o;2319:21::-;;;-1:-1:-1;;;;;2319:21:3;;:::o;3442:35:4:-;;;;:::o;5115:103::-;5188:10;5171:28;;;;:16;:28;;;;;:39;;-1:-1:-1;;5171:39:4;5202:8;;5171:39;;;;;;5115:103::o;9407:427::-;9458:10;9451:18;;;;:6;:18;;;;;:29;;;:34;9447:380;;9530:10;9502:18;9523;;;:6;:18;;;;;;;;:29;;;;;9592:31;;;;;9639:25;;-1:-1:-1;;;;;;9639:25:4;;;;;;;;;-1:-1:-1;9639:25:4;;;;;;;;;;;;;9687:41;;-1:-1:-1;;;9687:41:4;;9523:29;;-1:-1:-1;;;;;9592:31:4;;;;;;9687:17;;:41;;9530:10;;9523:29;;9687:41;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9679:80;;;;-1:-1:-1;;;9679:80:4;;;;;;;:::i;:::-;9792:10;-1:-1:-1;;;;;9779:36:4;;9804:10;9779:36;;;;;;:::i;:::-;;;;;;;;9447:380;;9407:427::o;2227:119:2:-;-1:-1:-1;;;;;2320:18:2;2293:7;2320:18;;;;;;;;;;;;2227:119::o;3794:648:0:-;3875:7;3895:12;3910:39;3934:14;3910:23;:39::i;:::-;3895:54;-1:-1:-1;3964:8:0;;3960:475;;3996:4;-1:-1:-1;3989:11:0;;3960:475;4048:7;;-1:-1:-1;;;;;4022:34:0;;;4048:7;;4022:34;4018:417;;;-1:-1:-1;;4080:22:0;;4073:29;;4018:417;4401:22;;4355:7;;4334:64;;-1:-1:-1;;;4334:64:0;;-1:-1:-1;;;;;4355:7:0;;;;4334:48;;:64;;4383:14;;4334:64;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:89;;;;:::i;:::-;4327:96;;;;;4018:417;3794:648;;;;:::o;3012:46:4:-;3050:8;3012:46;:::o;7695:354:3:-;7752:10;7782:13;:11;:13::i;:::-;7781:14;7773:23;;;;;;7918:13;:11;:13::i;:::-;:20;;7934:4;7918:20;:::i;:::-;7886;7896:9;7886;:20::i;:::-;:28;;7909:5;7886:28;:::i;:::-;:52;;7878:71;;;;-1:-1:-1;;;7878:71:3;;;;;;;:::i;:::-;7960:36;7975:9;7986;7960:14;:36::i;:::-;8012:29;8031:9;8012:29;;;;;;:::i;:::-;;;;;;;;7695:354;:::o;3385:124:1:-;3422:15;3440:12;:10;:12::i;:::-;3422:30;;3463:10;:8;:10::i;:::-;3484:17;3493:7;3484:8;:17::i;:::-;3385:124;:::o;3851:264:3:-;3899:13;3928:11;:9;:11::i;:::-;3924:184;;;3991:7;;;;;;;;;-1:-1:-1;;;;;3991:7:3;-1:-1:-1;;;;;3991:14:3;;:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3991:16:3;;;;;;;;;;;;:::i;:::-;3969:39;;;;;;;;:::i;3924:184::-;4078:7;;;;;;;;;-1:-1:-1;;;;;4078:7:3;-1:-1:-1;;;;;4078:14:3;;:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4078:16:3;;;;;;;;;;;;:::i;:::-;4056:39;;;;;;;;:::i;8534:130:4:-;-1:-1:-1;;;;;8626:19:4;8599:7;8626:19;;;:6;:19;;;;;:30;;;;8534:130::o;4979:101:3:-;5045:22;;:27;4979:101;:::o;4110:122:1:-;4194:7;;4180:44;;;-1:-1:-1;;;4180:44:1;;;;4153:7;;-1:-1:-1;;;;;4194:7:1;;4180:42;;:44;;;;;;;;;;;;;;4194:7;4180:44;;;;;;;;;;5400:121:4;-1:-1:-1;;;;;5489:24:4;5464:4;5489:24;;;:16;:24;;;;;;;;5488:25;;5400:121::o;4123:212:3:-;4266:7;;4219:4;;-1:-1:-1;;;;;4266:7:3;4244:10;:30;4236:39;;;;;;4286:19;4292:4;4298:6;4286:5;:19::i;2793:25::-;;;;:::o;3486:152:0:-;3581:4;3605:25;3620:2;3624:5;3605:14;:25::i;:::-;3598:32;3486:152;-1:-1:-1;;;3486:152:0:o;3577:525:1:-;3631:7;;3643:12;-1:-1:-1;;;;;3623:32:1;;;3631:7;;3623:32;;3615:62;;;;-1:-1:-1;;;3615:62:1;;;;;;;:::i;:::-;3722:7;;3759:25;;;-1:-1:-1;;;3759:25:1;;;;-1:-1:-1;;;;;3722:7:1;;;;3688:17;;3722:7;;3759:23;;:25;;;;;;;;;;;;;;;3688:17;3722:7;3759:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3742:42;;3795:15;3813:13;:11;:13::i;:::-;3795:31;-1:-1:-1;3837:15:1;3855:16;3795:31;3855:6;:16;:::i;:::-;3837:34;;3968:29;3982:4;3989:7;3968:5;:29::i;:::-;4008:54;4025:4;4040:11;4054:7;4008:8;:54::i;:::-;4073:11;-1:-1:-1;;;;;4073:19:1;;:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3577:525;;;;:::o;3216:48:4:-;;;;;;;;;;;;;;;:::o;4457:178:3:-;4534:7;;:55;;-1:-1:-1;;;4534:55:3;;-1:-1:-1;;;;;4534:7:3;;;;:20;;:55;;4555:10;;4575:4;;4582:6;;4534:55;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4526:64;;;;;;4601:26;4607:11;4620:6;4601:5;:26::i;:::-;4457:178;;:::o;2714:19::-;;;-1:-1:-1;;;;;2714:19:3;;:::o;2400:28::-;;;-1:-1:-1;;;;;2400:28:3;;:::o;3091:39:4:-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3091:39:4;;;;;;;;:::o;3078:19:0:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;6485:433:3:-;6604:11;:9;:11::i;:::-;6596:20;;;;;;6646:7;;6722:6;;6730:10;;6646:95;;-1:-1:-1;;;6646:95:3;;6627:16;;-1:-1:-1;;;;;6646:7:3;;:14;;6668:9;;6646:95;;6679:4;;6685:10;;6697:13;;6712:8;;6722:6;;6646:95;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6627:114;;6756:13;:11;:13::i;:::-;6752:124;;;6801:8;-1:-1:-1;;;;;6794:29:3;;:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6786:40;;;;;;6841:5;;:23;;-1:-1:-1;;;6841:23:3;;-1:-1:-1;;;;;6841:5:3;;;;:13;;:23;;6855:8;;6841:23;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6752:124;6886:5;:24;;-1:-1:-1;;;;;;6886:24:3;-1:-1:-1;;;;;6886:24:3;;;;;;;;;;-1:-1:-1;;;6485:433:3:o;2795:143:2:-;-1:-1:-1;;;;;2903:18:2;;;2876:7;2903:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;2795:143::o;5424:140:3:-;5483:11;:9;:11::i;:::-;5482:12;5474:21;;;;;;5506:50;5513:10;5525:6;5533:22;;5506:6;:50::i;4240:474:1:-;4498:32;;-1:-1:-1;;;4498:32:1;;4446:10;;-1:-1:-1;;;;;4468:15:1;;;;;4484:12;;4468:15;;4498:17;;:32;;4524:4;;4498:32;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4468:63;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;4553:12;-1:-1:-1;;;;;4542:41:1;;:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4596:24;4607:12;4596:10;:24::i;:::-;4656:7;;:32;;-1:-1:-1;;;4656:32:1;;-1:-1:-1;;;;;4656:7:1;;;;:17;;:32;;4682:4;;4656:32;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4639:13;:11;:13::i;:::-;:49;4631:75;;;;-1:-1:-1;;;4631:75:1;;;;;;;:::i;8816:128:4:-;-1:-1:-1;;;;;8907:19:4;8880:7;8907:19;;;:6;:19;;;;;:29;;;;8816:128::o;6926:197:3:-;7021:5;;-1:-1:-1;;;;;7021:5:3;6999:10;:28;6991:37;;;;;;7039:34;7046:5;7053:16;7063:5;7053:9;:16::i;:::-;7071:1;7039:6;:34::i;:::-;7084:31;7099:8;7109:5;7084:14;:31::i;7067:175:2:-;-1:-1:-1;;;;;7152:18:2;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;;:35;;;7203:31;;;;;7182:5;;7203:31;:::i;4711:330::-;-1:-1:-1;;;;;4817:23:2;;4809:32;;;;;;4854:47;4875:6;4883:9;4894:6;4854:20;:47::i;:::-;-1:-1:-1;;;;;4914:17:2;;:9;:17;;;;;;;;;;:27;;4935:6;;4914:9;:27;;4935:6;;4914:27;:::i;:::-;;;;-1:-1:-1;;;;;;;4952:20:2;;:9;:20;;;;;;;;;;:30;;4976:6;;4952:9;:30;;4976:6;;4952:30;:::i;:::-;;;;;;;;5015:9;-1:-1:-1;;;;;4998:35:2;5007:6;-1:-1:-1;;;;;4998:35:2;;5026:6;4998:35;;;;;;:::i;6367:260::-;6443:49;6464:7;6481:1;6485:6;6443:20;:49::i;:::-;6521:6;6505:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;6538:18:2;;:9;:18;;;;;;;;;;:28;;6560:6;;6538:9;:28;;6560:6;;6538:28;:::i;:::-;;;;-1:-1:-1;;6582:37:2;;6608:1;;-1:-1:-1;;;;;6582:37:2;;;;;;;6612:6;;6582:37;:::i;:::-;;;;;;;;6367:260;;:::o;3815:327:4:-;3895:7;-1:-1:-1;;;;;3919:31:4;;3945:4;3919:31;3915:220;;;-1:-1:-1;3974:1:4;3967:8;;3915:220;4015:23;;-1:-1:-1;;;;;3997:41:4;;;4015:23;;3997:41;3993:142;;;-1:-1:-1;4062:20:4;;4055:27;;3993:142;-1:-1:-1;4122:1:4;4115:8;;8254:106:3;8332:5;;-1:-1:-1;;;;;8332:5:3;8324:28;;8254:106;:::o;7278:409::-;7381:11;:9;:11::i;:::-;7373:20;;;;;;7460:7;;7500:32;;-1:-1:-1;;;7500:32:3;;-1:-1:-1;;;;;7460:7:3;;;;:16;;7477:21;;7460:7;;7500:17;;:32;;7526:4;;7500:32;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7460:73;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7452:82;;;;;;7586:22;7597:10;7586;:22::i;:::-;7619:60;7665:13;:11;:13::i;:::-;7630:7;;:32;;-1:-1:-1;;;7630:32:3;;-1:-1:-1;;;;;7630:7:3;;;;:17;;:32;;7656:4;;7630:32;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:48;;;;:::i;:::-;7619:10;:60::i;5721:313:2:-;-1:-1:-1;;;;;5807:23:2;;5799:32;;;;;;5844:51;5873:1;5877:9;5888:6;5844:20;:51::i;:::-;5924:6;5908:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;5941:20:2;;:9;:20;;;;;;;;;;:30;;5965:6;;5941:9;:30;;5965:6;;5941:30;:::i;:::-;;;;-1:-1:-1;;5987:39:2;;-1:-1:-1;;;;;5987:39:2;;;6004:1;;5987:39;;;;6019:6;;5987:39;:::i;8952:217:4:-;9038:4;9063:33;9078:9;9089:6;9063:14;:33::i;:::-;9055:61;;;;-1:-1:-1;;;9055:61:4;;;;;;;:::i;:::-;9127:12;:10;:12::i;5576:171:3:-;5659:20;5665:5;5672:6;5659:5;:20::i;:::-;5698:7;;-1:-1:-1;;;;;5698:7:3;:16;5715:5;5722:15;5731:6;5722;:15;:::i;:::-;5698:40;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5690:49;;;;;;5576:171;;;:::o;3206:355::-;3469:32;;;;;;;;;;;;;;;;;3429:82;-1:-1:-1;;;;;3411:17:3;;;3459:43;;3429:82;;-1:-1:-1;;3429:82:3;;;:::i;:::-;;;;-1:-1:-1;;3429:82:3;;;;;;;;;;;;;;-1:-1:-1;;;;;3429:82:3;-1:-1:-1;;;;;;3429:82:3;;;;;;;;;;3411:101;;;;3429:82;3411:101;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3523:7:3;:30;;-1:-1:-1;;;;;;3523:30:3;-1:-1:-1;;;;;3523:30:3;;;;;;;;;;;-1:-1:-1;3206:355:3:o;8057:189::-;8162:13;:11;:13::i;:::-;8158:81;;;8192:5;;:35;;-1:-1:-1;;;8192:35:3;;-1:-1:-1;;;;;8192:5:3;;;;:17;;:35;;8210:4;;8216:2;;8220:6;;8192:35;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8057:189;;;:::o;5184:136::-;5258:1;5248:6;:11;;5240:30;;;;-1:-1:-1;;;5240:30:3;;;;;;;:::i;:::-;5281:22;:31;5184:136::o;2559:173:2:-;2645:4;2662:40;2672:10;2684:9;2695:6;2662:9;:40::i;14:259:7:-;;126:2;114:9;105:7;101:23;97:32;94:2;;;147:6;139;132:22;94:2;191:9;178:23;210:33;237:5;210:33;:::i;278:263::-;;401:2;389:9;380:7;376:23;372:32;369:2;;;422:6;414;407:22;369:2;459:9;453:16;478:33;505:5;478:33;:::i;546:402::-;;;675:2;663:9;654:7;650:23;646:32;643:2;;;696:6;688;681:22;643:2;740:9;727:23;759:33;786:5;759:33;:::i;:::-;811:5;-1:-1:-1;868:2:7;853:18;;840:32;881:35;840:32;881:35;:::i;:::-;935:7;925:17;;;633:315;;;;;:::o;953:470::-;;;;1099:2;1087:9;1078:7;1074:23;1070:32;1067:2;;;1120:6;1112;1105:22;1067:2;1164:9;1151:23;1183:33;1210:5;1183:33;:::i;:::-;1235:5;-1:-1:-1;1292:2:7;1277:18;;1264:32;1305:35;1264:32;1305:35;:::i;:::-;1057:366;;1359:7;;-1:-1:-1;;;1413:2:7;1398:18;;;;1385:32;;1057:366::o;1428:327::-;;;1557:2;1545:9;1536:7;1532:23;1528:32;1525:2;;;1578:6;1570;1563:22;1525:2;1622:9;1609:23;1641:33;1668:5;1641:33;:::i;:::-;1693:5;1745:2;1730:18;;;;1717:32;;-1:-1:-1;;;1515:240:7:o;1760:846::-;;;;;1925:2;1913:9;1904:7;1900:23;1896:32;1893:2;;;1946:6;1938;1931:22;1893:2;1990:9;1977:23;2009:33;2036:5;2009:33;:::i;:::-;2061:5;-1:-1:-1;2113:2:7;2098:18;;2085:32;;-1:-1:-1;2168:2:7;2153:18;;2140:32;2191:18;2221:14;;;2218:2;;;2253:6;2245;2238:22;2218:2;2296:6;2285:9;2281:22;2271:32;;2341:7;2334:4;2330:2;2326:13;2322:27;2312:2;;2368:6;2360;2353:22;2312:2;2413;2400:16;2439:2;2431:6;2428:14;2425:2;;;2460:6;2452;2445:22;2425:2;2510:7;2505:2;2496:6;2492:2;2488:15;2484:24;2481:37;2478:2;;;2536:6;2528;2521:22;2478:2;1883:723;;;;-1:-1:-1;;2572:2:7;2564:11;;-1:-1:-1;;;1883:723:7:o;2611:253::-;;2720:2;2708:9;2699:7;2695:23;2691:32;2688:2;;;2741:6;2733;2726:22;2688:2;2785:9;2772:23;2804:30;2828:5;2804:30;:::i;2869:257::-;;2989:2;2977:9;2968:7;2964:23;2960:32;2957:2;;;3010:6;3002;2995:22;2957:2;3047:9;3041:16;3066:30;3090:5;3066:30;:::i;3131:395::-;;;;3277:2;3265:9;3256:7;3252:23;3248:32;3245:2;;;3298:6;3290;3283:22;3245:2;3339:9;3326:23;3316:33;;3396:2;3385:9;3381:18;3368:32;3358:42;;3450:2;3439:9;3435:18;3422:32;3463:33;3490:5;3463:33;:::i;:::-;3515:5;3505:15;;;3235:291;;;;;:::o;3531:924::-;;3664:2;3652:9;3643:7;3639:23;3635:32;3632:2;;;3685:6;3677;3670:22;3632:2;3723:9;3717:16;3752:18;3793:2;3785:6;3782:14;3779:2;;;3814:6;3806;3799:22;3779:2;3857:6;3846:9;3842:22;3832:32;;3902:7;3895:4;3891:2;3887:13;3883:27;3873:2;;3929:6;3921;3914:22;3873:2;3963;3957:9;3985:2;3981;3978:10;3975:2;;;3991:18;;:::i;:::-;4066:2;4060:9;4034:2;4120:13;;-1:-1:-1;;4116:22:7;;;4140:2;4112:31;4108:40;4096:53;;;4164:18;;;4184:22;;;4161:46;4158:2;;;4210:18;;:::i;:::-;4250:10;4246:2;4239:22;4285:2;4277:6;4270:18;4325:7;4320:2;4315;4311;4307:11;4303:20;4300:33;4297:2;;;4351:6;4343;4336:22;4297:2;4369:55;4421:2;4416;4408:6;4404:15;4399:2;4395;4391:11;4369:55;:::i;:::-;4443:6;3622:833;-1:-1:-1;;;;;;;3622:833:7:o;4460:190::-;;4572:2;4560:9;4551:7;4547:23;4543:32;4540:2;;;4593:6;4585;4578:22;4540:2;-1:-1:-1;4621:23:7;;4530:120;-1:-1:-1;4530:120:7:o;4655:194::-;;4778:2;4766:9;4757:7;4753:23;4749:32;4746:2;;;4799:6;4791;4784:22;4746:2;-1:-1:-1;4827:16:7;;4736:113;-1:-1:-1;4736:113:7:o;4854:274::-;;5021:6;5015:13;5037:53;5083:6;5078:3;5071:4;5063:6;5059:17;5037:53;:::i;:::-;5106:16;;;;;4991:137;-1:-1:-1;;4991:137:7:o;5133:418::-;;-1:-1:-1;;;5390:3:7;5383:16;5428:6;5422:13;5444:61;5498:6;5494:1;5489:3;5485:11;5478:4;5470:6;5466:17;5444:61;:::i;:::-;5525:16;;;;5543:1;5521:24;;5373:178;-1:-1:-1;;5373:178:7:o;5556:418::-;;-1:-1:-1;;;5813:3:7;5806:16;5851:6;5845:13;5867:61;5921:6;5917:1;5912:3;5908:11;5901:4;5893:6;5889:17;5867:61;:::i;5979:429::-;;-1:-1:-1;;;6236:3:7;6229:25;6283:6;6277:13;6299:62;6354:6;6349:2;6344:3;6340:12;6333:4;6325:6;6321:17;6299:62;:::i;:::-;6381:16;;;;6399:2;6377:25;;6219:189;-1:-1:-1;;6219:189:7:o;6413:425::-;;-1:-1:-1;;;6670:3:7;6663:23;6715:6;6709:13;6731:61;6785:6;6781:1;6776:3;6772:11;6765:4;6757:6;6753:17;6731:61;:::i;:::-;6812:16;;;;6830:1;6808:24;;6653:185;-1:-1:-1;;6653:185:7:o;6843:203::-;-1:-1:-1;;;;;7007:32:7;;;;6989:51;;6977:2;6962:18;;6944:102::o;7051:375::-;-1:-1:-1;;;;;7309:15:7;;;7291:34;;7361:15;;;;7356:2;7341:18;;7334:43;7408:2;7393:18;;7386:34;;;;7241:2;7226:18;;7208:218::o;7431:274::-;-1:-1:-1;;;;;7623:32:7;;;;7605:51;;7687:2;7672:18;;7665:34;7593:2;7578:18;;7560:145::o;7710:562::-;-1:-1:-1;;;;;7923:32:7;;7905:51;;7987:2;7972:18;;7965:34;;;8035:2;8030;8015:18;;8008:30;;;8054:18;;8047:34;;;7710:562;8074:6;8124;8118:3;8103:19;;8090:49;8159:22;;;8183:3;8155:32;;;8148:46;;;;8255:2;8234:15;;;-1:-1:-1;;8230:29:7;8215:45;8211:55;;7895:377;-1:-1:-1;;;7895:377:7:o;8277:447::-;-1:-1:-1;;;;;8564:15:7;;;8546:34;;8611:2;8596:18;;8589:34;;;;8654:2;8639:18;;8632:34;;;;8702:15;;;8697:2;8682:18;;8675:43;8495:3;8480:19;;8462:262::o;8729:187::-;8894:14;;8887:22;8869:41;;8857:2;8842:18;;8824:92::o;8921:591::-;9208:25;;;-1:-1:-1;;;;;9307:15:7;;;9302:2;9287:18;;9280:43;9354:2;9339:18;;9332:34;;;;9402:15;;9397:2;9382:18;;9375:43;9449:3;9434:19;;9427:35;;;;9260:3;9478:19;;9471:35;9195:3;9180:19;;9162:350::o;10193:383::-;;10342:2;10331:9;10324:21;10374:6;10368:13;10417:6;10412:2;10401:9;10397:18;10390:34;10433:66;10492:6;10487:2;10476:9;10472:18;10467:2;10459:6;10455:15;10433:66;:::i;:::-;10560:2;10539:15;-1:-1:-1;;10535:29:7;10520:45;;;;10567:2;10516:54;;10314:262;-1:-1:-1;;10314:262:7:o;10581:355::-;10783:2;10765:21;;;10822:2;10802:18;;;10795:30;10861:33;10856:2;10841:18;;10834:61;10927:2;10912:18;;10755:181::o;10941:349::-;11143:2;11125:21;;;11182:2;11162:18;;;11155:30;11221:27;11216:2;11201:18;;11194:55;11281:2;11266:18;;11115:175::o;11295:329::-;11497:2;11479:21;;;11536:1;11516:18;;;11509:29;-1:-1:-1;;;11569:2:7;11554:18;;11547:36;11615:2;11600:18;;11469:155::o;11629:339::-;11831:2;11813:21;;;11870:2;11850:18;;;11843:30;-1:-1:-1;;;11904:2:7;11889:18;;11882:45;11959:2;11944:18;;11803:165::o;11973:329::-;12175:2;12157:21;;;12214:1;12194:18;;;12187:29;-1:-1:-1;;;12247:2:7;12232:18;;12225:36;12293:2;12278:18;;12147:155::o;12307:346::-;12509:2;12491:21;;;12548:2;12528:18;;;12521:30;-1:-1:-1;;;12582:2:7;12567:18;;12560:52;12644:2;12629:18;;12481:172::o;12658:338::-;12860:2;12842:21;;;12899:2;12879:18;;;12872:30;-1:-1:-1;;;12933:2:7;12918:18;;12911:44;12987:2;12972:18;;12832:164::o;13001:350::-;13203:2;13185:21;;;13242:2;13222:18;;;13215:30;13281:28;13276:2;13261:18;;13254:56;13342:2;13327:18;;13175:176::o;13356:356::-;13558:2;13540:21;;;13577:18;;;13570:30;13636:34;13631:2;13616:18;;13609:62;13703:2;13688:18;;13530:182::o;13717:347::-;13919:2;13901:21;;;13958:2;13938:18;;;13931:30;13997:25;13992:2;13977:18;;13970:53;14055:2;14040:18;;13891:173::o;14069:355::-;14271:2;14253:21;;;14310:2;14290:18;;;14283:30;14349:33;14344:2;14329:18;;14322:61;14415:2;14400:18;;14243:181::o;14429:341::-;14631:2;14613:21;;;14670:2;14650:18;;;14643:30;-1:-1:-1;;;14704:2:7;14689:18;;14682:47;14761:2;14746:18;;14603:167::o;14775:337::-;14977:2;14959:21;;;15016:2;14996:18;;;14989:30;-1:-1:-1;;;15050:2:7;15035:18;;15028:43;15103:2;15088:18;;14949:163::o;15117:348::-;15319:2;15301:21;;;15358:2;15338:18;;;15331:30;15397:26;15392:2;15377:18;;15370:54;15456:2;15441:18;;15291:174::o;15470:177::-;15616:25;;;15604:2;15589:18;;15571:76::o;15652:184::-;15824:4;15812:17;;;;15794:36;;15782:2;15767:18;;15749:87::o;15841:128::-;;15912:1;15908:6;15905:1;15902:13;15899:2;;;15918:18;;:::i;:::-;-1:-1:-1;15954:9:7;;15889:80::o;15974:217::-;;16040:1;16030:2;;-1:-1:-1;;;16065:31:7;;16119:4;16116:1;16109:15;16147:4;16072:1;16137:15;16030:2;-1:-1:-1;16176:9:7;;16020:171::o;16196:168::-;;16302:1;16298;16294:6;16290:14;16287:1;16284:21;16279:1;16272:9;16265:17;16261:45;16258:2;;;16309:18;;:::i;:::-;-1:-1:-1;16349:9:7;;16248:116::o;16369:125::-;;16437:1;16434;16431:8;16428:2;;;16442:18;;:::i;:::-;-1:-1:-1;16479:9:7;;16418:76::o;16499:258::-;16571:1;16581:113;16595:6;16592:1;16589:13;16581:113;;;16671:11;;;16665:18;16652:11;;;16645:39;16617:2;16610:10;16581:113;;;16712:6;16709:1;16706:13;16703:2;;;16747:1;16738:6;16733:3;16729:16;16722:27;16703:2;;16552:205;;;:::o;16762:380::-;16847:1;16837:12;;16894:1;16884:12;;;16905:2;;16959:4;16951:6;16947:17;16937:27;;16905:2;17012;17004:6;17001:14;16981:18;16978:38;16975:2;;;17058:10;17053:3;17049:20;17046:1;17039:31;17093:4;17090:1;17083:15;17121:4;17118:1;17111:15;17147:127;17208:10;17203:3;17199:20;17196:1;17189:31;17239:4;17236:1;17229:15;17263:4;17260:1;17253:15;17279:127;17340:10;17335:3;17331:20;17328:1;17321:31;17371:4;17368:1;17361:15;17395:4;17392:1;17385:15;17411:133;-1:-1:-1;;;;;17488:31:7;;17478:42;;17468:2;;17534:1;17531;17524:12;17549:120;17637:5;17630:13;17623:21;17616:5;17613:32;17603:2;;17659:1;17656;17649:12",
    "sourcePath": "c:/Users/luziu/Documents/aktionariat/contracts/src/DraggableSharesWithPredecessor.sol",
    "compiler": {
        "name": "solc",
        "version": "0.8.1+commit.df193b15"
    },
    "ast": {
        "absolutePath": "c:/Users/luziu/Documents/aktionariat/contracts/src/DraggableSharesWithPredecessor.sol",
        "exportedSymbols": {
            "DraggableShares": [
                116
            ],
            "DraggableSharesWithPredecessor": [
                313
            ],
            "ERC20": [
                694
            ],
            "ERC20Draggable": [
                1248
            ],
            "ERC20Recoverable": [
                1848
            ],
            "IBaseToken": [
                317
            ],
            "IBurnable": [
                1254
            ],
            "IDSHS": [
                331
            ],
            "IERC20": [
                1941
            ],
            "IERC677Receiver": [
                1955
            ],
            "IOffer": [
                1274
            ],
            "IOfferFactory": [
                1292
            ],
            "IRecoverable": [
                129
            ]
        },
        "id": 332,
        "license": "LicenseRef-Aktionariat",
        "nodeType": "SourceUnit",
        "nodes": [
            {
                "id": 131,
                "literals": [
                    "solidity",
                    ">=",
                    "0.8"
                ],
                "nodeType": "PragmaDirective",
                "src": "1336:22:1"
            },
            {
                "absolutePath": "c:/Users/luziu/Documents/aktionariat/contracts/src/DraggableShares.sol",
                "file": "./DraggableShares.sol",
                "id": 132,
                "nodeType": "ImportDirective",
                "scope": 332,
                "sourceUnit": 130,
                "src": "1362:31:1",
                "symbolAliases": [],
                "unitAlias": ""
            },
            {
                "absolutePath": "c:/Users/luziu/Documents/aktionariat/contracts/src/ERC20Draggable.sol",
                "file": "./ERC20Draggable.sol",
                "id": 133,
                "nodeType": "ImportDirective",
                "scope": 332,
                "sourceUnit": 1293,
                "src": "1395:30:1",
                "symbolAliases": [],
                "unitAlias": ""
            },
            {
                "abstract": false,
                "baseContracts": [
                    {
                        "baseName": {
                            "id": 135,
                            "name": "DraggableShares",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 116,
                            "src": "3050:15:1"
                        },
                        "id": 136,
                        "nodeType": "InheritanceSpecifier",
                        "src": "3050:15:1"
                    }
                ],
                "contractDependencies": [
                    116,
                    694,
                    1248,
                    1848,
                    1941,
                    1955
                ],
                "contractKind": "contract",
                "documentation": {
                    "id": 134,
                    "nodeType": "StructuredDocumentation",
                    "src": "1429:1574:1",
                    "text": " @title Draggable CompanyName AG Shares\n @author Luzius Meisser, luzius@aktionariat.com\n This is an ERC-20 token representing shares of CompanyName AG that are bound to\n a shareholder agreement that can be found at the URL defined in the constant 'terms'.\n The shareholder agreement is partially enforced through this smart contract. The agreement\n is designed to facilitate a complete acquisition of the firm even if a minority of shareholders\n disagree with the acquisition, to protect the interest of the minority shareholders by requiring\n the acquirer to offer the same conditions to everyone when acquiring the company, and to\n facilitate an update of the shareholder agreement even if a minority of the shareholders that\n are bound to this agreement disagree. The name \"draggable\" stems from the convention of calling\n the right to drag a minority along with a sale of the company \"drag-along\" rights. The name is\n chosen to ensure that token holders are aware that they are bound to such an agreement.\n The percentage of token holders that must agree with an update of the terms is defined by the\n constant UPDATE_QUORUM. The percentage of yes-votes that is needed to successfully complete an\n acquisition is defined in the constant ACQUISITION_QUORUM. Note that the update quorum is based\n on the total number of tokens in circulation. In contrast, the acquisition quorum is based on the\n number of votes cast during the voting period, not taking into account those who did not bother\n to vote."
                },
                "fullyImplemented": true,
                "id": 313,
                "linearizedBaseContracts": [
                    313,
                    116,
                    1248,
                    1955,
                    1848,
                    694,
                    1941
                ],
                "name": "DraggableSharesWithPredecessor",
                "nodeType": "ContractDefinition",
                "nodes": [
                    {
                        "constant": false,
                        "id": 138,
                        "mutability": "immutable",
                        "name": "newBaseToken",
                        "nodeType": "VariableDeclaration",
                        "scope": 313,
                        "src": "3075:30:1",
                        "stateVariable": true,
                        "storageLocation": "default",
                        "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                        },
                        "typeName": {
                            "id": 137,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3075:7:1",
                            "stateMutability": "nonpayable",
                            "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                            }
                        },
                        "visibility": "internal"
                    },
                    {
                        "body": {
                            "id": 164,
                            "nodeType": "Block",
                            "src": "3330:47:1",
                            "statements": [
                                {
                                    "expression": {
                                        "id": 162,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftHandSide": {
                                            "id": 160,
                                            "name": "newBaseToken",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 138,
                                            "src": "3341:12:1",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            }
                                        },
                                        "nodeType": "Assignment",
                                        "operator": "=",
                                        "rightHandSide": {
                                            "id": 161,
                                            "name": "newBaseToken_",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 140,
                                            "src": "3356:13:1",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            }
                                        },
                                        "src": "3341:28:1",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "id": 163,
                                    "nodeType": "ExpressionStatement",
                                    "src": "3341:28:1"
                                }
                            ]
                        },
                        "id": 165,
                        "implemented": true,
                        "kind": "constructor",
                        "modifiers": [
                            {
                                "arguments": [
                                    {
                                        "id": 153,
                                        "name": "_terms",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 142,
                                        "src": "3275:6:1",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_string_memory_ptr",
                                            "typeString": "string memory"
                                        }
                                    },
                                    {
                                        "id": 154,
                                        "name": "offerFactory",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 144,
                                        "src": "3283:12:1",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    {
                                        "id": 155,
                                        "name": "predecessor",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 146,
                                        "src": "3297:11:1",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    {
                                        "id": 156,
                                        "name": "quorum",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 148,
                                        "src": "3310:6:1",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    {
                                        "id": 157,
                                        "name": "votePeriod",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 150,
                                        "src": "3318:10:1",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    }
                                ],
                                "id": 158,
                                "modifierName": {
                                    "id": 152,
                                    "name": "DraggableShares",
                                    "nodeType": "IdentifierPath",
                                    "referencedDeclaration": 116,
                                    "src": "3259:15:1"
                                },
                                "nodeType": "ModifierInvocation",
                                "src": "3259:70:1"
                            }
                        ],
                        "name": "",
                        "nodeType": "FunctionDefinition",
                        "parameters": {
                            "id": 151,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 140,
                                    "mutability": "mutable",
                                    "name": "newBaseToken_",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 165,
                                    "src": "3126:21:1",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                    },
                                    "typeName": {
                                        "id": 139,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "3126:7:1",
                                        "stateMutability": "nonpayable",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 142,
                                    "mutability": "mutable",
                                    "name": "_terms",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 165,
                                    "src": "3149:20:1",
                                    "stateVariable": false,
                                    "storageLocation": "memory",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_string_memory_ptr",
                                        "typeString": "string"
                                    },
                                    "typeName": {
                                        "id": 141,
                                        "name": "string",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "3149:6:1",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_string_storage_ptr",
                                            "typeString": "string"
                                        }
                                    },
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 144,
                                    "mutability": "mutable",
                                    "name": "offerFactory",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 165,
                                    "src": "3171:20:1",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                    },
                                    "typeName": {
                                        "id": 143,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "3171:7:1",
                                        "stateMutability": "nonpayable",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 146,
                                    "mutability": "mutable",
                                    "name": "predecessor",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 165,
                                    "src": "3193:19:1",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                    },
                                    "typeName": {
                                        "id": 145,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "3193:7:1",
                                        "stateMutability": "nonpayable",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 148,
                                    "mutability": "mutable",
                                    "name": "quorum",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 165,
                                    "src": "3214:14:1",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                    },
                                    "typeName": {
                                        "id": 147,
                                        "name": "uint256",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "3214:7:1",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 150,
                                    "mutability": "mutable",
                                    "name": "votePeriod",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 165,
                                    "src": "3230:18:1",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                    },
                                    "typeName": {
                                        "id": 149,
                                        "name": "uint256",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "3230:7:1",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "3125:124:1"
                        },
                        "returnParameters": {
                            "id": 159,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "3330:0:1"
                        },
                        "scope": 313,
                        "src": "3114:263:1",
                        "stateMutability": "nonpayable",
                        "virtual": false,
                        "visibility": "public"
                    },
                    {
                        "body": {
                            "id": 180,
                            "nodeType": "Block",
                            "src": "3411:98:1",
                            "statements": [
                                {
                                    "assignments": [
                                        169
                                    ],
                                    "declarations": [
                                        {
                                            "constant": false,
                                            "id": 169,
                                            "mutability": "mutable",
                                            "name": "oldBase",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 180,
                                            "src": "3422:15:1",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            },
                                            "typeName": {
                                                "id": 168,
                                                "name": "address",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "3422:7:1",
                                                "stateMutability": "nonpayable",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "id": 172,
                                    "initialValue": {
                                        "arguments": [],
                                        "expression": {
                                            "argumentTypes": [],
                                            "id": 170,
                                            "name": "getOldBase",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 262,
                                            "src": "3440:10:1",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                                "typeString": "function () view returns (address)"
                                            }
                                        },
                                        "id": 171,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "3440:12:1",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "nodeType": "VariableDeclarationStatement",
                                    "src": "3422:30:1"
                                },
                                {
                                    "expression": {
                                        "arguments": [],
                                        "expression": {
                                            "argumentTypes": [],
                                            "id": 173,
                                            "name": "convert1",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 247,
                                            "src": "3463:8:1",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                                                "typeString": "function ()"
                                            }
                                        },
                                        "id": 174,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "3463:10:1",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 175,
                                    "nodeType": "ExpressionStatement",
                                    "src": "3463:10:1"
                                },
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "id": 177,
                                                "name": "oldBase",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 169,
                                                "src": "3493:7:1",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            ],
                                            "id": 176,
                                            "name": "convert2",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 312,
                                            "src": "3484:8:1",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                                                "typeString": "function (address)"
                                            }
                                        },
                                        "id": 178,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "3484:17:1",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 179,
                                    "nodeType": "ExpressionStatement",
                                    "src": "3484:17:1"
                                }
                            ]
                        },
                        "functionSelector": "91bbdcc7",
                        "id": 181,
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [],
                        "name": "convert",
                        "nodeType": "FunctionDefinition",
                        "parameters": {
                            "id": 166,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "3401:2:1"
                        },
                        "returnParameters": {
                            "id": 167,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "3411:0:1"
                        },
                        "scope": 313,
                        "src": "3385:124:1",
                        "stateMutability": "nonpayable",
                        "virtual": false,
                        "visibility": "public"
                    },
                    {
                        "body": {
                            "id": 246,
                            "nodeType": "Block",
                            "src": "3604:498:1",
                            "statements": [
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "commonType": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                },
                                                "id": 190,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftExpression": {
                                                    "arguments": [
                                                        {
                                                            "id": 187,
                                                            "name": "wrapped",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 706,
                                                            "src": "3631:7:1",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_contract$_IERC20_$1941",
                                                                "typeString": "contract IERC20"
                                                            }
                                                        }
                                                    ],
                                                    "expression": {
                                                        "argumentTypes": [
                                                            {
                                                                "typeIdentifier": "t_contract$_IERC20_$1941",
                                                                "typeString": "contract IERC20"
                                                            }
                                                        ],
                                                        "id": 186,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": true,
                                                        "lValueRequested": false,
                                                        "nodeType": "ElementaryTypeNameExpression",
                                                        "src": "3623:7:1",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_type$_t_address_$",
                                                            "typeString": "type(address)"
                                                        },
                                                        "typeName": {
                                                            "id": 185,
                                                            "name": "address",
                                                            "nodeType": "ElementaryTypeName",
                                                            "src": "3623:7:1",
                                                            "typeDescriptions": {}
                                                        }
                                                    },
                                                    "id": 188,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "kind": "typeConversion",
                                                    "lValueRequested": false,
                                                    "names": [],
                                                    "nodeType": "FunctionCall",
                                                    "src": "3623:16:1",
                                                    "tryCall": false,
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_address",
                                                        "typeString": "address"
                                                    }
                                                },
                                                "nodeType": "BinaryOperation",
                                                "operator": "!=",
                                                "rightExpression": {
                                                    "id": 189,
                                                    "name": "newBaseToken",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 138,
                                                    "src": "3643:12:1",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_address",
                                                        "typeString": "address"
                                                    }
                                                },
                                                "src": "3623:32:1",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            },
                                            {
                                                "hexValue": "616c726561647920636f6e766572746564",
                                                "id": 191,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "string",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "3657:19:1",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_stringliteral_d1f7238ea1c04bf25b1bb7167601db2916200eb81e04c4141e0055cc85442bac",
                                                    "typeString": "literal_string \"already converted\""
                                                },
                                                "value": "already converted"
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                },
                                                {
                                                    "typeIdentifier": "t_stringliteral_d1f7238ea1c04bf25b1bb7167601db2916200eb81e04c4141e0055cc85442bac",
                                                    "typeString": "literal_string \"already converted\""
                                                }
                                            ],
                                            "id": 184,
                                            "name": "require",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [
                                                4294967278,
                                                4294967278
                                            ],
                                            "referencedDeclaration": 4294967278,
                                            "src": "3615:7:1",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                                "typeString": "function (bool,string memory) pure"
                                            }
                                        },
                                        "id": 192,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "3615:62:1",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 193,
                                    "nodeType": "ExpressionStatement",
                                    "src": "3615:62:1"
                                },
                                {
                                    "assignments": [
                                        196
                                    ],
                                    "declarations": [
                                        {
                                            "constant": false,
                                            "id": 196,
                                            "mutability": "mutable",
                                            "name": "predecessor",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 246,
                                            "src": "3688:17:1",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_contract$_IDSHS_$331",
                                                "typeString": "contract IDSHS"
                                            },
                                            "typeName": {
                                                "id": 195,
                                                "nodeType": "UserDefinedTypeName",
                                                "pathNode": {
                                                    "id": 194,
                                                    "name": "IDSHS",
                                                    "nodeType": "IdentifierPath",
                                                    "referencedDeclaration": 331,
                                                    "src": "3688:5:1"
                                                },
                                                "referencedDeclaration": 331,
                                                "src": "3688:5:1",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_contract$_IDSHS_$331",
                                                    "typeString": "contract IDSHS"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "id": 203,
                                    "initialValue": {
                                        "arguments": [
                                            {
                                                "arguments": [
                                                    {
                                                        "id": 200,
                                                        "name": "wrapped",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 706,
                                                        "src": "3722:7:1",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_contract$_IERC20_$1941",
                                                            "typeString": "contract IERC20"
                                                        }
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_contract$_IERC20_$1941",
                                                            "typeString": "contract IERC20"
                                                        }
                                                    ],
                                                    "id": 199,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "lValueRequested": false,
                                                    "nodeType": "ElementaryTypeNameExpression",
                                                    "src": "3714:7:1",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_type$_t_address_$",
                                                        "typeString": "type(address)"
                                                    },
                                                    "typeName": {
                                                        "id": 198,
                                                        "name": "address",
                                                        "nodeType": "ElementaryTypeName",
                                                        "src": "3714:7:1",
                                                        "typeDescriptions": {}
                                                    }
                                                },
                                                "id": 201,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "typeConversion",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "3714:16:1",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            ],
                                            "id": 197,
                                            "name": "IDSHS",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 331,
                                            "src": "3708:5:1",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_type$_t_contract$_IDSHS_$331_$",
                                                "typeString": "type(contract IDSHS)"
                                            }
                                        },
                                        "id": 202,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "typeConversion",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "3708:23:1",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_IDSHS_$331",
                                            "typeString": "contract IDSHS"
                                        }
                                    },
                                    "nodeType": "VariableDeclarationStatement",
                                    "src": "3688:43:1"
                                },
                                {
                                    "assignments": [
                                        205
                                    ],
                                    "declarations": [
                                        {
                                            "constant": false,
                                            "id": 205,
                                            "mutability": "mutable",
                                            "name": "supply",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 246,
                                            "src": "3742:14:1",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            },
                                            "typeName": {
                                                "id": 204,
                                                "name": "uint256",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "3742:7:1",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "id": 209,
                                    "initialValue": {
                                        "arguments": [],
                                        "expression": {
                                            "argumentTypes": [],
                                            "expression": {
                                                "id": 206,
                                                "name": "predecessor",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 196,
                                                "src": "3759:11:1",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_contract$_IDSHS_$331",
                                                    "typeString": "contract IDSHS"
                                                }
                                            },
                                            "id": 207,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "totalSupply",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 330,
                                            "src": "3759:23:1",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_external_nonpayable$__$returns$_t_uint256_$",
                                                "typeString": "function () external returns (uint256)"
                                            }
                                        },
                                        "id": 208,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "3759:25:1",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "nodeType": "VariableDeclarationStatement",
                                    "src": "3742:42:1"
                                },
                                {
                                    "assignments": [
                                        211
                                    ],
                                    "declarations": [
                                        {
                                            "constant": false,
                                            "id": 211,
                                            "mutability": "mutable",
                                            "name": "present",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 246,
                                            "src": "3795:15:1",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            },
                                            "typeName": {
                                                "id": 210,
                                                "name": "uint256",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "3795:7:1",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "id": 214,
                                    "initialValue": {
                                        "arguments": [],
                                        "expression": {
                                            "argumentTypes": [],
                                            "id": 212,
                                            "name": "totalSupply",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 373,
                                            "src": "3813:11:1",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                                "typeString": "function () view returns (uint256)"
                                            }
                                        },
                                        "id": 213,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "3813:13:1",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "nodeType": "VariableDeclarationStatement",
                                    "src": "3795:31:1"
                                },
                                {
                                    "assignments": [
                                        216
                                    ],
                                    "declarations": [
                                        {
                                            "constant": false,
                                            "id": 216,
                                            "mutability": "mutable",
                                            "name": "missing",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 246,
                                            "src": "3837:15:1",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            },
                                            "typeName": {
                                                "id": 215,
                                                "name": "uint256",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "3837:7:1",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "id": 220,
                                    "initialValue": {
                                        "commonType": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        },
                                        "id": 219,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                            "id": 217,
                                            "name": "supply",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 205,
                                            "src": "3855:6:1",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "-",
                                        "rightExpression": {
                                            "id": 218,
                                            "name": "present",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 211,
                                            "src": "3864:7:1",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            }
                                        },
                                        "src": "3855:16:1",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "nodeType": "VariableDeclarationStatement",
                                    "src": "3837:34:1"
                                },
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "arguments": [
                                                    {
                                                        "id": 224,
                                                        "name": "this",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 4294967268,
                                                        "src": "3982:4:1",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_contract$_DraggableSharesWithPredecessor_$313",
                                                            "typeString": "contract DraggableSharesWithPredecessor"
                                                        }
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_contract$_DraggableSharesWithPredecessor_$313",
                                                            "typeString": "contract DraggableSharesWithPredecessor"
                                                        }
                                                    ],
                                                    "id": 223,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "lValueRequested": false,
                                                    "nodeType": "ElementaryTypeNameExpression",
                                                    "src": "3974:7:1",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_type$_t_address_$",
                                                        "typeString": "type(address)"
                                                    },
                                                    "typeName": {
                                                        "id": 222,
                                                        "name": "address",
                                                        "nodeType": "ElementaryTypeName",
                                                        "src": "3974:7:1",
                                                        "typeDescriptions": {}
                                                    }
                                                },
                                                "id": 225,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "typeConversion",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "3974:13:1",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            {
                                                "id": 226,
                                                "name": "missing",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 216,
                                                "src": "3989:7:1",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                },
                                                {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            ],
                                            "id": 221,
                                            "name": "_mint",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 621,
                                            "src": "3968:5:1",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                                                "typeString": "function (address,uint256)"
                                            }
                                        },
                                        "id": 227,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "3968:29:1",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 228,
                                    "nodeType": "ExpressionStatement",
                                    "src": "3968:29:1"
                                },
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "arguments": [
                                                    {
                                                        "id": 232,
                                                        "name": "this",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 4294967268,
                                                        "src": "4025:4:1",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_contract$_DraggableSharesWithPredecessor_$313",
                                                            "typeString": "contract DraggableSharesWithPredecessor"
                                                        }
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_contract$_DraggableSharesWithPredecessor_$313",
                                                            "typeString": "contract DraggableSharesWithPredecessor"
                                                        }
                                                    ],
                                                    "id": 231,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "lValueRequested": false,
                                                    "nodeType": "ElementaryTypeNameExpression",
                                                    "src": "4017:7:1",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_type$_t_address_$",
                                                        "typeString": "type(address)"
                                                    },
                                                    "typeName": {
                                                        "id": 230,
                                                        "name": "address",
                                                        "nodeType": "ElementaryTypeName",
                                                        "src": "4017:7:1",
                                                        "typeDescriptions": {}
                                                    }
                                                },
                                                "id": 233,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "typeConversion",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "4017:13:1",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            {
                                                "arguments": [
                                                    {
                                                        "id": 236,
                                                        "name": "predecessor",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 196,
                                                        "src": "4040:11:1",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_contract$_IDSHS_$331",
                                                            "typeString": "contract IDSHS"
                                                        }
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_contract$_IDSHS_$331",
                                                            "typeString": "contract IDSHS"
                                                        }
                                                    ],
                                                    "id": 235,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "lValueRequested": false,
                                                    "nodeType": "ElementaryTypeNameExpression",
                                                    "src": "4032:7:1",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_type$_t_address_$",
                                                        "typeString": "type(address)"
                                                    },
                                                    "typeName": {
                                                        "id": 234,
                                                        "name": "address",
                                                        "nodeType": "ElementaryTypeName",
                                                        "src": "4032:7:1",
                                                        "typeDescriptions": {}
                                                    }
                                                },
                                                "id": 237,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "typeConversion",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "4032:20:1",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            {
                                                "id": 238,
                                                "name": "missing",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 216,
                                                "src": "4054:7:1",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                },
                                                {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                },
                                                {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            ],
                                            "id": 229,
                                            "name": "_approve",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 683,
                                            "src": "4008:8:1",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                                                "typeString": "function (address,address,uint256)"
                                            }
                                        },
                                        "id": 239,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "4008:54:1",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 240,
                                    "nodeType": "ExpressionStatement",
                                    "src": "4008:54:1"
                                },
                                {
                                    "expression": {
                                        "arguments": [],
                                        "expression": {
                                            "argumentTypes": [],
                                            "expression": {
                                                "id": 241,
                                                "name": "predecessor",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 196,
                                                "src": "4073:11:1",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_contract$_IDSHS_$331",
                                                    "typeString": "contract IDSHS"
                                                }
                                            },
                                            "id": 243,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "migrate",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 320,
                                            "src": "4073:19:1",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                                                "typeString": "function () external"
                                            }
                                        },
                                        "id": 244,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "4073:21:1",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 245,
                                    "nodeType": "ExpressionStatement",
                                    "src": "4073:21:1"
                                }
                            ]
                        },
                        "functionSelector": "aa3f3b75",
                        "id": 247,
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [],
                        "name": "convert1",
                        "nodeType": "FunctionDefinition",
                        "parameters": {
                            "id": 182,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "3594:2:1"
                        },
                        "returnParameters": {
                            "id": 183,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "3604:0:1"
                        },
                        "scope": 313,
                        "src": "3577:525:1",
                        "stateMutability": "nonpayable",
                        "virtual": false,
                        "visibility": "public"
                    },
                    {
                        "body": {
                            "id": 261,
                            "nodeType": "Block",
                            "src": "4162:70:1",
                            "statements": [
                                {
                                    "expression": {
                                        "arguments": [],
                                        "expression": {
                                            "argumentTypes": [],
                                            "expression": {
                                                "arguments": [
                                                    {
                                                        "arguments": [
                                                            {
                                                                "id": 255,
                                                                "name": "wrapped",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [],
                                                                "referencedDeclaration": 706,
                                                                "src": "4194:7:1",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_contract$_IERC20_$1941",
                                                                    "typeString": "contract IERC20"
                                                                }
                                                            }
                                                        ],
                                                        "expression": {
                                                            "argumentTypes": [
                                                                {
                                                                    "typeIdentifier": "t_contract$_IERC20_$1941",
                                                                    "typeString": "contract IERC20"
                                                                }
                                                            ],
                                                            "id": 254,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": true,
                                                            "lValueRequested": false,
                                                            "nodeType": "ElementaryTypeNameExpression",
                                                            "src": "4186:7:1",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_type$_t_address_$",
                                                                "typeString": "type(address)"
                                                            },
                                                            "typeName": {
                                                                "id": 253,
                                                                "name": "address",
                                                                "nodeType": "ElementaryTypeName",
                                                                "src": "4186:7:1",
                                                                "typeDescriptions": {}
                                                            }
                                                        },
                                                        "id": 256,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "kind": "typeConversion",
                                                        "lValueRequested": false,
                                                        "names": [],
                                                        "nodeType": "FunctionCall",
                                                        "src": "4186:16:1",
                                                        "tryCall": false,
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        }
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        }
                                                    ],
                                                    "id": 252,
                                                    "name": "IDSHS",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 331,
                                                    "src": "4180:5:1",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_type$_t_contract$_IDSHS_$331_$",
                                                        "typeString": "type(contract IDSHS)"
                                                    }
                                                },
                                                "id": 257,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "typeConversion",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "4180:23:1",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_contract$_IDSHS_$331",
                                                    "typeString": "contract IDSHS"
                                                }
                                            },
                                            "id": 258,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "getWrappedContract",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 325,
                                            "src": "4180:42:1",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                                                "typeString": "function () view external returns (address)"
                                            }
                                        },
                                        "id": 259,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "4180:44:1",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "functionReturnParameters": 251,
                                    "id": 260,
                                    "nodeType": "Return",
                                    "src": "4173:51:1"
                                }
                            ]
                        },
                        "functionSelector": "a09295f8",
                        "id": 262,
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [],
                        "name": "getOldBase",
                        "nodeType": "FunctionDefinition",
                        "parameters": {
                            "id": 248,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "4129:2:1"
                        },
                        "returnParameters": {
                            "id": 251,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 250,
                                    "mutability": "mutable",
                                    "name": "",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 262,
                                    "src": "4153:7:1",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                    },
                                    "typeName": {
                                        "id": 249,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "4153:7:1",
                                        "stateMutability": "nonpayable",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "4152:9:1"
                        },
                        "scope": 313,
                        "src": "4110:122:1",
                        "stateMutability": "view",
                        "virtual": false,
                        "visibility": "public"
                    },
                    {
                        "body": {
                            "id": 311,
                            "nodeType": "Block",
                            "src": "4285:429:1",
                            "statements": [
                                {
                                    "assignments": [
                                        269
                                    ],
                                    "declarations": [
                                        {
                                            "constant": false,
                                            "id": 269,
                                            "mutability": "mutable",
                                            "name": "oldBase",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 311,
                                            "src": "4422:14:1",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_contract$_IERC20_$1941",
                                                "typeString": "contract IERC20"
                                            },
                                            "typeName": {
                                                "id": 268,
                                                "nodeType": "UserDefinedTypeName",
                                                "pathNode": {
                                                    "id": 267,
                                                    "name": "IERC20",
                                                    "nodeType": "IdentifierPath",
                                                    "referencedDeclaration": 1941,
                                                    "src": "4422:6:1"
                                                },
                                                "referencedDeclaration": 1941,
                                                "src": "4422:6:1",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_contract$_IERC20_$1941",
                                                    "typeString": "contract IERC20"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "id": 273,
                                    "initialValue": {
                                        "arguments": [
                                            {
                                                "id": 271,
                                                "name": "oldWrapped",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 264,
                                                "src": "4446:10:1",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            ],
                                            "id": 270,
                                            "name": "IERC20",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1941,
                                            "src": "4439:6:1",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_type$_t_contract$_IERC20_$1941_$",
                                                "typeString": "type(contract IERC20)"
                                            }
                                        },
                                        "id": 272,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "typeConversion",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "4439:18:1",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_IERC20_$1941",
                                            "typeString": "contract IERC20"
                                        }
                                    },
                                    "nodeType": "VariableDeclarationStatement",
                                    "src": "4422:35:1"
                                },
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "id": 277,
                                                "name": "newBaseToken",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 138,
                                                "src": "4484:12:1",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            {
                                                "arguments": [
                                                    {
                                                        "arguments": [
                                                            {
                                                                "id": 282,
                                                                "name": "this",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [],
                                                                "referencedDeclaration": 4294967268,
                                                                "src": "4524:4:1",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_contract$_DraggableSharesWithPredecessor_$313",
                                                                    "typeString": "contract DraggableSharesWithPredecessor"
                                                                }
                                                            }
                                                        ],
                                                        "expression": {
                                                            "argumentTypes": [
                                                                {
                                                                    "typeIdentifier": "t_contract$_DraggableSharesWithPredecessor_$313",
                                                                    "typeString": "contract DraggableSharesWithPredecessor"
                                                                }
                                                            ],
                                                            "id": 281,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": true,
                                                            "lValueRequested": false,
                                                            "nodeType": "ElementaryTypeNameExpression",
                                                            "src": "4516:7:1",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_type$_t_address_$",
                                                                "typeString": "type(address)"
                                                            },
                                                            "typeName": {
                                                                "id": 280,
                                                                "name": "address",
                                                                "nodeType": "ElementaryTypeName",
                                                                "src": "4516:7:1",
                                                                "typeDescriptions": {}
                                                            }
                                                        },
                                                        "id": 283,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "kind": "typeConversion",
                                                        "lValueRequested": false,
                                                        "names": [],
                                                        "nodeType": "FunctionCall",
                                                        "src": "4516:13:1",
                                                        "tryCall": false,
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        }
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        }
                                                    ],
                                                    "expression": {
                                                        "id": 278,
                                                        "name": "oldBase",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 269,
                                                        "src": "4498:7:1",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_contract$_IERC20_$1941",
                                                            "typeString": "contract IERC20"
                                                        }
                                                    },
                                                    "id": 279,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "memberName": "balanceOf",
                                                    "nodeType": "MemberAccess",
                                                    "referencedDeclaration": 1880,
                                                    "src": "4498:17:1",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                                        "typeString": "function (address) view external returns (uint256)"
                                                    }
                                                },
                                                "id": 284,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "4498:32:1",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                },
                                                {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            ],
                                            "expression": {
                                                "id": 274,
                                                "name": "oldBase",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 269,
                                                "src": "4468:7:1",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_contract$_IERC20_$1941",
                                                    "typeString": "contract IERC20"
                                                }
                                            },
                                            "id": 276,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "approve",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 1910,
                                            "src": "4468:15:1",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                                "typeString": "function (address,uint256) external returns (bool)"
                                            }
                                        },
                                        "id": 285,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "4468:63:1",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                        }
                                    },
                                    "id": 286,
                                    "nodeType": "ExpressionStatement",
                                    "src": "4468:63:1"
                                },
                                {
                                    "expression": {
                                        "arguments": [],
                                        "expression": {
                                            "argumentTypes": [],
                                            "expression": {
                                                "arguments": [
                                                    {
                                                        "id": 288,
                                                        "name": "newBaseToken",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 138,
                                                        "src": "4553:12:1",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        }
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        }
                                                    ],
                                                    "id": 287,
                                                    "name": "IBaseToken",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 317,
                                                    "src": "4542:10:1",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_type$_t_contract$_IBaseToken_$317_$",
                                                        "typeString": "type(contract IBaseToken)"
                                                    }
                                                },
                                                "id": 289,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "typeConversion",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "4542:24:1",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_contract$_IBaseToken_$317",
                                                    "typeString": "contract IBaseToken"
                                                }
                                            },
                                            "id": 290,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "convertOldShares",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 316,
                                            "src": "4542:41:1",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                                                "typeString": "function () external"
                                            }
                                        },
                                        "id": 291,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "4542:43:1",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 292,
                                    "nodeType": "ExpressionStatement",
                                    "src": "4542:43:1"
                                },
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "id": 294,
                                                "name": "newBaseToken",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 138,
                                                "src": "4607:12:1",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            ],
                                            "id": 293,
                                            "name": "setWrapped",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 786,
                                            "src": "4596:10:1",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                                                "typeString": "function (address)"
                                            }
                                        },
                                        "id": 295,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "4596:24:1",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 296,
                                    "nodeType": "ExpressionStatement",
                                    "src": "4596:24:1"
                                },
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "commonType": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                },
                                                "id": 307,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftExpression": {
                                                    "arguments": [],
                                                    "expression": {
                                                        "argumentTypes": [],
                                                        "id": 298,
                                                        "name": "totalSupply",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 373,
                                                        "src": "4639:11:1",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                                            "typeString": "function () view returns (uint256)"
                                                        }
                                                    },
                                                    "id": 299,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "kind": "functionCall",
                                                    "lValueRequested": false,
                                                    "names": [],
                                                    "nodeType": "FunctionCall",
                                                    "src": "4639:13:1",
                                                    "tryCall": false,
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    }
                                                },
                                                "nodeType": "BinaryOperation",
                                                "operator": "==",
                                                "rightExpression": {
                                                    "arguments": [
                                                        {
                                                            "arguments": [
                                                                {
                                                                    "id": 304,
                                                                    "name": "this",
                                                                    "nodeType": "Identifier",
                                                                    "overloadedDeclarations": [],
                                                                    "referencedDeclaration": 4294967268,
                                                                    "src": "4682:4:1",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_contract$_DraggableSharesWithPredecessor_$313",
                                                                        "typeString": "contract DraggableSharesWithPredecessor"
                                                                    }
                                                                }
                                                            ],
                                                            "expression": {
                                                                "argumentTypes": [
                                                                    {
                                                                        "typeIdentifier": "t_contract$_DraggableSharesWithPredecessor_$313",
                                                                        "typeString": "contract DraggableSharesWithPredecessor"
                                                                    }
                                                                ],
                                                                "id": 303,
                                                                "isConstant": false,
                                                                "isLValue": false,
                                                                "isPure": true,
                                                                "lValueRequested": false,
                                                                "nodeType": "ElementaryTypeNameExpression",
                                                                "src": "4674:7:1",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_type$_t_address_$",
                                                                    "typeString": "type(address)"
                                                                },
                                                                "typeName": {
                                                                    "id": 302,
                                                                    "name": "address",
                                                                    "nodeType": "ElementaryTypeName",
                                                                    "src": "4674:7:1",
                                                                    "typeDescriptions": {}
                                                                }
                                                            },
                                                            "id": 305,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": false,
                                                            "kind": "typeConversion",
                                                            "lValueRequested": false,
                                                            "names": [],
                                                            "nodeType": "FunctionCall",
                                                            "src": "4674:13:1",
                                                            "tryCall": false,
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_address",
                                                                "typeString": "address"
                                                            }
                                                        }
                                                    ],
                                                    "expression": {
                                                        "argumentTypes": [
                                                            {
                                                                "typeIdentifier": "t_address",
                                                                "typeString": "address"
                                                            }
                                                        ],
                                                        "expression": {
                                                            "id": 300,
                                                            "name": "wrapped",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 706,
                                                            "src": "4656:7:1",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_contract$_IERC20_$1941",
                                                                "typeString": "contract IERC20"
                                                            }
                                                        },
                                                        "id": 301,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "memberName": "balanceOf",
                                                        "nodeType": "MemberAccess",
                                                        "referencedDeclaration": 1880,
                                                        "src": "4656:17:1",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                                            "typeString": "function (address) view external returns (uint256)"
                                                        }
                                                    },
                                                    "id": 306,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "kind": "functionCall",
                                                    "lValueRequested": false,
                                                    "names": [],
                                                    "nodeType": "FunctionCall",
                                                    "src": "4656:32:1",
                                                    "tryCall": false,
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    }
                                                },
                                                "src": "4639:49:1",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            },
                                            {
                                                "hexValue": "77726f6e672062616c616e6365",
                                                "id": 308,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "string",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "4690:15:1",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_stringliteral_dcb868145ecbefb01cd25824f8d32892c362f32b9d25ba21688f9778b8e71eea",
                                                    "typeString": "literal_string \"wrong balance\""
                                                },
                                                "value": "wrong balance"
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                },
                                                {
                                                    "typeIdentifier": "t_stringliteral_dcb868145ecbefb01cd25824f8d32892c362f32b9d25ba21688f9778b8e71eea",
                                                    "typeString": "literal_string \"wrong balance\""
                                                }
                                            ],
                                            "id": 297,
                                            "name": "require",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [
                                                4294967278,
                                                4294967278
                                            ],
                                            "referencedDeclaration": 4294967278,
                                            "src": "4631:7:1",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                                "typeString": "function (bool,string memory) pure"
                                            }
                                        },
                                        "id": 309,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "4631:75:1",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 310,
                                    "nodeType": "ExpressionStatement",
                                    "src": "4631:75:1"
                                }
                            ]
                        },
                        "functionSelector": "e056a765",
                        "id": 312,
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [],
                        "name": "convert2",
                        "nodeType": "FunctionDefinition",
                        "parameters": {
                            "id": 265,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 264,
                                    "mutability": "mutable",
                                    "name": "oldWrapped",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 312,
                                    "src": "4258:18:1",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                    },
                                    "typeName": {
                                        "id": 263,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "4258:7:1",
                                        "stateMutability": "nonpayable",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "4257:20:1"
                        },
                        "returnParameters": {
                            "id": 266,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "4285:0:1"
                        },
                        "scope": 313,
                        "src": "4240:474:1",
                        "stateMutability": "nonpayable",
                        "virtual": false,
                        "visibility": "public"
                    }
                ],
                "scope": 332,
                "src": "3007:1710:1"
            },
            {
                "abstract": true,
                "baseContracts": [],
                "contractDependencies": [],
                "contractKind": "contract",
                "fullyImplemented": false,
                "id": 317,
                "linearizedBaseContracts": [
                    317
                ],
                "name": "IBaseToken",
                "nodeType": "ContractDefinition",
                "nodes": [
                    {
                        "functionSelector": "e9850eb3",
                        "id": 316,
                        "implemented": false,
                        "kind": "function",
                        "modifiers": [],
                        "name": "convertOldShares",
                        "nodeType": "FunctionDefinition",
                        "parameters": {
                            "id": 314,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "4782:2:1"
                        },
                        "returnParameters": {
                            "id": 315,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "4799:0:1"
                        },
                        "scope": 317,
                        "src": "4757:43:1",
                        "stateMutability": "nonpayable",
                        "virtual": true,
                        "visibility": "public"
                    }
                ],
                "scope": 332,
                "src": "4721:82:1"
            },
            {
                "abstract": true,
                "baseContracts": [],
                "contractDependencies": [],
                "contractKind": "contract",
                "fullyImplemented": false,
                "id": 331,
                "linearizedBaseContracts": [
                    331
                ],
                "name": "IDSHS",
                "nodeType": "ContractDefinition",
                "nodes": [
                    {
                        "functionSelector": "8fd3ab80",
                        "id": 320,
                        "implemented": false,
                        "kind": "function",
                        "modifiers": [],
                        "name": "migrate",
                        "nodeType": "FunctionDefinition",
                        "parameters": {
                            "id": 318,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "4854:2:1"
                        },
                        "returnParameters": {
                            "id": 319,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "4871:0:1"
                        },
                        "scope": 331,
                        "src": "4838:34:1",
                        "stateMutability": "nonpayable",
                        "virtual": true,
                        "visibility": "public"
                    },
                    {
                        "functionSelector": "58047913",
                        "id": 325,
                        "implemented": false,
                        "kind": "function",
                        "modifiers": [],
                        "name": "getWrappedContract",
                        "nodeType": "FunctionDefinition",
                        "parameters": {
                            "id": 321,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "4905:2:1"
                        },
                        "returnParameters": {
                            "id": 324,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 323,
                                    "mutability": "mutable",
                                    "name": "",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 325,
                                    "src": "4937:7:1",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                    },
                                    "typeName": {
                                        "id": 322,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "4937:7:1",
                                        "stateMutability": "nonpayable",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "4936:9:1"
                        },
                        "scope": 331,
                        "src": "4878:68:1",
                        "stateMutability": "view",
                        "virtual": true,
                        "visibility": "public"
                    },
                    {
                        "functionSelector": "18160ddd",
                        "id": 330,
                        "implemented": false,
                        "kind": "function",
                        "modifiers": [],
                        "name": "totalSupply",
                        "nodeType": "FunctionDefinition",
                        "parameters": {
                            "id": 326,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "4972:2:1"
                        },
                        "returnParameters": {
                            "id": 329,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 328,
                                    "mutability": "mutable",
                                    "name": "",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 330,
                                    "src": "4999:7:1",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                    },
                                    "typeName": {
                                        "id": 327,
                                        "name": "uint256",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "4999:7:1",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "4998:9:1"
                        },
                        "scope": 331,
                        "src": "4952:56:1",
                        "stateMutability": "nonpayable",
                        "virtual": true,
                        "visibility": "public"
                    }
                ],
                "scope": 332,
                "src": "4807:204:1"
            }
        ],
        "src": "1336:3675:1"
    },
    "functionHashes": {
        "allowance(address,address)": "dd62ed3e",
        "approve(address,uint256)": "095ea7b3",
        "balanceOf(address)": "70a08231",
        "burn(uint256)": "42966c68",
        "claimPeriod()": "7dc2cd98",
        "claims(address)": "c6788bdd",
        "clearClaim()": "6b03ed5f",
        "convert()": "91bbdcc7",
        "convert1()": "aa3f3b75",
        "convert2(address)": "e056a765",
        "customCollateralAddress()": "0c6f0e5d",
        "customCollateralRate()": "60918117",
        "decimals()": "313ce567",
        "declareLost(address,address)": "26773ddd",
        "deleteClaim(address)": "32a7ae95",
        "drag(address,address)": "fcb79a7e",
        "factory()": "c45a0155",
        "getClaimDeleter()": "2a0a4ed5",
        "getClaimant(address)": "1e3b9de5",
        "getCollateral(address)": "9b56d6c9",
        "getCollateralRate(address)": "77e071ad",
        "getCollateralType(address)": "3bcc45ba",
        "getOldBase()": "a09295f8",
        "getTimeStamp(address)": "eb470ebf",
        "isBinding()": "9e4b5745",
        "isRecoveryEnabled(address)": "a3ec1883",
        "makeAcquisitionOffer(bytes32,uint256,address)": "dcc7d4ad",
        "migrate()": "8fd3ab80",
        "name()": "06fdde03",
        "notifyOfferEnded()": "32bc320b",
        "offer()": "c028df06",
        "onTokenTransfer(address,uint256,bytes)": "a4c0ed36",
        "quorum()": "1703a018",
        "recover(address)": "0cd865ec",
        "recoveryDisabled(address)": "b40e80d1",
        "setRecoverable(bool)": "6427ed97",
        "symbol()": "95d89b41",
        "terms()": "d5025625",
        "totalSupply()": "18160ddd",
        "transfer(address,uint256)": "a9059cbb",
        "transferAndCall(address,uint256,bytes)": "4000aea0",
        "transferFrom(address,address,uint256)": "23b872dd",
        "unwrap(uint256)": "de0e9a3e",
        "unwrapConversionFactor()": "0832e470",
        "votePeriod()": "a7813587",
        "wrap(address,uint256)": "bf376c7a",
        "wrapped()": "50e70d48"
    },
    "gasEstimates": {
        "creation": {
            "codeDepositCost": "2370200",
            "executionCost": "infinite",
            "totalCost": "infinite"
        },
        "external": {
            "allowance(address,address)": "infinite",
            "approve(address,uint256)": "22571",
            "balanceOf(address)": "1400",
            "burn(uint256)": "infinite",
            "claimPeriod()": "274",
            "claims(address)": "3950",
            "clearClaim()": "infinite",
            "convert()": "infinite",
            "convert1()": "infinite",
            "convert2(address)": "infinite",
            "customCollateralAddress()": "1183",
            "customCollateralRate()": "1095",
            "decimals()": "1092",
            "declareLost(address,address)": "infinite",
            "deleteClaim(address)": "infinite",
            "drag(address,address)": "infinite",
            "factory()": "1181",
            "getClaimDeleter()": "infinite",
            "getClaimant(address)": "1393",
            "getCollateral(address)": "1404",
            "getCollateralRate(address)": "infinite",
            "getCollateralType(address)": "1415",
            "getOldBase()": "infinite",
            "getTimeStamp(address)": "1402",
            "isBinding()": "1193",
            "isRecoveryEnabled(address)": "1346",
            "makeAcquisitionOffer(bytes32,uint256,address)": "infinite",
            "migrate()": "infinite",
            "name()": "infinite",
            "notifyOfferEnded()": "21907",
            "offer()": "1159",
            "onTokenTransfer(address,uint256,bytes)": "infinite",
            "quorum()": "1074",
            "recover(address)": "infinite",
            "recoveryDisabled(address)": "1303",
            "setRecoverable(bool)": "21277",
            "symbol()": "infinite",
            "terms()": "infinite",
            "totalSupply()": "1096",
            "transfer(address,uint256)": "infinite",
            "transferAndCall(address,uint256,bytes)": "infinite",
            "transferFrom(address,address,uint256)": "infinite",
            "unwrap(uint256)": "infinite",
            "unwrapConversionFactor()": "1097",
            "votePeriod()": "1139",
            "wrap(address,uint256)": "infinite",
            "wrapped()": "1115"
        }
    }
}