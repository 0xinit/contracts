{
    "contractName": "SharesWithPredecessor",
    "abi": [
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "_predecessor",
                    "type": "address"
                },
                {
                    "internalType": "string",
                    "name": "_symbol",
                    "type": "string"
                },
                {
                    "internalType": "string",
                    "name": "_name",
                    "type": "string"
                },
                {
                    "internalType": "string",
                    "name": "_terms",
                    "type": "string"
                },
                {
                    "internalType": "uint256",
                    "name": "_totalShares",
                    "type": "uint256"
                }
            ],
            "stateMutability": "nonpayable",
            "type": "constructor"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": false,
                    "internalType": "string",
                    "name": "message",
                    "type": "string"
                }
            ],
            "name": "Announcement",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "owner",
                    "type": "address"
                },
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "spender",
                    "type": "address"
                },
                {
                    "indexed": false,
                    "internalType": "uint256",
                    "name": "value",
                    "type": "uint256"
                }
            ],
            "name": "Approval",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "lostAddress",
                    "type": "address"
                },
                {
                    "indexed": false,
                    "internalType": "uint256",
                    "name": "collateral",
                    "type": "uint256"
                }
            ],
            "name": "ClaimCleared",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "lostAddress",
                    "type": "address"
                },
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "claimant",
                    "type": "address"
                },
                {
                    "indexed": false,
                    "internalType": "uint256",
                    "name": "collateral",
                    "type": "uint256"
                }
            ],
            "name": "ClaimDeleted",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "lostAddress",
                    "type": "address"
                },
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "claimant",
                    "type": "address"
                },
                {
                    "indexed": false,
                    "internalType": "uint256",
                    "name": "balance",
                    "type": "uint256"
                }
            ],
            "name": "ClaimMade",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "lostAddress",
                    "type": "address"
                },
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "claimant",
                    "type": "address"
                },
                {
                    "indexed": false,
                    "internalType": "uint256",
                    "name": "collateral",
                    "type": "uint256"
                }
            ],
            "name": "ClaimResolved",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": false,
                    "internalType": "address",
                    "name": "newCustomCollateralAddress",
                    "type": "address"
                },
                {
                    "indexed": false,
                    "internalType": "uint256",
                    "name": "newCustomCollareralRate",
                    "type": "uint256"
                }
            ],
            "name": "CustomClaimCollateralChanged",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "previousOwner",
                    "type": "address"
                },
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "newOwner",
                    "type": "address"
                }
            ],
            "name": "OwnershipTransferred",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "holder",
                    "type": "address"
                },
                {
                    "indexed": false,
                    "internalType": "uint256",
                    "name": "firstInclusive",
                    "type": "uint256"
                },
                {
                    "indexed": false,
                    "internalType": "uint256",
                    "name": "lastInclusive",
                    "type": "uint256"
                }
            ],
            "name": "ShareNumberingEvent",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": false,
                    "internalType": "address",
                    "name": "contractAddress",
                    "type": "address"
                }
            ],
            "name": "SubRegisterAdded",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": false,
                    "internalType": "address",
                    "name": "contractAddress",
                    "type": "address"
                }
            ],
            "name": "SubRegisterRemoved",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "holder",
                    "type": "address"
                },
                {
                    "indexed": false,
                    "internalType": "uint256",
                    "name": "amount",
                    "type": "uint256"
                },
                {
                    "indexed": false,
                    "internalType": "string",
                    "name": "message",
                    "type": "string"
                }
            ],
            "name": "TokensDeclaredInvalid",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "from",
                    "type": "address"
                },
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "to",
                    "type": "address"
                },
                {
                    "indexed": false,
                    "internalType": "uint256",
                    "name": "value",
                    "type": "uint256"
                }
            ],
            "name": "Transfer",
            "type": "event"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "owner",
                    "type": "address"
                },
                {
                    "internalType": "address",
                    "name": "spender",
                    "type": "address"
                }
            ],
            "name": "allowance",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "string",
                    "name": "message",
                    "type": "string"
                }
            ],
            "name": "announcement",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "spender",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "value",
                    "type": "uint256"
                }
            ],
            "name": "approve",
            "outputs": [
                {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool"
                }
            ],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "account",
                    "type": "address"
                }
            ],
            "name": "balanceOf",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "holder",
                    "type": "address"
                }
            ],
            "name": "balanceOfDeep",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "uint256",
                    "name": "_amount",
                    "type": "uint256"
                }
            ],
            "name": "burn",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "claimPeriod",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address"
                }
            ],
            "name": "claims",
            "outputs": [
                {
                    "internalType": "address",
                    "name": "claimant",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "collateral",
                    "type": "uint256"
                },
                {
                    "internalType": "uint256",
                    "name": "timestamp",
                    "type": "uint256"
                },
                {
                    "internalType": "address",
                    "name": "currencyUsed",
                    "type": "address"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "clearClaim",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "sender",
                    "type": "address"
                }
            ],
            "name": "convert1",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "uint256",
                    "name": "balance",
                    "type": "uint256"
                }
            ],
            "name": "convert2",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "sender",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "balance",
                    "type": "uint256"
                }
            ],
            "name": "convert3",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "convertOldShares",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "countSubregisters",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "customCollateralAddress",
            "outputs": [
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "customCollateralRate",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "decimals",
            "outputs": [
                {
                    "internalType": "uint8",
                    "name": "",
                    "type": "uint8"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "holder",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "amount",
                    "type": "uint256"
                },
                {
                    "internalType": "string",
                    "name": "message",
                    "type": "string"
                }
            ],
            "name": "declareInvalid",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "collateralType",
                    "type": "address"
                },
                {
                    "internalType": "address",
                    "name": "lostAddress",
                    "type": "address"
                }
            ],
            "name": "declareLost",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "lostAddress",
                    "type": "address"
                }
            ],
            "name": "deleteClaim",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "getClaimDeleter",
            "outputs": [
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "lostAddress",
                    "type": "address"
                }
            ],
            "name": "getClaimant",
            "outputs": [
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "lostAddress",
                    "type": "address"
                }
            ],
            "name": "getCollateral",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "collateralType",
                    "type": "address"
                }
            ],
            "name": "getCollateralRate",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "lostAddress",
                    "type": "address"
                }
            ],
            "name": "getCollateralType",
            "outputs": [
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "lostAddress",
                    "type": "address"
                }
            ],
            "name": "getTimeStamp",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "invalidTokens",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "target",
                    "type": "address"
                }
            ],
            "name": "isRecoveryEnabled",
            "outputs": [
                {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "shareholder",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "_amount",
                    "type": "uint256"
                }
            ],
            "name": "mint",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "shareholder",
                    "type": "address"
                },
                {
                    "internalType": "address",
                    "name": "callee",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "amount",
                    "type": "uint256"
                },
                {
                    "internalType": "bytes",
                    "name": "data",
                    "type": "bytes"
                }
            ],
            "name": "mintAndCall",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "shareholder",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "firstShareNumber",
                    "type": "uint256"
                },
                {
                    "internalType": "uint256",
                    "name": "lastShareNumber",
                    "type": "uint256"
                }
            ],
            "name": "mintNumbered",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "shareholder",
                    "type": "address"
                },
                {
                    "internalType": "address",
                    "name": "callee",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "firstShareNumber",
                    "type": "uint256"
                },
                {
                    "internalType": "uint256",
                    "name": "lastShareNumber",
                    "type": "uint256"
                },
                {
                    "internalType": "bytes",
                    "name": "data",
                    "type": "bytes"
                }
            ],
            "name": "mintNumberedAndCall",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "name",
            "outputs": [
                {
                    "internalType": "string",
                    "name": "",
                    "type": "string"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "owner",
            "outputs": [
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "contractAddress",
                    "type": "address"
                }
            ],
            "name": "recognizeSubRegister",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "lostAddress",
                    "type": "address"
                }
            ],
            "name": "recover",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address"
                }
            ],
            "name": "recoveryDisabled",
            "outputs": [
                {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "contractAddress",
                    "type": "address"
                }
            ],
            "name": "removeSubRegister",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "collateral",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "rate",
                    "type": "uint256"
                }
            ],
            "name": "setCustomClaimCollateral",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "string",
                    "name": "_symbol",
                    "type": "string"
                },
                {
                    "internalType": "string",
                    "name": "_name",
                    "type": "string"
                }
            ],
            "name": "setName",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "bool",
                    "name": "enabled",
                    "type": "bool"
                }
            ],
            "name": "setRecoverable",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "string",
                    "name": "_terms",
                    "type": "string"
                }
            ],
            "name": "setTerms",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "uint256",
                    "name": "_newTotalShares",
                    "type": "uint256"
                }
            ],
            "name": "setTotalShares",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "name": "subregisters",
            "outputs": [
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "symbol",
            "outputs": [
                {
                    "internalType": "string",
                    "name": "",
                    "type": "string"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "terms",
            "outputs": [
                {
                    "internalType": "string",
                    "name": "",
                    "type": "string"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "totalShares",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "totalSupply",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "totalValidSupply",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "recipient",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "amount",
                    "type": "uint256"
                }
            ],
            "name": "transfer",
            "outputs": [
                {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool"
                }
            ],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "recipient",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "amount",
                    "type": "uint256"
                },
                {
                    "internalType": "bytes",
                    "name": "data",
                    "type": "bytes"
                }
            ],
            "name": "transferAndCall",
            "outputs": [
                {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool"
                }
            ],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "sender",
                    "type": "address"
                },
                {
                    "internalType": "address",
                    "name": "recipient",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "amount",
                    "type": "uint256"
                }
            ],
            "name": "transferFrom",
            "outputs": [
                {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool"
                }
            ],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "newOwner",
                    "type": "address"
                }
            ],
            "name": "transferOwnership",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        }
    ],
    "metadata": "{\"compiler\":{\"version\":\"0.8.1+commit.df193b15\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_predecessor\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_terms\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_totalShares\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"message\",\"type\":\"string\"}],\"name\":\"Announcement\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"lostAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"collateral\",\"type\":\"uint256\"}],\"name\":\"ClaimCleared\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"lostAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"claimant\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"collateral\",\"type\":\"uint256\"}],\"name\":\"ClaimDeleted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"lostAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"claimant\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"name\":\"ClaimMade\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"lostAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"claimant\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"collateral\",\"type\":\"uint256\"}],\"name\":\"ClaimResolved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newCustomCollateralAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newCustomCollareralRate\",\"type\":\"uint256\"}],\"name\":\"CustomClaimCollateralChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"holder\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"firstInclusive\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"lastInclusive\",\"type\":\"uint256\"}],\"name\":\"ShareNumberingEvent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"contractAddress\",\"type\":\"address\"}],\"name\":\"SubRegisterAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"contractAddress\",\"type\":\"address\"}],\"name\":\"SubRegisterRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"holder\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"message\",\"type\":\"string\"}],\"name\":\"TokensDeclaredInvalid\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"message\",\"type\":\"string\"}],\"name\":\"announcement\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"holder\",\"type\":\"address\"}],\"name\":\"balanceOfDeep\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimPeriod\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"claims\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"claimant\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"collateral\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"currencyUsed\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"clearClaim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"convert1\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"name\":\"convert2\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"name\":\"convert3\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"convertOldShares\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"countSubregisters\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"customCollateralAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"customCollateralRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"holder\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"message\",\"type\":\"string\"}],\"name\":\"declareInvalid\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"collateralType\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"lostAddress\",\"type\":\"address\"}],\"name\":\"declareLost\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"lostAddress\",\"type\":\"address\"}],\"name\":\"deleteClaim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getClaimDeleter\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"lostAddress\",\"type\":\"address\"}],\"name\":\"getClaimant\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"lostAddress\",\"type\":\"address\"}],\"name\":\"getCollateral\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"collateralType\",\"type\":\"address\"}],\"name\":\"getCollateralRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"lostAddress\",\"type\":\"address\"}],\"name\":\"getCollateralType\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"lostAddress\",\"type\":\"address\"}],\"name\":\"getTimeStamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"invalidTokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"isRecoveryEnabled\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"shareholder\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"shareholder\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"callee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"mintAndCall\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"shareholder\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"firstShareNumber\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastShareNumber\",\"type\":\"uint256\"}],\"name\":\"mintNumbered\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"shareholder\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"callee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"firstShareNumber\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastShareNumber\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"mintNumberedAndCall\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"contractAddress\",\"type\":\"address\"}],\"name\":\"recognizeSubRegister\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"lostAddress\",\"type\":\"address\"}],\"name\":\"recover\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"recoveryDisabled\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"contractAddress\",\"type\":\"address\"}],\"name\":\"removeSubRegister\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"collateral\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"rate\",\"type\":\"uint256\"}],\"name\":\"setCustomClaimCollateral\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"}],\"name\":\"setName\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"enabled\",\"type\":\"bool\"}],\"name\":\"setRecoverable\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_terms\",\"type\":\"string\"}],\"name\":\"setTerms\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_newTotalShares\",\"type\":\"uint256\"}],\"name\":\"setTotalShares\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"subregisters\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"terms\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalShares\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalValidSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Luzius Meisser, luzius@aktionariat.com These tokens are uncertified shares (Wertrechte according to the Swiss code of obligations), with this smart contract serving as onwership registry (Wertrechtebuch), but not as shareholder registry, which is kept separate and run by the company. This is equivalent to the traditional system of having physical share certificates kept at home by the shareholders and a shareholder registry run by the company. Just like with physical certificates, the owners of the tokens are the owners of the shares. However, in order to exercise their rights (for example receive a dividend), shareholders must register with the company. For example, in case the company pays out a dividend to a previous shareholder because the current shareholder did not register, the company cannot be held liable for paying the dividend to the \\\"wrong\\\" shareholder. In relation to the company, only the registered shareholders count as such. Registration requires setting up an account with ledgy.com providing your name and address and proving ownership over your addresses.\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See `IERC20.allowance`.\"},\"approve(address,uint256)\":{\"details\":\"See `IERC20.approve`. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See `IERC20.balanceOf`.\"},\"totalSupply()\":{\"details\":\"See `IERC20.totalSupply`.\"},\"transfer(address,uint256)\":{\"details\":\"See `IERC20.transfer`. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See `IERC20.transferFrom`. Emits an `Approval` event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of `ERC20`; Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `value`. - the caller must have allowance for `sender`'s tokens of at least `amount`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"title\":\"CompanyName AG Shares\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"announcement(string)\":{\"notice\":\"Allows the issuer to make public announcements that are visible on the blockchain.\"},\"balanceOfDeep(address)\":{\"notice\":\"A deep balanceOf operator that also considers indirectly held tokens in recognized sub registers.\"},\"burn(uint256)\":{\"notice\":\"Transfers _amount tokens to the company and burns them. The meaning of this operation depends on the circumstances and the fate of the shares does not necessarily follow the fate of the tokens. For example, the company itself might call this function to implement a formal decision to destroy some of the outstanding shares. Also, this function might be called by an owner to return the shares to the company and get them back in another form under an according agreement (e.g. printed certificates or tokens on a different blockchain). It is not recommended to call this function without having agreed with the company on the further fate of the shares in question.\"},\"clearClaim()\":{\"notice\":\"Clears a claim after the key has been found again and assigns the collateral to the \\\"lost\\\" address. This is the price an adverse claimer pays for filing a false claim and makes it risky to do so.\"},\"declareInvalid(address,uint256,string)\":{\"notice\":\"Signals that the indicated tokens have been declared invalid (e.g. by a court ruling in accordance with article 973g of the Swiss Code of Obligations) and got detached from the underlying shares. Invalid tokens do not carry any shareholder rights any more. This function is purely declarative. It does not technically immobilize the affected tokens as that would give the issuer too much power.\"},\"declareLost(address,address)\":{\"notice\":\"Anyone can declare that the private key to a certain address was lost by calling declareLost providing a deposit/collateral. There are three possibilities of what can happen with the claim: 1) The claim period expires and the claimant can get the deposit and the shares back by calling recover 2) The \\\"lost\\\" private key is used at any time to call clearClaim. In that case, the claim is deleted and    the deposit sent to the shareholder (the owner of the private key). It is recommended to call recover    whenever someone transfers funds to let claims be resolved automatically when the \\\"lost\\\" private key is    used again. 3) The owner deletes the claim and assigns the deposit to the claimant. This is intended to be used to resolve    disputes. Generally, using this function implies that you have to trust the issuer of the tokens to handle    the situation well. As a rule of thumb, the contract owner should assume the owner of the lost address to be the    rightful owner of the deposit. It is highly recommended that the owner observes the claims made and informs the owners of the claimed addresses whenever a claim is made for their address (this of course is only possible if they are known to the owner, e.g. through a shareholder register).\"},\"deleteClaim(address)\":{\"notice\":\"This function is to be executed by the claim deleter only in case a dispute needs to be resolved manually.\"},\"getCollateralRate(address)\":{\"notice\":\"Returns the collateral rate for the given collateral type and 0 if that type of collateral is not accepted. By default, only the token itself is accepted at a rate of 1:1. Subclasses should override this method if they want to add additional types of collateral.\"},\"isRecoveryEnabled(address)\":{\"notice\":\"Some users might want to disable claims for their address completely. For example if they use a deep cold storage solution or paper wallet.\"},\"mint(address,uint256)\":{\"notice\":\"Allows the company to tokenize shares. If these shares are newly created, setTotalShares must be called first in order to adjust the total number of shares.\"},\"mintNumbered(address,uint256,uint256)\":{\"notice\":\"Some companies like to number their shares so they can refer to them more explicitely in legal contracts. A minority of Swiss lawyers even believes that numbering shares is compulsory (which is not true). Nonetheless, this function allows to signal the numbers of freshly tokenized shares. In case the shares ever get de-tokenized again, this information might help in deducing their numbers again - although there might be some room for interpretation of what went where. By convention, transfers should be considered FIFO (first in, first out) and transactions in recognized subregisters be taken into account.\"},\"recognizeSubRegister(address)\":{\"notice\":\"Sometimes, tokens are held by smart contracts that are ERC20 contracts themselves. For example, some tokens might be held by a smart contract representing a shareholder agreement. In that case, the owners of that sub-contract are the shareholders, and not the contract itself For such cases, having a list of recognized such subregisters might be helpful with the automated registration and tracking of shareholders. We assume that the number of sub registers stays limited, such that they are safe to iterate. Subregisters should always have the same number of decimals as the main register and their total balance must not exceed the number of tokens assigned to the subregister. In order to preserve FIFO-rules meaningfully, subregisters must be empty when added or removed.\"},\"recover(address)\":{\"notice\":\"After the claim period has passed, the claimant can call this function to send the tokens on the lost address as well as the collateral to himself.\"},\"setCustomClaimCollateral(address,uint256)\":{\"notice\":\"See parent method for collateral requirements.\"},\"setTotalShares(uint256)\":{\"notice\":\"Declares the number of total shares, including those that have not been tokenized and those that are held by the company itself. This number can be substiantially higher than totalSupply() in case not all shares have been tokenized. Also, it can be lower than totalSupply() in case some tokens have become invalid.\"},\"totalValidSupply()\":{\"notice\":\"The total number of valid tokens in circulation. In case some tokens have been declared invalid, this number might be lower than totalSupply(). Also, it will always be lower than or equal to totalShares().\"}},\"notice\":\"The main addition is a functionality that allows the user to claim that the key for a certain address is lost.In order to prevent malicious attempts, a collateral needs to be posted.The contract owner can delete claims in case of disputes.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"c:/Users/luziu/Documents/aktionariat/contracts/src/SharesWithPredecessor.sol\":\"SharesWithPredecessor\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"c:/Users/luziu/Documents/aktionariat/contracts/src/ERC20.sol\":{\"keccak256\":\"0x49a62dec4bce9d2a4ace92aafe96733a9c43553bf3b6d914829ead7cb730bd09\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://24189fc1f42e40abf812c09e61d411cdfbd2dd5c3aa779ba30a8b9867bb9bcd7\",\"dweb:/ipfs/QmStB2NZ3g33pnL3oafkLgLFSETMmAU1etdZdjNwEyxKsy\"]},\"c:/Users/luziu/Documents/aktionariat/contracts/src/ERC20Recoverable.sol\":{\"keccak256\":\"0x6c5148711c2532e4ce0fb6a6dabf1c4443d96e0cc85646279900a55831dced66\",\"license\":\"LicenseRef-Aktionariat\",\"urls\":[\"bzz-raw://e45e012147251bb913fa4e92b6d0d84e06c64ffe59acf9fb1312505ad5c55b21\",\"dweb:/ipfs/QmUrdavyekxMdwvic2xg7tYs6Mg15tTtFJuU34rUBDULRj\"]},\"c:/Users/luziu/Documents/aktionariat/contracts/src/IERC20.sol\":{\"keccak256\":\"0xdd9ef23be041b279c4815ae1483703e0532d8839865b8081e12955a52d4e148f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2eef9ae3fc010bd8012716c89852c245aacf07474f3a52b84280f9f7958210fe\",\"dweb:/ipfs/QmSsjJBfgFw8PzaBTaZwCLzHkqM6pfS6NDrrFysNkCbS2M\"]},\"c:/Users/luziu/Documents/aktionariat/contracts/src/IERC677Receiver.sol\":{\"keccak256\":\"0x04613a7a3e5c67889c1476fca1c9b4c606e3527aa379e1ede01a9dfc7b9ae48d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://53dce0f0d8286dd9a720386b52ac8e9964c2986762aaa13f7d1e303ba400f4f8\",\"dweb:/ipfs/QmY2AocHahfW5JFGi4m5EVqh2JywqH8tHrABe9Y4fC93CL\"]},\"c:/Users/luziu/Documents/aktionariat/contracts/src/Ownable.sol\":{\"keccak256\":\"0xdd88e7218223ddc1f701a32b517043c733209c64fb26f1fd2dd1b8e5aa385809\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ee6e13334774dbe0675224efc941d87bebee78f76e80ddf68ea927062202ca95\",\"dweb:/ipfs/QmZhFsLpaGx2P5xuPc1Q9BGngvCd3qLTQ9d4izMXAfVe7Y\"]},\"c:/Users/luziu/Documents/aktionariat/contracts/src/Shares.sol\":{\"keccak256\":\"0xd596f2bf370fc71d76484724610626e9543be9ad69cb85b2c5ca3084bca973e6\",\"license\":\"LicenseRef-Aktionariat\",\"urls\":[\"bzz-raw://3317d0ab5b14dcaeda8d1669431f5f85f0728c72ada0ac250e5d422ae1def159\",\"dweb:/ipfs/QmPjcUMetLahwds1BEW1KXjtzGPkw1Zo2AK1pp8RGqhszs\"]},\"c:/Users/luziu/Documents/aktionariat/contracts/src/SharesWithPredecessor.sol\":{\"keccak256\":\"0xac90cea64e8ee64f664a1223c8971ee626e37224ce938df708f8744ecd16576a\",\"license\":\"LicenseRef-Aktionariat\",\"urls\":[\"bzz-raw://7358d7304653cebaf1f57d6ee5b48f8628147c3dd47c80c6c324782cfb709a93\",\"dweb:/ipfs/QmPZzLefvSvazjadysDEtVeV7aAZbLLyZTqUQh13AWq3va\"]}},\"version\":1}",
    "bytecode": "60a06040526000600c556000600d553480156200001b57600080fd5b50604051620033e5380380620033e58339810160408190526200003e9162000365565b6003805460ff19169055600880546001600160a01b03191633179081905560405185918591859185916001600160a01b0391909116906000907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a3620000a88484620000eb565b620000b381620001ab565b8151620000c890600b90602085019062000230565b505050505060609490941b6001600160601b03191660805250620005ca92505050565b6008546001600160a01b03163314620001215760405162461bcd60e51b81526004016200011890620004fd565b60405180910390fd5b81516200013690600a90602085019062000230565b5080516200014c90600990602084019062000230565b507f07ce702fc13ca0620c174dab22996a6d5fd9e7accb663555a4e85323692706ba8183604051602001620001839291906200041c565b60408051601f19818403018152908290526200019f9162000481565b60405180910390a15050565b6008546001600160a01b03163314620001d85760405162461bcd60e51b81526004016200011890620004fd565b620001e262000209565b811015620002045760405162461bcd60e51b81526004016200011890620004b6565b600c55565b600d54600090620002196200022a565b62000225919062000520565b905090565b60025490565b8280546200023e9062000577565b90600052602060002090601f016020900481019282620002625760008555620002ad565b82601f106200027d57805160ff1916838001178555620002ad565b82800160010185558215620002ad579182015b82811115620002ad57825182559160200191906001019062000290565b50620002bb929150620002bf565b5090565b5b80821115620002bb5760008155600101620002c0565b600082601f830112620002e7578081fd5b81516001600160401b0380821115620003045762000304620005b4565b604051601f8301601f19908116603f011681019082821181831017156200032f576200032f620005b4565b8160405283815286602085880101111562000348578485fd5b6200035b84602083016020890162000544565b9695505050505050565b600080600080600060a086880312156200037d578081fd5b85516001600160a01b038116811462000394578182fd5b60208701519095506001600160401b0380821115620003b1578283fd5b620003bf89838a01620002d6565b95506040880151915080821115620003d5578283fd5b620003e389838a01620002d6565b94506060880151915080821115620003f9578283fd5b506200040888828901620002d6565b925050608086015190509295509295909350565b60006902732bb903730b6b29d160b51b825283516200044381600a85016020880162000544565b61040560f31b600a9184019182015283516200046781600c84016020880162000544565b602960f81b600c9290910191820152600d01949350505050565b6000602082528251806020840152620004a281604085016020870162000544565b601f01601f19169190910160400192915050565b60208082526027908201527f54686572652063616e277420626520666577657220746f6b656e73207468616e6040820152662073686172657360c81b606082015260800190565b6020808252600990820152683737ba1037bbb732b960b91b604082015260600190565b6000828210156200053f57634e487b7160e01b81526011600452602481fd5b500390565b60005b838110156200056157818101518382015260200162000547565b8381111562000571576000848401525b50505050565b6002810460018216806200058c57607f821691505b60208210811415620005ae57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fd5b60805160601c612dd96200060c600039600081816112b701528181611945015281816119e401528181611bef01528181611c8e0152611d310152612dd96000f3fe608060405234801561001057600080fd5b50600436106103275760003560e01c80636427ed97116101b8578063a77384c111610104578063d5025625116100a2578063e9850eb31161007c578063e9850eb314610686578063eb470ebf1461068e578063f2fde38b146106a1578063f54fc060146106b457610327565b8063d502562514610658578063dc2aafec14610660578063dd62ed3e1461067357610327565b8063b0d04c7a116100de578063b0d04c7a14610607578063b40e80d11461060f578063c6788bdd14610622578063cc51e1431461064557610327565b8063a77384c1146105ce578063a9059cbb146105e1578063ab9b5945146105f457610327565b806378f86afc1161017157806395d89b411161014b57806395d89b411461058d5780639b56d6c914610595578063a26cf59f146105a8578063a3ec1883146105bb57610327565b806378f86afc1461056a5780637dc2cd981461057d5780638da5cb5b1461058557610327565b80636427ed971461050e57806369f721e2146105215780636b03ed5f146105345780636e3baaf51461053c57806370a082311461054457806377e071ad1461055757610327565b806337a8129c1161027757806342966c681161023057806358b918191161020a57806358b91819146104cd5780635c707f07146104e05780635d6624b7146104f3578063609181171461050657610327565b806342966c68146104945780634ae5e630146104a7578063551ad632146104ba57610327565b806337a8129c146104385780633a1cdf32146104405780633a98ef39146104535780633bcc45ba1461045b5780634000aea01461046e57806340c10f191461048157610327565b80631e3b9de5116102e457806326773ddd116102be57806326773ddd146103f55780632a0a4ed514610408578063313ce5671461041057806332a7ae951461042557610327565b80631e3b9de5146103bc5780631f0f06aa146103cf57806323b872dd146103e257610327565b806306fdde031461032c578063095ea7b31461034a5780630c6f0e5d1461036a5780630cd865ec1461037f57806318160ddd146103945780631993982d146103a9575b600080fd5b6103346106c7565b6040516103419190612872565b60405180910390f35b61035d6103583660046124f0565b610755565b6040516103419190612853565b61037261076b565b60405161034191906127a5565b61039261038d36600461237f565b61077a565b005b61039c61098d565b6040516103419190612c56565b6103926103b736600461237f565b610993565b6103726103ca36600461237f565b610b5c565b6103926103dd3660046125db565b610b7d565b61035d6103f03660046123d2565b610be4565b6103926104033660046123a0565b610c40565b610372610e5e565b610418610e6d565b6040516103419190612c87565b61039261043336600461237f565b610e76565b61039c611050565b61039261044e3660046124f0565b611056565b61039c61108a565b61037261046936600461237f565b611090565b61035d61047c366004612519565b6110b1565b61039261048f3660046124f0565b611156565b6103926104a23660046126b7565b61118a565b6103726104b53660046126b7565b6111ca565b6103926104c836600461247a565b6111f4565b6103926104db3660046126b7565b6112a0565b6103926104ee366004612656565b611321565b610392610501366004612519565b6113c1565b61039c61146a565b61039261051c3660046125a3565b611470565b61039261052f366004612571565b61148f565b61039261151f565b61039c61165c565b61039c61055236600461237f565b611662565b61039c61056536600461237f565b61167d565b61039261057836600461261b565b6116bf565b61039c611754565b61037261175b565b61033461176a565b61039c6105a336600461237f565b611777565b61039c6105b636600461237f565b611795565b61035d6105c936600461237f565b611886565b6103926105dc3660046126b7565b6118a5565b61035d6105ef3660046124f0565b6118fb565b61039261060236600461237f565b61192b565b61039c611a6f565b61035d61061d36600461237f565b611a8b565b61063561063036600461237f565b611aa0565b6040516103419493929190612828565b61039261065336600461237f565b611ad2565b610334611b9d565b61039261066e3660046124f0565b611180565b61039c6106813660046123a0565b611baa565b610392611bd5565b61039c61069c36600461237f565b611da2565b6103926106af36600461237f565b611dc0565b6103926106c236600461240d565b611e46565b600980546106d490612d13565b80601f016020809104026020016040519081016040528092919081815260200182805461070090612d13565b801561074d5780601f106107225761010080835404028352916020019161074d565b820191906000526020600020905b81548152906001019060200180831161073057829003601f168201915b505050505081565b6000610762338484611edc565b50600192915050565b6006546001600160a01b031681565b6001600160a01b03808216600090815260046020908152604091829020825160808101845281548516815260018201549281018390526002820154938101939093526003015490921660608201819052909190816107f35760405162461bcd60e51b81526004016107ea9061296c565b60405180910390fd5b82516001600160a01b0316331461081c5760405162461bcd60e51b81526004016107ea906128a5565b4262ed4e0084604001516108309190612c95565b111561084e5760405162461bcd60e51b81526004016107ea906128dc565b82516001600160a01b03808616600090815260046020819052604080832080546001600160a01b031990811682556001820185905560028201949094556003018054909316909255905163a9059cbb60e01b81529184169163a9059cbb916108ba9185918891016127dd565b602060405180830381600087803b1580156108d457600080fd5b505af11580156108e8573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061090c91906125bf565b6109285760405162461bcd60e51b81526004016107ea906129db565b61093b858261093688611662565b611f37565b806001600160a01b0316856001600160a01b03167f52a5c2b28bc6eb9712d0ced43463103b486b13ccc9cda499fd3b2d7b6a74a8ee8560405161097e9190612c56565b60405180910390a35050505050565b60025490565b6008546001600160a01b031633146109bd5760405162461bcd60e51b81526004016107ea90612bfc565b6109c681611662565b156109e35760405162461bcd60e51b81526004016107ea90612a7e565b60005b600e54811015610b5857816001600160a01b0316600e8281548110610a1b57634e487b7160e01b600052603260045260246000fd5b6000918252602090912001546001600160a01b03161415610b4657600e8054610a4690600190612ccc565b81548110610a6457634e487b7160e01b600052603260045260246000fd5b600091825260209091200154600e80546001600160a01b039092169183908110610a9e57634e487b7160e01b600052603260045260246000fd5b9060005260206000200160006101000a8154816001600160a01b0302191690836001600160a01b03160217905550600e805480610aeb57634e487b7160e01b600052603160045260246000fd5b600082815260209020810160001990810180546001600160a01b03191690550190556040517fc3f6f866f10921ec4857ee8fe667183cd1751e53ed509c992689bece36ca189890610b3d9084906127a5565b60405180910390a15b80610b5081612d4e565b9150506109e6565b5050565b6001600160a01b03808216600090815260046020526040902054165b919050565b6008546001600160a01b03163314610ba75760405162461bcd60e51b81526004016107ea90612bfc565b7f07ce702fc13ca0620c174dab22996a6d5fd9e7accb663555a4e85323692706ba8282604051610bd892919061285e565b60405180910390a15050565b6000610bf1848484611f37565b6001600160a01b0384166000908152600160209081526040808320338452909152902054600160ff1b811015610c3557610c358533610c308685612ccc565b611edc565b506001949350505050565b610c4981611886565b610c655760405162461bcd60e51b81526004016107ea90612a12565b6000610c708361167d565b905060008111610c925760405162461bcd60e51b81526004016107ea9061293c565b336000610c9e84611662565b90506000610cac8483612cad565b90508582610ccc5760405162461bcd60e51b81526004016107ea90612afc565b6001600160a01b03861660009081526004602052604090206001015415610d055760405162461bcd60e51b81526004016107ea90612ac5565b6040516323b872dd60e01b81526001600160a01b038216906323b872dd90610d35908790309087906004016127b9565b602060405180830381600087803b158015610d4f57600080fd5b505af1158015610d63573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d8791906125bf565b610da35760405162461bcd60e51b81526004016107ea906129db565b604080516080810182526001600160a01b038087168083526020808401878152428587019081528d8516606087019081528d86166000818152600490955293889020965187549087166001600160a01b0319918216178855925160018801559051600287015551600390950180549590941694169390931790915591517f1982ca8958fc8a8176cb52be509260f4bc5af7ce04e1533711793f1c56dd535990610e4d908790612c56565b60405180910390a350505050505050565b6008546001600160a01b031690565b60035460ff1681565b610e7e610e5e565b6001600160a01b0316336001600160a01b031614610eae5760405162461bcd60e51b81526004016107ea90612c1f565b6001600160a01b038082166000908152600460209081526040918290208251608081018452815485168152600182015492810183905260028201549381019390935260030154909216606082018190529091610f1c5760405162461bcd60e51b81526004016107ea9061296c565b6001600160a01b03808416600090815260046020818152604080842080546001600160a01b031990811682556001820186905560028201959095556003018054909416909355855190860151925163a9059cbb60e01b81529385169363a9059cbb93610f8a939091016127dd565b602060405180830381600087803b158015610fa457600080fd5b505af1158015610fb8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fdc91906125bf565b610ff85760405162461bcd60e51b81526004016107ea906129db565b81600001516001600160a01b0316836001600160a01b03167fbb036e629a9f4c0897ee5d48440dfdb36f7e772117723a2ed603a6514244c2d584602001516040516110439190612c56565b60405180910390a3505050565b600d5481565b6008546001600160a01b031633146110805760405162461bcd60e51b81526004016107ea90612bfc565b610b588282611ff4565b600c5481565b6001600160a01b039081166000908152600460205260409020600301541690565b6000806110be86866118fb565b9050801561114d57604051635260769b60e11b81526001600160a01b0387169063a4c0ed36906110f89033908990899089906004016127f6565b602060405180830381600087803b15801561111257600080fd5b505af1158015611126573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061114a91906125bf565b90505b95945050505050565b6008546001600160a01b031633146111805760405162461bcd60e51b81526004016107ea90612bfc565b610b58828261207b565b61119333611662565b8111156111b25760405162461bcd60e51b81526004016107ea90612b33565b6111bd333083611f37565b6111c730826120b9565b50565b600e81815481106111da57600080fd5b6000918252602090912001546001600160a01b0316905081565b6111ff86858561148f565b6001600160a01b03851663a4c0ed36876112198787612ccc565b611224906001612c95565b85856040518563ffffffff1660e01b815260040161124594939291906127f6565b602060405180830381600087803b15801561125f57600080fd5b505af1158015611273573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061129791906125bf565b50505050505050565b604051630852cd8d60e31b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906342966c68906112ec908490600401612c56565b600060405180830381600087803b15801561130657600080fd5b505af115801561131a573d6000803e3d6000fd5b5050505050565b6008546001600160a01b0316331461134b5760405162461bcd60e51b81526004016107ea90612bfc565b815161135e90600a906020850190612201565b508051611372906009906020840190612201565b507f07ce702fc13ca0620c174dab22996a6d5fd9e7accb663555a4e85323692706ba81836040516020016113a7929190612711565b60408051601f1981840301815290829052610bd891612872565b6008546001600160a01b031633146113eb5760405162461bcd60e51b81526004016107ea90612bfc565b60006113f685611662565b90508084111561140557600080fd5b83600d60008282546114179190612c95565b92505081905550846001600160a01b03167f0a605cd1294f60fa3b73548ac68428f33300a051f225afcdcc75e56083c96ee785858560405161145b93929190612c5f565b60405180910390a25050505050565b60075481565b336000908152600560205260409020805460ff19169115919091179055565b6008546001600160a01b031633146114b95760405162461bcd60e51b81526004016107ea90612bfc565b826001600160a01b03167f7b37b2b4bba7b5ea40a69f93db727c289fbbaa632be8186cfa85e0297e00131983836040516114f4929190612c79565b60405180910390a261151a8361150a8484612ccc565b611515906001612c95565b61207b565b505050565b336000908152600460205260409020600101541561165a5733600081815260046020819052604080832060018101805460038301805484546001600160a01b0319908116865593889055600290940196909655908216909455905163a9059cbb60e01b815292936001600160a01b0390911692839263a9059cbb926115a89290918791016127dd565b602060405180830381600087803b1580156115c257600080fd5b505af11580156115d6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115fa91906125bf565b6116165760405162461bcd60e51b81526004016107ea906129db565b336001600160a01b03167f203627483d943880619f4b7e0cca21dbefd6204b4d85b124eb99540e17ba86dd8360405161164f9190612c56565b60405180910390a250505b565b600e5490565b6001600160a01b031660009081526020819052604090205490565b60006001600160a01b03821630141561169857506001610b78565b6006546001600160a01b03838116911614156116b75750600754610b78565b506000610b78565b6008546001600160a01b031633146116e95760405162461bcd60e51b81526004016107ea90612bfc565b80516116fc90600b906020840190612201565b507f07ce702fc13ca0620c174dab22996a6d5fd9e7accb663555a4e85323692706ba8160405160200161172f9190612772565b60408051601f198184030181529082905261174991612872565b60405180910390a150565b62ed4e0081565b6008546001600160a01b031681565b600a80546106d490612d13565b6001600160a01b031660009081526004602052604090206001015490565b6000806117a183611662565b905060005b600e5481101561187f576000600e82815481106117d357634e487b7160e01b600052603260045260246000fd5b6000918252602090912001546040516370a0823160e01b81526001600160a01b03909116915081906370a082319061180f9088906004016127a5565b60206040518083038186803b15801561182757600080fd5b505afa15801561183b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061185f91906126cf565b6118699084612c95565b925050808061187790612d4e565b9150506117a6565b5092915050565b6001600160a01b031660009081526005602052604090205460ff161590565b6008546001600160a01b031633146118cf5760405162461bcd60e51b81526004016107ea90612bfc565b6118d7611a6f565b8110156118f65760405162461bcd60e51b81526004016107ea90612994565b600c55565b60006119078383612153565b6119235760405162461bcd60e51b81526004016107ea90612913565b61076261151f565b6040516370a0823160e01b81526000906001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906370a082319061197a9085906004016127a5565b60206040518083038186803b15801561199257600080fd5b505afa1580156119a6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119ca91906126cf565b6040516323b872dd60e01b81529091506001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906323b872dd90611a1d908590309086906004016127b9565b602060405180830381600087803b158015611a3757600080fd5b505af1158015611a4b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061151a91906125bf565b6000600d54611a7c61098d565b611a869190612ccc565b905090565b60056020526000908152604090205460ff1681565b60046020526000908152604090208054600182015460028301546003909301546001600160a01b039283169391921684565b6008546001600160a01b03163314611afc5760405162461bcd60e51b81526004016107ea90612bfc565b611b0581611662565b15611b225760405162461bcd60e51b81526004016107ea90612b6a565b600e80546001810182556000919091527fbb7b4a454dc3493923482f07822329ed19e8244eff582cc204f8554c3620c3fd0180546001600160a01b0319166001600160a01b0383161790556040517f7417b75095e577f15d994b058af7a3a71f67be4ae2f288725d1b922f6bb67a67906117499083906127a5565b600b80546106d490612d13565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6040516370a0823160e01b81526000906001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906370a0823190611c249033906004016127a5565b60206040518083038186803b158015611c3c57600080fd5b505afa158015611c50573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611c7491906126cf565b6040516323b872dd60e01b81529091506001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906323b872dd90611cc7903390309086906004016127b9565b602060405180830381600087803b158015611ce157600080fd5b505af1158015611cf5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611d1991906125bf565b50604051630852cd8d60e31b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906342966c6890611d66908490600401612c56565b600060405180830381600087803b158015611d8057600080fd5b505af1158015611d94573d6000803e3d6000fd5b505050506111c7338261207b565b6001600160a01b031660009081526004602052604090206002015490565b6008546001600160a01b03163314611dea5760405162461bcd60e51b81526004016107ea90612bfc565b6008546040516001600160a01b038084169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3600880546001600160a01b0319166001600160a01b0392909216919091179055565b611e508484611156565b604051635260769b60e11b81526001600160a01b0385169063a4c0ed3690611e829088908790879087906004016127f6565b602060405180830381600087803b158015611e9c57600080fd5b505af1158015611eb0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611ed491906125bf565b505050505050565b6001600160a01b0380841660008181526001602090815260408083209487168084529490915290819020849055517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92590611043908590612c56565b6001600160a01b038216611f4a57600080fd5b611f5583838361151a565b6001600160a01b03831660009081526020819052604081208054839290611f7d908490612ccc565b90915550506001600160a01b03821660009081526020819052604081208054839290611faa908490612c95565b92505081905550816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516110439190612c56565b600680546001600160a01b0319166001600160a01b0384811691909117918290551661202457600060075561204a565b600081116120445760405162461bcd60e51b81526004016107ea90612a47565b60078190555b7f94238858463adf0fecc0e064844831a54bccf8467c86f0b93d2a9508e05968538282604051610bd89291906127dd565b600c5481612087611a6f565b6120919190612c95565b11156120af5760405162461bcd60e51b81526004016107ea90612baf565b610b588282612160565b6120c58260008361151a565b80600260008282546120d79190612ccc565b90915550506001600160a01b03821660009081526020819052604081208054839290612104908490612ccc565b90915550506040516000906001600160a01b038416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90612147908590612c56565b60405180910390a35050565b6000610762338484611f37565b6001600160a01b03821661217357600080fd5b61217f6000838361151a565b80600260008282546121919190612c95565b90915550506001600160a01b038216600090815260208190526040812080548392906121be908490612c95565b90915550506040516001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90612147908590612c56565b82805461220d90612d13565b90600052602060002090601f01602090048101928261222f5760008555612275565b82601f1061224857805160ff1916838001178555612275565b82800160010185558215612275579182015b8281111561227557825182559160200191906001019061225a565b50612281929150612285565b5090565b5b808211156122815760008155600101612286565b80356001600160a01b0381168114610b7857600080fd5b60008083601f8401126122c2578182fd5b50813567ffffffffffffffff8111156122d9578182fd5b6020830191508360208285010111156122f157600080fd5b9250929050565b600082601f830112612308578081fd5b813567ffffffffffffffff8082111561232357612323612d7f565b604051601f8301601f19908116603f0116810190828211818310171561234b5761234b612d7f565b81604052838152866020858801011115612363578485fd5b8360208701602083013792830160200193909352509392505050565b600060208284031215612390578081fd5b6123998261229a565b9392505050565b600080604083850312156123b2578081fd5b6123bb8361229a565b91506123c96020840161229a565b90509250929050565b6000806000606084860312156123e6578081fd5b6123ef8461229a565b92506123fd6020850161229a565b9150604084013590509250925092565b600080600080600060808688031215612424578081fd5b61242d8661229a565b945061243b6020870161229a565b935060408601359250606086013567ffffffffffffffff81111561245d578182fd5b612469888289016122b1565b969995985093965092949392505050565b60008060008060008060a08789031215612492578081fd5b61249b8761229a565b95506124a96020880161229a565b94506040870135935060608701359250608087013567ffffffffffffffff8111156124d2578182fd5b6124de89828a016122b1565b979a9699509497509295939492505050565b60008060408385031215612502578182fd5b61250b8361229a565b946020939093013593505050565b6000806000806060858703121561252e578384fd5b6125378561229a565b935060208501359250604085013567ffffffffffffffff811115612559578283fd5b612565878288016122b1565b95989497509550505050565b600080600060608486031215612585578283fd5b61258e8461229a565b95602085013595506040909401359392505050565b6000602082840312156125b4578081fd5b813561239981612d95565b6000602082840312156125d0578081fd5b815161239981612d95565b600080602083850312156125ed578182fd5b823567ffffffffffffffff811115612603578283fd5b61260f858286016122b1565b90969095509350505050565b60006020828403121561262c578081fd5b813567ffffffffffffffff811115612642578182fd5b61264e848285016122f8565b949350505050565b60008060408385031215612668578182fd5b823567ffffffffffffffff8082111561267f578384fd5b61268b868387016122f8565b935060208501359150808211156126a0578283fd5b506126ad858286016122f8565b9150509250929050565b6000602082840312156126c8578081fd5b5035919050565b6000602082840312156126e0578081fd5b5051919050565b60008284528282602086013780602084860101526020601f19601f85011685010190509392505050565b60006902732bb903730b6b29d160b51b8252835161273681600a850160208801612ce3565b61040560f31b600a91840191820152835161275881600c840160208801612ce3565b602960f81b600c9290910191820152600d01949350505050565b60006a02732bb903a32b936b99d160ad1b8252825161279881600b850160208701612ce3565b91909101600b0192915050565b6001600160a01b0391909116815260200190565b6001600160a01b039384168152919092166020820152604081019190915260600190565b6001600160a01b03929092168252602082015260400190565b600060018060a01b03861682528460208301526060604083015261281e6060830184866126e7565b9695505050505050565b6001600160a01b03948516815260208101939093526040830191909152909116606082015260800190565b901515815260200190565b60006020825261264e6020830184866126e7565b6000602082528251806020840152612891816040850160208701612ce3565b601f01601f19169190910160400192915050565b6020808252601f908201527f4f6e6c7920636c61696d616e742063616e207265736f6c766520636c61696d00604082015260600190565b60208082526019908201527f436c61696d20706572696f64206e6f74206f7665722079657400000000000000604082015260600190565b6020808252600f908201526e151c985b9cd9995c8819985a5b1959608a1b604082015260600190565b602080825260169082015275155b9cdd5c1c1bdc9d19590818dbdb1b185d195c985b60521b604082015260600190565b6020808252600e908201526d139bc818db185a5b48199bdd5b9960921b604082015260600190565b60208082526027908201527f54686572652063616e277420626520666577657220746f6b656e73207468616e6040820152662073686172657360c81b606082015260800190565b6020808252601a908201527f436f6c6c61746572616c207472616e73666572206661696c6564000000000000604082015260600190565b6020808252818101527f436c61696d732064697361626c656420666f7220746869732061646472657373604082015260600190565b6020808252601d908201527f436f6c6c61746572616c20726174652063616e2774206265207a65726f000000604082015260600190565b60208082526027908201527f537562726567697374657273206d75737420626520656d707479207768656e206040820152661c995b5bdd995960ca1b606082015260800190565b60208082526017908201527f4164647265737320616c726561647920636c61696d6564000000000000000000604082015260600190565b6020808252601f908201527f436c61696d6564206164647265737320686f6c6473206e6f2073686172657300604082015260600190565b6020808252601b908201527f4e6f7420656e6f7567682073686172657320617661696c61626c650000000000604082015260600190565b60208082526025908201527f537562726567697374657273206d75737420626520656d707479207768656e20604082015264185919195960da1b606082015260800190565b6020808252602d908201527f54686572652063616e277420626520666577657220736861726573207468616e60408201526c2076616c696420746f6b656e7360981b606082015260800190565b6020808252600990820152683737ba1037bbb732b960b91b604082015260600190565b60208082526018908201527f596f752063616e6e6f742064656c65746520636c61696d730000000000000000604082015260600190565b90815260200190565b60008482526040602083015261114d6040830184866126e7565b918252602082015260400190565b60ff91909116815260200190565b60008219821115612ca857612ca8612d69565b500190565b6000816000190483118215151615612cc757612cc7612d69565b500290565b600082821015612cde57612cde612d69565b500390565b60005b83811015612cfe578181015183820152602001612ce6565b83811115612d0d576000848401525b50505050565b600281046001821680612d2757607f821691505b60208210811415612d4857634e487b7160e01b600052602260045260246000fd5b50919050565b6000600019821415612d6257612d62612d69565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fd5b80151581146111c757600080fdfea2646970667358221220cfccc31614c8480db952854869e498e1eb8fe77a3f4da69d8aa5678e3d346e6264736f6c63430008010033",
    "deployedBytecode": "608060405234801561001057600080fd5b50600436106103275760003560e01c80636427ed97116101b8578063a77384c111610104578063d5025625116100a2578063e9850eb31161007c578063e9850eb314610686578063eb470ebf1461068e578063f2fde38b146106a1578063f54fc060146106b457610327565b8063d502562514610658578063dc2aafec14610660578063dd62ed3e1461067357610327565b8063b0d04c7a116100de578063b0d04c7a14610607578063b40e80d11461060f578063c6788bdd14610622578063cc51e1431461064557610327565b8063a77384c1146105ce578063a9059cbb146105e1578063ab9b5945146105f457610327565b806378f86afc1161017157806395d89b411161014b57806395d89b411461058d5780639b56d6c914610595578063a26cf59f146105a8578063a3ec1883146105bb57610327565b806378f86afc1461056a5780637dc2cd981461057d5780638da5cb5b1461058557610327565b80636427ed971461050e57806369f721e2146105215780636b03ed5f146105345780636e3baaf51461053c57806370a082311461054457806377e071ad1461055757610327565b806337a8129c1161027757806342966c681161023057806358b918191161020a57806358b91819146104cd5780635c707f07146104e05780635d6624b7146104f3578063609181171461050657610327565b806342966c68146104945780634ae5e630146104a7578063551ad632146104ba57610327565b806337a8129c146104385780633a1cdf32146104405780633a98ef39146104535780633bcc45ba1461045b5780634000aea01461046e57806340c10f191461048157610327565b80631e3b9de5116102e457806326773ddd116102be57806326773ddd146103f55780632a0a4ed514610408578063313ce5671461041057806332a7ae951461042557610327565b80631e3b9de5146103bc5780631f0f06aa146103cf57806323b872dd146103e257610327565b806306fdde031461032c578063095ea7b31461034a5780630c6f0e5d1461036a5780630cd865ec1461037f57806318160ddd146103945780631993982d146103a9575b600080fd5b6103346106c7565b6040516103419190612872565b60405180910390f35b61035d6103583660046124f0565b610755565b6040516103419190612853565b61037261076b565b60405161034191906127a5565b61039261038d36600461237f565b61077a565b005b61039c61098d565b6040516103419190612c56565b6103926103b736600461237f565b610993565b6103726103ca36600461237f565b610b5c565b6103926103dd3660046125db565b610b7d565b61035d6103f03660046123d2565b610be4565b6103926104033660046123a0565b610c40565b610372610e5e565b610418610e6d565b6040516103419190612c87565b61039261043336600461237f565b610e76565b61039c611050565b61039261044e3660046124f0565b611056565b61039c61108a565b61037261046936600461237f565b611090565b61035d61047c366004612519565b6110b1565b61039261048f3660046124f0565b611156565b6103926104a23660046126b7565b61118a565b6103726104b53660046126b7565b6111ca565b6103926104c836600461247a565b6111f4565b6103926104db3660046126b7565b6112a0565b6103926104ee366004612656565b611321565b610392610501366004612519565b6113c1565b61039c61146a565b61039261051c3660046125a3565b611470565b61039261052f366004612571565b61148f565b61039261151f565b61039c61165c565b61039c61055236600461237f565b611662565b61039c61056536600461237f565b61167d565b61039261057836600461261b565b6116bf565b61039c611754565b61037261175b565b61033461176a565b61039c6105a336600461237f565b611777565b61039c6105b636600461237f565b611795565b61035d6105c936600461237f565b611886565b6103926105dc3660046126b7565b6118a5565b61035d6105ef3660046124f0565b6118fb565b61039261060236600461237f565b61192b565b61039c611a6f565b61035d61061d36600461237f565b611a8b565b61063561063036600461237f565b611aa0565b6040516103419493929190612828565b61039261065336600461237f565b611ad2565b610334611b9d565b61039261066e3660046124f0565b611180565b61039c6106813660046123a0565b611baa565b610392611bd5565b61039c61069c36600461237f565b611da2565b6103926106af36600461237f565b611dc0565b6103926106c236600461240d565b611e46565b600980546106d490612d13565b80601f016020809104026020016040519081016040528092919081815260200182805461070090612d13565b801561074d5780601f106107225761010080835404028352916020019161074d565b820191906000526020600020905b81548152906001019060200180831161073057829003601f168201915b505050505081565b6000610762338484611edc565b50600192915050565b6006546001600160a01b031681565b6001600160a01b03808216600090815260046020908152604091829020825160808101845281548516815260018201549281018390526002820154938101939093526003015490921660608201819052909190816107f35760405162461bcd60e51b81526004016107ea9061296c565b60405180910390fd5b82516001600160a01b0316331461081c5760405162461bcd60e51b81526004016107ea906128a5565b4262ed4e0084604001516108309190612c95565b111561084e5760405162461bcd60e51b81526004016107ea906128dc565b82516001600160a01b03808616600090815260046020819052604080832080546001600160a01b031990811682556001820185905560028201949094556003018054909316909255905163a9059cbb60e01b81529184169163a9059cbb916108ba9185918891016127dd565b602060405180830381600087803b1580156108d457600080fd5b505af11580156108e8573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061090c91906125bf565b6109285760405162461bcd60e51b81526004016107ea906129db565b61093b858261093688611662565b611f37565b806001600160a01b0316856001600160a01b03167f52a5c2b28bc6eb9712d0ced43463103b486b13ccc9cda499fd3b2d7b6a74a8ee8560405161097e9190612c56565b60405180910390a35050505050565b60025490565b6008546001600160a01b031633146109bd5760405162461bcd60e51b81526004016107ea90612bfc565b6109c681611662565b156109e35760405162461bcd60e51b81526004016107ea90612a7e565b60005b600e54811015610b5857816001600160a01b0316600e8281548110610a1b57634e487b7160e01b600052603260045260246000fd5b6000918252602090912001546001600160a01b03161415610b4657600e8054610a4690600190612ccc565b81548110610a6457634e487b7160e01b600052603260045260246000fd5b600091825260209091200154600e80546001600160a01b039092169183908110610a9e57634e487b7160e01b600052603260045260246000fd5b9060005260206000200160006101000a8154816001600160a01b0302191690836001600160a01b03160217905550600e805480610aeb57634e487b7160e01b600052603160045260246000fd5b600082815260209020810160001990810180546001600160a01b03191690550190556040517fc3f6f866f10921ec4857ee8fe667183cd1751e53ed509c992689bece36ca189890610b3d9084906127a5565b60405180910390a15b80610b5081612d4e565b9150506109e6565b5050565b6001600160a01b03808216600090815260046020526040902054165b919050565b6008546001600160a01b03163314610ba75760405162461bcd60e51b81526004016107ea90612bfc565b7f07ce702fc13ca0620c174dab22996a6d5fd9e7accb663555a4e85323692706ba8282604051610bd892919061285e565b60405180910390a15050565b6000610bf1848484611f37565b6001600160a01b0384166000908152600160209081526040808320338452909152902054600160ff1b811015610c3557610c358533610c308685612ccc565b611edc565b506001949350505050565b610c4981611886565b610c655760405162461bcd60e51b81526004016107ea90612a12565b6000610c708361167d565b905060008111610c925760405162461bcd60e51b81526004016107ea9061293c565b336000610c9e84611662565b90506000610cac8483612cad565b90508582610ccc5760405162461bcd60e51b81526004016107ea90612afc565b6001600160a01b03861660009081526004602052604090206001015415610d055760405162461bcd60e51b81526004016107ea90612ac5565b6040516323b872dd60e01b81526001600160a01b038216906323b872dd90610d35908790309087906004016127b9565b602060405180830381600087803b158015610d4f57600080fd5b505af1158015610d63573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d8791906125bf565b610da35760405162461bcd60e51b81526004016107ea906129db565b604080516080810182526001600160a01b038087168083526020808401878152428587019081528d8516606087019081528d86166000818152600490955293889020965187549087166001600160a01b0319918216178855925160018801559051600287015551600390950180549590941694169390931790915591517f1982ca8958fc8a8176cb52be509260f4bc5af7ce04e1533711793f1c56dd535990610e4d908790612c56565b60405180910390a350505050505050565b6008546001600160a01b031690565b60035460ff1681565b610e7e610e5e565b6001600160a01b0316336001600160a01b031614610eae5760405162461bcd60e51b81526004016107ea90612c1f565b6001600160a01b038082166000908152600460209081526040918290208251608081018452815485168152600182015492810183905260028201549381019390935260030154909216606082018190529091610f1c5760405162461bcd60e51b81526004016107ea9061296c565b6001600160a01b03808416600090815260046020818152604080842080546001600160a01b031990811682556001820186905560028201959095556003018054909416909355855190860151925163a9059cbb60e01b81529385169363a9059cbb93610f8a939091016127dd565b602060405180830381600087803b158015610fa457600080fd5b505af1158015610fb8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fdc91906125bf565b610ff85760405162461bcd60e51b81526004016107ea906129db565b81600001516001600160a01b0316836001600160a01b03167fbb036e629a9f4c0897ee5d48440dfdb36f7e772117723a2ed603a6514244c2d584602001516040516110439190612c56565b60405180910390a3505050565b600d5481565b6008546001600160a01b031633146110805760405162461bcd60e51b81526004016107ea90612bfc565b610b588282611ff4565b600c5481565b6001600160a01b039081166000908152600460205260409020600301541690565b6000806110be86866118fb565b9050801561114d57604051635260769b60e11b81526001600160a01b0387169063a4c0ed36906110f89033908990899089906004016127f6565b602060405180830381600087803b15801561111257600080fd5b505af1158015611126573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061114a91906125bf565b90505b95945050505050565b6008546001600160a01b031633146111805760405162461bcd60e51b81526004016107ea90612bfc565b610b58828261207b565b61119333611662565b8111156111b25760405162461bcd60e51b81526004016107ea90612b33565b6111bd333083611f37565b6111c730826120b9565b50565b600e81815481106111da57600080fd5b6000918252602090912001546001600160a01b0316905081565b6111ff86858561148f565b6001600160a01b03851663a4c0ed36876112198787612ccc565b611224906001612c95565b85856040518563ffffffff1660e01b815260040161124594939291906127f6565b602060405180830381600087803b15801561125f57600080fd5b505af1158015611273573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061129791906125bf565b50505050505050565b604051630852cd8d60e31b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906342966c68906112ec908490600401612c56565b600060405180830381600087803b15801561130657600080fd5b505af115801561131a573d6000803e3d6000fd5b5050505050565b6008546001600160a01b0316331461134b5760405162461bcd60e51b81526004016107ea90612bfc565b815161135e90600a906020850190612201565b508051611372906009906020840190612201565b507f07ce702fc13ca0620c174dab22996a6d5fd9e7accb663555a4e85323692706ba81836040516020016113a7929190612711565b60408051601f1981840301815290829052610bd891612872565b6008546001600160a01b031633146113eb5760405162461bcd60e51b81526004016107ea90612bfc565b60006113f685611662565b90508084111561140557600080fd5b83600d60008282546114179190612c95565b92505081905550846001600160a01b03167f0a605cd1294f60fa3b73548ac68428f33300a051f225afcdcc75e56083c96ee785858560405161145b93929190612c5f565b60405180910390a25050505050565b60075481565b336000908152600560205260409020805460ff19169115919091179055565b6008546001600160a01b031633146114b95760405162461bcd60e51b81526004016107ea90612bfc565b826001600160a01b03167f7b37b2b4bba7b5ea40a69f93db727c289fbbaa632be8186cfa85e0297e00131983836040516114f4929190612c79565b60405180910390a261151a8361150a8484612ccc565b611515906001612c95565b61207b565b505050565b336000908152600460205260409020600101541561165a5733600081815260046020819052604080832060018101805460038301805484546001600160a01b0319908116865593889055600290940196909655908216909455905163a9059cbb60e01b815292936001600160a01b0390911692839263a9059cbb926115a89290918791016127dd565b602060405180830381600087803b1580156115c257600080fd5b505af11580156115d6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115fa91906125bf565b6116165760405162461bcd60e51b81526004016107ea906129db565b336001600160a01b03167f203627483d943880619f4b7e0cca21dbefd6204b4d85b124eb99540e17ba86dd8360405161164f9190612c56565b60405180910390a250505b565b600e5490565b6001600160a01b031660009081526020819052604090205490565b60006001600160a01b03821630141561169857506001610b78565b6006546001600160a01b03838116911614156116b75750600754610b78565b506000610b78565b6008546001600160a01b031633146116e95760405162461bcd60e51b81526004016107ea90612bfc565b80516116fc90600b906020840190612201565b507f07ce702fc13ca0620c174dab22996a6d5fd9e7accb663555a4e85323692706ba8160405160200161172f9190612772565b60408051601f198184030181529082905261174991612872565b60405180910390a150565b62ed4e0081565b6008546001600160a01b031681565b600a80546106d490612d13565b6001600160a01b031660009081526004602052604090206001015490565b6000806117a183611662565b905060005b600e5481101561187f576000600e82815481106117d357634e487b7160e01b600052603260045260246000fd5b6000918252602090912001546040516370a0823160e01b81526001600160a01b03909116915081906370a082319061180f9088906004016127a5565b60206040518083038186803b15801561182757600080fd5b505afa15801561183b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061185f91906126cf565b6118699084612c95565b925050808061187790612d4e565b9150506117a6565b5092915050565b6001600160a01b031660009081526005602052604090205460ff161590565b6008546001600160a01b031633146118cf5760405162461bcd60e51b81526004016107ea90612bfc565b6118d7611a6f565b8110156118f65760405162461bcd60e51b81526004016107ea90612994565b600c55565b60006119078383612153565b6119235760405162461bcd60e51b81526004016107ea90612913565b61076261151f565b6040516370a0823160e01b81526000906001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906370a082319061197a9085906004016127a5565b60206040518083038186803b15801561199257600080fd5b505afa1580156119a6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119ca91906126cf565b6040516323b872dd60e01b81529091506001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906323b872dd90611a1d908590309086906004016127b9565b602060405180830381600087803b158015611a3757600080fd5b505af1158015611a4b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061151a91906125bf565b6000600d54611a7c61098d565b611a869190612ccc565b905090565b60056020526000908152604090205460ff1681565b60046020526000908152604090208054600182015460028301546003909301546001600160a01b039283169391921684565b6008546001600160a01b03163314611afc5760405162461bcd60e51b81526004016107ea90612bfc565b611b0581611662565b15611b225760405162461bcd60e51b81526004016107ea90612b6a565b600e80546001810182556000919091527fbb7b4a454dc3493923482f07822329ed19e8244eff582cc204f8554c3620c3fd0180546001600160a01b0319166001600160a01b0383161790556040517f7417b75095e577f15d994b058af7a3a71f67be4ae2f288725d1b922f6bb67a67906117499083906127a5565b600b80546106d490612d13565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6040516370a0823160e01b81526000906001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906370a0823190611c249033906004016127a5565b60206040518083038186803b158015611c3c57600080fd5b505afa158015611c50573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611c7491906126cf565b6040516323b872dd60e01b81529091506001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906323b872dd90611cc7903390309086906004016127b9565b602060405180830381600087803b158015611ce157600080fd5b505af1158015611cf5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611d1991906125bf565b50604051630852cd8d60e31b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906342966c6890611d66908490600401612c56565b600060405180830381600087803b158015611d8057600080fd5b505af1158015611d94573d6000803e3d6000fd5b505050506111c7338261207b565b6001600160a01b031660009081526004602052604090206002015490565b6008546001600160a01b03163314611dea5760405162461bcd60e51b81526004016107ea90612bfc565b6008546040516001600160a01b038084169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3600880546001600160a01b0319166001600160a01b0392909216919091179055565b611e508484611156565b604051635260769b60e11b81526001600160a01b0385169063a4c0ed3690611e829088908790879087906004016127f6565b602060405180830381600087803b158015611e9c57600080fd5b505af1158015611eb0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611ed491906125bf565b505050505050565b6001600160a01b0380841660008181526001602090815260408083209487168084529490915290819020849055517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92590611043908590612c56565b6001600160a01b038216611f4a57600080fd5b611f5583838361151a565b6001600160a01b03831660009081526020819052604081208054839290611f7d908490612ccc565b90915550506001600160a01b03821660009081526020819052604081208054839290611faa908490612c95565b92505081905550816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516110439190612c56565b600680546001600160a01b0319166001600160a01b0384811691909117918290551661202457600060075561204a565b600081116120445760405162461bcd60e51b81526004016107ea90612a47565b60078190555b7f94238858463adf0fecc0e064844831a54bccf8467c86f0b93d2a9508e05968538282604051610bd89291906127dd565b600c5481612087611a6f565b6120919190612c95565b11156120af5760405162461bcd60e51b81526004016107ea90612baf565b610b588282612160565b6120c58260008361151a565b80600260008282546120d79190612ccc565b90915550506001600160a01b03821660009081526020819052604081208054839290612104908490612ccc565b90915550506040516000906001600160a01b038416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90612147908590612c56565b60405180910390a35050565b6000610762338484611f37565b6001600160a01b03821661217357600080fd5b61217f6000838361151a565b80600260008282546121919190612c95565b90915550506001600160a01b038216600090815260208190526040812080548392906121be908490612c95565b90915550506040516001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90612147908590612c56565b82805461220d90612d13565b90600052602060002090601f01602090048101928261222f5760008555612275565b82601f1061224857805160ff1916838001178555612275565b82800160010185558215612275579182015b8281111561227557825182559160200191906001019061225a565b50612281929150612285565b5090565b5b808211156122815760008155600101612286565b80356001600160a01b0381168114610b7857600080fd5b60008083601f8401126122c2578182fd5b50813567ffffffffffffffff8111156122d9578182fd5b6020830191508360208285010111156122f157600080fd5b9250929050565b600082601f830112612308578081fd5b813567ffffffffffffffff8082111561232357612323612d7f565b604051601f8301601f19908116603f0116810190828211818310171561234b5761234b612d7f565b81604052838152866020858801011115612363578485fd5b8360208701602083013792830160200193909352509392505050565b600060208284031215612390578081fd5b6123998261229a565b9392505050565b600080604083850312156123b2578081fd5b6123bb8361229a565b91506123c96020840161229a565b90509250929050565b6000806000606084860312156123e6578081fd5b6123ef8461229a565b92506123fd6020850161229a565b9150604084013590509250925092565b600080600080600060808688031215612424578081fd5b61242d8661229a565b945061243b6020870161229a565b935060408601359250606086013567ffffffffffffffff81111561245d578182fd5b612469888289016122b1565b969995985093965092949392505050565b60008060008060008060a08789031215612492578081fd5b61249b8761229a565b95506124a96020880161229a565b94506040870135935060608701359250608087013567ffffffffffffffff8111156124d2578182fd5b6124de89828a016122b1565b979a9699509497509295939492505050565b60008060408385031215612502578182fd5b61250b8361229a565b946020939093013593505050565b6000806000806060858703121561252e578384fd5b6125378561229a565b935060208501359250604085013567ffffffffffffffff811115612559578283fd5b612565878288016122b1565b95989497509550505050565b600080600060608486031215612585578283fd5b61258e8461229a565b95602085013595506040909401359392505050565b6000602082840312156125b4578081fd5b813561239981612d95565b6000602082840312156125d0578081fd5b815161239981612d95565b600080602083850312156125ed578182fd5b823567ffffffffffffffff811115612603578283fd5b61260f858286016122b1565b90969095509350505050565b60006020828403121561262c578081fd5b813567ffffffffffffffff811115612642578182fd5b61264e848285016122f8565b949350505050565b60008060408385031215612668578182fd5b823567ffffffffffffffff8082111561267f578384fd5b61268b868387016122f8565b935060208501359150808211156126a0578283fd5b506126ad858286016122f8565b9150509250929050565b6000602082840312156126c8578081fd5b5035919050565b6000602082840312156126e0578081fd5b5051919050565b60008284528282602086013780602084860101526020601f19601f85011685010190509392505050565b60006902732bb903730b6b29d160b51b8252835161273681600a850160208801612ce3565b61040560f31b600a91840191820152835161275881600c840160208801612ce3565b602960f81b600c9290910191820152600d01949350505050565b60006a02732bb903a32b936b99d160ad1b8252825161279881600b850160208701612ce3565b91909101600b0192915050565b6001600160a01b0391909116815260200190565b6001600160a01b039384168152919092166020820152604081019190915260600190565b6001600160a01b03929092168252602082015260400190565b600060018060a01b03861682528460208301526060604083015261281e6060830184866126e7565b9695505050505050565b6001600160a01b03948516815260208101939093526040830191909152909116606082015260800190565b901515815260200190565b60006020825261264e6020830184866126e7565b6000602082528251806020840152612891816040850160208701612ce3565b601f01601f19169190910160400192915050565b6020808252601f908201527f4f6e6c7920636c61696d616e742063616e207265736f6c766520636c61696d00604082015260600190565b60208082526019908201527f436c61696d20706572696f64206e6f74206f7665722079657400000000000000604082015260600190565b6020808252600f908201526e151c985b9cd9995c8819985a5b1959608a1b604082015260600190565b602080825260169082015275155b9cdd5c1c1bdc9d19590818dbdb1b185d195c985b60521b604082015260600190565b6020808252600e908201526d139bc818db185a5b48199bdd5b9960921b604082015260600190565b60208082526027908201527f54686572652063616e277420626520666577657220746f6b656e73207468616e6040820152662073686172657360c81b606082015260800190565b6020808252601a908201527f436f6c6c61746572616c207472616e73666572206661696c6564000000000000604082015260600190565b6020808252818101527f436c61696d732064697361626c656420666f7220746869732061646472657373604082015260600190565b6020808252601d908201527f436f6c6c61746572616c20726174652063616e2774206265207a65726f000000604082015260600190565b60208082526027908201527f537562726567697374657273206d75737420626520656d707479207768656e206040820152661c995b5bdd995960ca1b606082015260800190565b60208082526017908201527f4164647265737320616c726561647920636c61696d6564000000000000000000604082015260600190565b6020808252601f908201527f436c61696d6564206164647265737320686f6c6473206e6f2073686172657300604082015260600190565b6020808252601b908201527f4e6f7420656e6f7567682073686172657320617661696c61626c650000000000604082015260600190565b60208082526025908201527f537562726567697374657273206d75737420626520656d707479207768656e20604082015264185919195960da1b606082015260800190565b6020808252602d908201527f54686572652063616e277420626520666577657220736861726573207468616e60408201526c2076616c696420746f6b656e7360981b606082015260800190565b6020808252600990820152683737ba1037bbb732b960b91b604082015260600190565b60208082526018908201527f596f752063616e6e6f742064656c65746520636c61696d730000000000000000604082015260600190565b90815260200190565b60008482526040602083015261114d6040830184866126e7565b918252602082015260400190565b60ff91909116815260200190565b60008219821115612ca857612ca8612d69565b500190565b6000816000190483118215151615612cc757612cc7612d69565b500290565b600082821015612cde57612cde612d69565b500390565b60005b83811015612cfe578181015183820152602001612ce6565b83811115612d0d576000848401525b50505050565b600281046001821680612d2757607f821691505b60208210811415612d4857634e487b7160e01b600052602260045260246000fd5b50919050565b6000600019821415612d6257612d62612d69565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fd5b80151581146111c757600080fdfea2646970667358221220cfccc31614c8480db952854869e498e1eb8fe77a3f4da69d8aa5678e3d346e6264736f6c63430008010033",
    "sourceMap": "2857:960:6:-:0;;;3106:1:5;3077:30;;3196:1;3165:32;;2952:220:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1971:8:0;:20;;-1:-1:-1;;1971:20:0;;;1042:5:4;:18;;-1:-1:-1;;;;;;1042:18:4;1050:10;1042:18;;;;;1076:39;;3081:7:6;;3090:5;;3097:6;;3105:12;;-1:-1:-1;;;;;1109:5:4;;;;;3696:1:5;;1076:39:4;;3696:1:5;;1076:39:4;3710:23:5::1;3718:7:::0;3727:5;3710:7:::1;:23::i;:::-;3744:28;3759:12:::0;3744:14:::1;:28::i;:::-;3783:14:::0;;::::1;::::0;:5:::1;::::0;:14:::1;::::0;::::1;::::0;::::1;:::i;:::-;-1:-1:-1::0;;;;;3130:34:6::1;::::0;;;;-1:-1:-1;;;;;;3130:34:6;::::1;::::0;-1:-1:-1;2857:960:6;;-1:-1:-1;;;2857:960:6;3813:231:5;1256:5:4;;-1:-1:-1;;;;;1256:5:4;1265:10;1256:19;1248:41;;;;-1:-1:-1;;;1248:41:4;;;;;;;:::i;:::-;;;;;;;;;3902:16:5;;::::1;::::0;:6:::1;::::0;:16:::1;::::0;::::1;::::0;::::1;:::i;:::-;-1:-1:-1::0;3929:12:5;;::::1;::::0;:4:::1;::::0;:12:::1;::::0;::::1;::::0;::::1;:::i;:::-;;3957:79;4008:5;4021:7;3977:57;;;;;;;;;:::i;:::-;;::::0;;-1:-1:-1;;3977:57:5;;::::1;::::0;;;;;;;3957:79:::1;::::0;::::1;:::i;:::-;;;;;;;;3813:231:::0;;:::o;4592:216::-;1256:5:4;;-1:-1:-1;;;;;1256:5:4;1265:10;1256:19;1248:41;;;;-1:-1:-1;;;1248:41:4;;;;;;;:::i;:::-;4698:18:5::1;:16;:18::i;:::-;4679:15;:37;;4671:89;;;;-1:-1:-1::0;;;4671:89:5::1;;;;;;;:::i;:::-;4771:11;:29:::0;4592:216::o;8606:113::-;8698:13;;8655:7;;8682:13;:11;:13::i;:::-;:29;;;;:::i;:::-;8675:36;;8606:113;:::o;2064:100:0:-;2144:12;;2064:100;:::o;2857:960:6:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2857:960:6;;;-1:-1:-1;2857:960:6;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:704:7;;123:3;116:4;108:6;104:17;100:27;90:2;;145:5;138;131:20;90:2;172:13;;-1:-1:-1;;;;;234:10:7;;;231:2;;;247:18;;:::i;:::-;322:2;316:9;290:2;376:13;;-1:-1:-1;;372:22:7;;;396:2;368:31;364:40;352:53;;;420:18;;;440:22;;;417:46;414:2;;;466:18;;:::i;:::-;506:10;502:2;495:22;541:2;533:6;526:18;587:3;580:4;575:2;567:6;563:15;559:26;556:35;553:2;;;608:5;601;594:20;553:2;625:63;685:2;678:4;670:6;666:17;659:4;651:6;647:17;625:63;:::i;:::-;706:6;80:638;-1:-1:-1;;;;;;80:638:7:o;723:1052::-;;;;;;944:3;932:9;923:7;919:23;915:33;912:2;;;966:6;958;951:22;912:2;997:16;;-1:-1:-1;;;;;1042:31:7;;1032:42;;1022:2;;1093:6;1085;1078:22;1022:2;1170;1155:18;;1149:25;1121:5;;-1:-1:-1;;;;;;1223:14:7;;;1220:2;;;1255:6;1247;1240:22;1220:2;1283:63;1338:7;1329:6;1318:9;1314:22;1283:63;:::i;:::-;1273:73;;1392:2;1381:9;1377:18;1371:25;1355:41;;1421:2;1411:8;1408:16;1405:2;;;1442:6;1434;1427:22;1405:2;1470:65;1527:7;1516:8;1505:9;1501:24;1470:65;:::i;:::-;1460:75;;1581:2;1570:9;1566:18;1560:25;1544:41;;1610:2;1600:8;1597:16;1594:2;;;1631:6;1623;1616:22;1594:2;;1659:65;1716:7;1705:8;1694:9;1690:24;1659:65;:::i;:::-;1649:75;;;1764:3;1753:9;1749:19;1743:26;1733:36;;902:873;;;;;;;;:::o;1780:913::-;;-1:-1:-1;;;2287:3:7;2280:25;2334:6;2328:13;2350:62;2405:6;2400:2;2395:3;2391:12;2384:4;2376:6;2372:17;2350:62;:::i;:::-;-1:-1:-1;;;2471:2:7;2431:16;;;2463:11;;;2456:25;2506:13;;2528:63;2506:13;2577:2;2569:11;;2562:4;2550:17;;2528:63;:::i;:::-;-1:-1:-1;;;2651:2:7;2610:17;;;;2643:11;;;2636:24;2684:2;2676:11;;2270:423;-1:-1:-1;;;;2270:423:7:o;2698:383::-;;2847:2;2836:9;2829:21;2879:6;2873:13;2922:6;2917:2;2906:9;2902:18;2895:34;2938:66;2997:6;2992:2;2981:9;2977:18;2972:2;2964:6;2960:15;2938:66;:::i;:::-;3065:2;3044:15;-1:-1:-1;;3040:29:7;3025:45;;;;3072:2;3021:54;;2819:262;-1:-1:-1;;2819:262:7:o;3086:403::-;3288:2;3270:21;;;3327:2;3307:18;;;3300:30;3366:34;3361:2;3346:18;;3339:62;-1:-1:-1;;;3432:2:7;3417:18;;3410:37;3479:3;3464:19;;3260:229::o;3494:332::-;3696:2;3678:21;;;3735:1;3715:18;;;3708:29;-1:-1:-1;;;3768:2:7;3753:18;;3746:39;3817:2;3802:18;;3668:158::o;3831:228::-;;3899:1;3896;3893:8;3890:2;;;-1:-1:-1;;;3924:34:7;;3981:4;3978:1;3971:15;4012:4;3931;3999:18;3890:2;-1:-1:-1;4044:9:7;;3880:179::o;4064:258::-;4136:1;4146:113;4160:6;4157:1;4154:13;4146:113;;;4236:11;;;4230:18;4217:11;;;4210:39;4182:2;4175:10;4146:113;;;4277:6;4274:1;4271:13;4268:2;;;4312:1;4303:6;4298:3;4294:16;4287:27;4268:2;;4117:205;;;:::o;4327:380::-;4412:1;4402:12;;4459:1;4449:12;;;4470:2;;4524:4;4516:6;4512:17;4502:27;;4470:2;4577;4569:6;4566:14;4546:18;4543:38;4540:2;;;4623:10;4618:3;4614:20;4611:1;4604:31;4658:4;4655:1;4648:15;4686:4;4683:1;4676:15;4540:2;;4382:325;;;:::o;4712:127::-;4773:10;4768:3;4764:20;4761:1;4754:31;4804:4;4801:1;4794:15;4828:4;4825:1;4818:15;4744:95;2857:960:6;;;;;;;;;;;;",
    "deployedSourceMap": "2857:960:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2979:27:5;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3085:157:0;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;3397:38:1:-;;;:::i;:::-;;;;;;;:::i;10020:741::-;;;;;;:::i;:::-;;:::i;:::-;;2064:100:0;;;:::i;:::-;;;;;;;:::i;6072:483:5:-;;;;;;:::i;:::-;;:::i;8400:126:1:-;;;;;;:::i;:::-;;:::i;7134:113:5:-;;;;;;:::i;:::-;;:::i;3713:508:0:-;;;;;;:::i;:::-;;:::i;7372:1020:1:-;;;;;;:::i;:::-;;:::i;7491:97:5:-;;;:::i;1892:30:0:-;;;:::i;:::-;;;;;;;:::i;10902:514:1:-;;;;;;:::i;:::-;;:::i;3165:32:5:-;;;:::i;7328:155::-;;;;;;:::i;:::-;;:::i;3077:30::-;;;:::i;8672:136:1:-;;;;;;:::i;:::-;;:::i;5127:313:0:-;;;;;;:::i;:::-;;:::i;8918:117:5:-;;;;;;:::i;:::-;;:::i;11600:225::-;;;;;;:::i;:::-;;:::i;3206:29::-;;;;;;:::i;:::-;;:::i;10278:333::-;;;;;;:::i;:::-;;:::i;3619:86:6:-;;;;;;:::i;:::-;;:::i;3813:231:5:-;;;;;;:::i;:::-;;:::i;8057:301::-;;;;;;:::i;:::-;;:::i;3442:35:1:-;;;:::i;5115:103::-;;;;;;:::i;:::-;;:::i;9956:314:5:-;;;;;;:::i;:::-;;:::i;9407:427:1:-;;;:::i;4816:103:5:-;;;:::i;2227:119:0:-;;;;;;:::i;:::-;;:::i;3815:327:1:-;;;;;;:::i;:::-;;:::i;4052:167:5:-;;;;;;:::i;:::-;;:::i;3012:46:1:-;;;:::i;796:20:4:-;;;:::i;3013:29:5:-;;;:::i;8534:130:1:-;;;;;;:::i;:::-;;:::i;6695:322:5:-;;;;;;:::i;:::-;;:::i;5400:121:1:-;;;;;;:::i;:::-;;:::i;4592:216:5:-;;;;;;:::i;:::-;;:::i;8952:217:1:-;;;;;;:::i;:::-;;:::i;3437:174:6:-;;;;;;:::i;:::-;;:::i;8606:113:5:-;;;:::i;3216:48:1:-;;;;;;:::i;:::-;;:::i;3091:39::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;:::i;5795:269:5:-;;;;;;:::i;:::-;;:::i;3049:19::-;;;:::i;3713:99:6:-;;;;;;:::i;:::-;;:::i;2795:143:0:-;;;;;;:::i;:::-;;:::i;3180:249:6:-;;;:::i;8816:128:1:-;;;;;;:::i;:::-;;:::i;1464:150:4:-;;;;;;:::i;:::-;;:::i;9043:218:5:-;;;;;;:::i;:::-;;:::i;2979:27::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;3085:157:0:-;3159:4;3176:36;3185:10;3197:7;3206:5;3176:8;:36::i;:::-;-1:-1:-1;3230:4:0;3085:157;;;;:::o;3397:38:1:-;;;-1:-1:-1;;;;;3397:38:1;;:::o;10020:741::-;-1:-1:-1;;;;;10097:19:1;;;10076:18;10097:19;;;:6;:19;;;;;;;;;10076:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10238:15;10230:42;;;;-1:-1:-1;;;10230:42:1;;;;;;;:::i;:::-;;;;;;;;;10291:14;;-1:-1:-1;;;;;10291:28:1;10309:10;10291:28;10283:72;;;;-1:-1:-1;;;10283:72:1;;;;;;;:::i;:::-;10407:15;3050:8;10374:5;:15;;;:29;;;;:::i;:::-;:48;;10366:86;;;;-1:-1:-1;;;10366:86:1;;;;;;;:::i;:::-;10482:14;;-1:-1:-1;;;;;10514:19:1;;;10463:16;10514:19;;;:6;:19;;;;;;;;10507:26;;-1:-1:-1;;;;;;10507:26:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;10552:39;;-1:-1:-1;;;10552:39:1;;:17;;;;;;:39;;10482:14;;10580:10;;10552:39;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;10544:78;;;;-1:-1:-1;;;10544:78:1;;;;;;;:::i;:::-;10633:56;10643:11;10656:8;10666:22;10676:11;10666:9;:22::i;:::-;10633:9;:56::i;:::-;10732:8;-1:-1:-1;;;;;10705:48:1;10719:11;-1:-1:-1;;;;;10705:48:1;;10742:10;10705:48;;;;;;:::i;:::-;;;;;;;;10020:741;;;;;:::o;2064:100:0:-;2144:12;;2064:100;:::o;6072:483:5:-;1256:5:4;;-1:-1:-1;;;;;1256:5:4;1265:10;1256:19;1248:41;;;;-1:-1:-1;;;1248:41:4;;;;;;;:::i;:::-;6162:26:5::1;6172:15;6162:9;:26::i;:::-;:31:::0;6154:83:::1;;;;-1:-1:-1::0;;;6154:83:5::1;;;;;;;:::i;:::-;6253:9;6248:300;6270:12;:19:::0;6268:21;::::1;6248:300;;;6334:15;-1:-1:-1::0;;;;;6315:34:5::1;:12;6328:1;6315:15;;;;;;-1:-1:-1::0;;;6315:15:5::1;;;;;;;;;;::::0;;;::::1;::::0;;;::::1;::::0;-1:-1:-1;;;;;6315:15:5::1;:34;6311:226;;;6388:12;6401:19:::0;;:23:::1;::::0;6423:1:::1;::::0;6401:23:::1;:::i;:::-;6388:37;;;;;;-1:-1:-1::0;;;6388:37:5::1;;;;;;;;;;::::0;;;::::1;::::0;;;::::1;::::0;6370:12:::1;:15:::0;;-1:-1:-1;;;;;6388:37:5;;::::1;::::0;6383:1;;6370:15;::::1;;;-1:-1:-1::0;;;6370:15:5::1;;;;;;;;;;;;;;;;;:55;;;;;-1:-1:-1::0;;;;;6370:55:5::1;;;;;-1:-1:-1::0;;;;;6370:55:5::1;;;;;;6444:12;:18;;;;;-1:-1:-1::0;;;6444:18:5::1;;;;;;;;;;::::0;;;::::1;::::0;;;;-1:-1:-1;;6444:18:5;;;;;-1:-1:-1;;;;;;6444:18:5::1;::::0;;;;;6486:35:::1;::::0;::::1;::::0;::::1;::::0;6505:15;;6486:35:::1;:::i;:::-;;;;;;;;6311:226;6291:3:::0;::::1;::::0;::::1;:::i;:::-;;;;6248:300;;;;6072:483:::0;:::o;8400:126:1:-;-1:-1:-1;;;;;8490:19:1;;;8463:7;8490:19;;;:6;:19;;;;;:28;;8400:126;;;;:::o;7134:113:5:-;1256:5:4;;-1:-1:-1;;;;;1256:5:4;1265:10;1256:19;1248:41;;;;-1:-1:-1;;;1248:41:4;;;;;;;:::i;:::-;7218:21:5::1;7231:7;;7218:21;;;;;;;:::i;:::-;;;;;;;;7134:113:::0;;:::o;3713:508:0:-;3811:4;3828:36;3838:6;3846:9;3857:6;3828:9;:36::i;:::-;-1:-1:-1;;;;;3902:19:0;;3875:24;3902:19;;;:11;:19;;;;;;;;3922:10;3902:31;;;;;;;;-1:-1:-1;;;3948:29:0;;3944:248;;;4125:55;4134:6;4142:10;4154:25;4173:6;4154:16;:25;:::i;:::-;4125:8;:55::i;:::-;-1:-1:-1;4209:4:0;;3713:508;-1:-1:-1;;;;3713:508:0:o;7372:1020:1:-;7464:30;7482:11;7464:17;:30::i;:::-;7456:75;;;;-1:-1:-1;;;7456:75:1;;;;;;;:::i;:::-;7542:22;7567:33;7585:14;7567:17;:33::i;:::-;7542:58;;7636:1;7619:14;:18;7611:53;;;;-1:-1:-1;;;7611:53:1;;;;;;;:::i;:::-;7694:10;7675:16;7733:22;7743:11;7733:9;:22::i;:::-;7715:40;-1:-1:-1;7766:18:1;7787:24;7797:14;7715:40;7787:24;:::i;:::-;7766:45;-1:-1:-1;7847:14:1;7881:11;7873:55;;;;-1:-1:-1;;;7873:55:1;;;;;;;:::i;:::-;-1:-1:-1;;;;;7947:19:1;;;;;;:6;:19;;;;;:30;;;:35;7939:71;;;;-1:-1:-1;;;7939:71:1;;;;;;;:::i;:::-;8029:58;;-1:-1:-1;;;8029:58:1;;-1:-1:-1;;;;;8029:21:1;;;;;:58;;8051:8;;8069:4;;8076:10;;8029:58;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8021:97;;;;-1:-1:-1;;;8021:97:1;;;;;;;:::i;:::-;8153:172;;;;;;;;-1:-1:-1;;;;;8153:172:1;;;;;;;;;;;;;8255:15;8153:172;;;;;;;;;;;;;;;8131:19;;;-1:-1:-1;8131:19:1;;;:6;:19;;;;;;;:194;;;;;;;-1:-1:-1;;;;;;8131:194:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8343:41;;;;;;8376:7;;8343:41;:::i;:::-;;;;;;;;7372:1020;;;;;;;:::o;7491:97:5:-;7575:5;;-1:-1:-1;;;;;7575:5:5;7491:97;:::o;1892:30:0:-;;;;;;:::o;10902:514:1:-;10984:17;:15;:17::i;:::-;-1:-1:-1;;;;;10970:31:1;:10;-1:-1:-1;;;;;10970:31:1;;10962:68;;;;-1:-1:-1;;;10962:68:1;;;;;;;:::i;:::-;-1:-1:-1;;;;;11062:19:1;;;11041:18;11062:19;;;:6;:19;;;;;;;;;11041:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11147:48;;;;-1:-1:-1;;;11147:48:1;;;;;;;:::i;:::-;-1:-1:-1;;;;;11213:19:1;;;;;;;:6;:19;;;;;;;;11206:26;;-1:-1:-1;;;;;;11206:26:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;11269:14;;11285:16;;;;11251:51;;-1:-1:-1;;;11251:51:1;;:17;;;;;;:51;;11285:16;;11251:51;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;11243:90;;;;-1:-1:-1;;;11243:90:1;;;;;;;:::i;:::-;11375:5;:14;;;-1:-1:-1;;;;;11349:59:1;11362:11;-1:-1:-1;;;;;11349:59:1;;11391:5;:16;;;11349:59;;;;;;:::i;:::-;;;;;;;;10902:514;;;:::o;3165:32:5:-;;;;:::o;7328:155::-;1256:5:4;;-1:-1:-1;;;;;1256:5:4;1265:10;1256:19;1248:41;;;;-1:-1:-1;;;1248:41:4;;;;;;;:::i;:::-;7426:49:5::1;7458:10;7470:4;7426:31;:49::i;3077:30::-:0;;;;:::o;8672:136:1:-;-1:-1:-1;;;;;8768:19:1;;;8741:7;8768:19;;;:6;:19;;;;;:32;;;;;8672:136::o;5127:313:0:-;5221:4;5238:12;5253:27;5262:9;5273:6;5253:8;:27::i;:::-;5238:42;;5295:7;5291:117;;;5328:68;;-1:-1:-1;;;5328:68:0;;-1:-1:-1;;;;;5328:42:0;;;;;:68;;5371:10;;5383:6;;5391:4;;;;5328:68;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5318:78;;5291:117;5425:7;5127:313;-1:-1:-1;;;;;5127:313:0:o;8918:117:5:-;1256:5:4;;-1:-1:-1;;;;;1256:5:4;1265:10;1256:19;1248:41;;;;-1:-1:-1;;;1248:41:4;;;;;;;:::i;:::-;9000:27:5::1;9006:11;9019:7;9000:5;:27::i;11600:225::-:0;11668:21;11678:10;11668:9;:21::i;:::-;11657:7;:32;;11649:72;;;;-1:-1:-1;;;11649:72:5;;;;;;;:::i;:::-;11732:45;11742:10;11762:4;11769:7;11732:9;:45::i;:::-;11788:29;11802:4;11809:7;11788:5;:29::i;:::-;11600:225;:::o;3206:29::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3206:29:5;;-1:-1:-1;3206:29:5;:::o;10278:333::-;10434:60;10447:11;10460:16;10478:15;10434:12;:60::i;:::-;-1:-1:-1;;;;;10505:39:5;;;10545:11;10558:34;10576:16;10558:15;:34;:::i;:::-;:38;;10595:1;10558:38;:::i;:::-;10598:4;;10505:98;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;10278:333;;;;;;:::o;3619:86:6:-;3672:25;;-1:-1:-1;;;3672:25:6;;-1:-1:-1;;;;;3672:11:6;:16;;;;:25;;3689:7;;3672:25;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3619:86;:::o;3813:231:5:-;1256:5:4;;-1:-1:-1;;;;;1256:5:4;1265:10;1256:19;1248:41;;;;-1:-1:-1;;;1248:41:4;;;;;;;:::i;:::-;3902:16:5;;::::1;::::0;:6:::1;::::0;:16:::1;::::0;::::1;::::0;::::1;:::i;:::-;-1:-1:-1::0;3929:12:5;;::::1;::::0;:4:::1;::::0;:12:::1;::::0;::::1;::::0;::::1;:::i;:::-;;3957:79;4008:5;4021:7;3977:57;;;;;;;;;:::i;:::-;;::::0;;-1:-1:-1;;3977:57:5;;::::1;::::0;;;;;;;3957:79:::1;::::0;::::1;:::i;8057:301::-:0;1256:5:4;;-1:-1:-1;;;;;1256:5:4;1265:10;1256:19;1248:41;;;;-1:-1:-1;;;1248:41:4;;;;;;;:::i;:::-;8170:21:5::1;8194:17;8204:6;8194:9;:17::i;:::-;8170:41;;8240:13;8230:6;:23;;8222:32;;;::::0;::::1;;8282:6;8265:13;;:23;;;;;;;:::i;:::-;;;;;;;;8326:6;-1:-1:-1::0;;;;;8304:46:5::1;;8334:6;8342:7;;8304:46;;;;;;;;:::i;:::-;;;;;;;;1300:1:4;8057:301:5::0;;;;:::o;3442:35:1:-;;;;:::o;5115:103::-;5188:10;5171:28;;;;:16;:28;;;;;:39;;-1:-1:-1;;5171:39:1;5202:8;;5171:39;;;;;;5115:103::o;9956:314:5:-;1256:5:4;;-1:-1:-1;;;;;1256:5:4;1265:10;1256:19;1248:41;;;;-1:-1:-1;;;1248:41:4;;;;;;;:::i;:::-;10105:11:5::1;-1:-1:-1::0;;;;;10085:67:5::1;;10118:16;10136:15;10085:67;;;;;;;:::i;:::-;;;;;;;;10204:58;10210:11:::0;10223:34:::1;10241:16:::0;10223:15;:34:::1;:::i;:::-;:38;::::0;10260:1:::1;10223:38;:::i;:::-;10204:5;:58::i;:::-;9956:314:::0;;;:::o;9407:427:1:-;9458:10;9451:18;;;;:6;:18;;;;;:29;;;:34;9447:380;;9530:10;9502:18;9523;;;:6;:18;;;;;;;;:29;;;;;9592:31;;;;;9639:25;;-1:-1:-1;;;;;;9639:25:1;;;;;;;;;-1:-1:-1;9639:25:1;;;;;;;;;;;;;9687:41;;-1:-1:-1;;;9687:41:1;;9523:29;;-1:-1:-1;;;;;9592:31:1;;;;;;9687:17;;:41;;9530:10;;9523:29;;9687:41;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9679:80;;;;-1:-1:-1;;;9679:80:1;;;;;;;:::i;:::-;9792:10;-1:-1:-1;;;;;9779:36:1;;9804:10;9779:36;;;;;;:::i;:::-;;;;;;;;9447:380;;;9407:427::o;4816:103:5:-;4892:12;:19;4816:103;:::o;2227:119:0:-;-1:-1:-1;;;;;2320:18:0;2293:7;2320:18;;;;;;;;;;;;2227:119::o;3815:327:1:-;3895:7;-1:-1:-1;;;;;3919:31:1;;3945:4;3919:31;3915:220;;;-1:-1:-1;3974:1:1;3967:8;;3915:220;4015:23;;-1:-1:-1;;;;;3997:41:1;;;4015:23;;3997:41;3993:142;;;-1:-1:-1;4062:20:1;;4055:27;;3993:142;-1:-1:-1;4122:1:1;4115:8;;4052:167:5;1256:5:4;;-1:-1:-1;;;;;1256:5:4;1265:10;1256:19;1248:41;;;;-1:-1:-1;;;1248:41:4;;;;;;;:::i;:::-;4120:14:5;;::::1;::::0;:5:::1;::::0;:14:::1;::::0;::::1;::::0;::::1;:::i;:::-;;4150:61;4202:6;4170:39;;;;;;;;:::i;:::-;;::::0;;-1:-1:-1;;4170:39:5;;::::1;::::0;;;;;;;4150:61:::1;::::0;::::1;:::i;:::-;;;;;;;;4052:167:::0;:::o;3012:46:1:-;3050:8;3012:46;:::o;796:20:4:-;;;-1:-1:-1;;;;;796:20:4;;:::o;3013:29:5:-;;;;;;;:::i;8534:130:1:-;-1:-1:-1;;;;;8626:19:1;8599:7;8626:19;;;:6;:19;;;;;:30;;;;8534:130::o;6695:322:5:-;6755:7;6775:15;6793:17;6803:6;6793:9;:17::i;:::-;6775:35;;6826:9;6821:164;6843:12;:19;6841:21;;6821:164;;;6884:13;6907:12;6920:1;6907:15;;;;;;-1:-1:-1;;;6907:15:5;;;;;;;;;;;;;;;;;;;6949:24;;-1:-1:-1;;;6949:24:5;;-1:-1:-1;;;;;6907:15:5;;;;-1:-1:-1;6907:15:5;;6949:16;;:24;;6966:6;;6949:24;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6938:35;;;;:::i;:::-;;;6821:164;6864:3;;;;;:::i;:::-;;;;6821:164;;;-1:-1:-1;7002:7:5;6695:322;-1:-1:-1;;6695:322:5:o;5400:121:1:-;-1:-1:-1;;;;;5489:24:1;5464:4;5489:24;;;:16;:24;;;;;;;;5488:25;;5400:121::o;4592:216:5:-;1256:5:4;;-1:-1:-1;;;;;1256:5:4;1265:10;1256:19;1248:41;;;;-1:-1:-1;;;1248:41:4;;;;;;;:::i;:::-;4698:18:5::1;:16;:18::i;:::-;4679:15;:37;;4671:89;;;;-1:-1:-1::0;;;4671:89:5::1;;;;;;;:::i;:::-;4771:11;:29:::0;4592:216::o;8952:217:1:-;9038:4;9063:33;9078:9;9089:6;9063:14;:33::i;:::-;9055:61;;;;-1:-1:-1;;;9055:61:1;;;;;;;:::i;:::-;9127:12;:10;:12::i;3437:174:6:-;3507:29;;-1:-1:-1;;;3507:29:6;;3489:15;;-1:-1:-1;;;;;3507:11:6;:21;;;;:29;;3529:6;;3507:29;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3547:56;;-1:-1:-1;;;3547:56:6;;3489:47;;-1:-1:-1;;;;;;3547:11:6;:24;;;;:56;;3572:6;;3588:4;;3489:47;;3547:56;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;8606:113:5:-;8655:7;8698:13;;8682;:11;:13::i;:::-;:29;;;;:::i;:::-;8675:36;;8606:113;:::o;3216:48:1:-;;;;;;;;;;;;;;;:::o;3091:39::-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3091:39:1;;;;;;;;:::o;5795:269:5:-;1256:5:4;;-1:-1:-1;;;;;1256:5:4;1265:10;1256:19;1248:41;;;;-1:-1:-1;;;1248:41:4;;;;;;;:::i;:::-;5889:26:5::1;5899:15;5889:9;:26::i;:::-;:31:::0;5881:81:::1;;;;-1:-1:-1::0;;;5881:81:5::1;;;;;;;:::i;:::-;5973:12;:34:::0;;::::1;::::0;::::1;::::0;;-1:-1:-1;5973:34:5;;;;;::::1;::::0;;-1:-1:-1;;;;;;5973:34:5::1;-1:-1:-1::0;;;;;5973:34:5;::::1;;::::0;;6023:33:::1;::::0;::::1;::::0;::::1;::::0;5973:34;;6023:33:::1;:::i;3049:19::-:0;;;;;;;:::i;2795:143:0:-;-1:-1:-1;;;;;2903:18:0;;;2876:7;2903:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;2795:143::o;3180:249:6:-;3244:33;;-1:-1:-1;;;3244:33:6;;3226:15;;-1:-1:-1;;;;;3244:11:6;:21;;;;:33;;3266:10;;3244:33;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3288:60;;-1:-1:-1;;;3288:60:6;;3226:51;;-1:-1:-1;;;;;;3288:11:6;:24;;;;:60;;3313:10;;3333:4;;3226:51;;3288:60;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;3359:25:6;;-1:-1:-1;;;3359:25:6;;-1:-1:-1;;;;;3359:11:6;:16;;;;:25;;3376:7;;3359:25;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3395:26;3401:10;3413:7;3395:5;:26::i;8816:128:1:-;-1:-1:-1;;;;;8907:19:1;8880:7;8907:19;;;:6;:19;;;;;:29;;;;8816:128::o;1464:150:4:-;1256:5;;-1:-1:-1;;;;;1256:5:4;1265:10;1256:19;1248:41;;;;-1:-1:-1;;;1248:41:4;;;;;;;:::i;:::-;1563:5:::1;::::0;1542:37:::1;::::0;-1:-1:-1;;;;;1542:37:4;;::::1;::::0;1563:5:::1;::::0;1542:37:::1;::::0;1563:5:::1;::::0;1542:37:::1;1590:5;:16:::0;;-1:-1:-1;;;;;;1590:16:4::1;-1:-1:-1::0;;;;;1590:16:4;;;::::1;::::0;;;::::1;::::0;;1464:150::o;9043:218:5:-;9156:20;9161:6;9169;9156:4;:20::i;:::-;9187:66;;-1:-1:-1;;;9187:66:5;;-1:-1:-1;;;;;9187:39:5;;;;;:66;;9227:11;;9240:6;;9248:4;;;;9187:66;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;9043:218;;;;;:::o;7067:175:0:-;-1:-1:-1;;;;;7152:18:0;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;;:35;;;7203:31;;;;;7182:5;;7203:31;:::i;4711:330::-;-1:-1:-1;;;;;4817:23:0;;4809:32;;;;;;4854:47;4875:6;4883:9;4894:6;4854:20;:47::i;:::-;-1:-1:-1;;;;;4914:17:0;;:9;:17;;;;;;;;;;:27;;4935:6;;4914:9;:27;;4935:6;;4914:27;:::i;:::-;;;;-1:-1:-1;;;;;;;4952:20:0;;:9;:20;;;;;;;;;;:30;;4976:6;;4952:9;:30;;4976:6;;4952:30;:::i;:::-;;;;;;;;5015:9;-1:-1:-1;;;;;4998:35:0;5007:6;-1:-1:-1;;;;;4998:35:0;;5026:6;4998:35;;;;;;:::i;4598:436:1:-;4687:23;:36;;-1:-1:-1;;;;;;4687:36:1;-1:-1:-1;;;;;4687:36:1;;;;;;;;;;;4738:23;4734:231;;4815:1;4792:20;:24;4734:231;;;4876:1;4869:4;:8;4861:50;;;;-1:-1:-1;;;4861:50:1;;;;;;;:::i;:::-;4926:20;:27;;;4734:231;4980:46;5009:10;5021:4;4980:46;;;;;;;:::i;10619:224:5:-;10735:11;;10725:6;10704:18;:16;:18::i;:::-;:27;;;;:::i;:::-;:42;;10696:100;;;;-1:-1:-1;;;10696:100:5;;;;;;;:::i;:::-;10807:28;10819:7;10828:6;10807:11;:28::i;6367:260:0:-;6443:49;6464:7;6481:1;6485:6;6443:20;:49::i;:::-;6521:6;6505:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;6538:18:0;;:9;:18;;;;;;;;;;:28;;6560:6;;6538:9;:28;;6560:6;;6538:28;:::i;:::-;;;;-1:-1:-1;;6582:37:0;;6608:1;;-1:-1:-1;;;;;6582:37:0;;;;;;;6612:6;;6582:37;:::i;:::-;;;;;;;;6367:260;;:::o;2559:173::-;2645:4;2662:40;2672:10;2684:9;2695:6;2662:9;:40::i;5721:313::-;-1:-1:-1;;;;;5807:23:0;;5799:32;;;;;;5844:51;5873:1;5877:9;5888:6;5844:20;:51::i;:::-;5924:6;5908:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;5941:20:0;;:9;:20;;;;;;;;;;:30;;5965:6;;5941:9;:30;;5965:6;;5941:30;:::i;:::-;;;;-1:-1:-1;;5987:39:0;;-1:-1:-1;;;;;5987:39:0;;;6004:1;;5987:39;;;;6019:6;;5987:39;:::i;-1:-1:-1:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:175:7;84:20;;-1:-1:-1;;;;;133:31:7;;123:42;;113:2;;179:1;176;169:12;194:377;;;311:3;304:4;296:6;292:17;288:27;278:2;;336:8;326;319:26;278:2;-1:-1:-1;366:20:7;;409:18;398:30;;395:2;;;448:8;438;431:26;395:2;492:4;484:6;480:17;468:29;;544:3;537:4;528:6;520;516:19;512:30;509:39;506:2;;;561:1;558;551:12;506:2;268:303;;;;;:::o;576:741::-;;674:3;667:4;659:6;655:17;651:27;641:2;;696:5;689;682:20;641:2;736:6;723:20;762:18;799:2;795;792:10;789:2;;;805:18;;:::i;:::-;880:2;874:9;848:2;934:13;;-1:-1:-1;;930:22:7;;;954:2;926:31;922:40;910:53;;;978:18;;;998:22;;;975:46;972:2;;;1024:18;;:::i;:::-;1064:10;1060:2;1053:22;1099:2;1091:6;1084:18;1145:3;1138:4;1133:2;1125:6;1121:15;1117:26;1114:35;1111:2;;;1166:5;1159;1152:20;1111:2;1234;1227:4;1219:6;1215:17;1208:4;1200:6;1196:17;1183:54;1257:15;;;1274:4;1253:26;1246:41;;;;-1:-1:-1;1261:6:7;631:686;-1:-1:-1;;;631:686:7:o;1322:198::-;;1434:2;1422:9;1413:7;1409:23;1405:32;1402:2;;;1455:6;1447;1440:22;1402:2;1483:31;1504:9;1483:31;:::i;:::-;1473:41;1392:128;-1:-1:-1;;;1392:128:7:o;1525:274::-;;;1654:2;1642:9;1633:7;1629:23;1625:32;1622:2;;;1675:6;1667;1660:22;1622:2;1703:31;1724:9;1703:31;:::i;:::-;1693:41;;1753:40;1789:2;1778:9;1774:18;1753:40;:::i;:::-;1743:50;;1612:187;;;;;:::o;1804:342::-;;;;1950:2;1938:9;1929:7;1925:23;1921:32;1918:2;;;1971:6;1963;1956:22;1918:2;1999:31;2020:9;1999:31;:::i;:::-;1989:41;;2049:40;2085:2;2074:9;2070:18;2049:40;:::i;:::-;2039:50;;2136:2;2125:9;2121:18;2108:32;2098:42;;1908:238;;;;;:::o;2151:652::-;;;;;;2333:3;2321:9;2312:7;2308:23;2304:33;2301:2;;;2355:6;2347;2340:22;2301:2;2383:31;2404:9;2383:31;:::i;:::-;2373:41;;2433:40;2469:2;2458:9;2454:18;2433:40;:::i;:::-;2423:50;;2520:2;2509:9;2505:18;2492:32;2482:42;;2575:2;2564:9;2560:18;2547:32;2602:18;2594:6;2591:30;2588:2;;;2639:6;2631;2624:22;2588:2;2683:60;2735:7;2726:6;2715:9;2711:22;2683:60;:::i;:::-;2291:512;;;;-1:-1:-1;2291:512:7;;-1:-1:-1;2762:8:7;;2657:86;2291:512;-1:-1:-1;;;2291:512:7:o;2808:721::-;;;;;;;3007:3;2995:9;2986:7;2982:23;2978:33;2975:2;;;3029:6;3021;3014:22;2975:2;3057:31;3078:9;3057:31;:::i;:::-;3047:41;;3107:40;3143:2;3132:9;3128:18;3107:40;:::i;:::-;3097:50;;3194:2;3183:9;3179:18;3166:32;3156:42;;3245:2;3234:9;3230:18;3217:32;3207:42;;3300:3;3289:9;3285:19;3272:33;3328:18;3320:6;3317:30;3314:2;;;3365:6;3357;3350:22;3314:2;3409:60;3461:7;3452:6;3441:9;3437:22;3409:60;:::i;:::-;2965:564;;;;-1:-1:-1;2965:564:7;;-1:-1:-1;2965:564:7;;3488:8;;2965:564;-1:-1:-1;;;2965:564:7:o;3534:266::-;;;3663:2;3651:9;3642:7;3638:23;3634:32;3631:2;;;3684:6;3676;3669:22;3631:2;3712:31;3733:9;3712:31;:::i;:::-;3702:41;3790:2;3775:18;;;;3762:32;;-1:-1:-1;;;3621:179:7:o;3805:575::-;;;;;3970:2;3958:9;3949:7;3945:23;3941:32;3938:2;;;3991:6;3983;3976:22;3938:2;4019:31;4040:9;4019:31;:::i;:::-;4009:41;;4097:2;4086:9;4082:18;4069:32;4059:42;;4152:2;4141:9;4137:18;4124:32;4179:18;4171:6;4168:30;4165:2;;;4216:6;4208;4201:22;4165:2;4260:60;4312:7;4303:6;4292:9;4288:22;4260:60;:::i;:::-;3928:452;;;;-1:-1:-1;4339:8:7;-1:-1:-1;;;;3928:452:7:o;4966:334::-;;;;5112:2;5100:9;5091:7;5087:23;5083:32;5080:2;;;5133:6;5125;5118:22;5080:2;5161:31;5182:9;5161:31;:::i;:::-;5151:41;5239:2;5224:18;;5211:32;;-1:-1:-1;5290:2:7;5275:18;;;5262:32;;5070:230;-1:-1:-1;;;5070:230:7:o;5305:253::-;;5414:2;5402:9;5393:7;5389:23;5385:32;5382:2;;;5435:6;5427;5420:22;5382:2;5479:9;5466:23;5498:30;5522:5;5498:30;:::i;5563:257::-;;5683:2;5671:9;5662:7;5658:23;5654:32;5651:2;;;5704:6;5696;5689:22;5651:2;5741:9;5735:16;5760:30;5784:5;5760:30;:::i;5825:432::-;;;5957:2;5945:9;5936:7;5932:23;5928:32;5925:2;;;5978:6;5970;5963:22;5925:2;6023:9;6010:23;6056:18;6048:6;6045:30;6042:2;;;6093:6;6085;6078:22;6042:2;6137:60;6189:7;6180:6;6169:9;6165:22;6137:60;:::i;:::-;6216:8;;6111:86;;-1:-1:-1;5915:342:7;-1:-1:-1;;;;5915:342:7:o;6262:344::-;;6384:2;6372:9;6363:7;6359:23;6355:32;6352:2;;;6405:6;6397;6390:22;6352:2;6450:9;6437:23;6483:18;6475:6;6472:30;6469:2;;;6520:6;6512;6505:22;6469:2;6548:52;6592:7;6583:6;6572:9;6568:22;6548:52;:::i;:::-;6538:62;6342:264;-1:-1:-1;;;;6342:264:7:o;6611:577::-;;;6760:2;6748:9;6739:7;6735:23;6731:32;6728:2;;;6781:6;6773;6766:22;6728:2;6826:9;6813:23;6855:18;6896:2;6888:6;6885:14;6882:2;;;6917:6;6909;6902:22;6882:2;6945:52;6989:7;6980:6;6969:9;6965:22;6945:52;:::i;:::-;6935:62;;7050:2;7039:9;7035:18;7022:32;7006:48;;7079:2;7069:8;7066:16;7063:2;;;7100:6;7092;7085:22;7063:2;;7128:54;7174:7;7163:8;7152:9;7148:24;7128:54;:::i;:::-;7118:64;;;6718:470;;;;;:::o;7193:190::-;;7305:2;7293:9;7284:7;7280:23;7276:32;7273:2;;;7326:6;7318;7311:22;7273:2;-1:-1:-1;7354:23:7;;7263:120;-1:-1:-1;7263:120:7:o;7388:194::-;;7511:2;7499:9;7490:7;7486:23;7482:32;7479:2;;;7532:6;7524;7517:22;7479:2;-1:-1:-1;7560:16:7;;7469:113;-1:-1:-1;7469:113:7:o;7587:270::-;;7677:6;7672:3;7665:19;7729:6;7722:5;7715:4;7710:3;7706:14;7693:43;7781:3;7774:4;7765:6;7760:3;7756:16;7752:27;7745:40;7846:4;7839:2;7835:7;7830:2;7822:6;7818:15;7814:29;7809:3;7805:39;7801:50;7794:57;;7655:202;;;;;:::o;7862:913::-;;-1:-1:-1;;;8369:3:7;8362:25;8416:6;8410:13;8432:62;8487:6;8482:2;8477:3;8473:12;8466:4;8458:6;8454:17;8432:62;:::i;:::-;-1:-1:-1;;;8553:2:7;8513:16;;;8545:11;;;8538:25;8588:13;;8610:63;8588:13;8659:2;8651:11;;8644:4;8632:17;;8610:63;:::i;:::-;-1:-1:-1;;;8733:2:7;8692:17;;;;8725:11;;;8718:24;8766:2;8758:11;;8352:423;-1:-1:-1;;;;8352:423:7:o;8780:430::-;;-1:-1:-1;;;9037:3:7;9030:26;9085:6;9079:13;9101:62;9156:6;9151:2;9146:3;9142:12;9135:4;9127:6;9123:17;9101:62;:::i;:::-;9183:16;;;;9201:2;9179:25;;9020:190;-1:-1:-1;;9020:190:7:o;9215:203::-;-1:-1:-1;;;;;9379:32:7;;;;9361:51;;9349:2;9334:18;;9316:102::o;9423:375::-;-1:-1:-1;;;;;9681:15:7;;;9663:34;;9733:15;;;;9728:2;9713:18;;9706:43;9780:2;9765:18;;9758:34;;;;9613:2;9598:18;;9580:218::o;9803:274::-;-1:-1:-1;;;;;9995:32:7;;;;9977:51;;10059:2;10044:18;;10037:34;9965:2;9950:18;;9932:145::o;10082:414::-;;10324:1;10320;10315:3;10311:11;10307:19;10299:6;10295:32;10284:9;10277:51;10364:6;10359:2;10348:9;10344:18;10337:34;10407:2;10402;10391:9;10387:18;10380:30;10427:63;10486:2;10475:9;10471:18;10463:6;10455;10427:63;:::i;:::-;10419:71;10267:229;-1:-1:-1;;;;;;10267:229:7:o;10501:447::-;-1:-1:-1;;;;;10788:15:7;;;10770:34;;10835:2;10820:18;;10813:34;;;;10878:2;10863:18;;10856:34;;;;10926:15;;;10921:2;10906:18;;10899:43;10719:3;10704:19;;10686:262::o;10953:187::-;11118:14;;11111:22;11093:41;;11081:2;11066:18;;11048:92::o;11145:248::-;;11304:2;11293:9;11286:21;11324:63;11383:2;11372:9;11368:18;11360:6;11352;11324:63;:::i;11398:383::-;;11547:2;11536:9;11529:21;11579:6;11573:13;11622:6;11617:2;11606:9;11602:18;11595:34;11638:66;11697:6;11692:2;11681:9;11677:18;11672:2;11664:6;11660:15;11638:66;:::i;:::-;11765:2;11744:15;-1:-1:-1;;11740:29:7;11725:45;;;;11772:2;11721:54;;11519:262;-1:-1:-1;;11519:262:7:o;11786:355::-;11988:2;11970:21;;;12027:2;12007:18;;;12000:30;12066:33;12061:2;12046:18;;12039:61;12132:2;12117:18;;11960:181::o;12146:349::-;12348:2;12330:21;;;12387:2;12367:18;;;12360:30;12426:27;12421:2;12406:18;;12399:55;12486:2;12471:18;;12320:175::o;12500:339::-;12702:2;12684:21;;;12741:2;12721:18;;;12714:30;-1:-1:-1;;;12775:2:7;12760:18;;12753:45;12830:2;12815:18;;12674:165::o;12844:346::-;13046:2;13028:21;;;13085:2;13065:18;;;13058:30;-1:-1:-1;;;13119:2:7;13104:18;;13097:52;13181:2;13166:18;;13018:172::o;13195:338::-;13397:2;13379:21;;;13436:2;13416:18;;;13409:30;-1:-1:-1;;;13470:2:7;13455:18;;13448:44;13524:2;13509:18;;13369:164::o;13538:403::-;13740:2;13722:21;;;13779:2;13759:18;;;13752:30;13818:34;13813:2;13798:18;;13791:62;-1:-1:-1;;;13884:2:7;13869:18;;13862:37;13931:3;13916:19;;13712:229::o;13946:350::-;14148:2;14130:21;;;14187:2;14167:18;;;14160:30;14226:28;14221:2;14206:18;;14199:56;14287:2;14272:18;;14120:176::o;14301:356::-;14503:2;14485:21;;;14522:18;;;14515:30;14581:34;14576:2;14561:18;;14554:62;14648:2;14633:18;;14475:182::o;14662:353::-;14864:2;14846:21;;;14903:2;14883:18;;;14876:30;14942:31;14937:2;14922:18;;14915:59;15006:2;14991:18;;14836:179::o;15020:403::-;15222:2;15204:21;;;15261:2;15241:18;;;15234:30;15300:34;15295:2;15280:18;;15273:62;-1:-1:-1;;;15366:2:7;15351:18;;15344:37;15413:3;15398:19;;15194:229::o;15428:347::-;15630:2;15612:21;;;15669:2;15649:18;;;15642:30;15708:25;15703:2;15688:18;;15681:53;15766:2;15751:18;;15602:173::o;15780:355::-;15982:2;15964:21;;;16021:2;16001:18;;;15994:30;16060:33;16055:2;16040:18;;16033:61;16126:2;16111:18;;15954:181::o;16140:351::-;16342:2;16324:21;;;16381:2;16361:18;;;16354:30;16420:29;16415:2;16400:18;;16393:57;16482:2;16467:18;;16314:177::o;16496:401::-;16698:2;16680:21;;;16737:2;16717:18;;;16710:30;16776:34;16771:2;16756:18;;16749:62;-1:-1:-1;;;16842:2:7;16827:18;;16820:35;16887:3;16872:19;;16670:227::o;16902:409::-;17104:2;17086:21;;;17143:2;17123:18;;;17116:30;17182:34;17177:2;17162:18;;17155:62;-1:-1:-1;;;17248:2:7;17233:18;;17226:43;17301:3;17286:19;;17076:235::o;17316:332::-;17518:2;17500:21;;;17557:1;17537:18;;;17530:29;-1:-1:-1;;;17590:2:7;17575:18;;17568:39;17639:2;17624:18;;17490:158::o;17653:348::-;17855:2;17837:21;;;17894:2;17874:18;;;17867:30;17933:26;17928:2;17913:18;;17906:54;17992:2;17977:18;;17827:174::o;18006:177::-;18152:25;;;18140:2;18125:18;;18107:76::o;18188:319::-;;18375:6;18364:9;18357:25;18418:2;18413;18402:9;18398:18;18391:30;18438:63;18497:2;18486:9;18482:18;18474:6;18466;18438:63;:::i;18512:248::-;18686:25;;;18742:2;18727:18;;18720:34;18674:2;18659:18;;18641:119::o;18765:184::-;18937:4;18925:17;;;;18907:36;;18895:2;18880:18;;18862:87::o;18954:128::-;;19025:1;19021:6;19018:1;19015:13;19012:2;;;19031:18;;:::i;:::-;-1:-1:-1;19067:9:7;;19002:80::o;19087:168::-;;19193:1;19189;19185:6;19181:14;19178:1;19175:21;19170:1;19163:9;19156:17;19152:45;19149:2;;;19200:18;;:::i;:::-;-1:-1:-1;19240:9:7;;19139:116::o;19260:125::-;;19328:1;19325;19322:8;19319:2;;;19333:18;;:::i;:::-;-1:-1:-1;19370:9:7;;19309:76::o;19390:258::-;19462:1;19472:113;19486:6;19483:1;19480:13;19472:113;;;19562:11;;;19556:18;19543:11;;;19536:39;19508:2;19501:10;19472:113;;;19603:6;19600:1;19597:13;19594:2;;;19638:1;19629:6;19624:3;19620:16;19613:27;19594:2;;19443:205;;;:::o;19653:380::-;19738:1;19728:12;;19785:1;19775:12;;;19796:2;;19850:4;19842:6;19838:17;19828:27;;19796:2;19903;19895:6;19892:14;19872:18;19869:38;19866:2;;;19949:10;19944:3;19940:20;19937:1;19930:31;19984:4;19981:1;19974:15;20012:4;20009:1;20002:15;19866:2;;19708:325;;;:::o;20038:135::-;;-1:-1:-1;;20098:17:7;;20095:2;;;20118:18;;:::i;:::-;-1:-1:-1;20165:1:7;20154:13;;20085:88::o;20178:127::-;20239:10;20234:3;20230:20;20227:1;20220:31;20270:4;20267:1;20260:15;20294:4;20291:1;20284:15;20310:127;20371:10;20366:3;20362:20;20359:1;20352:31;20402:4;20399:1;20392:15;20426:4;20423:1;20416:15;20442:120;20530:5;20523:13;20516:21;20509:5;20506:32;20496:2;;20552:1;20549;20542:12",
    "sourcePath": "c:/Users/luziu/Documents/aktionariat/contracts/src/SharesWithPredecessor.sol",
    "compiler": {
        "name": "solc",
        "version": "0.8.1+commit.df193b15"
    },
    "ast": {
        "absolutePath": "c:/Users/luziu/Documents/aktionariat/contracts/src/SharesWithPredecessor.sol",
        "exportedSymbols": {
            "ERC20": [
                362
            ],
            "ERC20Recoverable": [
                918
            ],
            "IERC20": [
                1011
            ],
            "IERC677Receiver": [
                1025
            ],
            "Ownable": [
                1086
            ],
            "Shares": [
                1648
            ],
            "SharesWithPredecessor": [
                1769
            ]
        },
        "id": 1770,
        "license": "LicenseRef-Aktionariat",
        "nodeType": "SourceUnit",
        "nodes": [
            {
                "id": 1650,
                "literals": [
                    "solidity",
                    ">=",
                    "0.8"
                ],
                "nodeType": "PragmaDirective",
                "src": "1336:22:6"
            },
            {
                "absolutePath": "c:/Users/luziu/Documents/aktionariat/contracts/src/Shares.sol",
                "file": "./Shares.sol",
                "id": 1651,
                "nodeType": "ImportDirective",
                "scope": 1770,
                "sourceUnit": 1649,
                "src": "1362:22:6",
                "symbolAliases": [],
                "unitAlias": ""
            },
            {
                "abstract": false,
                "baseContracts": [
                    {
                        "baseName": {
                            "id": 1653,
                            "name": "Shares",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 1648,
                            "src": "2891:6:6"
                        },
                        "id": 1654,
                        "nodeType": "InheritanceSpecifier",
                        "src": "2891:6:6"
                    }
                ],
                "contractDependencies": [
                    362,
                    918,
                    1011,
                    1086,
                    1648
                ],
                "contractKind": "contract",
                "documentation": {
                    "id": 1652,
                    "nodeType": "StructuredDocumentation",
                    "src": "1388:1467:6",
                    "text": " @title CompanyName AG Shares\n @author Luzius Meisser, luzius@aktionariat.com\n These tokens are uncertified shares (Wertrechte according to the Swiss code of obligations),\n with this smart contract serving as onwership registry (Wertrechtebuch), but not as shareholder\n registry, which is kept separate and run by the company. This is equivalent to the traditional system\n of having physical share certificates kept at home by the shareholders and a shareholder registry run by\n the company. Just like with physical certificates, the owners of the tokens are the owners of the shares.\n However, in order to exercise their rights (for example receive a dividend), shareholders must register\n with the company. For example, in case the company pays out a dividend to a previous shareholder because\n the current shareholder did not register, the company cannot be held liable for paying the dividend to\n the \"wrong\" shareholder. In relation to the company, only the registered shareholders count as such.\n Registration requires setting up an account with ledgy.com providing your name and address and proving\n ownership over your addresses.\n @notice The main addition is a functionality that allows the user to claim that the key for a certain address is lost.\n @notice In order to prevent malicious attempts, a collateral needs to be posted.\n @notice The contract owner can delete claims in case of disputes."
                },
                "fullyImplemented": true,
                "id": 1769,
                "linearizedBaseContracts": [
                    1769,
                    1648,
                    1086,
                    918,
                    362,
                    1011
                ],
                "name": "SharesWithPredecessor",
                "nodeType": "ContractDefinition",
                "nodes": [
                    {
                        "constant": false,
                        "id": 1657,
                        "mutability": "immutable",
                        "name": "predecessor",
                        "nodeType": "VariableDeclaration",
                        "scope": 1769,
                        "src": "2907:36:6",
                        "stateVariable": true,
                        "storageLocation": "default",
                        "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Shares_$1648",
                            "typeString": "contract Shares"
                        },
                        "typeName": {
                            "id": 1656,
                            "nodeType": "UserDefinedTypeName",
                            "pathNode": {
                                "id": 1655,
                                "name": "Shares",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 1648,
                                "src": "2907:6:6"
                            },
                            "referencedDeclaration": 1648,
                            "src": "2907:6:6",
                            "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Shares_$1648",
                                "typeString": "contract Shares"
                            }
                        },
                        "visibility": "private"
                    },
                    {
                        "body": {
                            "id": 1682,
                            "nodeType": "Block",
                            "src": "3119:53:6",
                            "statements": [
                                {
                                    "expression": {
                                        "id": 1680,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftHandSide": {
                                            "id": 1676,
                                            "name": "predecessor",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1657,
                                            "src": "3130:11:6",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_contract$_Shares_$1648",
                                                "typeString": "contract Shares"
                                            }
                                        },
                                        "nodeType": "Assignment",
                                        "operator": "=",
                                        "rightHandSide": {
                                            "arguments": [
                                                {
                                                    "id": 1678,
                                                    "name": "_predecessor",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 1659,
                                                    "src": "3151:12:6",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_address",
                                                        "typeString": "address"
                                                    }
                                                }
                                            ],
                                            "expression": {
                                                "argumentTypes": [
                                                    {
                                                        "typeIdentifier": "t_address",
                                                        "typeString": "address"
                                                    }
                                                ],
                                                "id": 1677,
                                                "name": "Shares",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 1648,
                                                "src": "3144:6:6",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_type$_t_contract$_Shares_$1648_$",
                                                    "typeString": "type(contract Shares)"
                                                }
                                            },
                                            "id": 1679,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "kind": "typeConversion",
                                            "lValueRequested": false,
                                            "names": [],
                                            "nodeType": "FunctionCall",
                                            "src": "3144:20:6",
                                            "tryCall": false,
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_contract$_Shares_$1648",
                                                "typeString": "contract Shares"
                                            }
                                        },
                                        "src": "3130:34:6",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_Shares_$1648",
                                            "typeString": "contract Shares"
                                        }
                                    },
                                    "id": 1681,
                                    "nodeType": "ExpressionStatement",
                                    "src": "3130:34:6"
                                }
                            ]
                        },
                        "id": 1683,
                        "implemented": true,
                        "kind": "constructor",
                        "modifiers": [
                            {
                                "arguments": [
                                    {
                                        "id": 1670,
                                        "name": "_symbol",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1661,
                                        "src": "3081:7:6",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_string_memory_ptr",
                                            "typeString": "string memory"
                                        }
                                    },
                                    {
                                        "id": 1671,
                                        "name": "_name",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1663,
                                        "src": "3090:5:6",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_string_memory_ptr",
                                            "typeString": "string memory"
                                        }
                                    },
                                    {
                                        "id": 1672,
                                        "name": "_terms",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1665,
                                        "src": "3097:6:6",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_string_memory_ptr",
                                            "typeString": "string memory"
                                        }
                                    },
                                    {
                                        "id": 1673,
                                        "name": "_totalShares",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1667,
                                        "src": "3105:12:6",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    }
                                ],
                                "id": 1674,
                                "modifierName": {
                                    "id": 1669,
                                    "name": "Shares",
                                    "nodeType": "IdentifierPath",
                                    "referencedDeclaration": 1648,
                                    "src": "3074:6:6"
                                },
                                "nodeType": "ModifierInvocation",
                                "src": "3074:44:6"
                            }
                        ],
                        "name": "",
                        "nodeType": "FunctionDefinition",
                        "parameters": {
                            "id": 1668,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 1659,
                                    "mutability": "mutable",
                                    "name": "_predecessor",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 1683,
                                    "src": "2964:20:6",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                    },
                                    "typeName": {
                                        "id": 1658,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "2964:7:6",
                                        "stateMutability": "nonpayable",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 1661,
                                    "mutability": "mutable",
                                    "name": "_symbol",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 1683,
                                    "src": "2986:21:6",
                                    "stateVariable": false,
                                    "storageLocation": "memory",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_string_memory_ptr",
                                        "typeString": "string"
                                    },
                                    "typeName": {
                                        "id": 1660,
                                        "name": "string",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "2986:6:6",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_string_storage_ptr",
                                            "typeString": "string"
                                        }
                                    },
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 1663,
                                    "mutability": "mutable",
                                    "name": "_name",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 1683,
                                    "src": "3009:19:6",
                                    "stateVariable": false,
                                    "storageLocation": "memory",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_string_memory_ptr",
                                        "typeString": "string"
                                    },
                                    "typeName": {
                                        "id": 1662,
                                        "name": "string",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "3009:6:6",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_string_storage_ptr",
                                            "typeString": "string"
                                        }
                                    },
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 1665,
                                    "mutability": "mutable",
                                    "name": "_terms",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 1683,
                                    "src": "3030:20:6",
                                    "stateVariable": false,
                                    "storageLocation": "memory",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_string_memory_ptr",
                                        "typeString": "string"
                                    },
                                    "typeName": {
                                        "id": 1664,
                                        "name": "string",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "3030:6:6",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_string_storage_ptr",
                                            "typeString": "string"
                                        }
                                    },
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 1667,
                                    "mutability": "mutable",
                                    "name": "_totalShares",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 1683,
                                    "src": "3052:20:6",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                    },
                                    "typeName": {
                                        "id": 1666,
                                        "name": "uint256",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "3052:7:6",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "2963:110:6"
                        },
                        "returnParameters": {
                            "id": 1675,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "3119:0:6"
                        },
                        "scope": 1769,
                        "src": "2952:220:6",
                        "stateMutability": "nonpayable",
                        "virtual": false,
                        "visibility": "public"
                    },
                    {
                        "body": {
                            "id": 1718,
                            "nodeType": "Block",
                            "src": "3215:214:6",
                            "statements": [
                                {
                                    "assignments": [
                                        1687
                                    ],
                                    "declarations": [
                                        {
                                            "constant": false,
                                            "id": 1687,
                                            "mutability": "mutable",
                                            "name": "balance",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 1718,
                                            "src": "3226:15:6",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            },
                                            "typeName": {
                                                "id": 1686,
                                                "name": "uint256",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "3226:7:6",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "id": 1693,
                                    "initialValue": {
                                        "arguments": [
                                            {
                                                "expression": {
                                                    "id": 1690,
                                                    "name": "msg",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 4294967281,
                                                    "src": "3266:3:6",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_magic_message",
                                                        "typeString": "msg"
                                                    }
                                                },
                                                "id": 1691,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberName": "sender",
                                                "nodeType": "MemberAccess",
                                                "src": "3266:10:6",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            ],
                                            "expression": {
                                                "id": 1688,
                                                "name": "predecessor",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 1657,
                                                "src": "3244:11:6",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_contract$_Shares_$1648",
                                                    "typeString": "contract Shares"
                                                }
                                            },
                                            "id": 1689,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "balanceOf",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 55,
                                            "src": "3244:21:6",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                                "typeString": "function (address) view external returns (uint256)"
                                            }
                                        },
                                        "id": 1692,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "3244:33:6",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "nodeType": "VariableDeclarationStatement",
                                    "src": "3226:51:6"
                                },
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "expression": {
                                                    "id": 1697,
                                                    "name": "msg",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 4294967281,
                                                    "src": "3313:3:6",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_magic_message",
                                                        "typeString": "msg"
                                                    }
                                                },
                                                "id": 1698,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberName": "sender",
                                                "nodeType": "MemberAccess",
                                                "src": "3313:10:6",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            {
                                                "arguments": [
                                                    {
                                                        "id": 1701,
                                                        "name": "this",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 4294967268,
                                                        "src": "3333:4:6",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_contract$_SharesWithPredecessor_$1769",
                                                            "typeString": "contract SharesWithPredecessor"
                                                        }
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_contract$_SharesWithPredecessor_$1769",
                                                            "typeString": "contract SharesWithPredecessor"
                                                        }
                                                    ],
                                                    "id": 1700,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "lValueRequested": false,
                                                    "nodeType": "ElementaryTypeNameExpression",
                                                    "src": "3325:7:6",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_type$_t_address_$",
                                                        "typeString": "type(address)"
                                                    },
                                                    "typeName": {
                                                        "id": 1699,
                                                        "name": "address",
                                                        "nodeType": "ElementaryTypeName",
                                                        "src": "3325:7:6",
                                                        "typeDescriptions": {}
                                                    }
                                                },
                                                "id": 1702,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "typeConversion",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "3325:13:6",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            {
                                                "id": 1703,
                                                "name": "balance",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 1687,
                                                "src": "3340:7:6",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                },
                                                {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                },
                                                {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            ],
                                            "expression": {
                                                "id": 1694,
                                                "name": "predecessor",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 1657,
                                                "src": "3288:11:6",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_contract$_Shares_$1648",
                                                    "typeString": "contract Shares"
                                                }
                                            },
                                            "id": 1696,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "transferFrom",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 163,
                                            "src": "3288:24:6",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                                                "typeString": "function (address,address,uint256) external returns (bool)"
                                            }
                                        },
                                        "id": 1704,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "3288:60:6",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                        }
                                    },
                                    "id": 1705,
                                    "nodeType": "ExpressionStatement",
                                    "src": "3288:60:6"
                                },
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "id": 1709,
                                                "name": "balance",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 1687,
                                                "src": "3376:7:6",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            ],
                                            "expression": {
                                                "id": 1706,
                                                "name": "predecessor",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 1657,
                                                "src": "3359:11:6",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_contract$_Shares_$1648",
                                                    "typeString": "contract Shares"
                                                }
                                            },
                                            "id": 1708,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "burn",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 1636,
                                            "src": "3359:16:6",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                                                "typeString": "function (uint256) external"
                                            }
                                        },
                                        "id": 1710,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "3359:25:6",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 1711,
                                    "nodeType": "ExpressionStatement",
                                    "src": "3359:25:6"
                                },
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "expression": {
                                                    "id": 1713,
                                                    "name": "msg",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 4294967281,
                                                    "src": "3401:3:6",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_magic_message",
                                                        "typeString": "msg"
                                                    }
                                                },
                                                "id": 1714,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberName": "sender",
                                                "nodeType": "MemberAccess",
                                                "src": "3401:10:6",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            {
                                                "id": 1715,
                                                "name": "balance",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 1687,
                                                "src": "3413:7:6",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                },
                                                {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            ],
                                            "id": 1712,
                                            "name": "_mint",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [
                                                1601
                                            ],
                                            "referencedDeclaration": 1601,
                                            "src": "3395:5:6",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                                                "typeString": "function (address,uint256)"
                                            }
                                        },
                                        "id": 1716,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "3395:26:6",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 1717,
                                    "nodeType": "ExpressionStatement",
                                    "src": "3395:26:6"
                                }
                            ]
                        },
                        "functionSelector": "e9850eb3",
                        "id": 1719,
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [],
                        "name": "convertOldShares",
                        "nodeType": "FunctionDefinition",
                        "parameters": {
                            "id": 1684,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "3205:2:6"
                        },
                        "returnParameters": {
                            "id": 1685,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "3215:0:6"
                        },
                        "scope": 1769,
                        "src": "3180:249:6",
                        "stateMutability": "nonpayable",
                        "virtual": false,
                        "visibility": "public"
                    },
                    {
                        "body": {
                            "id": 1742,
                            "nodeType": "Block",
                            "src": "3478:133:6",
                            "statements": [
                                {
                                    "assignments": [
                                        1725
                                    ],
                                    "declarations": [
                                        {
                                            "constant": false,
                                            "id": 1725,
                                            "mutability": "mutable",
                                            "name": "balance",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 1742,
                                            "src": "3489:15:6",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            },
                                            "typeName": {
                                                "id": 1724,
                                                "name": "uint256",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "3489:7:6",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "id": 1730,
                                    "initialValue": {
                                        "arguments": [
                                            {
                                                "id": 1728,
                                                "name": "sender",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 1721,
                                                "src": "3529:6:6",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            ],
                                            "expression": {
                                                "id": 1726,
                                                "name": "predecessor",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 1657,
                                                "src": "3507:11:6",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_contract$_Shares_$1648",
                                                    "typeString": "contract Shares"
                                                }
                                            },
                                            "id": 1727,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "balanceOf",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 55,
                                            "src": "3507:21:6",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                                "typeString": "function (address) view external returns (uint256)"
                                            }
                                        },
                                        "id": 1729,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "3507:29:6",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "nodeType": "VariableDeclarationStatement",
                                    "src": "3489:47:6"
                                },
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "id": 1734,
                                                "name": "sender",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 1721,
                                                "src": "3572:6:6",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            {
                                                "arguments": [
                                                    {
                                                        "id": 1737,
                                                        "name": "this",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 4294967268,
                                                        "src": "3588:4:6",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_contract$_SharesWithPredecessor_$1769",
                                                            "typeString": "contract SharesWithPredecessor"
                                                        }
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_contract$_SharesWithPredecessor_$1769",
                                                            "typeString": "contract SharesWithPredecessor"
                                                        }
                                                    ],
                                                    "id": 1736,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "lValueRequested": false,
                                                    "nodeType": "ElementaryTypeNameExpression",
                                                    "src": "3580:7:6",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_type$_t_address_$",
                                                        "typeString": "type(address)"
                                                    },
                                                    "typeName": {
                                                        "id": 1735,
                                                        "name": "address",
                                                        "nodeType": "ElementaryTypeName",
                                                        "src": "3580:7:6",
                                                        "typeDescriptions": {}
                                                    }
                                                },
                                                "id": 1738,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "typeConversion",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "3580:13:6",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            {
                                                "id": 1739,
                                                "name": "balance",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 1725,
                                                "src": "3595:7:6",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                },
                                                {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                },
                                                {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            ],
                                            "expression": {
                                                "id": 1731,
                                                "name": "predecessor",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 1657,
                                                "src": "3547:11:6",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_contract$_Shares_$1648",
                                                    "typeString": "contract Shares"
                                                }
                                            },
                                            "id": 1733,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "transferFrom",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 163,
                                            "src": "3547:24:6",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                                                "typeString": "function (address,address,uint256) external returns (bool)"
                                            }
                                        },
                                        "id": 1740,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "3547:56:6",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                        }
                                    },
                                    "id": 1741,
                                    "nodeType": "ExpressionStatement",
                                    "src": "3547:56:6"
                                }
                            ]
                        },
                        "functionSelector": "ab9b5945",
                        "id": 1743,
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [],
                        "name": "convert1",
                        "nodeType": "FunctionDefinition",
                        "parameters": {
                            "id": 1722,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 1721,
                                    "mutability": "mutable",
                                    "name": "sender",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 1743,
                                    "src": "3455:14:6",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                    },
                                    "typeName": {
                                        "id": 1720,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "3455:7:6",
                                        "stateMutability": "nonpayable",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "3454:16:6"
                        },
                        "returnParameters": {
                            "id": 1723,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "3478:0:6"
                        },
                        "scope": 1769,
                        "src": "3437:174:6",
                        "stateMutability": "nonpayable",
                        "virtual": false,
                        "visibility": "public"
                    },
                    {
                        "body": {
                            "id": 1754,
                            "nodeType": "Block",
                            "src": "3661:44:6",
                            "statements": [
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "id": 1751,
                                                "name": "balance",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 1745,
                                                "src": "3689:7:6",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            ],
                                            "expression": {
                                                "id": 1748,
                                                "name": "predecessor",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 1657,
                                                "src": "3672:11:6",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_contract$_Shares_$1648",
                                                    "typeString": "contract Shares"
                                                }
                                            },
                                            "id": 1750,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "burn",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 1636,
                                            "src": "3672:16:6",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                                                "typeString": "function (uint256) external"
                                            }
                                        },
                                        "id": 1752,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "3672:25:6",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 1753,
                                    "nodeType": "ExpressionStatement",
                                    "src": "3672:25:6"
                                }
                            ]
                        },
                        "functionSelector": "58b91819",
                        "id": 1755,
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [],
                        "name": "convert2",
                        "nodeType": "FunctionDefinition",
                        "parameters": {
                            "id": 1746,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 1745,
                                    "mutability": "mutable",
                                    "name": "balance",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 1755,
                                    "src": "3637:15:6",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                    },
                                    "typeName": {
                                        "id": 1744,
                                        "name": "uint256",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "3637:7:6",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "3636:17:6"
                        },
                        "returnParameters": {
                            "id": 1747,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "3661:0:6"
                        },
                        "scope": 1769,
                        "src": "3619:86:6",
                        "stateMutability": "nonpayable",
                        "virtual": false,
                        "visibility": "public"
                    },
                    {
                        "body": {
                            "id": 1767,
                            "nodeType": "Block",
                            "src": "3771:41:6",
                            "statements": [
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "id": 1763,
                                                "name": "sender",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 1757,
                                                "src": "3788:6:6",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            {
                                                "id": 1764,
                                                "name": "balance",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 1759,
                                                "src": "3796:7:6",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                },
                                                {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            ],
                                            "id": 1762,
                                            "name": "_mint",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [
                                                1601
                                            ],
                                            "referencedDeclaration": 1601,
                                            "src": "3782:5:6",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                                                "typeString": "function (address,uint256)"
                                            }
                                        },
                                        "id": 1765,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "3782:22:6",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 1766,
                                    "nodeType": "ExpressionStatement",
                                    "src": "3782:22:6"
                                }
                            ]
                        },
                        "functionSelector": "dc2aafec",
                        "id": 1768,
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [],
                        "name": "convert3",
                        "nodeType": "FunctionDefinition",
                        "parameters": {
                            "id": 1760,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 1757,
                                    "mutability": "mutable",
                                    "name": "sender",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 1768,
                                    "src": "3731:14:6",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                    },
                                    "typeName": {
                                        "id": 1756,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "3731:7:6",
                                        "stateMutability": "nonpayable",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 1759,
                                    "mutability": "mutable",
                                    "name": "balance",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 1768,
                                    "src": "3747:15:6",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                    },
                                    "typeName": {
                                        "id": 1758,
                                        "name": "uint256",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "3747:7:6",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "3730:33:6"
                        },
                        "returnParameters": {
                            "id": 1761,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "3771:0:6"
                        },
                        "scope": 1769,
                        "src": "3713:99:6",
                        "stateMutability": "nonpayable",
                        "virtual": false,
                        "visibility": "public"
                    }
                ],
                "scope": 1770,
                "src": "2857:960:6"
            }
        ],
        "src": "1336:2481:6"
    },
    "functionHashes": {
        "allowance(address,address)": "dd62ed3e",
        "announcement(string)": "1f0f06aa",
        "approve(address,uint256)": "095ea7b3",
        "balanceOf(address)": "70a08231",
        "balanceOfDeep(address)": "a26cf59f",
        "burn(uint256)": "42966c68",
        "claimPeriod()": "7dc2cd98",
        "claims(address)": "c6788bdd",
        "clearClaim()": "6b03ed5f",
        "convert1(address)": "ab9b5945",
        "convert2(uint256)": "58b91819",
        "convert3(address,uint256)": "dc2aafec",
        "convertOldShares()": "e9850eb3",
        "countSubregisters()": "6e3baaf5",
        "customCollateralAddress()": "0c6f0e5d",
        "customCollateralRate()": "60918117",
        "decimals()": "313ce567",
        "declareInvalid(address,uint256,string)": "5d6624b7",
        "declareLost(address,address)": "26773ddd",
        "deleteClaim(address)": "32a7ae95",
        "getClaimDeleter()": "2a0a4ed5",
        "getClaimant(address)": "1e3b9de5",
        "getCollateral(address)": "9b56d6c9",
        "getCollateralRate(address)": "77e071ad",
        "getCollateralType(address)": "3bcc45ba",
        "getTimeStamp(address)": "eb470ebf",
        "invalidTokens()": "37a8129c",
        "isRecoveryEnabled(address)": "a3ec1883",
        "mint(address,uint256)": "40c10f19",
        "mintAndCall(address,address,uint256,bytes)": "f54fc060",
        "mintNumbered(address,uint256,uint256)": "69f721e2",
        "mintNumberedAndCall(address,address,uint256,uint256,bytes)": "551ad632",
        "name()": "06fdde03",
        "owner()": "8da5cb5b",
        "recognizeSubRegister(address)": "cc51e143",
        "recover(address)": "0cd865ec",
        "recoveryDisabled(address)": "b40e80d1",
        "removeSubRegister(address)": "1993982d",
        "setCustomClaimCollateral(address,uint256)": "3a1cdf32",
        "setName(string,string)": "5c707f07",
        "setRecoverable(bool)": "6427ed97",
        "setTerms(string)": "78f86afc",
        "setTotalShares(uint256)": "a77384c1",
        "subregisters(uint256)": "4ae5e630",
        "symbol()": "95d89b41",
        "terms()": "d5025625",
        "totalShares()": "3a98ef39",
        "totalSupply()": "18160ddd",
        "totalValidSupply()": "b0d04c7a",
        "transfer(address,uint256)": "a9059cbb",
        "transferAndCall(address,uint256,bytes)": "4000aea0",
        "transferFrom(address,address,uint256)": "23b872dd",
        "transferOwnership(address)": "f2fde38b"
    },
    "gasEstimates": {
        "creation": {
            "codeDepositCost": "2347400",
            "executionCost": "infinite",
            "totalCost": "infinite"
        },
        "external": {
            "allowance(address,address)": "infinite",
            "announcement(string)": "infinite",
            "approve(address,uint256)": "22555",
            "balanceOf(address)": "1407",
            "balanceOfDeep(address)": "infinite",
            "burn(uint256)": "infinite",
            "claimPeriod()": "318",
            "claims(address)": "3934",
            "clearClaim()": "infinite",
            "convert1(address)": "infinite",
            "convert2(uint256)": "infinite",
            "convert3(address,uint256)": "infinite",
            "convertOldShares()": "infinite",
            "countSubregisters()": "1140",
            "customCollateralAddress()": "1161",
            "customCollateralRate()": "1161",
            "decimals()": "1158",
            "declareInvalid(address,uint256,string)": "infinite",
            "declareLost(address,address)": "infinite",
            "deleteClaim(address)": "infinite",
            "getClaimDeleter()": "1160",
            "getClaimant(address)": "infinite",
            "getCollateral(address)": "1365",
            "getCollateralRate(address)": "infinite",
            "getCollateralType(address)": "1421",
            "getTimeStamp(address)": "1364",
            "invalidTokens()": "1074",
            "isRecoveryEnabled(address)": "1418",
            "mint(address,uint256)": "infinite",
            "mintAndCall(address,address,uint256,bytes)": "infinite",
            "mintNumbered(address,uint256,uint256)": "infinite",
            "mintNumberedAndCall(address,address,uint256,uint256,bytes)": "infinite",
            "name()": "infinite",
            "owner()": "1182",
            "recognizeSubRegister(address)": "45021",
            "recover(address)": "infinite",
            "recoveryDisabled(address)": "1353",
            "removeSubRegister(address)": "infinite",
            "setCustomClaimCollateral(address,uint256)": "43582",
            "setName(string,string)": "infinite",
            "setRecoverable(bool)": "21234",
            "setTerms(string)": "infinite",
            "setTotalShares(uint256)": "22890",
            "subregisters(uint256)": "2128",
            "symbol()": "infinite",
            "terms()": "infinite",
            "totalShares()": "1118",
            "totalSupply()": "1163",
            "totalValidSupply()": "2000",
            "transfer(address,uint256)": "infinite",
            "transferAndCall(address,uint256,bytes)": "infinite",
            "transferFrom(address,address,uint256)": "infinite",
            "transferOwnership(address)": "24475"
        }
    }
}