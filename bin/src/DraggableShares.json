{
    "contractName": "DraggableShares",
    "abi": [
        {
            "inputs": [
                {
                    "internalType": "string",
                    "name": "_terms",
                    "type": "string"
                },
                {
                    "internalType": "address",
                    "name": "offerFactory",
                    "type": "address"
                },
                {
                    "internalType": "address",
                    "name": "wrappedToken",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "quorum",
                    "type": "uint256"
                }
            ],
            "stateMutability": "nonpayable",
            "type": "constructor"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "owner",
                    "type": "address"
                },
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "spender",
                    "type": "address"
                },
                {
                    "indexed": false,
                    "internalType": "uint256",
                    "name": "value",
                    "type": "uint256"
                }
            ],
            "name": "Approval",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "lostAddress",
                    "type": "address"
                },
                {
                    "indexed": false,
                    "internalType": "uint256",
                    "name": "collateral",
                    "type": "uint256"
                }
            ],
            "name": "ClaimCleared",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "lostAddress",
                    "type": "address"
                },
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "claimant",
                    "type": "address"
                },
                {
                    "indexed": false,
                    "internalType": "uint256",
                    "name": "collateral",
                    "type": "uint256"
                }
            ],
            "name": "ClaimDeleted",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "lostAddress",
                    "type": "address"
                },
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "claimant",
                    "type": "address"
                },
                {
                    "indexed": false,
                    "internalType": "uint256",
                    "name": "balance",
                    "type": "uint256"
                }
            ],
            "name": "ClaimMade",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": false,
                    "internalType": "uint256",
                    "name": "newClaimPeriodInDays",
                    "type": "uint256"
                }
            ],
            "name": "ClaimPeriodChanged",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "lostAddress",
                    "type": "address"
                },
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "claimant",
                    "type": "address"
                },
                {
                    "indexed": false,
                    "internalType": "uint256",
                    "name": "collateral",
                    "type": "uint256"
                }
            ],
            "name": "ClaimResolved",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": false,
                    "internalType": "address",
                    "name": "newCustomCollateralAddress",
                    "type": "address"
                },
                {
                    "indexed": false,
                    "internalType": "uint256",
                    "name": "newCustomCollareralRate",
                    "type": "uint256"
                }
            ],
            "name": "CustomClaimCollateralChanged",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": false,
                    "internalType": "address",
                    "name": "newContractAddress",
                    "type": "address"
                }
            ],
            "name": "MigrationSucceeded",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "from",
                    "type": "address"
                },
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "to",
                    "type": "address"
                },
                {
                    "indexed": false,
                    "internalType": "uint256",
                    "name": "value",
                    "type": "uint256"
                }
            ],
            "name": "Transfer",
            "type": "event"
        },
        {
            "inputs": [],
            "name": "VALIDITY_PERIOD",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "VOTING_PERIOD",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "owner",
                    "type": "address"
                },
                {
                    "internalType": "address",
                    "name": "spender",
                    "type": "address"
                }
            ],
            "name": "allowance",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "spender",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "value",
                    "type": "uint256"
                }
            ],
            "name": "approve",
            "outputs": [
                {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool"
                }
            ],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "account",
                    "type": "address"
                }
            ],
            "name": "balanceOf",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "uint256",
                    "name": "amount",
                    "type": "uint256"
                }
            ],
            "name": "burn",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "claimPeriod",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address"
                }
            ],
            "name": "claims",
            "outputs": [
                {
                    "internalType": "address",
                    "name": "claimant",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "collateral",
                    "type": "uint256"
                },
                {
                    "internalType": "uint256",
                    "name": "timestamp",
                    "type": "uint256"
                },
                {
                    "internalType": "address",
                    "name": "currencyUsed",
                    "type": "address"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "clearClaim",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "customCollateralAddress",
            "outputs": [
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "customCollateralRate",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "decimals",
            "outputs": [
                {
                    "internalType": "uint8",
                    "name": "",
                    "type": "uint8"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "collateralType",
                    "type": "address"
                },
                {
                    "internalType": "address",
                    "name": "lostAddress",
                    "type": "address"
                }
            ],
            "name": "declareLost",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "spender",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "subtractedValue",
                    "type": "uint256"
                }
            ],
            "name": "decreaseAllowance",
            "outputs": [
                {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool"
                }
            ],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "lostAddress",
                    "type": "address"
                }
            ],
            "name": "deleteClaim",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "buyer",
                    "type": "address"
                },
                {
                    "internalType": "address",
                    "name": "currency",
                    "type": "address"
                }
            ],
            "name": "drag",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "factory",
            "outputs": [
                {
                    "internalType": "contract IOfferFactory",
                    "name": "",
                    "type": "address"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "getClaimDeleter",
            "outputs": [
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "lostAddress",
                    "type": "address"
                }
            ],
            "name": "getClaimant",
            "outputs": [
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "lostAddress",
                    "type": "address"
                }
            ],
            "name": "getCollateral",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "collateralType",
                    "type": "address"
                }
            ],
            "name": "getCollateralRate",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "lostAddress",
                    "type": "address"
                }
            ],
            "name": "getCollateralType",
            "outputs": [
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "lostAddress",
                    "type": "address"
                }
            ],
            "name": "getTimeStamp",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "spender",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "addedValue",
                    "type": "uint256"
                }
            ],
            "name": "increaseAllowance",
            "outputs": [
                {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool"
                }
            ],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "isBinding",
            "outputs": [
                {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "target",
                    "type": "address"
                }
            ],
            "name": "isRecoveryEnabled",
            "outputs": [
                {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "bytes32",
                    "name": "salt",
                    "type": "bytes32"
                },
                {
                    "internalType": "uint256",
                    "name": "pricePerShare",
                    "type": "uint256"
                },
                {
                    "internalType": "address",
                    "name": "currency",
                    "type": "address"
                }
            ],
            "name": "makeAcquisitionOffer",
            "outputs": [],
            "stateMutability": "payable",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "migrate",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "name",
            "outputs": [
                {
                    "internalType": "string",
                    "name": "",
                    "type": "string"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "notifyOfferEnded",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "offer",
            "outputs": [
                {
                    "internalType": "contract IOffer",
                    "name": "",
                    "type": "address"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "from",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "amount",
                    "type": "uint256"
                },
                {
                    "internalType": "bytes",
                    "name": "",
                    "type": "bytes"
                }
            ],
            "name": "onTokenTransfer",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "quorum",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "lostAddress",
                    "type": "address"
                }
            ],
            "name": "recover",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address"
                }
            ],
            "name": "recoveryDisabled",
            "outputs": [
                {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "bool",
                    "name": "enabled",
                    "type": "bool"
                }
            ],
            "name": "setRecoverable",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "symbol",
            "outputs": [
                {
                    "internalType": "string",
                    "name": "",
                    "type": "string"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "terms",
            "outputs": [
                {
                    "internalType": "string",
                    "name": "",
                    "type": "string"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "totalSupply",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "to",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "value",
                    "type": "uint256"
                }
            ],
            "name": "transfer",
            "outputs": [
                {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool"
                }
            ],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "recipient",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "amount",
                    "type": "uint256"
                },
                {
                    "internalType": "bytes",
                    "name": "data",
                    "type": "bytes"
                }
            ],
            "name": "transferAndCall",
            "outputs": [
                {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool"
                }
            ],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "sender",
                    "type": "address"
                },
                {
                    "internalType": "address",
                    "name": "recipient",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "amount",
                    "type": "uint256"
                }
            ],
            "name": "transferFrom",
            "outputs": [
                {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool"
                }
            ],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "uint256",
                    "name": "amount",
                    "type": "uint256"
                }
            ],
            "name": "unwrap",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "unwrapConversionFactor",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "shareholder",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "amount",
                    "type": "uint256"
                }
            ],
            "name": "wrap",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "wrapped",
            "outputs": [
                {
                    "internalType": "contract IERC20",
                    "name": "",
                    "type": "address"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        }
    ],
    "metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_terms\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"offerFactory\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"wrappedToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"quorum\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"lostAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"collateral\",\"type\":\"uint256\"}],\"name\":\"ClaimCleared\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"lostAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"claimant\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"collateral\",\"type\":\"uint256\"}],\"name\":\"ClaimDeleted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"lostAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"claimant\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"name\":\"ClaimMade\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newClaimPeriodInDays\",\"type\":\"uint256\"}],\"name\":\"ClaimPeriodChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"lostAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"claimant\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"collateral\",\"type\":\"uint256\"}],\"name\":\"ClaimResolved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newCustomCollateralAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newCustomCollareralRate\",\"type\":\"uint256\"}],\"name\":\"CustomClaimCollateralChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newContractAddress\",\"type\":\"address\"}],\"name\":\"MigrationSucceeded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"VALIDITY_PERIOD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"VOTING_PERIOD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimPeriod\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"claims\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"claimant\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"collateral\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"currencyUsed\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"clearClaim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"customCollateralAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"customCollateralRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"collateralType\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"lostAddress\",\"type\":\"address\"}],\"name\":\"declareLost\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"lostAddress\",\"type\":\"address\"}],\"name\":\"deleteClaim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"}],\"name\":\"drag\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"contract IOfferFactory\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getClaimDeleter\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"lostAddress\",\"type\":\"address\"}],\"name\":\"getClaimant\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"lostAddress\",\"type\":\"address\"}],\"name\":\"getCollateral\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"collateralType\",\"type\":\"address\"}],\"name\":\"getCollateralRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"lostAddress\",\"type\":\"address\"}],\"name\":\"getCollateralType\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"lostAddress\",\"type\":\"address\"}],\"name\":\"getTimeStamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isBinding\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"isRecoveryEnabled\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"pricePerShare\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"}],\"name\":\"makeAcquisitionOffer\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"notifyOfferEnded\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"offer\",\"outputs\":[{\"internalType\":\"contract IOffer\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onTokenTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"quorum\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"lostAddress\",\"type\":\"address\"}],\"name\":\"recover\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"recoveryDisabled\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"enabled\",\"type\":\"bool\"}],\"name\":\"setRecoverable\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"terms\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"unwrap\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unwrapConversionFactor\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"shareholder\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"wrap\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"wrapped\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Luzius Meisser, luzius@meissereconomics.com This is an ERC-20 token representing shares of CompanyName AG that are bound to a shareholder agreement that can be found at the URL defined in the constant 'terms'. The shareholder agreement is partially enforced through this smart contract. The agreement is designed to facilitate a complete acquisition of the firm even if a minority of shareholders disagree with the acquisition, to protect the interest of the minority shareholders by requiring the acquirer to offer the same conditions to everyone when acquiring the company, and to facilitate an update of the shareholder agreement even if a minority of the shareholders that are bound to this agreement disagree. The name \\\"draggable\\\" stems from the convention of calling the right to drag a minority along with a sale of the company \\\"drag-along\\\" rights. The name is chosen to ensure that token holders are aware that they are bound to such an agreement. The percentage of token holders that must agree with an update of the terms is defined by the constant UPDATE_QUORUM. The percentage of yes-votes that is needed to successfully complete an acquisition is defined in the constant ACQUISITION_QUORUM. Note that the update quorum is based on the total number of tokens in circulation. In contrast, the acquisition quorum is based on the number of votes cast during the voting period, not taking into account those who did not bother to vote.\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See `IERC20.allowance`.\"},\"approve(address,uint256)\":{\"details\":\"See `IERC20.approve`. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See `IERC20.balanceOf`.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to `approve` that can be used as a mitigation for problems described in `IERC20.approve`. Emits an `Approval` event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to `approve` that can be used as a mitigation for problems described in `IERC20.approve`. Emits an `Approval` event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"totalSupply()\":{\"details\":\"See `IERC20.totalSupply`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See `IERC20.transferFrom`. Emits an `Approval` event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of `ERC20`; Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `value`. - the caller must have allowance for `sender`'s tokens of at least `amount`.\"}},\"title\":\"Draggable CompanyName AG Shares\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"burn(uint256)\":{\"notice\":\"Burns both the token itself as well as the wrapped token! If you want to get out of the shareholder agreement, use unwrap after it has been deactivated by a majority vote or acquisition. Burning only works if wrapped token supports burning. Also, the exact meaning of this operation might depend on the circumstances. Burning and reussing the wrapped token does not free the sender from the legal obligations of the shareholder agreement.\"},\"clearClaim()\":{\"notice\":\"Clears a claim after the key has been found again and assigns the collateral to the \\\"lost\\\" address. This is the price an adverse claimer pays for filing a false claim and makes it risky to do so.\"},\"constructor\":{\"notice\":\"Designed to be used with the Crypto Franc as currency token. See also parent constructor.\"},\"declareLost(address,address)\":{\"notice\":\"Anyone can declare that the private key to a certain address was lost by calling declareLost providing a deposit/collateral. There are three possibilities of what can happen with the claim: 1) The claim period expires and the claimant can get the deposit and the shares back by calling recover 2) The \\\"lost\\\" private key is used at any time to call clearClaim. In that case, the claim is deleted and    the deposit sent to the shareholder (the owner of the private key). It is recommended to call recover    whenever someone transfers funds to let claims be resolved automatically when the \\\"lost\\\" private key is    used again. 3) The owner deletes the claim and assigns the deposit to the claimant. This is intended to be used to resolve    disputes. Generally, using this function implies that you have to trust the issuer of the tokens to handle    the situation well. As a rule of thumb, the contract owner should assume the owner of the lost address to be the    rightful owner of the deposit. It is highly recommended that the owner observes the claims made and informs the owners of the claimed addresses whenever a claim is made for their address (this of course is only possible if they are known to the owner, e.g. through a shareholder register). To prevent frontrunning attacks, a claim can only be made if the information revealed when calling \\\"declareLost\\\" was previously commited using the \\\"prepareClaim\\\" function.\"},\"deleteClaim(address)\":{\"notice\":\"This function is to be executed by the claim deleter only in case a dispute needs to be resolved manually.\"},\"getCollateralRate(address)\":{\"notice\":\"Returns the collateral rate for the given collateral type and 0 if that type of collateral is not accepted. By default, only the token itself is accepted at a rate of 1:1. Subclasses should override this method if they want to add additional types of collateral.\"},\"isBinding()\":{\"notice\":\"Indicates that the token holders are bound to the token terms and that: - Conversions back to the wrapped token (unwrap) are not allowed - The drag-along can be performed by making an according offer - They can be migrated to a new version of this contract in accordance with the terms\"},\"isRecoveryEnabled(address)\":{\"notice\":\"Some users might want to disable claims for their address completely. For example if they use a deep cold storage solution or paper wallet.\"},\"recover(address)\":{\"notice\":\"After the claim period has passed, the claimant can call this function to send the tokens on the lost address as well as the collateral to himself.\"},\"unwrap(uint256)\":{\"notice\":\"Decrease the number of drag-along tokens. The user gets back their shares in return \"},\"wrap(address,uint256)\":{\"notice\":\"Increases the number of drag-along tokens. Requires minter to deposit an equal amount of share tokens \"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"c:/Users/luziu/Documents/aktionariat/contracts/src/DraggableShares.sol\":\"DraggableShares\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"c:/Users/luziu/Documents/aktionariat/contracts/src/DraggableShares.sol\":{\"keccak256\":\"0xa3917089ff108dbb48f690e2f86e8c7672fc4d0becc79ecdae792e33adc893d7\",\"license\":\"LicenseRef-Aktionariat\",\"urls\":[\"bzz-raw://c9fd06c4a2a7e2a5703880d9ba5cdcd6bd779c1e8ea1c4af7ab51f3eec27bdf3\",\"dweb:/ipfs/QmVxv8jwyGeLESmEHmAqE2rs3C4xoiZYjwjsG2KMHPH966\"]},\"c:/Users/luziu/Documents/aktionariat/contracts/src/ERC20.sol\":{\"keccak256\":\"0x7589205fed6098c2c1f39106f2d87ddcab37301d5f3f9ef0852340e39c058247\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://652fbfb982c5ef52e9e6addc8d24a1a7b6e0a817c04c78e65c74f80f5fa408ba\",\"dweb:/ipfs/QmPxsUqFZRo4wTnURhLsPALxsJ8JCvcfFuZ3hxPwT1wRiK\"]},\"c:/Users/luziu/Documents/aktionariat/contracts/src/ERC20Draggable.sol\":{\"keccak256\":\"0x6bdb3e1f3412b25e13bf01eeb300176e230c236fee9531c9dcf1a840275ba0df\",\"license\":\"LicenseRef-Aktionariat\",\"urls\":[\"bzz-raw://2741a0fcd0b09c526d0a145245c314918b46e7aac9e05f792e1cdbcab8c1bbc1\",\"dweb:/ipfs/QmeBBzTRivtqs1MPxDC6awHMcJg3av3Dan74cXZmvWdE6P\"]},\"c:/Users/luziu/Documents/aktionariat/contracts/src/ERC20Recoverable.sol\":{\"keccak256\":\"0x0a386ed93c20d20f9249e62fe92bdcc90dda77ed6b0d465e04e2399cf533f795\",\"license\":\"LicenseRef-Aktionariat\",\"urls\":[\"bzz-raw://87cdadcbd7eaf9315dc257c0c20099b4de116dc3b28aa3a358fe8e7a096cb315\",\"dweb:/ipfs/QmYfCc9Sfg2xahwyBf37ekTMnoMDteB1GqS53QnpPidz3g\"]},\"c:/Users/luziu/Documents/aktionariat/contracts/src/IERC20.sol\":{\"keccak256\":\"0xdd9ef23be041b279c4815ae1483703e0532d8839865b8081e12955a52d4e148f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2eef9ae3fc010bd8012716c89852c245aacf07474f3a52b84280f9f7958210fe\",\"dweb:/ipfs/QmSsjJBfgFw8PzaBTaZwCLzHkqM6pfS6NDrrFysNkCbS2M\"]},\"c:/Users/luziu/Documents/aktionariat/contracts/src/IERC677Receiver.sol\":{\"keccak256\":\"0xa1be3ece738b7e5231cbdb0f5d95e33015f917f8b9326083960deeee34b78752\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f13ac395559850cbf6ca4a35fc04c8b3ebbff238895ad228f47041d6520c96d6\",\"dweb:/ipfs/QmaEXT6Zxoz6jYQEMv4PDVuxt7LUick6Y3ebhuxRooJamK\"]}},\"version\":1}",
    "bytecode": "608060405262ed4e006004556000600b553480156200001d57600080fd5b50604051620029c7380380620029c78339810160408190526200004091620001b8565b6003805460ff19169055600a80546001600160a01b038086166001600160a01b031992831617909255600980549285169290911682179055600d829055604051636427ed9760e01b8152636427ed9790620000a190600090600401620002b6565b600060405180830381600087803b158015620000bc57600080fd5b505af1158015620000d1573d6000803e3d6000fd5b50508551620000ea9250600e91506020870190620000f5565b505050505062000314565b8280546200010390620002c1565b90600052602060002090601f01602090048101928262000127576000855562000172565b82601f106200014257805160ff191683800117855562000172565b8280016001018555821562000172579182015b828111156200017257825182559160200191906001019062000155565b506200018092915062000184565b5090565b5b8082111562000180576000815560010162000185565b80516001600160a01b0381168114620001b357600080fd5b919050565b60008060008060808587031215620001ce578384fd5b84516001600160401b0380821115620001e5578586fd5b818701915087601f830112620001f9578586fd5b8151818111156200020e576200020e620002fe565b6040516020601f8301601f1916820181018481118382101715620002365762000236620002fe565b60405282825284830181018b10156200024d578889fd5b8893505b8284101562000270578484018101518285018201529283019262000251565b828411156200028157888184840101525b81985062000291818b016200019b565b97505050505050620002a6604086016200019b565b6060959095015193969295505050565b901515815260200190565b600281046001821680620002d657607f821691505b60208210811415620002f857634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fd5b6126a380620003246000396000f3fe60806040526004361061027d5760003560e01c806370a082311161014f578063b1610d7e116100c1578063d50256251161007a578063d50256251461070d578063dcc7d4ad14610722578063dd62ed3e14610735578063de0e9a3e14610755578063eb470ebf14610775578063fcb79a7e146107955761027d565b8063b1610d7e1461065e578063b40e80d114610673578063bf376c7a14610693578063c028df06146106b3578063c45a0155146106c8578063c6788bdd146106dd5761027d565b80639b56d6c9116101135780639b56d6c9146105a95780639e4b5745146105c9578063a3ec1883146105de578063a457c2d7146105fe578063a4c0ed361461061e578063a9059cbb1461063e5761027d565b806370a082311461052a57806377e071ad1461054a5780637dc2cd981461056a5780638fd3ab801461057f57806395d89b41146105945761027d565b80632a0a4ed5116101f35780634000aea0116101ac5780634000aea01461048b57806342966c68146104ab57806350e70d48146104cb57806360918117146104e05780636427ed97146104f55780636b03ed5f146105155761027d565b80632a0a4ed5146103df578063313ce567146103f457806332a7ae951461041657806332bc320b14610436578063395093511461044b5780633bcc45ba1461046b5761027d565b80630cd865ec116102455780630cd865ec146103335780631703a0181461035557806318160ddd1461036a5780631e3b9de51461037f57806323b872dd1461039f57806326773ddd146103bf5761027d565b806306fdde03146102825780630832e470146102ad578063095ea7b3146102cf5780630c43cd88146102fc5780630c6f0e5d14610311575b600080fd5b34801561028e57600080fd5b506102976107b5565b6040516102a491906122d9565b60405180910390f35b3480156102b957600080fd5b506102c261085a565b6040516102a49190612538565b3480156102db57600080fd5b506102ef6102ea366004611f7e565b610860565b6040516102a4919061228f565b34801561030857600080fd5b506102c2610876565b34801561031d57600080fd5b5061032661087d565b6040516102a491906121cb565b34801561033f57600080fd5b5061035361034e366004611ece565b61088c565b005b34801561036157600080fd5b506102c2610a9d565b34801561037657600080fd5b506102c2610aa3565b34801561038b57600080fd5b5061032661039a366004611ece565b610aa9565b3480156103ab57600080fd5b506102ef6103ba366004611f3e565b610aca565b3480156103cb57600080fd5b506103536103da366004611f06565b610b1c565b3480156103eb57600080fd5b50610326610d3a565b34801561040057600080fd5b50610409610dbc565b6040516102a49190612541565b34801561042257600080fd5b50610353610431366004611ece565b610dc5565b34801561044257600080fd5b50610353610fa0565b34801561045757600080fd5b506102ef610466366004611f7e565b610fc6565b34801561047757600080fd5b50610326610486366004611ece565b610ffd565b34801561049757600080fd5b506102ef6104a6366004611fa9565b61101e565b3480156104b757600080fd5b506103536104c6366004612140565b6110a1565b3480156104d757600080fd5b50610326611134565b3480156104ec57600080fd5b506102c2611143565b34801561050157600080fd5b5061035361051036600461202d565b611149565b34801561052157600080fd5b50610353611168565b34801561053657600080fd5b506102c2610545366004611ece565b6112a3565b34801561055657600080fd5b506102c2610565366004611ece565b6112be565b34801561057657600080fd5b506102c2611394565b34801561058b57600080fd5b5061035361139a565b3480156105a057600080fd5b50610297611438565b3480156105b557600080fd5b506102c26105c4366004611ece565b6114c9565b3480156105d557600080fd5b506102ef6114e7565b3480156105ea57600080fd5b506102ef6105f9366004611ece565b6114ee565b34801561060a57600080fd5b506102ef610619366004611f7e565b61150d565b34801561062a57600080fd5b50610353610639366004611fa9565b611544565b34801561064a57600080fd5b506102ef610659366004611f7e565b61156b565b34801561066a57600080fd5b506102c261157e565b34801561067f57600080fd5b506102ef61068e366004611ece565b611585565b34801561069f57600080fd5b506103536106ae366004611f7e565b61159a565b3480156106bf57600080fd5b50610326611637565b3480156106d457600080fd5b50610326611646565b3480156106e957600080fd5b506106fd6106f8366004611ece565b611655565b6040516102a49493929190612264565b34801561071957600080fd5b50610297611687565b610353610730366004612065565b611715565b34801561074157600080fd5b506102c2610750366004611f06565b611855565b34801561076157600080fd5b50610353610770366004612140565b611880565b34801561078157600080fd5b506102c2610790366004611ece565b6118a2565b3480156107a157600080fd5b506103536107b0366004611f06565b6118c0565b600954604080516306fdde0360e01b815290516060926001600160a01b0316916306fdde03916004808301926000929190829003018186803b1580156107fa57600080fd5b505afa15801561080e573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610836919081019061209d565b6040516020016108469190612199565b604051602081830303815290604052905090565b600b5481565b600061086d3384846118f5565b50600192915050565b6276a70081565b6007546001600160a01b031681565b6001600160a01b03808216600090815260056020908152604091829020825160808101845281548516815260018201549281018390526002820154938101939093526003015490921660608201819052909190816109055760405162461bcd60e51b81526004016108fc906123d3565b60405180910390fd5b82516001600160a01b0316331461092e5760405162461bcd60e51b81526004016108fc9061230c565b426004548460400151610941919061254f565b111561095f5760405162461bcd60e51b81526004016108fc90612343565b82516001600160a01b0380861660009081526005602052604080822080546001600160a01b0319908116825560018201849055600282019390935560030180549092169091555163a9059cbb60e01b81529083169063a9059cbb906109ca9084908790600401612203565b602060405180830381600087803b1580156109e457600080fd5b505af11580156109f8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a1c9190612049565b610a385760405162461bcd60e51b81526004016108fc906123fb565b610a4b8582610a46886112a3565b611950565b806001600160a01b0316856001600160a01b03167f52a5c2b28bc6eb9712d0ced43463103b486b13ccc9cda499fd3b2d7b6a74a8ee85604051610a8e9190612538565b60405180910390a35050505050565b600d5481565b60025490565b6001600160a01b03808216600090815260056020526040902054165b919050565b6000610ad7848484611950565b6001600160a01b038416600090815260016020908152604080832033808552925290912054610b12918691610b0d9086906125a6565b6118f5565b5060019392505050565b610b25816114ee565b610b415760405162461bcd60e51b81526004016108fc90612432565b6000610b4c836112be565b905060008111610b6e5760405162461bcd60e51b81526004016108fc906123a3565b336000610b7a846112a3565b90506000610b888483612587565b90508582610ba85760405162461bcd60e51b81526004016108fc906124ca565b6001600160a01b03861660009081526005602052604090206001015415610be15760405162461bcd60e51b81526004016108fc90612467565b6040516323b872dd60e01b81526001600160a01b038216906323b872dd90610c11908790309087906004016121df565b602060405180830381600087803b158015610c2b57600080fd5b505af1158015610c3f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c639190612049565b610c7f5760405162461bcd60e51b81526004016108fc906123fb565b604080516080810182526001600160a01b038087168083526020808401878152428587019081528d8516606087019081528d86166000818152600590955293889020965187549087166001600160a01b0319918216178855925160018801559051600287015551600390950180549590941694169390931790915591517f1982ca8958fc8a8176cb52be509260f4bc5af7ce04e1533711793f1c56dd535990610d29908790612538565b60405180910390a350505050505050565b60095460408051632a0a4ed560e01b815290516000926001600160a01b031691632a0a4ed5916004808301926020929190829003018186803b158015610d7f57600080fd5b505afa158015610d93573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610db79190611eea565b905090565b60035460ff1681565b610dcd610d3a565b6001600160a01b0316336001600160a01b031614610dfd5760405162461bcd60e51b81526004016108fc90612501565b6001600160a01b038082166000908152600560209081526040918290208251608081018452815485168152600182015492810183905260028201549381019390935260030154909216606082018190529091610e6b5760405162461bcd60e51b81526004016108fc906123d3565b6001600160a01b03808416600090815260056020908152604080832080546001600160a01b031990811682556001820185905560028201949094556003018054909316909255845190850151915163a9059cbb60e01b81529284169263a9059cbb92610eda9291600401612203565b602060405180830381600087803b158015610ef457600080fd5b505af1158015610f08573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f2c9190612049565b610f485760405162461bcd60e51b81526004016108fc906123fb565b81600001516001600160a01b0316836001600160a01b03167fbb036e629a9f4c0897ee5d48440dfdb36f7e772117723a2ed603a6514244c2d58460200151604051610f939190612538565b60405180910390a3505050565b600c546001600160a01b0316331415610fc457600c80546001600160a01b03191690555b565b3360008181526001602090815260408083206001600160a01b0387168452909152812054909161086d918590610b0d90869061254f565b6001600160a01b039081166000908152600560205260409020600301541690565b60008061102b868661156b565b9050801561109857604051635260769b60e11b81526001600160a01b0387169063a4c0ed369061106590339089908990899060040161221c565b600060405180830381600087803b15801561107f57600080fd5b505af1158015611093573d6000803e3d6000fd5b505050505b95945050505050565b6110ab3382611a0d565b60006110b56114e7565b6110c157600b546110c4565b60015b6009549091506001600160a01b03166342966c686110e28385612587565b6040518263ffffffff1660e01b81526004016110fe9190612538565b600060405180830381600087803b15801561111857600080fd5b505af115801561112c573d6000803e3d6000fd5b505050505050565b6009546001600160a01b031681565b60085481565b336000908152600660205260409020805460ff19169115919091179055565b3360009081526005602052604090206001015415610fc4573360008181526005602052604080822060018101805460038301805484546001600160a01b0319908116865593879055600290940195909555908216909355905163a9059cbb60e01b815291926001600160a01b0390911691829163a9059cbb916111f091908690600401612203565b602060405180830381600087803b15801561120a57600080fd5b505af115801561121e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112429190612049565b61125e5760405162461bcd60e51b81526004016108fc906123fb565b336001600160a01b03167f203627483d943880619f4b7e0cca21dbefd6204b4d85b124eb99540e17ba86dd836040516112979190612538565b60405180910390a25050565b6001600160a01b031660009081526020819052604090205490565b6000806112ca83611aa7565b905080156112d9579050610ac5565b6009546001600160a01b03848116911614156112f9575050600b54610ac5565b600b546009546040516377e071ad60e01b81526001600160a01b03909116906377e071ad9061132c9087906004016121cb565b60206040518083038186803b15801561134457600080fd5b505afa158015611358573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061137c9190612158565b6113869190612587565b915050610ac5565b50919050565b60045481565b336113a3611ae9565b156113ad57600080fd5b6113b5610aa3565b6113c190611f40612587565b6113ca826112a3565b6113d690612710612587565b10156113f45760405162461bcd60e51b81526004016108fc9061249e565b6113fe8182611afa565b7f3b6b79a09e9fd230e8591b65c97236bf7df7a604edf733db0658e66b0e6eb2a98160405161142d91906121cb565b60405180910390a150565b600954604080516395d89b4160e01b815290516060926001600160a01b0316916395d89b41916004808301926000929190829003018186803b15801561147d57600080fd5b505afa158015611491573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526114b9919081019061209d565b6040516020016108469190612170565b6001600160a01b031660009081526005602052604090206001015490565b600b541590565b6001600160a01b031660009081526006602052604090205460ff161590565b3360008181526001602090815260408083206001600160a01b0387168452909152812054909161086d918590610b0d9086906125a6565b6009546001600160a01b0316331461155b57600080fd5b6115658484611cc2565b50505050565b60006115778383611d63565b9392505050565b624f1a0081565b60066020526000908152604090205460ff1681565b6009546040516323b872dd60e01b81526001600160a01b03909116906323b872dd906115ce903390309086906004016121df565b602060405180830381600087803b1580156115e857600080fd5b505af11580156115fc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116209190612049565b61162957600080fd5b6116338282611cc2565b5050565b600c546001600160a01b031681565b600a546001600160a01b031681565b60056020526000908152604090208054600182015460028301546003909301546001600160a01b039283169391921684565b600e8054611694906125e9565b80601f01602080910402602001604051908101604052809291908181526020018280546116c0906125e9565b801561170d5780601f106116e25761010080835404028352916020019161170d565b820191906000526020600020905b8154815290600101906020018083116116f057829003601f168201915b505050505081565b61171d6114e7565b61172657600080fd5b600a54600d5460405163eb57ed7b60e01b81526000926001600160a01b03169163eb57ed7b91349161176c91899133918a918a91624f1a00906276a7009060040161229a565b6020604051808303818588803b15801561178557600080fd5b505af1158015611799573d6000803e3d6000fd5b50505050506040513d601f19601f820116820180604052508101906117be9190611eea565b90506117c8611ae9565b1561183057600c546040516306a169ed60e01b81526001600160a01b03909116906306a169ed906117fd9084906004016121cb565b600060405180830381600087803b15801561181757600080fd5b505af115801561182b573d6000803e3d6000fd5b505050505b600c80546001600160a01b0319166001600160a01b0392909216919091179055505050565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6118886114e7565b1561189257600080fd5b61189f3382600b54611d93565b50565b6001600160a01b031660009081526005602052604090206002015490565b600c546001600160a01b031633146118d757600080fd5b6118eb826118e4846112a3565b6001611d93565b6116338183611afa565b6001600160a01b0380841660008181526001602090815260408083209487168084529490915290819020849055517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92590610f93908590612538565b6001600160a01b03821661196357600080fd5b61196e838383611e36565b6001600160a01b038316600090815260208190526040812080548392906119969084906125a6565b90915550506001600160a01b038216600090815260208190526040812080548392906119c390849061254f565b92505081905550816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610f939190612538565b611a1982600083611e36565b8060026000828254611a2b91906125a6565b90915550506001600160a01b03821660009081526020819052604081208054839290611a589084906125a6565b90915550506040516000906001600160a01b038416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90611a9b908590612538565b60405180910390a35050565b60006001600160a01b038216301415611ac257506001610ac5565b6007546001600160a01b0383811691161415611ae15750600854610ac5565b506000610ac5565b600c546001600160a01b0316151590565b611b026114e7565b611b0b57600080fd5b6009546040516370a0823160e01b81526001600160a01b039091169063a9059cbb90839083906370a0823190611b459030906004016121cb565b60206040518083038186803b158015611b5d57600080fd5b505afa158015611b71573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611b959190612158565b6040518363ffffffff1660e01b8152600401611bb2929190612203565b602060405180830381600087803b158015611bcc57600080fd5b505af1158015611be0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611c049190612049565b611c0d57600080fd5b600980546001600160a01b0319166001600160a01b038416179055611633611c33610aa3565b6009546040516370a0823160e01b81526001600160a01b03909116906370a0823190611c639030906004016121cb565b60206040518083038186803b158015611c7b57600080fd5b505afa158015611c8f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611cb39190612158565b611cbd9190612567565b611eae565b6001600160a01b038216611cd557600080fd5b611ce160008383611e36565b8060026000828254611cf3919061254f565b90915550506001600160a01b03821660009081526020819052604081208054839290611d2090849061254f565b90915550506040516001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90611a9b908590612538565b6000611d6f8383611ec1565b611d8b5760405162461bcd60e51b81526004016108fc9061237a565b61086d611168565b611d9d8383611a0d565b6009546001600160a01b031663a9059cbb84611db98486612587565b6040518363ffffffff1660e01b8152600401611dd6929190612203565b602060405180830381600087803b158015611df057600080fd5b505af1158015611e04573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e289190612049565b611e3157600080fd5b505050565b611e3e611ae9565b15611e3157600c5460405163e1a1810f60e01b81526001600160a01b039091169063e1a1810f90611e77908690869086906004016121df565b600060405180830381600087803b158015611e9157600080fd5b505af1158015611ea5573d6000803e3d6000fd5b50505050505050565b6001811015611ebc57600080fd5b600b55565b600061086d338484611950565b600060208284031215611edf578081fd5b81356115778161264a565b600060208284031215611efb578081fd5b81516115778161264a565b60008060408385031215611f18578081fd5b8235611f238161264a565b91506020830135611f338161264a565b809150509250929050565b600080600060608486031215611f52578081fd5b8335611f5d8161264a565b92506020840135611f6d8161264a565b929592945050506040919091013590565b60008060408385031215611f90578182fd5b8235611f9b8161264a565b946020939093013593505050565b60008060008060608587031215611fbe578081fd5b8435611fc98161264a565b935060208501359250604085013567ffffffffffffffff80821115611fec578283fd5b818701915087601f830112611fff578283fd5b81358181111561200d578384fd5b88602082850101111561201e578384fd5b95989497505060200194505050565b60006020828403121561203e578081fd5b81356115778161265f565b60006020828403121561205a578081fd5b81516115778161265f565b600080600060608486031215612079578283fd5b833592506020840135915060408401356120928161264a565b809150509250925092565b6000602082840312156120ae578081fd5b815167ffffffffffffffff808211156120c5578283fd5b818401915084601f8301126120d8578283fd5b8151818111156120ea576120ea612634565b604051601f8201601f19168101602001838111828210171561210e5761210e612634565b604052818152838201602001871015612125578485fd5b6121368260208301602087016125bd565b9695505050505050565b600060208284031215612151578081fd5b5035919050565b600060208284031215612169578081fd5b5051919050565b6000601160fa1b8252825161218c8160018501602087016125bd565b9190910160010192915050565b6000690223930b3b3b0b13632960b51b825282516121be81600a8501602087016125bd565b91909101600a0192915050565b6001600160a01b0391909116815260200190565b6001600160a01b039384168152919092166020820152604081019190915260600190565b6001600160a01b03929092168252602082015260400190565b6001600160a01b0385168152602081018490526060604082018190528101829052600082846080840137818301608090810191909152601f909201601f191601019392505050565b6001600160a01b03948516815260208101939093526040830191909152909116606082015260800190565b901515815260200190565b9687526001600160a01b0395861660208801526040870194909452919093166060850152608084019290925260a083019190915260c082015260e00190565b60006020825282518060208401526122f88160408501602087016125bd565b601f01601f19169190910160400192915050565b6020808252601f908201527f4f6e6c7920636c61696d616e742063616e207265736f6c766520636c61696d00604082015260600190565b60208082526019908201527f436c61696d20706572696f64206e6f74206f7665722079657400000000000000604082015260600190565b6020808252600f908201526e151c985b9cd9995c8819985a5b1959608a1b604082015260600190565b602080825260169082015275155b9cdd5c1c1bdc9d19590818dbdb1b185d195c985b60521b604082015260600190565b6020808252600e908201526d139bc818db185a5b48199bdd5b9960921b604082015260600190565b6020808252601a908201527f436f6c6c61746572616c207472616e73666572206661696c6564000000000000604082015260600190565b6020808252818101527f436c61696d732064697361626c656420666f7220746869732061646472657373604082015260600190565b60208082526017908201527f4164647265737320616c726561647920636c61696d6564000000000000000000604082015260600190565b602080825260129082015271145d5bdc9d5b481b9bdd081c995858da195960721b604082015260600190565b6020808252601f908201527f436c61696d6564206164647265737320686f6c6473206e6f2073686172657300604082015260600190565b60208082526018908201527f596f752063616e6e6f742064656c65746520636c61696d730000000000000000604082015260600190565b90815260200190565b60ff91909116815260200190565b600082198211156125625761256261261e565b500190565b60008261258257634e487b7160e01b81526012600452602481fd5b500490565b60008160001904831182151516156125a1576125a161261e565b500290565b6000828210156125b8576125b861261e565b500390565b60005b838110156125d85781810151838201526020016125c0565b838111156115655750506000910152565b6002810460018216806125fd57607f821691505b6020821081141561138e57634e487b7160e01b600052602260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b038116811461189f57600080fd5b801515811461189f57600080fdfea2646970667358221220cca81f1a137c75e4f8220dce06a218f9aada80c95d3dc9f0fe351981533be45964736f6c63430008000033",
    "deployedBytecode": "60806040526004361061027d5760003560e01c806370a082311161014f578063b1610d7e116100c1578063d50256251161007a578063d50256251461070d578063dcc7d4ad14610722578063dd62ed3e14610735578063de0e9a3e14610755578063eb470ebf14610775578063fcb79a7e146107955761027d565b8063b1610d7e1461065e578063b40e80d114610673578063bf376c7a14610693578063c028df06146106b3578063c45a0155146106c8578063c6788bdd146106dd5761027d565b80639b56d6c9116101135780639b56d6c9146105a95780639e4b5745146105c9578063a3ec1883146105de578063a457c2d7146105fe578063a4c0ed361461061e578063a9059cbb1461063e5761027d565b806370a082311461052a57806377e071ad1461054a5780637dc2cd981461056a5780638fd3ab801461057f57806395d89b41146105945761027d565b80632a0a4ed5116101f35780634000aea0116101ac5780634000aea01461048b57806342966c68146104ab57806350e70d48146104cb57806360918117146104e05780636427ed97146104f55780636b03ed5f146105155761027d565b80632a0a4ed5146103df578063313ce567146103f457806332a7ae951461041657806332bc320b14610436578063395093511461044b5780633bcc45ba1461046b5761027d565b80630cd865ec116102455780630cd865ec146103335780631703a0181461035557806318160ddd1461036a5780631e3b9de51461037f57806323b872dd1461039f57806326773ddd146103bf5761027d565b806306fdde03146102825780630832e470146102ad578063095ea7b3146102cf5780630c43cd88146102fc5780630c6f0e5d14610311575b600080fd5b34801561028e57600080fd5b506102976107b5565b6040516102a491906122d9565b60405180910390f35b3480156102b957600080fd5b506102c261085a565b6040516102a49190612538565b3480156102db57600080fd5b506102ef6102ea366004611f7e565b610860565b6040516102a4919061228f565b34801561030857600080fd5b506102c2610876565b34801561031d57600080fd5b5061032661087d565b6040516102a491906121cb565b34801561033f57600080fd5b5061035361034e366004611ece565b61088c565b005b34801561036157600080fd5b506102c2610a9d565b34801561037657600080fd5b506102c2610aa3565b34801561038b57600080fd5b5061032661039a366004611ece565b610aa9565b3480156103ab57600080fd5b506102ef6103ba366004611f3e565b610aca565b3480156103cb57600080fd5b506103536103da366004611f06565b610b1c565b3480156103eb57600080fd5b50610326610d3a565b34801561040057600080fd5b50610409610dbc565b6040516102a49190612541565b34801561042257600080fd5b50610353610431366004611ece565b610dc5565b34801561044257600080fd5b50610353610fa0565b34801561045757600080fd5b506102ef610466366004611f7e565b610fc6565b34801561047757600080fd5b50610326610486366004611ece565b610ffd565b34801561049757600080fd5b506102ef6104a6366004611fa9565b61101e565b3480156104b757600080fd5b506103536104c6366004612140565b6110a1565b3480156104d757600080fd5b50610326611134565b3480156104ec57600080fd5b506102c2611143565b34801561050157600080fd5b5061035361051036600461202d565b611149565b34801561052157600080fd5b50610353611168565b34801561053657600080fd5b506102c2610545366004611ece565b6112a3565b34801561055657600080fd5b506102c2610565366004611ece565b6112be565b34801561057657600080fd5b506102c2611394565b34801561058b57600080fd5b5061035361139a565b3480156105a057600080fd5b50610297611438565b3480156105b557600080fd5b506102c26105c4366004611ece565b6114c9565b3480156105d557600080fd5b506102ef6114e7565b3480156105ea57600080fd5b506102ef6105f9366004611ece565b6114ee565b34801561060a57600080fd5b506102ef610619366004611f7e565b61150d565b34801561062a57600080fd5b50610353610639366004611fa9565b611544565b34801561064a57600080fd5b506102ef610659366004611f7e565b61156b565b34801561066a57600080fd5b506102c261157e565b34801561067f57600080fd5b506102ef61068e366004611ece565b611585565b34801561069f57600080fd5b506103536106ae366004611f7e565b61159a565b3480156106bf57600080fd5b50610326611637565b3480156106d457600080fd5b50610326611646565b3480156106e957600080fd5b506106fd6106f8366004611ece565b611655565b6040516102a49493929190612264565b34801561071957600080fd5b50610297611687565b610353610730366004612065565b611715565b34801561074157600080fd5b506102c2610750366004611f06565b611855565b34801561076157600080fd5b50610353610770366004612140565b611880565b34801561078157600080fd5b506102c2610790366004611ece565b6118a2565b3480156107a157600080fd5b506103536107b0366004611f06565b6118c0565b600954604080516306fdde0360e01b815290516060926001600160a01b0316916306fdde03916004808301926000929190829003018186803b1580156107fa57600080fd5b505afa15801561080e573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610836919081019061209d565b6040516020016108469190612199565b604051602081830303815290604052905090565b600b5481565b600061086d3384846118f5565b50600192915050565b6276a70081565b6007546001600160a01b031681565b6001600160a01b03808216600090815260056020908152604091829020825160808101845281548516815260018201549281018390526002820154938101939093526003015490921660608201819052909190816109055760405162461bcd60e51b81526004016108fc906123d3565b60405180910390fd5b82516001600160a01b0316331461092e5760405162461bcd60e51b81526004016108fc9061230c565b426004548460400151610941919061254f565b111561095f5760405162461bcd60e51b81526004016108fc90612343565b82516001600160a01b0380861660009081526005602052604080822080546001600160a01b0319908116825560018201849055600282019390935560030180549092169091555163a9059cbb60e01b81529083169063a9059cbb906109ca9084908790600401612203565b602060405180830381600087803b1580156109e457600080fd5b505af11580156109f8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a1c9190612049565b610a385760405162461bcd60e51b81526004016108fc906123fb565b610a4b8582610a46886112a3565b611950565b806001600160a01b0316856001600160a01b03167f52a5c2b28bc6eb9712d0ced43463103b486b13ccc9cda499fd3b2d7b6a74a8ee85604051610a8e9190612538565b60405180910390a35050505050565b600d5481565b60025490565b6001600160a01b03808216600090815260056020526040902054165b919050565b6000610ad7848484611950565b6001600160a01b038416600090815260016020908152604080832033808552925290912054610b12918691610b0d9086906125a6565b6118f5565b5060019392505050565b610b25816114ee565b610b415760405162461bcd60e51b81526004016108fc90612432565b6000610b4c836112be565b905060008111610b6e5760405162461bcd60e51b81526004016108fc906123a3565b336000610b7a846112a3565b90506000610b888483612587565b90508582610ba85760405162461bcd60e51b81526004016108fc906124ca565b6001600160a01b03861660009081526005602052604090206001015415610be15760405162461bcd60e51b81526004016108fc90612467565b6040516323b872dd60e01b81526001600160a01b038216906323b872dd90610c11908790309087906004016121df565b602060405180830381600087803b158015610c2b57600080fd5b505af1158015610c3f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c639190612049565b610c7f5760405162461bcd60e51b81526004016108fc906123fb565b604080516080810182526001600160a01b038087168083526020808401878152428587019081528d8516606087019081528d86166000818152600590955293889020965187549087166001600160a01b0319918216178855925160018801559051600287015551600390950180549590941694169390931790915591517f1982ca8958fc8a8176cb52be509260f4bc5af7ce04e1533711793f1c56dd535990610d29908790612538565b60405180910390a350505050505050565b60095460408051632a0a4ed560e01b815290516000926001600160a01b031691632a0a4ed5916004808301926020929190829003018186803b158015610d7f57600080fd5b505afa158015610d93573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610db79190611eea565b905090565b60035460ff1681565b610dcd610d3a565b6001600160a01b0316336001600160a01b031614610dfd5760405162461bcd60e51b81526004016108fc90612501565b6001600160a01b038082166000908152600560209081526040918290208251608081018452815485168152600182015492810183905260028201549381019390935260030154909216606082018190529091610e6b5760405162461bcd60e51b81526004016108fc906123d3565b6001600160a01b03808416600090815260056020908152604080832080546001600160a01b031990811682556001820185905560028201949094556003018054909316909255845190850151915163a9059cbb60e01b81529284169263a9059cbb92610eda9291600401612203565b602060405180830381600087803b158015610ef457600080fd5b505af1158015610f08573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f2c9190612049565b610f485760405162461bcd60e51b81526004016108fc906123fb565b81600001516001600160a01b0316836001600160a01b03167fbb036e629a9f4c0897ee5d48440dfdb36f7e772117723a2ed603a6514244c2d58460200151604051610f939190612538565b60405180910390a3505050565b600c546001600160a01b0316331415610fc457600c80546001600160a01b03191690555b565b3360008181526001602090815260408083206001600160a01b0387168452909152812054909161086d918590610b0d90869061254f565b6001600160a01b039081166000908152600560205260409020600301541690565b60008061102b868661156b565b9050801561109857604051635260769b60e11b81526001600160a01b0387169063a4c0ed369061106590339089908990899060040161221c565b600060405180830381600087803b15801561107f57600080fd5b505af1158015611093573d6000803e3d6000fd5b505050505b95945050505050565b6110ab3382611a0d565b60006110b56114e7565b6110c157600b546110c4565b60015b6009549091506001600160a01b03166342966c686110e28385612587565b6040518263ffffffff1660e01b81526004016110fe9190612538565b600060405180830381600087803b15801561111857600080fd5b505af115801561112c573d6000803e3d6000fd5b505050505050565b6009546001600160a01b031681565b60085481565b336000908152600660205260409020805460ff19169115919091179055565b3360009081526005602052604090206001015415610fc4573360008181526005602052604080822060018101805460038301805484546001600160a01b0319908116865593879055600290940195909555908216909355905163a9059cbb60e01b815291926001600160a01b0390911691829163a9059cbb916111f091908690600401612203565b602060405180830381600087803b15801561120a57600080fd5b505af115801561121e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112429190612049565b61125e5760405162461bcd60e51b81526004016108fc906123fb565b336001600160a01b03167f203627483d943880619f4b7e0cca21dbefd6204b4d85b124eb99540e17ba86dd836040516112979190612538565b60405180910390a25050565b6001600160a01b031660009081526020819052604090205490565b6000806112ca83611aa7565b905080156112d9579050610ac5565b6009546001600160a01b03848116911614156112f9575050600b54610ac5565b600b546009546040516377e071ad60e01b81526001600160a01b03909116906377e071ad9061132c9087906004016121cb565b60206040518083038186803b15801561134457600080fd5b505afa158015611358573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061137c9190612158565b6113869190612587565b915050610ac5565b50919050565b60045481565b336113a3611ae9565b156113ad57600080fd5b6113b5610aa3565b6113c190611f40612587565b6113ca826112a3565b6113d690612710612587565b10156113f45760405162461bcd60e51b81526004016108fc9061249e565b6113fe8182611afa565b7f3b6b79a09e9fd230e8591b65c97236bf7df7a604edf733db0658e66b0e6eb2a98160405161142d91906121cb565b60405180910390a150565b600954604080516395d89b4160e01b815290516060926001600160a01b0316916395d89b41916004808301926000929190829003018186803b15801561147d57600080fd5b505afa158015611491573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526114b9919081019061209d565b6040516020016108469190612170565b6001600160a01b031660009081526005602052604090206001015490565b600b541590565b6001600160a01b031660009081526006602052604090205460ff161590565b3360008181526001602090815260408083206001600160a01b0387168452909152812054909161086d918590610b0d9086906125a6565b6009546001600160a01b0316331461155b57600080fd5b6115658484611cc2565b50505050565b60006115778383611d63565b9392505050565b624f1a0081565b60066020526000908152604090205460ff1681565b6009546040516323b872dd60e01b81526001600160a01b03909116906323b872dd906115ce903390309086906004016121df565b602060405180830381600087803b1580156115e857600080fd5b505af11580156115fc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116209190612049565b61162957600080fd5b6116338282611cc2565b5050565b600c546001600160a01b031681565b600a546001600160a01b031681565b60056020526000908152604090208054600182015460028301546003909301546001600160a01b039283169391921684565b600e8054611694906125e9565b80601f01602080910402602001604051908101604052809291908181526020018280546116c0906125e9565b801561170d5780601f106116e25761010080835404028352916020019161170d565b820191906000526020600020905b8154815290600101906020018083116116f057829003601f168201915b505050505081565b61171d6114e7565b61172657600080fd5b600a54600d5460405163eb57ed7b60e01b81526000926001600160a01b03169163eb57ed7b91349161176c91899133918a918a91624f1a00906276a7009060040161229a565b6020604051808303818588803b15801561178557600080fd5b505af1158015611799573d6000803e3d6000fd5b50505050506040513d601f19601f820116820180604052508101906117be9190611eea565b90506117c8611ae9565b1561183057600c546040516306a169ed60e01b81526001600160a01b03909116906306a169ed906117fd9084906004016121cb565b600060405180830381600087803b15801561181757600080fd5b505af115801561182b573d6000803e3d6000fd5b505050505b600c80546001600160a01b0319166001600160a01b0392909216919091179055505050565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6118886114e7565b1561189257600080fd5b61189f3382600b54611d93565b50565b6001600160a01b031660009081526005602052604090206002015490565b600c546001600160a01b031633146118d757600080fd5b6118eb826118e4846112a3565b6001611d93565b6116338183611afa565b6001600160a01b0380841660008181526001602090815260408083209487168084529490915290819020849055517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92590610f93908590612538565b6001600160a01b03821661196357600080fd5b61196e838383611e36565b6001600160a01b038316600090815260208190526040812080548392906119969084906125a6565b90915550506001600160a01b038216600090815260208190526040812080548392906119c390849061254f565b92505081905550816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610f939190612538565b611a1982600083611e36565b8060026000828254611a2b91906125a6565b90915550506001600160a01b03821660009081526020819052604081208054839290611a589084906125a6565b90915550506040516000906001600160a01b038416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90611a9b908590612538565b60405180910390a35050565b60006001600160a01b038216301415611ac257506001610ac5565b6007546001600160a01b0383811691161415611ae15750600854610ac5565b506000610ac5565b600c546001600160a01b0316151590565b611b026114e7565b611b0b57600080fd5b6009546040516370a0823160e01b81526001600160a01b039091169063a9059cbb90839083906370a0823190611b459030906004016121cb565b60206040518083038186803b158015611b5d57600080fd5b505afa158015611b71573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611b959190612158565b6040518363ffffffff1660e01b8152600401611bb2929190612203565b602060405180830381600087803b158015611bcc57600080fd5b505af1158015611be0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611c049190612049565b611c0d57600080fd5b600980546001600160a01b0319166001600160a01b038416179055611633611c33610aa3565b6009546040516370a0823160e01b81526001600160a01b03909116906370a0823190611c639030906004016121cb565b60206040518083038186803b158015611c7b57600080fd5b505afa158015611c8f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611cb39190612158565b611cbd9190612567565b611eae565b6001600160a01b038216611cd557600080fd5b611ce160008383611e36565b8060026000828254611cf3919061254f565b90915550506001600160a01b03821660009081526020819052604081208054839290611d2090849061254f565b90915550506040516001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90611a9b908590612538565b6000611d6f8383611ec1565b611d8b5760405162461bcd60e51b81526004016108fc9061237a565b61086d611168565b611d9d8383611a0d565b6009546001600160a01b031663a9059cbb84611db98486612587565b6040518363ffffffff1660e01b8152600401611dd6929190612203565b602060405180830381600087803b158015611df057600080fd5b505af1158015611e04573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e289190612049565b611e3157600080fd5b505050565b611e3e611ae9565b15611e3157600c5460405163e1a1810f60e01b81526001600160a01b039091169063e1a1810f90611e77908690869086906004016121df565b600060405180830381600087803b158015611e9157600080fd5b505af1158015611ea5573d6000803e3d6000fd5b50505050505050565b6001811015611ebc57600080fd5b600b55565b600061086d338484611950565b600060208284031215611edf578081fd5b81356115778161264a565b600060208284031215611efb578081fd5b81516115778161264a565b60008060408385031215611f18578081fd5b8235611f238161264a565b91506020830135611f338161264a565b809150509250929050565b600080600060608486031215611f52578081fd5b8335611f5d8161264a565b92506020840135611f6d8161264a565b929592945050506040919091013590565b60008060408385031215611f90578182fd5b8235611f9b8161264a565b946020939093013593505050565b60008060008060608587031215611fbe578081fd5b8435611fc98161264a565b935060208501359250604085013567ffffffffffffffff80821115611fec578283fd5b818701915087601f830112611fff578283fd5b81358181111561200d578384fd5b88602082850101111561201e578384fd5b95989497505060200194505050565b60006020828403121561203e578081fd5b81356115778161265f565b60006020828403121561205a578081fd5b81516115778161265f565b600080600060608486031215612079578283fd5b833592506020840135915060408401356120928161264a565b809150509250925092565b6000602082840312156120ae578081fd5b815167ffffffffffffffff808211156120c5578283fd5b818401915084601f8301126120d8578283fd5b8151818111156120ea576120ea612634565b604051601f8201601f19168101602001838111828210171561210e5761210e612634565b604052818152838201602001871015612125578485fd5b6121368260208301602087016125bd565b9695505050505050565b600060208284031215612151578081fd5b5035919050565b600060208284031215612169578081fd5b5051919050565b6000601160fa1b8252825161218c8160018501602087016125bd565b9190910160010192915050565b6000690223930b3b3b0b13632960b51b825282516121be81600a8501602087016125bd565b91909101600a0192915050565b6001600160a01b0391909116815260200190565b6001600160a01b039384168152919092166020820152604081019190915260600190565b6001600160a01b03929092168252602082015260400190565b6001600160a01b0385168152602081018490526060604082018190528101829052600082846080840137818301608090810191909152601f909201601f191601019392505050565b6001600160a01b03948516815260208101939093526040830191909152909116606082015260800190565b901515815260200190565b9687526001600160a01b0395861660208801526040870194909452919093166060850152608084019290925260a083019190915260c082015260e00190565b60006020825282518060208401526122f88160408501602087016125bd565b601f01601f19169190910160400192915050565b6020808252601f908201527f4f6e6c7920636c61696d616e742063616e207265736f6c766520636c61696d00604082015260600190565b60208082526019908201527f436c61696d20706572696f64206e6f74206f7665722079657400000000000000604082015260600190565b6020808252600f908201526e151c985b9cd9995c8819985a5b1959608a1b604082015260600190565b602080825260169082015275155b9cdd5c1c1bdc9d19590818dbdb1b185d195c985b60521b604082015260600190565b6020808252600e908201526d139bc818db185a5b48199bdd5b9960921b604082015260600190565b6020808252601a908201527f436f6c6c61746572616c207472616e73666572206661696c6564000000000000604082015260600190565b6020808252818101527f436c61696d732064697361626c656420666f7220746869732061646472657373604082015260600190565b60208082526017908201527f4164647265737320616c726561647920636c61696d6564000000000000000000604082015260600190565b602080825260129082015271145d5bdc9d5b481b9bdd081c995858da195960721b604082015260600190565b6020808252601f908201527f436c61696d6564206164647265737320686f6c6473206e6f2073686172657300604082015260600190565b60208082526018908201527f596f752063616e6e6f742064656c65746520636c61696d730000000000000000604082015260600190565b90815260200190565b60ff91909116815260200190565b600082198211156125625761256261261e565b500190565b60008261258257634e487b7160e01b81526012600452602481fd5b500490565b60008160001904831182151516156125a1576125a161261e565b500290565b6000828210156125b8576125b861261e565b500390565b60005b838110156125d85781810151838201526020016125c0565b838111156115655750506000910152565b6002810460018216806125fd57607f821691505b6020821081141561138e57634e487b7160e01b600052602260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b038116811461189f57600080fd5b801515811461189f57600080fdfea2646970667358221220cca81f1a137c75e4f8220dce06a218f9aada80c95d3dc9f0fe351981533be45964736f6c63430008000033",
    "sourceMap": "3013:1562:0:-:0;;;3041:8:3;3012:37;;2729:1:2;2689:41;;3227:379:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1896:8:1;:20;;-1:-1:-1;;1896:20:1;;;3106:7:2::1;:37:::0;;-1:-1:-1;;;;;3106:37:2;;::::1;-1:-1:-1::0;;;;;;3106:37:2;;::::1;;::::0;;;3154:7:::1;:30:::0;;;;::::1;::::0;;;::::1;::::0;::::1;::::0;;3195:6:::1;:16:::0;;;3392:48:0::1;::::0;-1:-1:-1;;;3392:48:0;;:41:::1;::::0;:48:::1;::::0;3092:1:2;;3392:48:0::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;3451:14:0;;::::1;::::0;-1:-1:-1;3451:5:0::1;::::0;-1:-1:-1;3451:14:0::1;::::0;::::1;::::0;::::1;:::i;:::-;;3227:379:::0;;;;3013:1562;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3013:1562:0;;;-1:-1:-1;3013:1562:0;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:179:6;95:13;;-1:-1:-1;;;;;137:31:6;;127:42;;117:2;;183:1;180;173:12;117:2;76:117;;;:::o;198:1345::-;;;;;382:3;370:9;361:7;357:23;353:33;350:2;;;404:6;396;389:22;350:2;436:16;;-1:-1:-1;;;;;501:14:6;;;498:2;;;533:6;525;518:22;498:2;576:6;565:9;561:22;551:32;;621:7;614:4;610:2;606:13;602:27;592:2;;648:6;640;633:22;592:2;682;676:9;704:2;700;697:10;694:2;;;710:18;;:::i;:::-;759:2;753:9;781:4;851:2;832:13;;-1:-1:-1;;828:27:6;816:40;;812:49;;876:18;;;896:22;;;873:46;870:2;;;922:18;;:::i;:::-;958:2;951:22;982:18;;;1019:11;;;1015:20;;1012:33;-1:-1:-1;1009:2:6;;;1063:6;1055;1048:22;1009:2;1090:6;1081:15;;1105:129;1119:2;1116:1;1113:9;1105:129;;;1207:10;;;1203:19;;1197:26;1176:14;;;1172:23;;1165:59;1130:10;;;;1105:129;;;1252:2;1249:1;1246:9;1243:2;;;1311:6;1306:2;1301;1293:6;1289:15;1285:24;1278:40;1243:2;1347:6;1337:16;;1372:51;1419:2;1408:9;1404:18;1372:51;:::i;:::-;1362:61;;;;;;;1442:51;1489:2;1478:9;1474:18;1442:51;:::i;:::-;1533:2;1518:18;;;;1512:25;340:1203;;;;-1:-1:-1;;;340:1203:6:o;1548:187::-;1713:14;;1706:22;1688:41;;1676:2;1661:18;;1643:92::o;1740:380::-;1825:1;1815:12;;1872:1;1862:12;;;1883:2;;1937:4;1929:6;1925:17;1915:27;;1883:2;1990;1982:6;1979:14;1959:18;1956:38;1953:2;;;2036:10;2031:3;2027:20;2024:1;2017:31;2071:4;2068:1;2061:15;2099:4;2096:1;2089:15;1953:2;;1795:325;;;:::o;2125:127::-;2186:10;2181:3;2177:20;2174:1;2167:31;2217:4;2214:1;2207:15;2241:4;2238:1;2231:15;2157:95;3013:1562:0;;;;;;",
    "deployedSourceMap": "3013:1562:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3227:140:2;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2689:41;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;3010:157:1:-;;;;;;;;;;-1:-1:-1;3010:157:1;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;2394:49:2:-;;;;;;;;;;;;;:::i;3388:38:3:-;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;10711:741::-;;;;;;;;;;-1:-1:-1;10711:741:3;;;;;:::i;:::-;;:::i;:::-;;2888:21:2;;;;;;;;;;;;;:::i;1989:100:1:-;;;;;;;;;;;;;:::i;9091:126:3:-;;;;;;;;;;-1:-1:-1;9091:126:3;;;;;:::i;:::-;;:::i;3638:262:1:-;;;;;;;;;;-1:-1:-1;3638:262:1;;;;;:::i;:::-;;:::i;8063:1020:3:-;;;;;;;;;;-1:-1:-1;8063:1020:3;;;;;:::i;:::-;;:::i;3774:140:0:-;;;;;;;;;;;;;:::i;1817:30:1:-;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;11593:514:3:-;;;;;;;;;;-1:-1:-1;11593:514:3;;;;;:::i;:::-;;:::i;6452:139:2:-;;;;;;;;;;;;;:::i;4309:203:1:-;;;;;;;;;;-1:-1:-1;4309:203:1;;;;;:::i;:::-;;:::i;9363:136:3:-;;;;;;;;;;-1:-1:-1;9363:136:3;;;;;:::i;:::-;;:::i;6143:303:1:-;;;;;;;;;;-1:-1:-1;6143:303:1;;;;;:::i;:::-;;:::i;5616:209:2:-;;;;;;;;;;-1:-1:-1;5616:209:2;;;;;:::i;:::-;;:::i;2471:21::-;;;;;;;;;;;;;:::i;3433:35:3:-;;;;;;;;;;;;;:::i;5559:103::-;;;;;;;;;;-1:-1:-1;5559:103:3;;;;;:::i;:::-;;:::i;10098:427::-;;;;;;;;;;;;;:::i;2152:119:1:-;;;;;;;;;;-1:-1:-1;2152:119:1;;;;;:::i;:::-;;:::i;3922:648:0:-;;;;;;;;;;-1:-1:-1;3922:648:0;;;;;:::i;:::-;;:::i;3012:37:3:-;;;;;;;;;;;;;:::i;7022:366:2:-;;;;;;;;;;;;;:::i;3375:135::-;;;;;;;;;;;;;:::i;9225:130:3:-;;;;;;;;;;-1:-1:-1;9225:130:3;;;;;:::i;:::-;;:::i;4337:101:2:-;;;;;;;;;;;;;:::i;5844:121:3:-;;;;;;;;;;-1:-1:-1;5844:121:3;;;;;:::i;:::-;;:::i;5015:213:1:-;;;;;;;;;;-1:-1:-1;5015:213:1;;;;;:::i;:::-;;:::i;3518:175:2:-;;;;;;;;;;-1:-1:-1;3518:175:2;;;;;:::i;:::-;;:::i;3614:152:0:-;;;;;;;;;;-1:-1:-1;3614:152:0;;;;;:::i;:::-;;:::i;2319:47:2:-;;;;;;;;;;;;;:::i;3207:48:3:-;;;;;;;;;;-1:-1:-1;3207:48:3;;;;;:::i;:::-;;:::i;3815:178:2:-;;;;;;;;;;-1:-1:-1;3815:178:2;;;;;:::i;:::-;;:::i;2860:19::-;;;;;;;;;;;;;:::i;2546:28::-;;;;;;;;;;;;;:::i;3082:39:3:-;;;;;;;;;;-1:-1:-1;3082:39:3;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;:::i;3083:19:0:-;;;;;;;;;;;;;:::i;5833:406:2:-;;;;;;:::i;:::-;;:::i;2720:143:1:-;;;;;;;;;;-1:-1:-1;2720:143:1;;;;;:::i;:::-;;:::i;4772:140:2:-;;;;;;;;;;-1:-1:-1;4772:140:2;;;;;:::i;:::-;;:::i;9507:128:3:-;;;;;;;;;;-1:-1:-1;9507:128:3;;;;;:::i;:::-;;:::i;6247:197:2:-;;;;;;;;;;-1:-1:-1;6247:197:2;;;;;:::i;:::-;;:::i;3227:140::-;3343:7;;:14;;;-1:-1:-1;;;3343:14:2;;;;3273:13;;-1:-1:-1;;;;;3343:7:2;;:12;;:14;;;;;:7;;:14;;;;;;;:7;:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3343:14:2;;;;;;;;;;;;:::i;:::-;3312:46;;;;;;;;:::i;:::-;;;;;;;;;;;;;3298:61;;3227:140;:::o;2689:41::-;;;;:::o;3010:157:1:-;3084:4;3101:36;3110:10;3122:7;3131:5;3101:8;:36::i;:::-;-1:-1:-1;3155:4:1;3010:157;;;;:::o;2394:49:2:-;2436:7;2394:49;:::o;3388:38:3:-;;;-1:-1:-1;;;;;3388:38:3;;:::o;10711:741::-;-1:-1:-1;;;;;10788:19:3;;;10767:18;10788:19;;;:6;:19;;;;;;;;;10767:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10929:15;10921:42;;;;-1:-1:-1;;;10921:42:3;;;;;;;:::i;:::-;;;;;;;;;10982:14;;-1:-1:-1;;;;;10982:28:3;11000:10;10982:28;10974:72;;;;-1:-1:-1;;;10974:72:3;;;;;;;:::i;:::-;11098:15;11083:11;;11065:5;:15;;;:29;;;;:::i;:::-;:48;;11057:86;;;;-1:-1:-1;;;11057:86:3;;;;;;;:::i;:::-;11173:14;;-1:-1:-1;;;;;11205:19:3;;;11154:16;11205:19;;;:6;:19;;;;;;11198:26;;-1:-1:-1;;;;;;11198:26:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;11243:39;-1:-1:-1;;;11243:39:3;;:17;;;;;;:39;;11173:14;;11271:10;;11243:39;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;11235:78;;;;-1:-1:-1;;;11235:78:3;;;;;;;:::i;:::-;11324:56;11334:11;11347:8;11357:22;11367:11;11357:9;:22::i;:::-;11324:9;:56::i;:::-;11423:8;-1:-1:-1;;;;;11396:48:3;11410:11;-1:-1:-1;;;;;11396:48:3;;11433:10;11396:48;;;;;;:::i;:::-;;;;;;;;10711:741;;;;;:::o;2888:21:2:-;;;;:::o;1989:100:1:-;2069:12;;1989:100;:::o;9091:126:3:-;-1:-1:-1;;;;;9181:19:3;;;9154:7;9181:19;;;:6;:19;;;;;:28;;9091:126;;;;:::o;3638:262:1:-;3736:4;3753:36;3763:6;3771:9;3782:6;3753:9;:36::i;:::-;-1:-1:-1;;;;;3829:19:1;;;;;;:11;:19;;;;;;;;3817:10;3829:31;;;;;;;;;3800:70;;3809:6;;3829:40;;3863:6;;3829:40;:::i;:::-;3800:8;:70::i;:::-;-1:-1:-1;3888:4:1;3638:262;;;;;:::o;8063:1020:3:-;8155:30;8173:11;8155:17;:30::i;:::-;8147:75;;;;-1:-1:-1;;;8147:75:3;;;;;;;:::i;:::-;8233:22;8258:33;8276:14;8258:17;:33::i;:::-;8233:58;;8327:1;8310:14;:18;8302:53;;;;-1:-1:-1;;;8302:53:3;;;;;;;:::i;:::-;8385:10;8366:16;8424:22;8434:11;8424:9;:22::i;:::-;8406:40;-1:-1:-1;8457:18:3;8478:24;8488:14;8406:40;8478:24;:::i;:::-;8457:45;-1:-1:-1;8538:14:3;8572:11;8564:55;;;;-1:-1:-1;;;8564:55:3;;;;;;;:::i;:::-;-1:-1:-1;;;;;8638:19:3;;;;;;:6;:19;;;;;:30;;;:35;8630:71;;;;-1:-1:-1;;;8630:71:3;;;;;;;:::i;:::-;8720:58;;-1:-1:-1;;;8720:58:3;;-1:-1:-1;;;;;8720:21:3;;;;;:58;;8742:8;;8760:4;;8767:10;;8720:58;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8712:97;;;;-1:-1:-1;;;8712:97:3;;;;;;;:::i;:::-;8844:172;;;;;;;;-1:-1:-1;;;;;8844:172:3;;;;;;;;;;;;;8946:15;8844:172;;;;;;;;;;;;;;;8822:19;;;-1:-1:-1;8822:19:3;;;:6;:19;;;;;;;:194;;;;;;;-1:-1:-1;;;;;;8822:194:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9034:41;;;;;;9067:7;;9034:41;:::i;:::-;;;;;;;;8063:1020;;;;;;;:::o;3774:140:0:-;3879:7;;3858:48;;;-1:-1:-1;;;3858:48:0;;;;3831:7;;-1:-1:-1;;;;;3879:7:0;;3858:46;;:48;;;;;;;;;;;;;;3879:7;3858:48;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3851:55;;3774:140;:::o;1817:30:1:-;;;;;;:::o;11593:514:3:-;11675:17;:15;:17::i;:::-;-1:-1:-1;;;;;11661:31:3;:10;-1:-1:-1;;;;;11661:31:3;;11653:68;;;;-1:-1:-1;;;11653:68:3;;;;;;;:::i;:::-;-1:-1:-1;;;;;11753:19:3;;;11732:18;11753:19;;;:6;:19;;;;;;;;;11732:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11838:48;;;;-1:-1:-1;;;11838:48:3;;;;;;;:::i;:::-;-1:-1:-1;;;;;11904:19:3;;;;;;;:6;:19;;;;;;;;11897:26;;-1:-1:-1;;;;;;11897:26:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;11960:14;;11976:16;;;;11942:51;;-1:-1:-1;;;11942:51:3;;:17;;;;;;:51;;11960:14;11942:51;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;11934:90;;;;-1:-1:-1;;;11934:90:3;;;;;;;:::i;:::-;12066:5;:14;;;-1:-1:-1;;;;;12040:59:3;12053:11;-1:-1:-1;;;;;12040:59:3;;12082:5;:16;;;12040:59;;;;;;:::i;:::-;;;;;;;;11593:514;;;:::o;6452:139:2:-;6524:5;;-1:-1:-1;;;;;6524:5:2;6502:10;:28;6498:86;;;6546:5;:26;;-1:-1:-1;;;;;;6546:26:2;;;6498:86;6452:139::o;4309:203:1:-;4415:10;4389:4;4436:23;;;:11;:23;;;;;;;;-1:-1:-1;;;;;4436:32:1;;;;;;;;;;4389:4;;4406:76;;4427:7;;4436:45;;4471:10;;4436:45;:::i;9363:136:3:-;-1:-1:-1;;;;;9459:19:3;;;9432:7;9459:19;;;:6;:19;;;;;:32;;;;;9363:136::o;6143:303:1:-;6237:4;6254:12;6269:27;6278:9;6289:6;6269:8;:27::i;:::-;6254:42;;6311:7;6307:107;;;6334:68;;-1:-1:-1;;;6334:68:1;;-1:-1:-1;;;;;6334:42:1;;;;;:68;;6377:10;;6389:6;;6397:4;;;;6334:68;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6307:107;6431:7;6143:303;-1:-1:-1;;;;;6143:303:1:o;5616:209:2:-;5664:25;5670:10;5682:6;5664:5;:25::i;:::-;5700:14;5717:11;:9;:11::i;:::-;:40;;5735:22;;5717:40;;;5731:1;5717:40;5786:7;;5700:57;;-1:-1:-1;;;;;;5786:7:2;5768:32;5801:15;5700:57;5801:6;:15;:::i;:::-;5768:49;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5616:209;;:::o;2471:21::-;;;-1:-1:-1;;;;;2471:21:2;;:::o;3433:35:3:-;;;;:::o;5559:103::-;5632:10;5615:28;;;;:16;:28;;;;;:39;;-1:-1:-1;;5615:39:3;5646:8;;5615:39;;;;;;5559:103::o;10098:427::-;10149:10;10142:18;;;;:6;:18;;;;;:29;;;:34;10138:380;;10221:10;10193:18;10214;;;:6;:18;;;;;;:29;;;;;10283:31;;;;;10330:25;;-1:-1:-1;;;;;;10330:25:3;;;;;;;;;-1:-1:-1;10330:25:3;;;;;;;;;;;;;10378:41;;-1:-1:-1;;;10378:41:3;;10214:29;;-1:-1:-1;;;;;10283:31:3;;;;;;10378:17;;:41;;10221:10;10214:29;;10378:41;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;10370:80;;;;-1:-1:-1;;;10370:80:3;;;;;;;:::i;:::-;10483:10;-1:-1:-1;;;;;10470:36:3;;10495:10;10470:36;;;;;;:::i;:::-;;;;;;;;10138:380;;10098:427::o;2152:119:1:-;-1:-1:-1;;;;;2245:18:1;2218:7;2245:18;;;;;;;;;;;;2152:119::o;3922:648:0:-;4003:7;4023:12;4038:39;4062:14;4038:23;:39::i;:::-;4023:54;-1:-1:-1;4092:8:0;;4088:475;;4124:4;-1:-1:-1;4117:11:0;;4088:475;4176:7;;-1:-1:-1;;;;;4150:34:0;;;4176:7;;4150:34;4146:417;;;-1:-1:-1;;4208:22:0;;4201:29;;4146:417;4529:22;;4483:7;;4462:64;;-1:-1:-1;;;4462:64:0;;-1:-1:-1;;;;;4483:7:0;;;;4462:48;;:64;;4511:14;;4462:64;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:89;;;;:::i;:::-;4455:96;;;;;4146:417;3922:648;;;;:::o;3012:37:3:-;;;;:::o;7022:366:2:-;7079:10;7109:13;:11;:13::i;:::-;7108:14;7100:23;;;;;;7245:13;:11;:13::i;:::-;:20;;7261:4;7245:20;:::i;:::-;7213;7223:9;7213;:20::i;:::-;:28;;7236:5;7213:28;:::i;:::-;:52;;7205:83;;;;-1:-1:-1;;;7205:83:2;;;;;;;:::i;:::-;7299:36;7314:9;7325;7299:14;:36::i;:::-;7351:29;7370:9;7351:29;;;;;;:::i;:::-;;;;;;;;7022:366;:::o;3375:135::-;3484:7;;:16;;;-1:-1:-1;;;3484:16:2;;;;3423:13;;-1:-1:-1;;;;;3484:7:2;;:14;;:16;;;;;:7;;:16;;;;;;;:7;:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3484:16:2;;;;;;;;;;;;:::i;:::-;3462:39;;;;;;;;:::i;9225:130:3:-;-1:-1:-1;;;;;9317:19:3;9290:7;9317:19;;;:6;:19;;;;;:30;;;;9225:130::o;4337:101:2:-;4403:22;;:27;4337:101;:::o;5844:121:3:-;-1:-1:-1;;;;;5933:24:3;5908:4;5933:24;;;:16;:24;;;;;;;;5932:25;;5844:121::o;5015:213:1:-;5126:10;5100:4;5147:23;;;:11;:23;;;;;;;;-1:-1:-1;;;;;5147:32:1;;;;;;;;;;5100:4;;5117:81;;5138:7;;5147:50;;5182:15;;5147:50;:::i;3518:175:2:-;3646:7;;-1:-1:-1;;;;;3646:7:2;3624:10;:30;3616:39;;;;;;3666:19;3672:4;3678:6;3666:5;:19::i;:::-;3518:175;;;;:::o;3614:152:0:-;3709:4;3733:25;3748:2;3752:5;3733:14;:25::i;:::-;3726:32;3614:152;-1:-1:-1;;;3614:152:0:o;2319:47:2:-;2359:7;2319:47;:::o;3207:48:3:-;;;;;;;;;;;;;;;:::o;3815:178:2:-;3892:7;;:55;;-1:-1:-1;;;3892:55:2;;-1:-1:-1;;;;;3892:7:2;;;;:20;;:55;;3913:10;;3933:4;;3940:6;;3892:55;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3884:64;;;;;;3959:26;3965:11;3978:6;3959:5;:26::i;:::-;3815:178;;:::o;2860:19::-;;;-1:-1:-1;;;;;2860:19:2;;:::o;2546:28::-;;;-1:-1:-1;;;;;2546:28:2;;:::o;3082:39:3:-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3082:39:3;;;;;;;;:::o;3083:19:0:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;5833:406:2:-;5952:11;:9;:11::i;:::-;5944:20;;;;;;5994:7;;6070:6;;5994:115;;-1:-1:-1;;;5994:115:2;;5975:16;;-1:-1:-1;;;;;5994:7:2;;:14;;6016:9;;5994:115;;6027:4;;6033:10;;6045:13;;6060:8;;2359:7;;2436;;5994:115;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5975:134;;6132:13;:11;:13::i;:::-;6128:69;;;6162:5;;:23;;-1:-1:-1;;;6162:23:2;;-1:-1:-1;;;;;6162:5:2;;;;:13;;:23;;6176:8;;6162:23;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6128:69;6207:5;:24;;-1:-1:-1;;;;;;6207:24:2;-1:-1:-1;;;;;6207:24:2;;;;;;;;;;-1:-1:-1;;;5833:406:2:o;2720:143:1:-;-1:-1:-1;;;;;2828:18:1;;;2801:7;2828:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;2720:143::o;4772:140:2:-;4831:11;:9;:11::i;:::-;4830:12;4822:21;;;;;;4854:50;4861:10;4873:6;4881:22;;4854:6;:50::i;:::-;4772:140;:::o;9507:128:3:-;-1:-1:-1;;;;;9598:19:3;9571:7;9598:19;;;:6;:19;;;;;:29;;;;9507:128::o;6247:197:2:-;6342:5;;-1:-1:-1;;;;;6342:5:2;6320:10;:28;6312:37;;;;;;6360:34;6367:5;6374:16;6384:5;6374:9;:16::i;:::-;6392:1;6360:6;:34::i;:::-;6405:31;6420:8;6430:5;6405:14;:31::i;8073:175:1:-;-1:-1:-1;;;;;8158:18:1;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;;:35;;;8209:31;;;;;8188:5;;8209:31;:::i;5718:330::-;-1:-1:-1;;;;;5824:23:1;;5816:32;;;;;;5861:47;5882:6;5890:9;5901:6;5861:20;:47::i;:::-;-1:-1:-1;;;;;5921:17:1;;:9;:17;;;;;;;;;;:27;;5942:6;;5921:9;:27;;5942:6;;5921:27;:::i;:::-;;;;-1:-1:-1;;;;;;;5959:20:1;;:9;:20;;;;;;;;;;:30;;5983:6;;5959:9;:30;;5983:6;;5959:30;:::i;:::-;;;;;;;;6022:9;-1:-1:-1;;;;;6005:35:1;6014:6;-1:-1:-1;;;;;6005:35:1;;6033:6;6005:35;;;;;;:::i;7373:260::-;7449:49;7470:7;7487:1;7491:6;7449:20;:49::i;:::-;7527:6;7511:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;7544:18:1;;:9;:18;;;;;;;;;;:28;;7566:6;;7544:9;:28;;7566:6;;7544:28;:::i;:::-;;;;-1:-1:-1;;7588:37:1;;7614:1;;-1:-1:-1;;;;;7588:37:1;;;;;;;7618:6;;7588:37;:::i;:::-;;;;;;;;7373:260;;:::o;3806:327:3:-;3886:7;-1:-1:-1;;;;;3910:31:3;;3936:4;3910:31;3906:220;;;-1:-1:-1;3965:1:3;3958:8;;3906:220;4006:23;;-1:-1:-1;;;;;3988:41:3;;;4006:23;;3988:41;3984:142;;;-1:-1:-1;4053:20:3;;4046:27;;3984:142;-1:-1:-1;4113:1:3;4106:8;;7593:106:2;7671:5;;-1:-1:-1;;;;;7671:5:2;7663:28;;7593:106;:::o;6599:415::-;6702:11;:9;:11::i;:::-;6694:20;;;;;;6781:7;;6821:32;;-1:-1:-1;;;6821:32:2;;-1:-1:-1;;;;;6781:7:2;;;;:16;;6798:21;;6781:7;;6821:17;;:32;;6847:4;;6821:32;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6781:73;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6773:82;;;;;;6907:7;:28;;-1:-1:-1;;;;;;6907:28:2;-1:-1:-1;;;;;6907:28:2;;;;;6946:60;6992:13;:11;:13::i;:::-;6957:7;;:32;;-1:-1:-1;;;6957:32:2;;-1:-1:-1;;;;;6957:7:2;;;;:17;;:32;;6983:4;;6957:32;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:48;;;;:::i;:::-;6946:10;:60::i;6727:313:1:-;-1:-1:-1;;;;;6813:23:1;;6805:32;;;;;;6850:51;6879:1;6883:9;6894:6;6850:20;:51::i;:::-;6930:6;6914:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;6947:20:1;;:9;:20;;;;;;;;;;:30;;6971:6;;6947:9;:30;;6971:6;;6947:30;:::i;:::-;;;;-1:-1:-1;;6993:39:1;;-1:-1:-1;;;;;6993:39:1;;;7010:1;;6993:39;;;;7025:6;;6993:39;:::i;9643:217:3:-;9729:4;9754:33;9769:9;9780:6;9754:14;:33::i;:::-;9746:61;;;;-1:-1:-1;;;9746:61:3;;;;;;;:::i;:::-;9818:12;:10;:12::i;4924:171:2:-;5007:20;5013:5;5020:6;5007:5;:20::i;:::-;5046:7;;-1:-1:-1;;;;;5046:7:2;:16;5063:5;5070:15;5079:6;5070;:15;:::i;:::-;5046:40;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5038:49;;;;;;4924:171;;;:::o;7396:189::-;7501:13;:11;:13::i;:::-;7497:81;;;7531:5;;:35;;-1:-1:-1;;;7531:35:2;;-1:-1:-1;;;;;7531:5:2;;;;:17;;:35;;7549:4;;7555:2;;7559:6;;7531:35;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7396:189;;;:::o;4542:126::-;4616:1;4606:6;:11;;4598:20;;;;;;4629:22;:31;4542:126::o;2484:173:1:-;2570:4;2587:40;2597:10;2609:9;2620:6;2587:9;:40::i;14:259:6:-;;126:2;114:9;105:7;101:23;97:32;94:2;;;147:6;139;132:22;94:2;191:9;178:23;210:33;237:5;210:33;:::i;278:263::-;;401:2;389:9;380:7;376:23;372:32;369:2;;;422:6;414;407:22;369:2;459:9;453:16;478:33;505:5;478:33;:::i;546:402::-;;;675:2;663:9;654:7;650:23;646:32;643:2;;;696:6;688;681:22;643:2;740:9;727:23;759:33;786:5;759:33;:::i;:::-;811:5;-1:-1:-1;868:2:6;853:18;;840:32;881:35;840:32;881:35;:::i;:::-;935:7;925:17;;;633:315;;;;;:::o;953:470::-;;;;1099:2;1087:9;1078:7;1074:23;1070:32;1067:2;;;1120:6;1112;1105:22;1067:2;1164:9;1151:23;1183:33;1210:5;1183:33;:::i;:::-;1235:5;-1:-1:-1;1292:2:6;1277:18;;1264:32;1305:35;1264:32;1305:35;:::i;:::-;1057:366;;1359:7;;-1:-1:-1;;;1413:2:6;1398:18;;;;1385:32;;1057:366::o;1428:327::-;;;1557:2;1545:9;1536:7;1532:23;1528:32;1525:2;;;1578:6;1570;1563:22;1525:2;1622:9;1609:23;1641:33;1668:5;1641:33;:::i;:::-;1693:5;1745:2;1730:18;;;;1717:32;;-1:-1:-1;;;1515:240:6:o;1760:846::-;;;;;1925:2;1913:9;1904:7;1900:23;1896:32;1893:2;;;1946:6;1938;1931:22;1893:2;1990:9;1977:23;2009:33;2036:5;2009:33;:::i;:::-;2061:5;-1:-1:-1;2113:2:6;2098:18;;2085:32;;-1:-1:-1;2168:2:6;2153:18;;2140:32;2191:18;2221:14;;;2218:2;;;2253:6;2245;2238:22;2218:2;2296:6;2285:9;2281:22;2271:32;;2341:7;2334:4;2330:2;2326:13;2322:27;2312:2;;2368:6;2360;2353:22;2312:2;2413;2400:16;2439:2;2431:6;2428:14;2425:2;;;2460:6;2452;2445:22;2425:2;2510:7;2505:2;2496:6;2492:2;2488:15;2484:24;2481:37;2478:2;;;2536:6;2528;2521:22;2478:2;1883:723;;;;-1:-1:-1;;2572:2:6;2564:11;;-1:-1:-1;;;1883:723:6:o;2611:253::-;;2720:2;2708:9;2699:7;2695:23;2691:32;2688:2;;;2741:6;2733;2726:22;2688:2;2785:9;2772:23;2804:30;2828:5;2804:30;:::i;2869:257::-;;2989:2;2977:9;2968:7;2964:23;2960:32;2957:2;;;3010:6;3002;2995:22;2957:2;3047:9;3041:16;3066:30;3090:5;3066:30;:::i;3131:395::-;;;;3277:2;3265:9;3256:7;3252:23;3248:32;3245:2;;;3298:6;3290;3283:22;3245:2;3339:9;3326:23;3316:33;;3396:2;3385:9;3381:18;3368:32;3358:42;;3450:2;3439:9;3435:18;3422:32;3463:33;3490:5;3463:33;:::i;:::-;3515:5;3505:15;;;3235:291;;;;;:::o;3531:894::-;;3664:2;3652:9;3643:7;3639:23;3635:32;3632:2;;;3685:6;3677;3670:22;3632:2;3723:9;3717:16;3752:18;3793:2;3785:6;3782:14;3779:2;;;3814:6;3806;3799:22;3779:2;3857:6;3846:9;3842:22;3832:32;;3902:7;3895:4;3891:2;3887:13;3883:27;3873:2;;3929:6;3921;3914:22;3873:2;3963;3957:9;3985:2;3981;3978:10;3975:2;;;3991:18;;:::i;:::-;4040:2;4034:9;4109:2;4090:13;;-1:-1:-1;;4086:27:6;4074:40;;4116:2;4070:49;4134:18;;;4154:22;;;4131:46;4128:2;;;4180:18;;:::i;:::-;4216:2;4209:22;4240:18;;;4277:11;;;4290:2;4273:20;4270:33;-1:-1:-1;4267:2:6;;;4321:6;4313;4306:22;4267:2;4339:55;4391:2;4386;4378:6;4374:15;4369:2;4365;4361:11;4339:55;:::i;:::-;4413:6;3622:803;-1:-1:-1;;;;;;3622:803:6:o;4430:190::-;;4542:2;4530:9;4521:7;4517:23;4513:32;4510:2;;;4563:6;4555;4548:22;4510:2;-1:-1:-1;4591:23:6;;4500:120;-1:-1:-1;4500:120:6:o;4625:194::-;;4748:2;4736:9;4727:7;4723:23;4719:32;4716:2;;;4769:6;4761;4754:22;4716:2;-1:-1:-1;4797:16:6;;4706:113;-1:-1:-1;4706:113:6:o;4824:418::-;;-1:-1:-1;;;5081:3:6;5074:16;5119:6;5113:13;5135:61;5189:6;5185:1;5180:3;5176:11;5169:4;5161:6;5157:17;5135:61;:::i;:::-;5216:16;;;;5234:1;5212:24;;5064:178;-1:-1:-1;;5064:178:6:o;5247:429::-;;-1:-1:-1;;;5504:3:6;5497:25;5551:6;5545:13;5567:62;5622:6;5617:2;5612:3;5608:12;5601:4;5593:6;5589:17;5567:62;:::i;:::-;5649:16;;;;5667:2;5645:25;;5487:189;-1:-1:-1;;5487:189:6:o;5681:203::-;-1:-1:-1;;;;;5845:32:6;;;;5827:51;;5815:2;5800:18;;5782:102::o;5889:375::-;-1:-1:-1;;;;;6147:15:6;;;6129:34;;6199:15;;;;6194:2;6179:18;;6172:43;6246:2;6231:18;;6224:34;;;;6079:2;6064:18;;6046:218::o;6269:274::-;-1:-1:-1;;;;;6461:32:6;;;;6443:51;;6525:2;6510:18;;6503:34;6431:2;6416:18;;6398:145::o;6548:562::-;-1:-1:-1;;;;;6761:32:6;;6743:51;;6825:2;6810:18;;6803:34;;;6873:2;6868;6853:18;;6846:30;;;6892:18;;6885:34;;;6548:562;6912:6;6962;6956:3;6941:19;;6928:49;6997:22;;;7021:3;6993:32;;;6986:46;;;;7093:2;7072:15;;;-1:-1:-1;;7068:29:6;7053:45;7049:55;;6733:377;-1:-1:-1;;;6733:377:6:o;7115:447::-;-1:-1:-1;;;;;7402:15:6;;;7384:34;;7449:2;7434:18;;7427:34;;;;7492:2;7477:18;;7470:34;;;;7540:15;;;7535:2;7520:18;;7513:43;7333:3;7318:19;;7300:262::o;7567:187::-;7732:14;;7725:22;7707:41;;7695:2;7680:18;;7662:92::o;7759:663::-;8074:25;;;-1:-1:-1;;;;;8173:15:6;;;8168:2;8153:18;;8146:43;8220:2;8205:18;;8198:34;;;;8268:15;;;;8263:2;8248:18;;8241:43;8315:3;8300:19;;8293:35;;;;8126:3;8344:19;;8337:35;;;;8403:3;8388:19;;8381:35;8061:3;8046:19;;8028:394::o;9103:383::-;;9252:2;9241:9;9234:21;9284:6;9278:13;9327:6;9322:2;9311:9;9307:18;9300:34;9343:66;9402:6;9397:2;9386:9;9382:18;9377:2;9369:6;9365:15;9343:66;:::i;:::-;9470:2;9449:15;-1:-1:-1;;9445:29:6;9430:45;;;;9477:2;9426:54;;9224:262;-1:-1:-1;;9224:262:6:o;9491:355::-;9693:2;9675:21;;;9732:2;9712:18;;;9705:30;9771:33;9766:2;9751:18;;9744:61;9837:2;9822:18;;9665:181::o;9851:349::-;10053:2;10035:21;;;10092:2;10072:18;;;10065:30;10131:27;10126:2;10111:18;;10104:55;10191:2;10176:18;;10025:175::o;10205:339::-;10407:2;10389:21;;;10446:2;10426:18;;;10419:30;-1:-1:-1;;;10480:2:6;10465:18;;10458:45;10535:2;10520:18;;10379:165::o;10549:346::-;10751:2;10733:21;;;10790:2;10770:18;;;10763:30;-1:-1:-1;;;10824:2:6;10809:18;;10802:52;10886:2;10871:18;;10723:172::o;10900:338::-;11102:2;11084:21;;;11141:2;11121:18;;;11114:30;-1:-1:-1;;;11175:2:6;11160:18;;11153:44;11229:2;11214:18;;11074:164::o;11243:350::-;11445:2;11427:21;;;11484:2;11464:18;;;11457:30;11523:28;11518:2;11503:18;;11496:56;11584:2;11569:18;;11417:176::o;11598:356::-;11800:2;11782:21;;;11819:18;;;11812:30;11878:34;11873:2;11858:18;;11851:62;11945:2;11930:18;;11772:182::o;11959:347::-;12161:2;12143:21;;;12200:2;12180:18;;;12173:30;12239:25;12234:2;12219:18;;12212:53;12297:2;12282:18;;12133:173::o;12311:342::-;12513:2;12495:21;;;12552:2;12532:18;;;12525:30;-1:-1:-1;;;12586:2:6;12571:18;;12564:48;12644:2;12629:18;;12485:168::o;12658:355::-;12860:2;12842:21;;;12899:2;12879:18;;;12872:30;12938:33;12933:2;12918:18;;12911:61;13004:2;12989:18;;12832:181::o;13018:348::-;13220:2;13202:21;;;13259:2;13239:18;;;13232:30;13298:26;13293:2;13278:18;;13271:54;13357:2;13342:18;;13192:174::o;13371:177::-;13517:25;;;13505:2;13490:18;;13472:76::o;13553:184::-;13725:4;13713:17;;;;13695:36;;13683:2;13668:18;;13650:87::o;13742:128::-;;13813:1;13809:6;13806:1;13803:13;13800:2;;;13819:18;;:::i;:::-;-1:-1:-1;13855:9:6;;13790:80::o;13875:217::-;;13941:1;13931:2;;-1:-1:-1;;;13966:31:6;;14020:4;14017:1;14010:15;14048:4;13973:1;14038:15;13931:2;-1:-1:-1;14077:9:6;;13921:171::o;14097:168::-;;14203:1;14199;14195:6;14191:14;14188:1;14185:21;14180:1;14173:9;14166:17;14162:45;14159:2;;;14210:18;;:::i;:::-;-1:-1:-1;14250:9:6;;14149:116::o;14270:125::-;;14338:1;14335;14332:8;14329:2;;;14343:18;;:::i;:::-;-1:-1:-1;14380:9:6;;14319:76::o;14400:258::-;14472:1;14482:113;14496:6;14493:1;14490:13;14482:113;;;14572:11;;;14566:18;14553:11;;;14546:39;14518:2;14511:10;14482:113;;;14613:6;14610:1;14607:13;14604:2;;;-1:-1:-1;;14648:1:6;14630:16;;14623:27;14453:205::o;14663:380::-;14748:1;14738:12;;14795:1;14785:12;;;14806:2;;14860:4;14852:6;14848:17;14838:27;;14806:2;14913;14905:6;14902:14;14882:18;14879:38;14876:2;;;14959:10;14954:3;14950:20;14947:1;14940:31;14994:4;14991:1;14984:15;15022:4;15019:1;15012:15;15048:127;15109:10;15104:3;15100:20;15097:1;15090:31;15140:4;15137:1;15130:15;15164:4;15161:1;15154:15;15180:127;15241:10;15236:3;15232:20;15229:1;15222:31;15272:4;15269:1;15262:15;15296:4;15293:1;15286:15;15312:133;-1:-1:-1;;;;;15389:31:6;;15379:42;;15369:2;;15435:1;15432;15425:12;15450:120;15538:5;15531:13;15524:21;15517:5;15514:32;15504:2;;15560:1;15557;15550:12",
    "sourcePath": "c:/Users/luziu/Documents/aktionariat/contracts/src/DraggableShares.sol",
    "compiler": {
        "name": "solc",
        "version": "0.8.0+commit.c7dfd78e"
    },
    "ast": {
        "absolutePath": "c:/Users/luziu/Documents/aktionariat/contracts/src/DraggableShares.sol",
        "exportedSymbols": {
            "DraggableShares": [
                121
            ],
            "ERC20": [
                542
            ],
            "ERC20Draggable": [
                1024
            ],
            "ERC20Recoverable": [
                1654
            ],
            "IBurnable": [
                1030
            ],
            "IERC20": [
                1747
            ],
            "IERC677Receiver": [
                1759
            ],
            "IOffer": [
                1045
            ],
            "IOfferFactory": [
                1065
            ],
            "IRecoverable": [
                139
            ]
        },
        "id": 140,
        "license": "LicenseRef-Aktionariat",
        "nodeType": "SourceUnit",
        "nodes": [
            {
                "id": 1,
                "literals": [
                    "solidity",
                    ">=",
                    "0.8"
                ],
                "nodeType": "PragmaDirective",
                "src": "1336:22:0"
            },
            {
                "absolutePath": "c:/Users/luziu/Documents/aktionariat/contracts/src/ERC20Recoverable.sol",
                "file": "./ERC20Recoverable.sol",
                "id": 2,
                "nodeType": "ImportDirective",
                "scope": 140,
                "sourceUnit": 1655,
                "src": "1362:32:0",
                "symbolAliases": [],
                "unitAlias": ""
            },
            {
                "absolutePath": "c:/Users/luziu/Documents/aktionariat/contracts/src/ERC20Draggable.sol",
                "file": "./ERC20Draggable.sol",
                "id": 3,
                "nodeType": "ImportDirective",
                "scope": 140,
                "sourceUnit": 1066,
                "src": "1396:30:0",
                "symbolAliases": [],
                "unitAlias": ""
            },
            {
                "abstract": false,
                "baseContracts": [
                    {
                        "baseName": {
                            "id": 5,
                            "name": "ERC20Recoverable",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 1654,
                            "src": "3041:16:0"
                        },
                        "id": 6,
                        "nodeType": "InheritanceSpecifier",
                        "src": "3041:16:0"
                    },
                    {
                        "baseName": {
                            "id": 7,
                            "name": "ERC20Draggable",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 1024,
                            "src": "3059:14:0"
                        },
                        "id": 8,
                        "nodeType": "InheritanceSpecifier",
                        "src": "3059:14:0"
                    }
                ],
                "contractDependencies": [
                    542,
                    1024,
                    1654,
                    1747,
                    1759
                ],
                "contractKind": "contract",
                "documentation": {
                    "id": 4,
                    "nodeType": "StructuredDocumentation",
                    "src": "1430:1579:0",
                    "text": " @title Draggable CompanyName AG Shares\n @author Luzius Meisser, luzius@meissereconomics.com\n This is an ERC-20 token representing shares of CompanyName AG that are bound to\n a shareholder agreement that can be found at the URL defined in the constant 'terms'.\n The shareholder agreement is partially enforced through this smart contract. The agreement\n is designed to facilitate a complete acquisition of the firm even if a minority of shareholders\n disagree with the acquisition, to protect the interest of the minority shareholders by requiring\n the acquirer to offer the same conditions to everyone when acquiring the company, and to\n facilitate an update of the shareholder agreement even if a minority of the shareholders that\n are bound to this agreement disagree. The name \"draggable\" stems from the convention of calling\n the right to drag a minority along with a sale of the company \"drag-along\" rights. The name is\n chosen to ensure that token holders are aware that they are bound to such an agreement.\n The percentage of token holders that must agree with an update of the terms is defined by the\n constant UPDATE_QUORUM. The percentage of yes-votes that is needed to successfully complete an\n acquisition is defined in the constant ACQUISITION_QUORUM. Note that the update quorum is based\n on the total number of tokens in circulation. In contrast, the acquisition quorum is based on the\n number of votes cast during the voting period, not taking into account those who did not bother\n to vote."
                },
                "fullyImplemented": true,
                "id": 121,
                "linearizedBaseContracts": [
                    121,
                    1024,
                    1759,
                    1654,
                    542,
                    1747
                ],
                "name": "DraggableShares",
                "nodeType": "ContractDefinition",
                "nodes": [
                    {
                        "constant": false,
                        "functionSelector": "d5025625",
                        "id": 10,
                        "mutability": "mutable",
                        "name": "terms",
                        "nodeType": "VariableDeclaration",
                        "scope": 121,
                        "src": "3083:19:0",
                        "stateVariable": true,
                        "storageLocation": "default",
                        "typeDescriptions": {
                            "typeIdentifier": "t_string_storage",
                            "typeString": "string"
                        },
                        "typeName": {
                            "id": 9,
                            "name": "string",
                            "nodeType": "ElementaryTypeName",
                            "src": "3083:6:0",
                            "typeDescriptions": {
                                "typeIdentifier": "t_string_storage_ptr",
                                "typeString": "string"
                            }
                        },
                        "visibility": "public"
                    },
                    {
                        "body": {
                            "id": 38,
                            "nodeType": "Block",
                            "src": "3381:225:0",
                            "statements": [
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "hexValue": "66616c7365",
                                                "id": 31,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "bool",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "3434:5:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                },
                                                "value": "false"
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            ],
                                            "expression": {
                                                "arguments": [
                                                    {
                                                        "id": 28,
                                                        "name": "wrappedToken",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 17,
                                                        "src": "3405:12:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        }
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        }
                                                    ],
                                                    "id": 27,
                                                    "name": "IRecoverable",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 139,
                                                    "src": "3392:12:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_type$_t_contract$_IRecoverable_$139_$",
                                                        "typeString": "type(contract IRecoverable)"
                                                    }
                                                },
                                                "id": 29,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "typeConversion",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "3392:26:0",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_contract$_IRecoverable_$139",
                                                    "typeString": "contract IRecoverable"
                                                }
                                            },
                                            "id": 30,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "setRecoverable",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 126,
                                            "src": "3392:41:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_external_nonpayable$_t_bool_$returns$__$",
                                                "typeString": "function (bool) external"
                                            }
                                        },
                                        "id": 32,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "3392:48:0",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 33,
                                    "nodeType": "ExpressionStatement",
                                    "src": "3392:48:0"
                                },
                                {
                                    "expression": {
                                        "id": 36,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftHandSide": {
                                            "id": 34,
                                            "name": "terms",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 10,
                                            "src": "3451:5:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_string_storage",
                                                "typeString": "string storage ref"
                                            }
                                        },
                                        "nodeType": "Assignment",
                                        "operator": "=",
                                        "rightHandSide": {
                                            "id": 35,
                                            "name": "_terms",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 13,
                                            "src": "3459:6:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_string_memory_ptr",
                                                "typeString": "string memory"
                                            }
                                        },
                                        "src": "3451:14:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_string_storage",
                                            "typeString": "string storage ref"
                                        }
                                    },
                                    "id": 37,
                                    "nodeType": "ExpressionStatement",
                                    "src": "3451:14:0"
                                }
                            ]
                        },
                        "documentation": {
                            "id": 11,
                            "nodeType": "StructuredDocumentation",
                            "src": "3111:110:0",
                            "text": " Designed to be used with the Crypto Franc as currency token. See also parent constructor."
                        },
                        "id": 39,
                        "implemented": true,
                        "kind": "constructor",
                        "modifiers": [
                            {
                                "arguments": [
                                    {
                                        "id": 22,
                                        "name": "offerFactory",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 15,
                                        "src": "3345:12:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    {
                                        "id": 23,
                                        "name": "wrappedToken",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 17,
                                        "src": "3359:12:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    {
                                        "id": 24,
                                        "name": "quorum",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 19,
                                        "src": "3373:6:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    }
                                ],
                                "id": 25,
                                "modifierName": {
                                    "id": 21,
                                    "name": "ERC20Draggable",
                                    "nodeType": "IdentifierPath",
                                    "referencedDeclaration": 1024,
                                    "src": "3330:14:0"
                                },
                                "nodeType": "ModifierInvocation",
                                "src": "3330:50:0"
                            }
                        ],
                        "name": "",
                        "nodeType": "FunctionDefinition",
                        "parameters": {
                            "id": 20,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 13,
                                    "mutability": "mutable",
                                    "name": "_terms",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 39,
                                    "src": "3239:20:0",
                                    "stateVariable": false,
                                    "storageLocation": "memory",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_string_memory_ptr",
                                        "typeString": "string"
                                    },
                                    "typeName": {
                                        "id": 12,
                                        "name": "string",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "3239:6:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_string_storage_ptr",
                                            "typeString": "string"
                                        }
                                    },
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 15,
                                    "mutability": "mutable",
                                    "name": "offerFactory",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 39,
                                    "src": "3261:20:0",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                    },
                                    "typeName": {
                                        "id": 14,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "3261:7:0",
                                        "stateMutability": "nonpayable",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 17,
                                    "mutability": "mutable",
                                    "name": "wrappedToken",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 39,
                                    "src": "3283:20:0",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                    },
                                    "typeName": {
                                        "id": 16,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "3283:7:0",
                                        "stateMutability": "nonpayable",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 19,
                                    "mutability": "mutable",
                                    "name": "quorum",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 39,
                                    "src": "3305:14:0",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                    },
                                    "typeName": {
                                        "id": 18,
                                        "name": "uint256",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "3305:7:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "3238:82:0"
                        },
                        "returnParameters": {
                            "id": 26,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "3381:0:0"
                        },
                        "scope": 121,
                        "src": "3227:379:0",
                        "stateMutability": "nonpayable",
                        "virtual": false,
                        "visibility": "public"
                    },
                    {
                        "baseFunctions": [
                            216,
                            1448
                        ],
                        "body": {
                            "id": 57,
                            "nodeType": "Block",
                            "src": "3715:51:0",
                            "statements": [
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "id": 53,
                                                "name": "to",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 41,
                                                "src": "3748:2:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            {
                                                "id": 54,
                                                "name": "value",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 43,
                                                "src": "3752:5:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                },
                                                {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            ],
                                            "expression": {
                                                "id": 51,
                                                "name": "super",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 4294967271,
                                                "src": "3733:5:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_type$_t_super$_DraggableShares_$121_$",
                                                    "typeString": "type(contract super DraggableShares)"
                                                }
                                            },
                                            "id": 52,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "transfer",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 1448,
                                            "src": "3733:14:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                                "typeString": "function (address,uint256) returns (bool)"
                                            }
                                        },
                                        "id": 55,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "3733:25:0",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                        }
                                    },
                                    "functionReturnParameters": 50,
                                    "id": 56,
                                    "nodeType": "Return",
                                    "src": "3726:32:0"
                                }
                            ]
                        },
                        "functionSelector": "a9059cbb",
                        "id": 58,
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [],
                        "name": "transfer",
                        "nodeType": "FunctionDefinition",
                        "overrides": {
                            "id": 47,
                            "nodeType": "OverrideSpecifier",
                            "overrides": [
                                {
                                    "id": 45,
                                    "name": "ERC20Recoverable",
                                    "nodeType": "IdentifierPath",
                                    "referencedDeclaration": 1654,
                                    "src": "3668:16:0"
                                },
                                {
                                    "id": 46,
                                    "name": "ERC20",
                                    "nodeType": "IdentifierPath",
                                    "referencedDeclaration": 542,
                                    "src": "3686:5:0"
                                }
                            ],
                            "src": "3659:33:0"
                        },
                        "parameters": {
                            "id": 44,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 41,
                                    "mutability": "mutable",
                                    "name": "to",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 58,
                                    "src": "3632:10:0",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                    },
                                    "typeName": {
                                        "id": 40,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "3632:7:0",
                                        "stateMutability": "nonpayable",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 43,
                                    "mutability": "mutable",
                                    "name": "value",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 58,
                                    "src": "3644:13:0",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                    },
                                    "typeName": {
                                        "id": 42,
                                        "name": "uint256",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "3644:7:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "3631:27:0"
                        },
                        "returnParameters": {
                            "id": 50,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 49,
                                    "mutability": "mutable",
                                    "name": "",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 58,
                                    "src": "3709:4:0",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                    },
                                    "typeName": {
                                        "id": 48,
                                        "name": "bool",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "3709:4:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "3708:6:0"
                        },
                        "scope": 121,
                        "src": "3614:152:0",
                        "stateMutability": "nonpayable",
                        "virtual": false,
                        "visibility": "public"
                    },
                    {
                        "baseFunctions": [
                            1173
                        ],
                        "body": {
                            "id": 73,
                            "nodeType": "Block",
                            "src": "3840:74:0",
                            "statements": [
                                {
                                    "expression": {
                                        "arguments": [],
                                        "expression": {
                                            "argumentTypes": [],
                                            "expression": {
                                                "arguments": [
                                                    {
                                                        "arguments": [
                                                            {
                                                                "id": 67,
                                                                "name": "wrapped",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [],
                                                                "referencedDeclaration": 560,
                                                                "src": "3879:7:0",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_contract$_IERC20_$1747",
                                                                    "typeString": "contract IERC20"
                                                                }
                                                            }
                                                        ],
                                                        "expression": {
                                                            "argumentTypes": [
                                                                {
                                                                    "typeIdentifier": "t_contract$_IERC20_$1747",
                                                                    "typeString": "contract IERC20"
                                                                }
                                                            ],
                                                            "id": 66,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": true,
                                                            "lValueRequested": false,
                                                            "nodeType": "ElementaryTypeNameExpression",
                                                            "src": "3871:7:0",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_type$_t_address_$",
                                                                "typeString": "type(address)"
                                                            },
                                                            "typeName": {
                                                                "id": 65,
                                                                "name": "address",
                                                                "nodeType": "ElementaryTypeName",
                                                                "src": "3871:7:0",
                                                                "typeDescriptions": {}
                                                            }
                                                        },
                                                        "id": 68,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "kind": "typeConversion",
                                                        "lValueRequested": false,
                                                        "names": [],
                                                        "nodeType": "FunctionCall",
                                                        "src": "3871:16:0",
                                                        "tryCall": false,
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        }
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        }
                                                    ],
                                                    "id": 64,
                                                    "name": "IRecoverable",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 139,
                                                    "src": "3858:12:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_type$_t_contract$_IRecoverable_$139_$",
                                                        "typeString": "type(contract IRecoverable)"
                                                    }
                                                },
                                                "id": 69,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "typeConversion",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "3858:30:0",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_contract$_IRecoverable_$139",
                                                    "typeString": "contract IRecoverable"
                                                }
                                            },
                                            "id": 70,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "getClaimDeleter",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 138,
                                            "src": "3858:46:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                                                "typeString": "function () view external returns (address)"
                                            }
                                        },
                                        "id": 71,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "3858:48:0",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "functionReturnParameters": 63,
                                    "id": 72,
                                    "nodeType": "Return",
                                    "src": "3851:55:0"
                                }
                            ]
                        },
                        "functionSelector": "2a0a4ed5",
                        "id": 74,
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [],
                        "name": "getClaimDeleter",
                        "nodeType": "FunctionDefinition",
                        "overrides": {
                            "id": 60,
                            "nodeType": "OverrideSpecifier",
                            "overrides": [],
                            "src": "3813:8:0"
                        },
                        "parameters": {
                            "id": 59,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "3798:2:0"
                        },
                        "returnParameters": {
                            "id": 63,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 62,
                                    "mutability": "mutable",
                                    "name": "",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 74,
                                    "src": "3831:7:0",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                    },
                                    "typeName": {
                                        "id": 61,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "3831:7:0",
                                        "stateMutability": "nonpayable",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "3830:9:0"
                        },
                        "scope": 121,
                        "src": "3774:140:0",
                        "stateMutability": "view",
                        "virtual": false,
                        "visibility": "public"
                    },
                    {
                        "baseFunctions": [
                            1126
                        ],
                        "body": {
                            "id": 119,
                            "nodeType": "Block",
                            "src": "4012:558:0",
                            "statements": [
                                {
                                    "assignments": [
                                        83
                                    ],
                                    "declarations": [
                                        {
                                            "constant": false,
                                            "id": 83,
                                            "mutability": "mutable",
                                            "name": "rate",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 119,
                                            "src": "4023:12:0",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            },
                                            "typeName": {
                                                "id": 82,
                                                "name": "uint256",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "4023:7:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "id": 88,
                                    "initialValue": {
                                        "arguments": [
                                            {
                                                "id": 86,
                                                "name": "collateralType",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 76,
                                                "src": "4062:14:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            ],
                                            "expression": {
                                                "id": 84,
                                                "name": "super",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 4294967271,
                                                "src": "4038:5:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_type$_t_super$_DraggableShares_$121_$",
                                                    "typeString": "type(contract super DraggableShares)"
                                                }
                                            },
                                            "id": 85,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "getCollateralRate",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 1126,
                                            "src": "4038:23:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                                                "typeString": "function (address) view returns (uint256)"
                                            }
                                        },
                                        "id": 87,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "4038:39:0",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "nodeType": "VariableDeclarationStatement",
                                    "src": "4023:54:0"
                                },
                                {
                                    "condition": {
                                        "commonType": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        },
                                        "id": 91,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                            "id": 89,
                                            "name": "rate",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 83,
                                            "src": "4092:4:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": ">",
                                        "rightExpression": {
                                            "hexValue": "30",
                                            "id": 90,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "number",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "4099:1:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_rational_0_by_1",
                                                "typeString": "int_const 0"
                                            },
                                            "value": "0"
                                        },
                                        "src": "4092:8:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                        }
                                    },
                                    "falseBody": {
                                        "condition": {
                                            "commonType": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            },
                                            "id": 100,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "leftExpression": {
                                                "id": 95,
                                                "name": "collateralType",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 76,
                                                "src": "4150:14:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            "nodeType": "BinaryOperation",
                                            "operator": "==",
                                            "rightExpression": {
                                                "arguments": [
                                                    {
                                                        "id": 98,
                                                        "name": "wrapped",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 560,
                                                        "src": "4176:7:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_contract$_IERC20_$1747",
                                                            "typeString": "contract IERC20"
                                                        }
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_contract$_IERC20_$1747",
                                                            "typeString": "contract IERC20"
                                                        }
                                                    ],
                                                    "id": 97,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "lValueRequested": false,
                                                    "nodeType": "ElementaryTypeNameExpression",
                                                    "src": "4168:7:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_type$_t_address_$",
                                                        "typeString": "type(address)"
                                                    },
                                                    "typeName": {
                                                        "id": 96,
                                                        "name": "address",
                                                        "nodeType": "ElementaryTypeName",
                                                        "src": "4168:7:0",
                                                        "typeDescriptions": {}
                                                    }
                                                },
                                                "id": 99,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "typeConversion",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "4168:16:0",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            "src": "4150:34:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_bool",
                                                "typeString": "bool"
                                            }
                                        },
                                        "falseBody": {
                                            "id": 116,
                                            "nodeType": "Block",
                                            "src": "4248:315:0",
                                            "statements": [
                                                {
                                                    "expression": {
                                                        "commonType": {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        },
                                                        "id": 114,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "leftExpression": {
                                                            "arguments": [
                                                                {
                                                                    "id": 111,
                                                                    "name": "collateralType",
                                                                    "nodeType": "Identifier",
                                                                    "overloadedDeclarations": [],
                                                                    "referencedDeclaration": 76,
                                                                    "src": "4511:14:0",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_address",
                                                                        "typeString": "address"
                                                                    }
                                                                }
                                                            ],
                                                            "expression": {
                                                                "argumentTypes": [
                                                                    {
                                                                        "typeIdentifier": "t_address",
                                                                        "typeString": "address"
                                                                    }
                                                                ],
                                                                "expression": {
                                                                    "arguments": [
                                                                        {
                                                                            "arguments": [
                                                                                {
                                                                                    "id": 107,
                                                                                    "name": "wrapped",
                                                                                    "nodeType": "Identifier",
                                                                                    "overloadedDeclarations": [],
                                                                                    "referencedDeclaration": 560,
                                                                                    "src": "4483:7:0",
                                                                                    "typeDescriptions": {
                                                                                        "typeIdentifier": "t_contract$_IERC20_$1747",
                                                                                        "typeString": "contract IERC20"
                                                                                    }
                                                                                }
                                                                            ],
                                                                            "expression": {
                                                                                "argumentTypes": [
                                                                                    {
                                                                                        "typeIdentifier": "t_contract$_IERC20_$1747",
                                                                                        "typeString": "contract IERC20"
                                                                                    }
                                                                                ],
                                                                                "id": 106,
                                                                                "isConstant": false,
                                                                                "isLValue": false,
                                                                                "isPure": true,
                                                                                "lValueRequested": false,
                                                                                "nodeType": "ElementaryTypeNameExpression",
                                                                                "src": "4475:7:0",
                                                                                "typeDescriptions": {
                                                                                    "typeIdentifier": "t_type$_t_address_$",
                                                                                    "typeString": "type(address)"
                                                                                },
                                                                                "typeName": {
                                                                                    "id": 105,
                                                                                    "name": "address",
                                                                                    "nodeType": "ElementaryTypeName",
                                                                                    "src": "4475:7:0",
                                                                                    "typeDescriptions": {}
                                                                                }
                                                                            },
                                                                            "id": 108,
                                                                            "isConstant": false,
                                                                            "isLValue": false,
                                                                            "isPure": false,
                                                                            "kind": "typeConversion",
                                                                            "lValueRequested": false,
                                                                            "names": [],
                                                                            "nodeType": "FunctionCall",
                                                                            "src": "4475:16:0",
                                                                            "tryCall": false,
                                                                            "typeDescriptions": {
                                                                                "typeIdentifier": "t_address",
                                                                                "typeString": "address"
                                                                            }
                                                                        }
                                                                    ],
                                                                    "expression": {
                                                                        "argumentTypes": [
                                                                            {
                                                                                "typeIdentifier": "t_address",
                                                                                "typeString": "address"
                                                                            }
                                                                        ],
                                                                        "id": 104,
                                                                        "name": "IRecoverable",
                                                                        "nodeType": "Identifier",
                                                                        "overloadedDeclarations": [],
                                                                        "referencedDeclaration": 139,
                                                                        "src": "4462:12:0",
                                                                        "typeDescriptions": {
                                                                            "typeIdentifier": "t_type$_t_contract$_IRecoverable_$139_$",
                                                                            "typeString": "type(contract IRecoverable)"
                                                                        }
                                                                    },
                                                                    "id": 109,
                                                                    "isConstant": false,
                                                                    "isLValue": false,
                                                                    "isPure": false,
                                                                    "kind": "typeConversion",
                                                                    "lValueRequested": false,
                                                                    "names": [],
                                                                    "nodeType": "FunctionCall",
                                                                    "src": "4462:30:0",
                                                                    "tryCall": false,
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_contract$_IRecoverable_$139",
                                                                        "typeString": "contract IRecoverable"
                                                                    }
                                                                },
                                                                "id": 110,
                                                                "isConstant": false,
                                                                "isLValue": false,
                                                                "isPure": false,
                                                                "lValueRequested": false,
                                                                "memberName": "getCollateralRate",
                                                                "nodeType": "MemberAccess",
                                                                "referencedDeclaration": 133,
                                                                "src": "4462:48:0",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                                                    "typeString": "function (address) view external returns (uint256)"
                                                                }
                                                            },
                                                            "id": 112,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": false,
                                                            "kind": "functionCall",
                                                            "lValueRequested": false,
                                                            "names": [],
                                                            "nodeType": "FunctionCall",
                                                            "src": "4462:64:0",
                                                            "tryCall": false,
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_uint256",
                                                                "typeString": "uint256"
                                                            }
                                                        },
                                                        "nodeType": "BinaryOperation",
                                                        "operator": "*",
                                                        "rightExpression": {
                                                            "id": 113,
                                                            "name": "unwrapConversionFactor",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 566,
                                                            "src": "4529:22:0",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_uint256",
                                                                "typeString": "uint256"
                                                            }
                                                        },
                                                        "src": "4462:89:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        }
                                                    },
                                                    "functionReturnParameters": 81,
                                                    "id": 115,
                                                    "nodeType": "Return",
                                                    "src": "4455:96:0"
                                                }
                                            ]
                                        },
                                        "id": 117,
                                        "nodeType": "IfStatement",
                                        "src": "4146:417:0",
                                        "trueBody": {
                                            "id": 103,
                                            "nodeType": "Block",
                                            "src": "4186:56:0",
                                            "statements": [
                                                {
                                                    "expression": {
                                                        "id": 101,
                                                        "name": "unwrapConversionFactor",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 566,
                                                        "src": "4208:22:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        }
                                                    },
                                                    "functionReturnParameters": 81,
                                                    "id": 102,
                                                    "nodeType": "Return",
                                                    "src": "4201:29:0"
                                                }
                                            ]
                                        }
                                    },
                                    "id": 118,
                                    "nodeType": "IfStatement",
                                    "src": "4088:475:0",
                                    "trueBody": {
                                        "id": 94,
                                        "nodeType": "Block",
                                        "src": "4102:38:0",
                                        "statements": [
                                            {
                                                "expression": {
                                                    "id": 92,
                                                    "name": "rate",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 83,
                                                    "src": "4124:4:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    }
                                                },
                                                "functionReturnParameters": 81,
                                                "id": 93,
                                                "nodeType": "Return",
                                                "src": "4117:11:0"
                                            }
                                        ]
                                    }
                                }
                            ]
                        },
                        "functionSelector": "77e071ad",
                        "id": 120,
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [],
                        "name": "getCollateralRate",
                        "nodeType": "FunctionDefinition",
                        "overrides": {
                            "id": 78,
                            "nodeType": "OverrideSpecifier",
                            "overrides": [],
                            "src": "3985:8:0"
                        },
                        "parameters": {
                            "id": 77,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 76,
                                    "mutability": "mutable",
                                    "name": "collateralType",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 120,
                                    "src": "3949:22:0",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                    },
                                    "typeName": {
                                        "id": 75,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "3949:7:0",
                                        "stateMutability": "nonpayable",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "3948:24:0"
                        },
                        "returnParameters": {
                            "id": 81,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 80,
                                    "mutability": "mutable",
                                    "name": "",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 120,
                                    "src": "4003:7:0",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                    },
                                    "typeName": {
                                        "id": 79,
                                        "name": "uint256",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "4003:7:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "4002:9:0"
                        },
                        "scope": 121,
                        "src": "3922:648:0",
                        "stateMutability": "view",
                        "virtual": false,
                        "visibility": "public"
                    }
                ],
                "scope": 140,
                "src": "3013:1562:0"
            },
            {
                "abstract": true,
                "baseContracts": [],
                "contractDependencies": [],
                "contractKind": "contract",
                "fullyImplemented": false,
                "id": 139,
                "linearizedBaseContracts": [
                    139
                ],
                "name": "IRecoverable",
                "nodeType": "ContractDefinition",
                "nodes": [
                    {
                        "functionSelector": "6427ed97",
                        "id": 126,
                        "implemented": false,
                        "kind": "function",
                        "modifiers": [],
                        "name": "setRecoverable",
                        "nodeType": "FunctionDefinition",
                        "parameters": {
                            "id": 124,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 123,
                                    "mutability": "mutable",
                                    "name": "",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 126,
                                    "src": "4641:4:0",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                    },
                                    "typeName": {
                                        "id": 122,
                                        "name": "bool",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "4641:4:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "4640:6:0"
                        },
                        "returnParameters": {
                            "id": 125,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "4661:0:0"
                        },
                        "scope": 139,
                        "src": "4617:45:0",
                        "stateMutability": "nonpayable",
                        "virtual": true,
                        "visibility": "public"
                    },
                    {
                        "functionSelector": "77e071ad",
                        "id": 133,
                        "implemented": false,
                        "kind": "function",
                        "modifiers": [],
                        "name": "getCollateralRate",
                        "nodeType": "FunctionDefinition",
                        "parameters": {
                            "id": 129,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 128,
                                    "mutability": "mutable",
                                    "name": "",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 133,
                                    "src": "4695:7:0",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                    },
                                    "typeName": {
                                        "id": 127,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "4695:7:0",
                                        "stateMutability": "nonpayable",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "4694:9:0"
                        },
                        "returnParameters": {
                            "id": 132,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 131,
                                    "mutability": "mutable",
                                    "name": "",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 133,
                                    "src": "4733:7:0",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                    },
                                    "typeName": {
                                        "id": 130,
                                        "name": "uint256",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "4733:7:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "4732:9:0"
                        },
                        "scope": 139,
                        "src": "4668:74:0",
                        "stateMutability": "view",
                        "virtual": true,
                        "visibility": "public"
                    },
                    {
                        "functionSelector": "2a0a4ed5",
                        "id": 138,
                        "implemented": false,
                        "kind": "function",
                        "modifiers": [],
                        "name": "getClaimDeleter",
                        "nodeType": "FunctionDefinition",
                        "parameters": {
                            "id": 134,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "4772:2:0"
                        },
                        "returnParameters": {
                            "id": 137,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 136,
                                    "mutability": "mutable",
                                    "name": "",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 138,
                                    "src": "4804:7:0",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                    },
                                    "typeName": {
                                        "id": 135,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "4804:7:0",
                                        "stateMutability": "nonpayable",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "4803:9:0"
                        },
                        "scope": 139,
                        "src": "4748:65:0",
                        "stateMutability": "view",
                        "virtual": true,
                        "visibility": "public"
                    }
                ],
                "scope": 140,
                "src": "4579:237:0"
            }
        ],
        "src": "1336:3482:0"
    },
    "functionHashes": {
        "VALIDITY_PERIOD()": "0c43cd88",
        "VOTING_PERIOD()": "b1610d7e",
        "allowance(address,address)": "dd62ed3e",
        "approve(address,uint256)": "095ea7b3",
        "balanceOf(address)": "70a08231",
        "burn(uint256)": "42966c68",
        "claimPeriod()": "7dc2cd98",
        "claims(address)": "c6788bdd",
        "clearClaim()": "6b03ed5f",
        "customCollateralAddress()": "0c6f0e5d",
        "customCollateralRate()": "60918117",
        "decimals()": "313ce567",
        "declareLost(address,address)": "26773ddd",
        "decreaseAllowance(address,uint256)": "a457c2d7",
        "deleteClaim(address)": "32a7ae95",
        "drag(address,address)": "fcb79a7e",
        "factory()": "c45a0155",
        "getClaimDeleter()": "2a0a4ed5",
        "getClaimant(address)": "1e3b9de5",
        "getCollateral(address)": "9b56d6c9",
        "getCollateralRate(address)": "77e071ad",
        "getCollateralType(address)": "3bcc45ba",
        "getTimeStamp(address)": "eb470ebf",
        "increaseAllowance(address,uint256)": "39509351",
        "isBinding()": "9e4b5745",
        "isRecoveryEnabled(address)": "a3ec1883",
        "makeAcquisitionOffer(bytes32,uint256,address)": "dcc7d4ad",
        "migrate()": "8fd3ab80",
        "name()": "06fdde03",
        "notifyOfferEnded()": "32bc320b",
        "offer()": "c028df06",
        "onTokenTransfer(address,uint256,bytes)": "a4c0ed36",
        "quorum()": "1703a018",
        "recover(address)": "0cd865ec",
        "recoveryDisabled(address)": "b40e80d1",
        "setRecoverable(bool)": "6427ed97",
        "symbol()": "95d89b41",
        "terms()": "d5025625",
        "totalSupply()": "18160ddd",
        "transfer(address,uint256)": "a9059cbb",
        "transferAndCall(address,uint256,bytes)": "4000aea0",
        "transferFrom(address,address,uint256)": "23b872dd",
        "unwrap(uint256)": "de0e9a3e",
        "unwrapConversionFactor()": "0832e470",
        "wrap(address,uint256)": "bf376c7a",
        "wrapped()": "50e70d48"
    },
    "gasEstimates": {
        "creation": {
            "codeDepositCost": "1978200",
            "executionCost": "infinite",
            "totalCost": "infinite"
        },
        "external": {
            "VALIDITY_PERIOD()": "341",
            "VOTING_PERIOD()": "273",
            "allowance(address,address)": "infinite",
            "approve(address,uint256)": "22571",
            "balanceOf(address)": "1313",
            "burn(uint256)": "infinite",
            "claimPeriod()": "1118",
            "claims(address)": "3972",
            "clearClaim()": "infinite",
            "customCollateralAddress()": "1205",
            "customCollateralRate()": "1139",
            "decimals()": "1114",
            "declareLost(address,address)": "infinite",
            "decreaseAllowance(address,uint256)": "23626",
            "deleteClaim(address)": "infinite",
            "drag(address,address)": "infinite",
            "factory()": "1203",
            "getClaimDeleter()": "infinite",
            "getClaimant(address)": "1415",
            "getCollateral(address)": "1315",
            "getCollateralRate(address)": "infinite",
            "getCollateralType(address)": "1459",
            "getTimeStamp(address)": "1402",
            "increaseAllowance(address,uint256)": "23652",
            "isBinding()": "1104",
            "isRecoveryEnabled(address)": "1368",
            "makeAcquisitionOffer(bytes32,uint256,address)": "infinite",
            "migrate()": "infinite",
            "name()": "infinite",
            "notifyOfferEnded()": "21929",
            "offer()": "1181",
            "onTokenTransfer(address,uint256,bytes)": "infinite",
            "quorum()": "1096",
            "recover(address)": "infinite",
            "recoveryDisabled(address)": "1325",
            "setRecoverable(bool)": "21321",
            "symbol()": "infinite",
            "terms()": "infinite",
            "totalSupply()": "1118",
            "transfer(address,uint256)": "infinite",
            "transferAndCall(address,uint256,bytes)": "infinite",
            "transferFrom(address,address,uint256)": "infinite",
            "unwrap(uint256)": "infinite",
            "unwrapConversionFactor()": "1097",
            "wrap(address,uint256)": "infinite",
            "wrapped()": "1159"
        }
    }
}