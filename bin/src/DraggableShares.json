{
    "contractName": "DraggableShares",
    "abi": [
        {
            "inputs": [
                {
                    "internalType": "string",
                    "name": "_terms",
                    "type": "string"
                },
                {
                    "internalType": "address",
                    "name": "wrappedToken",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "quorum",
                    "type": "uint256"
                }
            ],
            "stateMutability": "nonpayable",
            "type": "constructor"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "owner",
                    "type": "address"
                },
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "spender",
                    "type": "address"
                },
                {
                    "indexed": false,
                    "internalType": "uint256",
                    "name": "value",
                    "type": "uint256"
                }
            ],
            "name": "Approval",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "lostAddress",
                    "type": "address"
                },
                {
                    "indexed": false,
                    "internalType": "uint256",
                    "name": "collateral",
                    "type": "uint256"
                }
            ],
            "name": "ClaimCleared",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "lostAddress",
                    "type": "address"
                },
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "claimant",
                    "type": "address"
                },
                {
                    "indexed": false,
                    "internalType": "uint256",
                    "name": "collateral",
                    "type": "uint256"
                }
            ],
            "name": "ClaimDeleted",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "lostAddress",
                    "type": "address"
                },
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "claimant",
                    "type": "address"
                },
                {
                    "indexed": false,
                    "internalType": "uint256",
                    "name": "balance",
                    "type": "uint256"
                }
            ],
            "name": "ClaimMade",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": false,
                    "internalType": "uint256",
                    "name": "newClaimPeriodInDays",
                    "type": "uint256"
                }
            ],
            "name": "ClaimPeriodChanged",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "lostAddress",
                    "type": "address"
                },
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "claimant",
                    "type": "address"
                },
                {
                    "indexed": false,
                    "internalType": "uint256",
                    "name": "collateral",
                    "type": "uint256"
                }
            ],
            "name": "ClaimResolved",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": false,
                    "internalType": "address",
                    "name": "newCustomCollateralAddress",
                    "type": "address"
                },
                {
                    "indexed": false,
                    "internalType": "uint256",
                    "name": "newCustomCollareralRate",
                    "type": "uint256"
                }
            ],
            "name": "CustomClaimCollateralChanged",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": false,
                    "internalType": "address",
                    "name": "newContractAddress",
                    "type": "address"
                }
            ],
            "name": "MigrationSucceeded",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "buyer",
                    "type": "address"
                },
                {
                    "indexed": false,
                    "internalType": "uint256",
                    "name": "pricePerShare",
                    "type": "uint256"
                },
                {
                    "indexed": false,
                    "internalType": "address",
                    "name": "currency",
                    "type": "address"
                },
                {
                    "indexed": false,
                    "internalType": "address",
                    "name": "offerContract",
                    "type": "address"
                }
            ],
            "name": "OfferCreated",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "buyer",
                    "type": "address"
                },
                {
                    "indexed": false,
                    "internalType": "address",
                    "name": "sender",
                    "type": "address"
                },
                {
                    "indexed": false,
                    "internalType": "bool",
                    "name": "success",
                    "type": "bool"
                },
                {
                    "indexed": false,
                    "internalType": "string",
                    "name": "message",
                    "type": "string"
                },
                {
                    "indexed": false,
                    "internalType": "address",
                    "name": "offerContract",
                    "type": "address"
                }
            ],
            "name": "OfferEnded",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "from",
                    "type": "address"
                },
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "to",
                    "type": "address"
                },
                {
                    "indexed": false,
                    "internalType": "uint256",
                    "name": "value",
                    "type": "uint256"
                }
            ],
            "name": "Transfer",
            "type": "event"
        },
        {
            "inputs": [],
            "name": "acquisitionQuorum",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "active",
            "outputs": [
                {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "owner",
                    "type": "address"
                },
                {
                    "internalType": "address",
                    "name": "spender",
                    "type": "address"
                }
            ],
            "name": "allowance",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "spender",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "value",
                    "type": "uint256"
                }
            ],
            "name": "approve",
            "outputs": [
                {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool"
                }
            ],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "account",
                    "type": "address"
                }
            ],
            "name": "balanceOf",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "uint256",
                    "name": "amount",
                    "type": "uint256"
                }
            ],
            "name": "burn",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "cancelAcquisition",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "claimPeriod",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address"
                }
            ],
            "name": "claims",
            "outputs": [
                {
                    "internalType": "address",
                    "name": "claimant",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "collateral",
                    "type": "uint256"
                },
                {
                    "internalType": "uint256",
                    "name": "timestamp",
                    "type": "uint256"
                },
                {
                    "internalType": "address",
                    "name": "currencyUsed",
                    "type": "address"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "clearClaim",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "completeAcquisition",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "contestAcquisition",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "customCollateralAddress",
            "outputs": [
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "customCollateralRate",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "decimals",
            "outputs": [
                {
                    "internalType": "uint8",
                    "name": "",
                    "type": "uint8"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "collateralType",
                    "type": "address"
                },
                {
                    "internalType": "address",
                    "name": "lostAddress",
                    "type": "address"
                }
            ],
            "name": "declareLost",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "spender",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "subtractedValue",
                    "type": "uint256"
                }
            ],
            "name": "decreaseAllowance",
            "outputs": [
                {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool"
                }
            ],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "lostAddress",
                    "type": "address"
                }
            ],
            "name": "deleteClaim",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "getClaimDeleter",
            "outputs": [
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "lostAddress",
                    "type": "address"
                }
            ],
            "name": "getClaimant",
            "outputs": [
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "lostAddress",
                    "type": "address"
                }
            ],
            "name": "getCollateral",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "collateralType",
                    "type": "address"
                }
            ],
            "name": "getCollateralRate",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "lostAddress",
                    "type": "address"
                }
            ],
            "name": "getCollateralType",
            "outputs": [
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "lostAddress",
                    "type": "address"
                }
            ],
            "name": "getTimeStamp",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "spender",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "addedValue",
                    "type": "uint256"
                }
            ],
            "name": "increaseAllowance",
            "outputs": [
                {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool"
                }
            ],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "uint256",
                    "name": "pricePerShare",
                    "type": "uint256"
                },
                {
                    "internalType": "address",
                    "name": "currency",
                    "type": "address"
                }
            ],
            "name": "initiateAcquisition",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "target",
                    "type": "address"
                }
            ],
            "name": "isRecoveryEnabled",
            "outputs": [
                {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "migrate",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "migrationQuorum",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "name",
            "outputs": [
                {
                    "internalType": "string",
                    "name": "",
                    "type": "string"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "offer",
            "outputs": [
                {
                    "internalType": "contract Acquisition",
                    "name": "",
                    "type": "address"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "from",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "amount",
                    "type": "uint256"
                },
                {
                    "internalType": "bytes",
                    "name": "",
                    "type": "bytes"
                }
            ],
            "name": "onTokenTransfer",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "lostAddress",
                    "type": "address"
                }
            ],
            "name": "recover",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address"
                }
            ],
            "name": "recoveryDisabled",
            "outputs": [
                {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "bool",
                    "name": "enabled",
                    "type": "bool"
                }
            ],
            "name": "setRecoverable",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "symbol",
            "outputs": [
                {
                    "internalType": "string",
                    "name": "",
                    "type": "string"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "terms",
            "outputs": [
                {
                    "internalType": "string",
                    "name": "",
                    "type": "string"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "totalSupply",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "to",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "value",
                    "type": "uint256"
                }
            ],
            "name": "transfer",
            "outputs": [
                {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool"
                }
            ],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "recipient",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "amount",
                    "type": "uint256"
                },
                {
                    "internalType": "bytes",
                    "name": "data",
                    "type": "bytes"
                }
            ],
            "name": "transferAndCall",
            "outputs": [
                {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool"
                }
            ],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "sender",
                    "type": "address"
                },
                {
                    "internalType": "address",
                    "name": "recipient",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "amount",
                    "type": "uint256"
                }
            ],
            "name": "transferFrom",
            "outputs": [
                {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool"
                }
            ],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "uint256",
                    "name": "amount",
                    "type": "uint256"
                }
            ],
            "name": "unwrap",
            "outputs": [
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "unwrapConversionFactor",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "voteNo",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "voteYes",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "shareholder",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "amount",
                    "type": "uint256"
                }
            ],
            "name": "wrap",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "wrapped",
            "outputs": [
                {
                    "internalType": "contract IERC20",
                    "name": "",
                    "type": "address"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        }
    ],
    "metadata": "{\"compiler\":{\"version\":\"0.7.1+commit.f4a555be\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_terms\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"wrappedToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"quorum\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"lostAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"collateral\",\"type\":\"uint256\"}],\"name\":\"ClaimCleared\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"lostAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"claimant\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"collateral\",\"type\":\"uint256\"}],\"name\":\"ClaimDeleted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"lostAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"claimant\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"name\":\"ClaimMade\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newClaimPeriodInDays\",\"type\":\"uint256\"}],\"name\":\"ClaimPeriodChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"lostAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"claimant\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"collateral\",\"type\":\"uint256\"}],\"name\":\"ClaimResolved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newCustomCollateralAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newCustomCollareralRate\",\"type\":\"uint256\"}],\"name\":\"CustomClaimCollateralChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newContractAddress\",\"type\":\"address\"}],\"name\":\"MigrationSucceeded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"pricePerShare\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"offerContract\",\"type\":\"address\"}],\"name\":\"OfferCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"message\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"offerContract\",\"type\":\"address\"}],\"name\":\"OfferEnded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"acquisitionQuorum\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"active\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cancelAcquisition\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimPeriod\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"claims\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"claimant\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"collateral\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"currencyUsed\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"clearClaim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"completeAcquisition\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"contestAcquisition\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"customCollateralAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"customCollateralRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"collateralType\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"lostAddress\",\"type\":\"address\"}],\"name\":\"declareLost\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"lostAddress\",\"type\":\"address\"}],\"name\":\"deleteClaim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getClaimDeleter\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"lostAddress\",\"type\":\"address\"}],\"name\":\"getClaimant\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"lostAddress\",\"type\":\"address\"}],\"name\":\"getCollateral\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"collateralType\",\"type\":\"address\"}],\"name\":\"getCollateralRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"lostAddress\",\"type\":\"address\"}],\"name\":\"getCollateralType\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"lostAddress\",\"type\":\"address\"}],\"name\":\"getTimeStamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"pricePerShare\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"}],\"name\":\"initiateAcquisition\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"isRecoveryEnabled\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrationQuorum\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"offer\",\"outputs\":[{\"internalType\":\"contract Acquisition\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onTokenTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"lostAddress\",\"type\":\"address\"}],\"name\":\"recover\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"recoveryDisabled\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"enabled\",\"type\":\"bool\"}],\"name\":\"setRecoverable\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"terms\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"unwrap\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unwrapConversionFactor\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"voteNo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"voteYes\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"shareholder\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"wrap\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"wrapped\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Benjamin Rickenbacher, b.rickenbacher@intergga.chLuzius Meisser, luzius@meissereconomics.com This is an ERC-20 token representing shares of CompanyName AG that are bound to a shareholder agreement that can be found at the URL defined in the constant 'terms'. The shareholder agreement is partially enforced through this smart contract. The agreement is designed to facilitate a complete acquisition of the firm even if a minority of shareholders disagree with the acquisition, to protect the interest of the minority shareholders by requiring the acquirer to offer the same conditions to everyone when acquiring the company, and to facilitate an update of the shareholder agreement even if a minority of the shareholders that are bound to this agreement disagree. The name \\\"draggable\\\" stems from the convention of calling the right to drag a minority along with a sale of the company \\\"drag-along\\\" rights. The name is chosen to ensure that token holders are aware that they are bound to such an agreement. The percentage of token holders that must agree with an update of the terms is defined by the constant UPDATE_QUORUM. The precentage of yes-votes that is needed to successfully complete an acquisition is defined in the constant ACQUISITION_QUORUM. Note that the update quorum is based on the total number of tokens in circulation. In contrast, the acquisition quorum is based on the number of votes cast during the voting period, not taking into account those who did not bother to vote.\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See `IERC20.allowance`.\"},\"approve(address,uint256)\":{\"details\":\"See `IERC20.approve`. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See `IERC20.balanceOf`.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to `approve` that can be used as a mitigation for problems described in `IERC20.approve`. Emits an `Approval` event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to `approve` that can be used as a mitigation for problems described in `IERC20.approve`. Emits an `Approval` event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"initiateAcquisition(uint256,address)\":{\"details\":\"Function to start drag-along procedure  This can be called by anyone, but there is an upfront payment.\"},\"totalSupply()\":{\"details\":\"See `IERC20.totalSupply`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See `IERC20.transferFrom`. Emits an `Approval` event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of `ERC20`; Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `value`. - the caller must have allowance for `sender`'s tokens of at least `amount`.\"}},\"title\":\"Draggable CompanyName AG Shares\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"burn(uint256)\":{\"notice\":\"Burns both the token itself as well as the wrapped token! If you want to get out of the shareholder agreement, use unwrap after it has been deactivated by a majority vote or acquisition. Burning only works if wrapped token supports burning. Also, the exact meaning of this operation might depend on the circumstances. Burning and reussing the wrapped token does not free the sender from the legal obligations of the shareholder agreement.\"},\"clearClaim()\":{\"notice\":\"Clears a claim after the key has been found again and assigns the collateral to the \\\"lost\\\" address. This is the price an adverse claimer pays for filing a false claim and makes it risky to do so.\"},\"constructor\":{\"notice\":\"Designed to be used with the Crypto Franc as currency token. See also parent constructor.\"},\"declareLost(address,address)\":{\"notice\":\"Anyone can declare that the private key to a certain address was lost by calling declareLost providing a deposit/collateral. There are three possibilities of what can happen with the claim: 1) The claim period expires and the claimant can get the deposit and the shares back by calling recover 2) The \\\"lost\\\" private key is used at any time to call clearClaim. In that case, the claim is deleted and    the deposit sent to the shareholder (the owner of the private key). It is recommended to call recover    whenever someone transfers funds to let claims be resolved automatically when the \\\"lost\\\" private key is    used again. 3) The owner deletes the claim and assigns the deposit to the claimant. This is intended to be used to resolve    disputes. Generally, using this function implies that you have to trust the issuer of the tokens to handle    the situation well. As a rule of thumb, the contract owner should assume the owner of the lost address to be the    rightful owner of the deposit. It is highly recommended that the owner observes the claims made and informs the owners of the claimed addresses whenever a claim is made for their address (this of course is only possible if they are known to the owner, e.g. through a shareholder register). To prevent frontrunning attacks, a claim can only be made if the information revealed when calling \\\"declareLost\\\" was previously commited using the \\\"prepareClaim\\\" function.\"},\"deleteClaim(address)\":{\"notice\":\"This function is to be executed by the claim deleter only in case a dispute needs to be resolved manually.\"},\"getCollateralRate(address)\":{\"notice\":\"Returns the collateral rate for the given collateral type and 0 if that type of collateral is not accepted. By default, only the token itself is accepted at a rate of 1:1. Subclasses should override this method if they want to add additional types of collateral.\"},\"isRecoveryEnabled(address)\":{\"notice\":\"Some users might want to disable claims for their address completely. For example if they use a deep cold storage solution or paper wallet.\"},\"recover(address)\":{\"notice\":\"After the claim period has passed, the claimant can call this function to send the tokens on the lost address as well as the collateral to himself.\"},\"unwrap(uint256)\":{\"notice\":\"Decrease the number of drag-along tokens. The user gets back their shares in return \"},\"wrap(address,uint256)\":{\"notice\":\"Increases the number of drag-along tokens. Requires minter to deposit an equal amount of share tokens \"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"c:/Users/luziu/Documents/aktionariat/contracts/src/DraggableShares.sol\":\"DraggableShares\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"c:/Users/luziu/Documents/aktionariat/contracts/src/Acquisition.sol\":{\"keccak256\":\"0x7b0feb6281bd7648e0f857cf5e2699d63ee7f5bcbe9e1dafff90bf0a4831363c\",\"license\":\"LicenseRef-Aktionariat\",\"urls\":[\"bzz-raw://3d299686ec8a6a7105a65717aadbd57abbce675b724ed2fd01e9e9cd7f0ea18a\",\"dweb:/ipfs/QmZE7kZfrUfaV43jBbkNhDMfu9JhebdHcQ5Q9fctXggZZv\"]},\"c:/Users/luziu/Documents/aktionariat/contracts/src/DraggableShares.sol\":{\"keccak256\":\"0x7ed7192503a59c9722f6194913dd3ef08649e75d31d78eac3f72e0757de85c51\",\"license\":\"LicenseRef-Aktionariat\",\"urls\":[\"bzz-raw://2bbbd1b6f58d9bbda5ea176bf98d7145ba2bbdd2ed8fa5a45c3d5bf740111762\",\"dweb:/ipfs/QmeQLn4mvYV6AJAoPwnakJWfD58ns4rEVKAW9FvfjsZPcp\"]},\"c:/Users/luziu/Documents/aktionariat/contracts/src/ERC20.sol\":{\"keccak256\":\"0x426977569eb0446c29f2533063a247c86810cc18d5e7c9299905056f854bc745\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://78ba20d499df43b54bd4f51a46461b58b240562de877604689dddebac86be8f4\",\"dweb:/ipfs/QmPSjEoVnmgRB5sCGfsLnDrjxyxu1hV7Rzx8dcWFzfj9dG\"]},\"c:/Users/luziu/Documents/aktionariat/contracts/src/ERC20Draggable.sol\":{\"keccak256\":\"0x999e6cfd1c4480f75229393ea3d4655d29db78a56f08beed5218858bf559184d\",\"license\":\"LicenseRef-Aktionariat\",\"urls\":[\"bzz-raw://fafea22e9e5446ccafb6b6d24520a516d8891b06ffecd4207b21ef2df78f2e10\",\"dweb:/ipfs/QmRcWa6877Wq7gHJNKR8FkCtHADjV2bzoZxzt31r6JW8Sp\"]},\"c:/Users/luziu/Documents/aktionariat/contracts/src/ERC20Recoverable.sol\":{\"keccak256\":\"0xd5af4f8143b6e02f036d8389b19a59c3c0a7ee00952844dca5ecb039f391170c\",\"license\":\"LicenseRef-Aktionariat\",\"urls\":[\"bzz-raw://11adb0e721764bf6ff35e1dd4d2722d5921d4c89ceb6faea4a18b5ff29fb9f3b\",\"dweb:/ipfs/Qmd9MK19Q2b5DXgYK5GDM9xQ3S33ayVQ8rN6GouD4k8p6N\"]},\"c:/Users/luziu/Documents/aktionariat/contracts/src/IERC20.sol\":{\"keccak256\":\"0x6d0e89e1a724c13cc7dcc7184b8dcf0d46d6b5635b4ec024bb1fb69d36d87444\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40092507190092f77a521113ba3133441c76f63da097e38e587ca6e2603c6eb2\",\"dweb:/ipfs/QmeKTeVB1sND87Miju3k3as6f5cQcgLzbHc7vSREcjyQKC\"]},\"c:/Users/luziu/Documents/aktionariat/contracts/src/IERC677Receiver.sol\":{\"keccak256\":\"0x08574d3d2296c648c53d8175ffc992d22b77b7a2af4f26a3ad30bcfe67a56455\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a15e476ad8295470c052d149ce6ea8593174899a1995ff4ace6d3554fb1928c3\",\"dweb:/ipfs/QmT6wxjVrGALDukRDPi9ktfQ296jFC8o975ronUQNEhKQ9\"]},\"c:/Users/luziu/Documents/aktionariat/contracts/src/IMigratable.sol\":{\"keccak256\":\"0x5212714cd6ce722124bbb8c32282a4cd3b4a37fd9dd224e5ac54d99020c24c1b\",\"license\":\"LicenseRef-Aktionariat\",\"urls\":[\"bzz-raw://338eab542263cf438c99110de0f9b059b2de6894b3e44418e16d1051b4e0fb86\",\"dweb:/ipfs/Qmbs8VNthe4VLYBf3Bv9WFWC2HSNX9LyDLgG5VneXkzHnP\"]},\"c:/Users/luziu/Documents/aktionariat/contracts/src/SafeMath.sol\":{\"keccak256\":\"0x186349cbf7b3f8c5b04eb76e4e5dc9fd4d3c00952afc2e66923abc2947abc9df\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://480ddbf34395198eea8e779632d9f50d22319df148414522d8eed58972444c92\",\"dweb:/ipfs/QmbABPCuzoFN7uhGv2omkAGKSCc5Wh2Kof1ig3jzFTCKAd\"]}},\"version\":1}",
    "bytecode": "608060405262ed4e006004556001600a819055600e805460ff191690911790553480156200002c57600080fd5b506040516200458838038062004588833981810160405260608110156200005257600080fd5b81019080805160405193929190846401000000008211156200007357600080fd5b9083019060208201858111156200008957600080fd5b8251640100000000811182820188101715620000a457600080fd5b82525081516020918201929091019080838360005b83811015620000d3578181015183820152602001620000b9565b50505050905090810190601f168015620001015780820380516001836020036101000a031916815260200191505b506040818152602083810151938201516003805460ff19169055600980546001600160a01b0319166001600160a01b038716908117909155600c829055600d829055633a98ef3960e01b85529251949650945085938593849392633a98ef39926004808401938290030181600087803b1580156200017e57600080fd5b505af115801562000193573d6000803e3d6000fd5b505050506040513d6020811015620001aa57600080fd5b505060408051636427ed9760e01b815260006004820181905291516001600160a01b0388169550636427ed97945060248083019450909182900301818387803b158015620001f757600080fd5b505af11580156200020c573d6000803e3d6000fd5b50508451620002259250600f915060208601906200022f565b50505050620002cb565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200027257805160ff1916838001178555620002a2565b82800160010185558215620002a2579182015b82811115620002a257825182559160200191906001019062000285565b50620002b0929150620002b4565b5090565b5b80821115620002b05760008155600101620002b5565b6142ad80620002db6000396000f3fe60806040523480156200001157600080fd5b5060043610620002d45760003560e01c80636427ed971162000189578063a457c2d711620000e1578063c6788bdd1162000093578063c6788bdd14620008bc578063d50256251462000922578063dd62ed3e146200092c578063de0e9a3e146200095d578063e1b8c38e14620009a0578063eb470ebf14620009aa57620002d4565b8063a457c2d71462000773578063a4c0ed3614620007a2578063a9059cbb146200082b578063b40e80d1146200085a578063bf376c7a1462000883578063c028df0614620008b257620002d4565b80638fd3ab80116200013b5780638fd3ab8014620006f957806390cf581c146200070357806395d89b41146200070d5780639b56d6c914620007175780639e8a9a5a1462000740578063a3ec1883146200074a57620002d4565b80636427ed9714620006675780636b03ed5f14620006895780636f4b18df146200069357806370a08231146200069d57806377e071ad14620006c65780637dc2cd9814620006ef57620002d4565b80632a0a4ed5116200023d5780634000aea011620001ef5780634000aea0146200057157806341c12a7014620005fa57806342966c68146200060457806349b210b7146200062457806350e70d48146200065357806360918117146200065d57620002d4565b80632a0a4ed514620004bc578063313ce56714620004c657806332a7ae9514620004e65780633549788a146200050f5780633950935114620005195780633bcc45ba146200054857620002d4565b80630cd865ec11620002975780630cd865ec14620003ea578063141c7068146200041557806318160ddd146200041f5780631e3b9de5146200042957806323b872dd146200045257806326773ddd146200048b57620002d4565b806302fb0c5e14620002d957806306fdde0314620002f75780630832e4701462000379578063095ea7b314620003955780630c6f0e5d14620003c4575b600080fd5b620002e3620009d3565b604080519115158252519081900360200190f35b62000301620009dc565b6040805160208082528351818301528351919283929083019185019080838360005b838110156200033d57818101518382015260200162000323565b50505050905090810190601f1680156200036b5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6200038362000b97565b60408051918252519081900360200190f35b620002e360048036036040811015620003ad57600080fd5b506001600160a01b03813516906020013562000b9d565b620003ce62000bb6565b604080516001600160a01b039092168252519081900360200190f35b62000413600480360360208110156200040257600080fd5b50356001600160a01b031662000bc5565b005b6200041362000ea9565b62000383620011ca565b620003ce600480360360208110156200044157600080fd5b50356001600160a01b0316620011d0565b620002e3600480360360608110156200046a57600080fd5b506001600160a01b03813581169160208101359091169060400135620011f1565b6200041360048036036040811015620004a357600080fd5b506001600160a01b038135811691602001351662001248565b620003ce62001573565b620004d0620015ec565b6040805160ff9092168252519081900360200190f35b6200041360048036036020811015620004fe57600080fd5b50356001600160a01b0316620015f5565b620003836200185d565b620002e3600480360360408110156200053157600080fd5b506001600160a01b03813516906020013562001863565b620003ce600480360360208110156200056057600080fd5b50356001600160a01b03166200189c565b620002e3600480360360608110156200058957600080fd5b6001600160a01b0382351691602081013591810190606081016040820135600160201b811115620005b957600080fd5b820183602082011115620005cc57600080fd5b803590602001918460018302840111600160201b83111715620005ee57600080fd5b509092509050620018bd565b6200041362001984565b62000413600480360360208110156200061c57600080fd5b503562001a61565b62000413600480360360408110156200063c57600080fd5b50803590602001356001600160a01b031662001ae5565b620003ce62001f73565b6200038362001f82565b62000413600480360360208110156200067f57600080fd5b5035151562001f88565b6200041362001fa7565b620004136200210c565b6200038360048036036020811015620006b557600080fd5b50356001600160a01b031662002403565b6200038360048036036020811015620006de57600080fd5b50356001600160a01b03166200241e565b62000383620024c0565b62000413620024c6565b6200041362002606565b6200030162002681565b62000383600480360360208110156200072f57600080fd5b50356001600160a01b0316620027f9565b6200038362002817565b620002e3600480360360208110156200076257600080fd5b50356001600160a01b03166200281d565b620002e3600480360360408110156200078b57600080fd5b506001600160a01b0381351690602001356200283c565b6200041360048036036060811015620007ba57600080fd5b6001600160a01b0382351691602081013591810190606081016040820135600160201b811115620007ea57600080fd5b820183602082011115620007fd57600080fd5b803590602001918460018302840111600160201b831117156200081f57600080fd5b50909250905062002875565b620002e3600480360360408110156200084357600080fd5b506001600160a01b03813516906020013562002899565b620002e3600480360360208110156200087257600080fd5b50356001600160a01b0316620028ae565b62000413600480360360408110156200089b57600080fd5b506001600160a01b038135169060200135620028c3565b620003ce620029b3565b620008e560048036036020811015620008d457600080fd5b50356001600160a01b0316620029c2565b60405180856001600160a01b03168152602001848152602001838152602001826001600160a01b0316815260200194505050505060405180910390f35b62000301620029f4565b62000383600480360360408110156200094457600080fd5b506001600160a01b038135811691602001351662002a86565b6200097d600480360360208110156200097557600080fd5b503562002ab1565b604080516001600160a01b03909316835260208301919091528051918290030190f35b6200041362002bc2565b6200038360048036036020811015620009c257600080fd5b50356001600160a01b031662002cde565b600e5460ff1681565b600954604080516306fdde0360e01b815290516060926001600160a01b0316916306fdde03916004808301926000929190829003018186803b15801562000a2257600080fd5b505afa15801562000a37573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052602081101562000a6157600080fd5b8101908080516040519392919084600160201b82111562000a8157600080fd5b90830190602082018581111562000a9757600080fd5b8251600160201b81118282018810171562000ab157600080fd5b82525081516020918201929091019080838360005b8381101562000ae057818101518382015260200162000ac6565b50505050905090810190601f16801562000b0e5780820380516001836020036101000a031916815260200191505b506040525050506040516020018080690223930b3b3b0b13632960b51b815250600a0182805190602001908083835b6020831062000b5e5780518252601f19909201916020918201910162000b3d565b6001836020036101000a038019825116818451168082178552505050505050905001915050604051602081830303815290604052905090565b600a5481565b600062000bac33848462002cfc565b5060015b92915050565b6007546001600160a01b031681565b62000bcf620035d9565b506001600160a01b038082166000908152600560209081526040918290208251608081018452815485168152600182015492810183905260028201549381019390935260030154909216606082018190529091908162000c67576040805162461bcd60e51b815260206004820152600e60248201526d139bc818db185a5b48199bdd5b9960921b604482015290519081900360640190fd5b82516001600160a01b0316331462000cc6576040805162461bcd60e51b815260206004820152601f60248201527f4f6e6c7920636c61696d616e742063616e207265736f6c766520636c61696d00604482015290519081900360640190fd5b4262000ce2600454856040015162002d5e90919063ffffffff16565b111562000d36576040805162461bcd60e51b815260206004820152601960248201527f436c61696d20706572696f64206e6f74206f7665722079657400000000000000604482015290519081900360640190fd5b82516001600160a01b03808616600090815260056020908152604080832080546001600160a01b031990811682556001820185905560028201859055600390910180549091169055805163a9059cbb60e01b815284861660048201526024810188905290519386169363a9059cbb93604480840194938390030190829087803b15801562000dc357600080fd5b505af115801562000dd8573d6000803e3d6000fd5b505050506040513d602081101562000def57600080fd5b505162000e40576040805162461bcd60e51b815260206004820152601a60248201527910dbdb1b185d195c985b081d1c985b9cd9995c8819985a5b195960321b604482015290519081900360640190fd5b62000e57858262000e518862002403565b62002d6c565b806001600160a01b0316856001600160a01b03167f52a5c2b28bc6eb9712d0ced43463103b486b13ccc9cda499fd3b2d7b6a74a8ee856040518082815260200191505060405180910390a35050505050565b62000eb362002d7e565b801562000ec25750600e5460ff165b62000f07576040805162461bcd60e51b815260206004820152601060248201526f3737903832b73234b7339037b33332b960811b604482015290519081900360640190fd5b600b60009054906101000a90046001600160a01b03166001600160a01b0316637150d8ae6040518163ffffffff1660e01b815260040160206040518083038186803b15801562000f5657600080fd5b505afa15801562000f6b573d6000803e3d6000fd5b505050506040513d602081101562000f8257600080fd5b50516001600160a01b0316331462000f9957600080fd5b600b60009054906101000a90046001600160a01b03166001600160a01b031663d7be4e296040518163ffffffff1660e01b815260040160206040518083038186803b15801562000fe857600080fd5b505afa15801562000ffd573d6000803e3d6000fd5b505050506040513d60208110156200101457600080fd5b50516200105f576040805162461bcd60e51b8152602060048201526014602482015273125b9cdd59999a58da595b9d081cdd5c1c1bdc9d60621b604482015290519081900360640190fd5b6200115b33600b60009054906101000a90046001600160a01b03166001600160a01b031663e5a6b10f6040518163ffffffff1660e01b815260040160206040518083038186803b158015620010b357600080fd5b505afa158015620010c8573d6000803e3d6000fd5b505050506040513d6020811015620010df57600080fd5b5051600b546040805163501ad8ff60e11b815290516001600160a01b039092169163a035b1fe91600480820192602092909190829003018186803b1580156200112757600080fd5b505afa1580156200113c573d6000803e3d6000fd5b505050506040513d60208110156200115357600080fd5b505162002d8f565b600b546040805133808252600160208301526001600160a01b039390931660608201526080818301819052600790820152665375636365737360c81b60a082015290517fc88f58ae9feb0742d9422f604dd3c1be6d02818f8dec340c5061f428b554e9759181900360c00190a2565b60025490565b6001600160a01b03808216600090815260056020526040902054165b919050565b60006200120084848462002d6c565b6001600160a01b0384166000908152600160209081526040808320338085529252909120546200123e91869162001238908662002f34565b62002cfc565b5060019392505050565b62001253816200281d565b620012a5576040805162461bcd60e51b815260206004820181905260248201527f436c61696d732064697361626c656420666f7220746869732061646472657373604482015290519081900360640190fd5b6000620012b2836200241e565b90506000811162001303576040805162461bcd60e51b8152602060048201526016602482015275155b9cdd5c1c1bdc9d19590818dbdb1b185d195c985b60521b604482015290519081900360640190fd5b336000620013118462002403565b9050600062001321828562002f47565b9050858262001377576040805162461bcd60e51b815260206004820152601f60248201527f436c61696d6564206164647265737320686f6c6473206e6f2073686172657300604482015290519081900360640190fd5b6001600160a01b03861660009081526005602052604090206001015415620013e6576040805162461bcd60e51b815260206004820152601760248201527f4164647265737320616c726561647920636c61696d6564000000000000000000604482015290519081900360640190fd5b604080516323b872dd60e01b81526001600160a01b038681166004830152306024830152604482018590529151918316916323b872dd916064808201926020929091908290030181600087803b1580156200144057600080fd5b505af115801562001455573d6000803e3d6000fd5b505050506040513d60208110156200146c57600080fd5b5051620014bd576040805162461bcd60e51b815260206004820152601a60248201527910dbdb1b185d195c985b081d1c985b9cd9995c8819985a5b195960321b604482015290519081900360640190fd5b604080516080810182526001600160a01b038087168083526020808401878152428587019081528d8516606087019081528d8616600081815260058652899020975188549088166001600160a01b0319918216178955935160018901559151600288015551600390960180549690951695909116949094179092558351878152935190937f1982ca8958fc8a8176cb52be509260f4bc5af7ce04e1533711793f1c56dd535992908290030190a350505050505050565b60095460408051632a0a4ed560e01b815290516000926001600160a01b031691632a0a4ed5916004808301926020929190829003018186803b158015620015b957600080fd5b505afa158015620015ce573d6000803e3d6000fd5b505050506040513d6020811015620015e557600080fd5b5051905090565b60035460ff1681565b620015ff62001573565b6001600160a01b0316336001600160a01b03161462001665576040805162461bcd60e51b815260206004820152601860248201527f596f752063616e6e6f742064656c65746520636c61696d730000000000000000604482015290519081900360640190fd5b6200166f620035d9565b506001600160a01b03808216600090815260056020908152604091829020825160808101845281548516815260018201549281018390526002820154938101939093526003015490921660608201819052909162001705576040805162461bcd60e51b815260206004820152600e60248201526d139bc818db185a5b48199bdd5b9960921b604482015290519081900360640190fd5b6001600160a01b03808416600090815260056020908152604080832080546001600160a01b031990811682556001820185905560028201859055600390910180549091169055855186830151825163a9059cbb60e01b81529186166004830152602482015290519385169363a9059cbb93604480840194938390030190829087803b1580156200179457600080fd5b505af1158015620017a9573d6000803e3d6000fd5b505050506040513d6020811015620017c057600080fd5b505162001811576040805162461bcd60e51b815260206004820152601a60248201527910dbdb1b185d195c985b081d1c985b9cd9995c8819985a5b195960321b604482015290519081900360640190fd5b815160208084015160408051918252516001600160a01b03938416938716927fbb036e629a9f4c0897ee5d48440dfdb36f7e772117723a2ed603a6514244c2d5928290030190a3505050565b600d5481565b3360008181526001602090815260408083206001600160a01b0387168452909152812054909162000bac91859062001238908662002d5e565b6001600160a01b039081166000908152600560205260409020600301541690565b600080620018cc868662002899565b905080156200197b57856001600160a01b031663a4c0ed36338787876040518563ffffffff1660e01b815260040180856001600160a01b03168152602001848152602001806020018281038252848482818152602001925080828437600081840152601f19601f82011690508083019250505095505050505050600060405180830381600087803b1580156200196157600080fd5b505af115801562001976573d6000803e3d6000fd5b505050505b95945050505050565b6200198e62002d7e565b80156200199d5750600e5460ff165b620019e2576040805162461bcd60e51b815260206004820152601060248201526f3737903832b73234b7339037b33332b960811b604482015290519081900360640190fd5b600b546001600160a01b0316634b91562e33620019ff8162002403565b6040518363ffffffff1660e01b815260040180836001600160a01b0316815260200182815260200192505050600060405180830381600087803b15801562001a4657600080fd5b505af115801562001a5b573d6000803e3d6000fd5b50505050565b62001a6d338262002f70565b600954600a546001600160a01b03909116906342966c689062001a9290849062002f47565b6040518263ffffffff1660e01b815260040180828152602001915050600060405180830381600087803b15801562001ac957600080fd5b505af115801562001ade573d6000803e3d6000fd5b5050505050565b600e5460ff1662001af557600080fd5b60095460408051633a98ef3960e01b815290516000926001600160a01b031691633a98ef3991600480830192602092919082900301818787803b15801562001b3c57600080fd5b505af115801562001b51573d6000803e3d6000fd5b505050506040513d602081101562001b6857600080fd5b5051905062001b8861271062001b8183610bb862002f47565b9062002f7c565b62001b92620011ca565b101562001bd15760405162461bcd60e51b815260040180806020018281038252602e8152602001806200424a602e913960400191505060405180910390fd5b6040517329fe8914e76da5ce2d90de98a64d0055f199d06d906000906729a2241af62c00009082818181858883f1935050505015801562001c16573d6000803e3d6000fd5b506000338385600d5460405162001c2d9062003613565b80856001600160a01b03168152602001846001600160a01b03168152602001838152602001828152602001945050505050604051809103906000f08015801562001c7b573d6000803e3d6000fd5b509050806001600160a01b031663b28fa15262001c983362002403565b62001ca2620011ca565b036040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b15801562001cd857600080fd5b505afa15801562001ced573d6000803e3d6000fd5b505050506040513d602081101562001d0457600080fd5b505162001d4f576040805162461bcd60e51b8152602060048201526014602482015273496e73756666696369656e742066756e64696e6760601b604482015290519081900360640190fd5b62001d5962002d7e565b1562001f0557600b60009054906101000a90046001600160a01b03166001600160a01b031663e5a6b10f6040518163ffffffff1660e01b815260040160206040518083038186803b15801562001dae57600080fd5b505afa15801562001dc3573d6000803e3d6000fd5b505050506040513d602081101562001dda57600080fd5b50516001600160a01b03848116911614801562001e88575062001e8461271062001b81612904600b60009054906101000a90046001600160a01b03166001600160a01b031663a035b1fe6040518163ffffffff1660e01b815260040160206040518083038186803b15801562001e4f57600080fd5b505afa15801562001e64573d6000803e3d6000fd5b505050506040513d602081101562001e7b57600080fd5b50519062002f47565b8410155b62001ec55760405162461bcd60e51b815260040180806020018281038252603c8152602001806200420e603c913960400191505060405180910390fd5b62001f056040518060400160405280601c81526020017f4f66666572207265706c6163656420627920686967686572206269640000000081525062002f90565b600b80546001600160a01b038084166001600160a01b0319909216919091179182905560408051878152868316602082015292909116828201525133917f34e649ce0ed38b68d4a32f1f8fb75a61e4f3a0444c5bae222d20aaf2c3db3677919081900360600190a250505050565b6009546001600160a01b031681565b60085481565b336000908152600660205260409020805460ff19169115919091179055565b33600090815260056020526040902060010154156200210a5733600081815260056020908152604080832060018101805460038301805484546001600160a01b03199081168655938890556002909401879055918316909155825163a9059cbb60e01b8152600481019690965260248601819052915191946001600160a01b0390911693849363a9059cbb93604480850194929391928390030190829087803b1580156200205457600080fd5b505af115801562002069573d6000803e3d6000fd5b505050506040513d60208110156200208057600080fd5b5051620020d1576040805162461bcd60e51b815260206004820152601a60248201527910dbdb1b185d195c985b081d1c985b9cd9995c8819985a5b195960321b604482015290519081900360640190fd5b60408051838152905133917f203627483d943880619f4b7e0cca21dbefd6204b4d85b124eb99540e17ba86dd919081900360200190a250505b565b6200211662002d7e565b8015620021255750600e5460ff165b6200216a576040805162461bcd60e51b815260206004820152601060248201526f3737903832b73234b7339037b33332b960811b604482015290519081900360640190fd5b600b60009054906101000a90046001600160a01b03166001600160a01b03166390e64d136040518163ffffffff1660e01b815260040160206040518083038186803b158015620021b957600080fd5b505afa158015620021ce573d6000803e3d6000fd5b505050506040513d6020811015620021e557600080fd5b5051156200221d576200221760405180604001604052806007815260200166115e1c1a5c995960ca1b81525062002f90565b6200210a565b600b60009054906101000a90046001600160a01b03166001600160a01b031663cf42a9276040518163ffffffff1660e01b815260040160206040518083038186803b1580156200226c57600080fd5b505afa15801562002281573d6000803e3d6000fd5b505050506040513d60208110156200229857600080fd5b505115620022d5576200221760405180604001604052806012815260200171139bdd08195b9bdd59da081cdd5c1c1bdc9d60721b81525062002f90565b600b54604080516338a86c5760e11b815290516001600160a01b039092169163b28fa152916200235b918491637150d8ae916004808301926020929190829003018186803b1580156200232757600080fd5b505afa1580156200233c573d6000803e3d6000fd5b505050506040513d60208110156200235357600080fd5b505162002403565b62002365620011ca565b036040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b1580156200239b57600080fd5b505afa158015620023b0573d6000803e3d6000fd5b505050506040513d6020811015620023c757600080fd5b50516200210a576200210a60405180604001604052806012815260200171496e73756666696369656e742066756e647360701b81525062002f90565b6001600160a01b031660009081526020819052604090205490565b6000806200242c8362003155565b905080156200243d579050620011ec565b6009546001600160a01b03848116911614156200245f575050600a54620011ec565b600a54600954604080516377e071ad60e01b81526001600160a01b0387811660048301529151620024b7949392909216916377e071ad91602480820192602092909190829003018186803b15801562001e4f57600080fd5b915050620011ec565b60045481565b600e5460ff166200250b576040805162461bcd60e51b815260206004820152600a6024820152696e6f742061637469766560b01b604482015290519081900360640190fd5b60003390506200252f61271062001b81600c5462002528620011ca565b9062002f47565b6200253a8262002403565b101562002583576040805162461bcd60e51b8152602060048201526012602482015271145d5bdc9d5b481b9bdd081c995858da195960721b604482015290519081900360640190fd5b6200258d62002d7e565b15620025b9576200259d62001984565b620025a76200210c565b620025b162002d7e565b15620025b957fe5b620025c78182600162002d8f565b604080516001600160a01b038316815290517f3b6b79a09e9fd230e8591b65c97236bf7df7a604edf733db0658e66b0e6eb2a99181900360200190a150565b6200261062002d7e565b80156200261f5750600e5460ff165b62002664576040805162461bcd60e51b815260206004820152601060248201526f3737903832b73234b7339037b33332b960811b604482015290519081900360640190fd5b600b546001600160a01b0316635ff0cf8433620019ff8162002403565b600954604080516395d89b4160e01b815290516060926001600160a01b0316916395d89b41916004808301926000929190829003018186803b158015620026c757600080fd5b505afa158015620026dc573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405260208110156200270657600080fd5b8101908080516040519392919084600160201b8211156200272657600080fd5b9083019060208201858111156200273c57600080fd5b8251600160201b8111828201881017156200275657600080fd5b82525081516020918201929091019080838360005b83811015620027855781810151838201526020016200276b565b50505050905090810190601f168015620027b35780820380516001836020036101000a031916815260200191505b506040525050506040516020018080601160fa1b81525060010182805190602001908083836020831062000b5e5780518252601f19909201916020918201910162000b3d565b6001600160a01b031660009081526005602052604090206001015490565b600c5481565b6001600160a01b031660009081526006602052604090205460ff161590565b3360008181526001602090815260408083206001600160a01b0387168452909152812054909162000bac91859062001238908662002f34565b6009546001600160a01b031633146200288d57600080fd5b62001a5b84846200319c565b6000620028a783836200323a565b9392505050565b60066020526000908152604090205460ff1681565b620028cd62002d7e565b1562002910576040805162461bcd60e51b815260206004820152600d60248201526c6f666665722070656e64696e6760981b604482015290519081900360640190fd5b600954604080516323b872dd60e01b81523360048201523060248201526044810184905290516001600160a01b03909216916323b872dd916064808201926020929091908290030181600087803b1580156200296b57600080fd5b505af115801562002980573d6000803e3d6000fd5b505050506040513d60208110156200299757600080fd5b5051620029a357600080fd5b620029af82826200319c565b5050565b600b546001600160a01b031681565b60056020526000908152604090208054600182015460028301546003909301546001600160a01b039283169391921684565b600f805460408051602060026001851615610100026000190190941693909304601f8101849004840282018401909252818152929183018282801562002a7e5780601f1062002a525761010080835404028352916020019162002a7e565b820191906000526020600020905b81548152906001019060200180831162002a6057829003601f168201915b505050505081565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b600e54600090819060ff161562002af8576040805162461bcd60e51b815260206004820152600660248201526561637469766560d01b604482015290519081900360640190fd5b62002b04338462002f70565b600062002b1d600a548562002f4790919063ffffffff16565b6009546040805163a9059cbb60e01b81523360048201526024810184905290519293506001600160a01b039091169163a9059cbb916044808201926020929091908290030181600087803b15801562002b7557600080fd5b505af115801562002b8a573d6000803e3d6000fd5b505050506040513d602081101562002ba157600080fd5b505162002bad57600080fd5b6009546001600160a01b031692509050915091565b62002bcc62002d7e565b801562002bdb5750600e5460ff165b62002c20576040805162461bcd60e51b815260206004820152601060248201526f3737903832b73234b7339037b33332b960811b604482015290519081900360640190fd5b600b60009054906101000a90046001600160a01b03166001600160a01b0316637150d8ae6040518163ffffffff1660e01b815260040160206040518083038186803b15801562002c6f57600080fd5b505afa15801562002c84573d6000803e3d6000fd5b505050506040513d602081101562002c9b57600080fd5b50516001600160a01b0316331462002cb257600080fd5b6200210a6040518060400160405280600981526020016810d85b98d95b1b195960ba1b81525062002f90565b6001600160a01b031660009081526005602052604090206002015490565b6001600160a01b03808416600081815260016020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b8181018281101562000bb057fe5b62002d7983838362003296565b505050565b600b546001600160a01b0316151590565b600062002d9c8462002403565b9050600062002daa620011ca565b600e805460ff19169055905062002dc18262002ab1565b506000905062002dd2828462002f34565b6009546040805163a9059cbb60e01b81526001600160a01b038a8116600483015260248201859052915193945091169163a9059cbb916044808201926020929091908290030181600087803b15801562002e2b57600080fd5b505af115801562002e40573d6000803e3d6000fd5b505050506040513d602081101562002e5757600080fd5b505162002e6357600080fd5b600980546001600160a01b0319166001600160a01b038781169190911791829055600a869055166323b872dd873062002e9d888662002f47565b6040518463ffffffff1660e01b815260040180846001600160a01b03168152602001836001600160a01b031681526020018281526020019350505050602060405180830381600087803b15801562002ef457600080fd5b505af115801562002f09573d6000803e3d6000fd5b505050506040513d602081101562002f2057600080fd5b505162002f2c57600080fd5b505050505050565b60008282111562002f4157fe5b50900390565b60008262002f585750600062000bb0565b508181028183828162002f6757fe5b041462000bb057fe5b620029af82826200333e565b600081838162002f8857fe5b049392505050565b600b54604080516338a86c5760e11b815290516000926001600160a01b031691637150d8ae916004808301926020929190829003018186803b15801562002fd657600080fd5b505afa15801562002feb573d6000803e3d6000fd5b505050506040513d60208110156200300257600080fd5b5051600b546040805133808252600060208381018290526001600160a01b039586166060850181905260809585018681528a51968601969096528951979850958816967fc88f58ae9feb0742d9422f604dd3c1be6d02818f8dec340c5061f428b554e97596939592948a94939092909160a08401918601908083838a5b83811015620030995781810151838201526020016200307f565b50505050905090810190601f168015620030c75780820380516001836020036101000a031916815260200191505b509550505050505060405180910390a2600b60009054906101000a90046001600160a01b03166001600160a01b03166341c0e1b56040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156200312857600080fd5b505af11580156200313d573d6000803e3d6000fd5b5050600b80546001600160a01b031916905550505050565b60006001600160a01b0382163014156200317257506001620011ec565b6007546001600160a01b0383811691161415620031935750600854620011ec565b506000620011ec565b620031a662002d7e565b15620031e9576040805162461bcd60e51b815260206004820152600d60248201526c6f666665722070656e64696e6760981b604482015290519081900360640190fd5b600e5460ff166200322e576040805162461bcd60e51b815260206004820152600a6024820152696e6f742061637469766560b01b604482015290519081900360640190fd5b620029af8282620033d9565b60006200324883836200347a565b6200328c576040805162461bcd60e51b815260206004820152600f60248201526e151c985b9cd9995c8819985a5b1959608a1b604482015290519081900360640190fd5b62000bac62001fa7565b620032a383838362003489565b620032ad62002d7e565b8015620032bc5750600e5460ff165b1562002d7957600b5460408051636240a7d760e11b81526001600160a01b0386811660048301528581166024830152604482018590529151919092169163c4814fae91606480830192600092919082900301818387803b1580156200332057600080fd5b505af115801562003335573d6000803e3d6000fd5b50505050505050565b6200334a82826200354d565b6200335462002d7e565b8015620033635750600e5460ff165b15620029af57600b5460408051636240a7d760e11b81526001600160a01b03858116600483015260006024830181905260448301869052925193169263c4814fae9260648084019391929182900301818387803b158015620033c457600080fd5b505af115801562002f2c573d6000803e3d6000fd5b6001600160a01b038216620033ed57600080fd5b600254620033fc908262002d5e565b6002556001600160a01b03821660009081526020819052604090205462003424908262002d5e565b6001600160a01b0383166000818152602081815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050565b600062000bac33848462002d6c565b6001600160a01b0382166200349d57600080fd5b6001600160a01b038316600090815260208190526040902054620034c2908262002f34565b6001600160a01b038085166000908152602081905260408082209390935590841681522054620034f3908262002d5e565b6001600160a01b038084166000818152602081815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b6002546200355c908262002f34565b6002556001600160a01b03821660009081526020819052604090205462003584908262002f34565b6001600160a01b038316600081815260208181526040808320949094558351858152935191937fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef929081900390910190a35050565b604051806080016040528060006001600160a01b03168152602001600081526020016000815260200160006001600160a01b031681525090565b610bec80620036228339019056fe608060405234801561001057600080fd5b50604051610bec380380610bec8339818101604052608081101561003357600080fd5b50805160208201516040830151606090930151919290918161008c576040805162461bcd60e51b815260206004820152600d60248201526c696e76616c696420707269636560981b604482015290519081900360640190fd5b600180546001600160a01b03199081163317909155600280546001600160a01b03968716908316179055600380549490951693169290921790925560049190915560005542600555610b09806100e36000396000f3fe608060405234801561001057600080fd5b506004361061012c5760003560e01c8063b1610d7e116100ad578063cf42a92711610071578063cf42a927146102b4578063d7be4e29146102bc578063e5a6b10f146102c4578063fa7f1bae146102cc578063fb286c65146102d45761012c565b8063b1610d7e14610249578063b28fa15214610251578063b5b47f421461026e578063b80777ea14610276578063c4814fae1461027e5761012c565b80635ff0cf84116100f45780635ff0cf84146101c35780637150d8ae146101ef5780638f1b4c6f1461021357806390e64d1314610239578063a035b1fe146102415761012c565b80630c43cd88146101315780631703a0181461014b57806341c0e1b514610153578063448ab4c61461015d5780634b91562e14610197575b600080fd5b6101396102dc565b60408051918252519081900360200190f35b6101396102e3565b61015b6102e9565b005b6101836004803603602081101561017357600080fd5b50356001600160a01b0316610343565b604080519115158252519081900360200190f35b61015b600480360360408110156101ad57600080fd5b506001600160a01b038135169060200135610376565b61015b600480360360408110156101d957600080fd5b506001600160a01b038135169060200135610421565b6101f76104c8565b604080516001600160a01b039092168252519081900360200190f35b6101836004803603602081101561022957600080fd5b50356001600160a01b03166104d7565b6101836104e0565b610139610504565b61013961050a565b6101836004803603602081101561026757600080fd5b5035610511565b61013961064e565b610139610654565b61015b6004803603606081101561029457600080fd5b506001600160a01b0381358116916020810135909116906040013561065a565b6101836106f0565b61018361083b565b6101f76108f4565b610183610903565b610139610927565b6276a70081565b60005481565b6001546001600160a01b03163314610335576040805162461bcd60e51b815260206004820152600a6024820152691b9bdd081c185c995b9d60b21b604482015290519081900360640190fd5b6002546001600160a01b0316ff5b600060015b6001600160a01b03831660009081526008602052604090205460ff16600281111561036f57fe5b1492915050565b6001546001600160a01b031633146103c2576040805162461bcd60e51b815260206004820152600a6024820152691b9bdd081c185c995b9d60b21b604482015290519081900360640190fd5b6103ca610903565b610411576040805162461bcd60e51b81526020600482015260136024820152722a3432903b37ba32903430b99032b73232b21760691b604482015290519081900360640190fd5b61041d6002828461092d565b5050565b6001546001600160a01b0316331461046d576040805162461bcd60e51b815260206004820152600a6024820152691b9bdd081c185c995b9d60b21b604482015290519081900360640190fd5b610475610903565b6104bc576040805162461bcd60e51b81526020600482015260136024820152722a3432903b37ba32903430b99032b73232b21760691b604482015290519081900360640190fd5b61041d6001828461092d565b6002546001600160a01b031681565b60006002610348565b6000806104f86005544261097690919063ffffffff16565b6276a700109150505b90565b60045481565b624f1a0081565b600354600254604080516370a0823160e01b81526001600160a01b03928316600482015290516000939290921691839183916370a0823191602480820192602092909190829003018186803b15801561056957600080fd5b505afa15801561057d573d6000803e3d6000fd5b505050506040513d602081101561059357600080fd5b505160025460015460408051636eb1769f60e11b81526001600160a01b0393841660048201529183166024830152519293506000929185169163dd62ed3e91604480820192602092909190829003018186803b1580156105f257600080fd5b505afa158015610606573d6000803e3d6000fd5b505050506040513d602081101561061c57600080fd5b505160045490915060009061063290879061098d565b90508281111580156106445750818111155b9695505050505050565b60065481565b60055481565b6001546001600160a01b031633146106a6576040805162461bcd60e51b815260206004820152600a6024820152691b9bdd081c185c995b9d60b21b604482015290519081900360640190fd5b6106ae610903565b156106eb576001600160a01b0380841660009081526008602052604080822054928516825290205460ff91821691166106e88282856109b2565b50505b505050565b60006106fa610903565b1561080f57600054600154604080516318160ddd60e01b81529051610807926001600160a01b0316916318160ddd916004808301926020929190829003018186803b15801561074857600080fd5b505afa15801561075c573d6000803e3d6000fd5b505050506040513d602081101561077257600080fd5b5051600654600154604080516318160ddd60e01b8152905161080193612710936107fb9391926001600160a01b03909116916318160ddd916004808301926020929190829003018186803b1580156107c957600080fd5b505afa1580156107dd573d6000803e3d6000fd5b505050506040513d60208110156107f357600080fd5b505190610976565b9061098d565b90610ab3565b109050610501565b60005461080761082c600654600754610ac690919063ffffffff16565b6007546108019061271061098d565b6000610845610903565b156108d757600054600154604080516318160ddd60e01b815290516108ce926001600160a01b0316916318160ddd916004808301926020929190829003018186803b15801561089357600080fd5b505afa1580156108a7573d6000803e3d6000fd5b505050506040513d60208110156108bd57600080fd5b50516007546108019061271061098d565b10159050610501565b6000546108ce61082c600654600754610ac690919063ffffffff16565b6003546001600160a01b031681565b60008061091b6005544261097690919063ffffffff16565b624f1a00101591505090565b60075481565b6001600160a01b0381166000908152600860205260409020805460ff811691859160ff1916600183600281111561096057fe5b02179055506109708185856109b2565b50505050565b60008282111561098257fe5b508082035b92915050565b60008261099c57506000610987565b50818102818382816109aa57fe5b041461098757fe5b8160028111156109be57fe5b8360028111156109ca57fe5b146106eb5760028360028111156109dd57fe5b14156109f8576006546109f09082610976565b600655610a1d565b6001836002811115610a0657fe5b1415610a1d57600754610a199082610976565b6007555b6002826002811115610a2b57fe5b1415610a4657600654610a3e9082610ac6565b600655610a6b565b6001826002811115610a5457fe5b1415610a6b57600754610a679082610ac6565b6007555b7f8fcc50c2c4edd06d51ae66e9e21ed76b32a1766c57f491788e1aa24a1b58c256600754600654604051808381526020018281526020019250505060405180910390a1505050565b6000818381610abe57fe5b049392505050565b8181018281101561098757fefea2646970667358221220cd9518d0a9e50110ca0074a02bb1096c1d1d4cd835496ae38fa53fae5643ee2d64736f6c634300070100334e6577206f6666657273206d757374206265206174206c6561737420352520686967686572207468616e207468652070656e64696e67206f666665725468697320636f6e747261637420646f6573206e6f7420726570726573656e7420656e6f75676820657175697479a26469706673582212202de6c0b31413dbfce35d49f6b3ec4ebc5c9822b4ccdd85e2f5d7bc94f50f6d9c64736f6c63430007010033",
    "deployedBytecode": "60806040523480156200001157600080fd5b5060043610620002d45760003560e01c80636427ed971162000189578063a457c2d711620000e1578063c6788bdd1162000093578063c6788bdd14620008bc578063d50256251462000922578063dd62ed3e146200092c578063de0e9a3e146200095d578063e1b8c38e14620009a0578063eb470ebf14620009aa57620002d4565b8063a457c2d71462000773578063a4c0ed3614620007a2578063a9059cbb146200082b578063b40e80d1146200085a578063bf376c7a1462000883578063c028df0614620008b257620002d4565b80638fd3ab80116200013b5780638fd3ab8014620006f957806390cf581c146200070357806395d89b41146200070d5780639b56d6c914620007175780639e8a9a5a1462000740578063a3ec1883146200074a57620002d4565b80636427ed9714620006675780636b03ed5f14620006895780636f4b18df146200069357806370a08231146200069d57806377e071ad14620006c65780637dc2cd9814620006ef57620002d4565b80632a0a4ed5116200023d5780634000aea011620001ef5780634000aea0146200057157806341c12a7014620005fa57806342966c68146200060457806349b210b7146200062457806350e70d48146200065357806360918117146200065d57620002d4565b80632a0a4ed514620004bc578063313ce56714620004c657806332a7ae9514620004e65780633549788a146200050f5780633950935114620005195780633bcc45ba146200054857620002d4565b80630cd865ec11620002975780630cd865ec14620003ea578063141c7068146200041557806318160ddd146200041f5780631e3b9de5146200042957806323b872dd146200045257806326773ddd146200048b57620002d4565b806302fb0c5e14620002d957806306fdde0314620002f75780630832e4701462000379578063095ea7b314620003955780630c6f0e5d14620003c4575b600080fd5b620002e3620009d3565b604080519115158252519081900360200190f35b62000301620009dc565b6040805160208082528351818301528351919283929083019185019080838360005b838110156200033d57818101518382015260200162000323565b50505050905090810190601f1680156200036b5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6200038362000b97565b60408051918252519081900360200190f35b620002e360048036036040811015620003ad57600080fd5b506001600160a01b03813516906020013562000b9d565b620003ce62000bb6565b604080516001600160a01b039092168252519081900360200190f35b62000413600480360360208110156200040257600080fd5b50356001600160a01b031662000bc5565b005b6200041362000ea9565b62000383620011ca565b620003ce600480360360208110156200044157600080fd5b50356001600160a01b0316620011d0565b620002e3600480360360608110156200046a57600080fd5b506001600160a01b03813581169160208101359091169060400135620011f1565b6200041360048036036040811015620004a357600080fd5b506001600160a01b038135811691602001351662001248565b620003ce62001573565b620004d0620015ec565b6040805160ff9092168252519081900360200190f35b6200041360048036036020811015620004fe57600080fd5b50356001600160a01b0316620015f5565b620003836200185d565b620002e3600480360360408110156200053157600080fd5b506001600160a01b03813516906020013562001863565b620003ce600480360360208110156200056057600080fd5b50356001600160a01b03166200189c565b620002e3600480360360608110156200058957600080fd5b6001600160a01b0382351691602081013591810190606081016040820135600160201b811115620005b957600080fd5b820183602082011115620005cc57600080fd5b803590602001918460018302840111600160201b83111715620005ee57600080fd5b509092509050620018bd565b6200041362001984565b62000413600480360360208110156200061c57600080fd5b503562001a61565b62000413600480360360408110156200063c57600080fd5b50803590602001356001600160a01b031662001ae5565b620003ce62001f73565b6200038362001f82565b62000413600480360360208110156200067f57600080fd5b5035151562001f88565b6200041362001fa7565b620004136200210c565b6200038360048036036020811015620006b557600080fd5b50356001600160a01b031662002403565b6200038360048036036020811015620006de57600080fd5b50356001600160a01b03166200241e565b62000383620024c0565b62000413620024c6565b6200041362002606565b6200030162002681565b62000383600480360360208110156200072f57600080fd5b50356001600160a01b0316620027f9565b6200038362002817565b620002e3600480360360208110156200076257600080fd5b50356001600160a01b03166200281d565b620002e3600480360360408110156200078b57600080fd5b506001600160a01b0381351690602001356200283c565b6200041360048036036060811015620007ba57600080fd5b6001600160a01b0382351691602081013591810190606081016040820135600160201b811115620007ea57600080fd5b820183602082011115620007fd57600080fd5b803590602001918460018302840111600160201b831117156200081f57600080fd5b50909250905062002875565b620002e3600480360360408110156200084357600080fd5b506001600160a01b03813516906020013562002899565b620002e3600480360360208110156200087257600080fd5b50356001600160a01b0316620028ae565b62000413600480360360408110156200089b57600080fd5b506001600160a01b038135169060200135620028c3565b620003ce620029b3565b620008e560048036036020811015620008d457600080fd5b50356001600160a01b0316620029c2565b60405180856001600160a01b03168152602001848152602001838152602001826001600160a01b0316815260200194505050505060405180910390f35b62000301620029f4565b62000383600480360360408110156200094457600080fd5b506001600160a01b038135811691602001351662002a86565b6200097d600480360360208110156200097557600080fd5b503562002ab1565b604080516001600160a01b03909316835260208301919091528051918290030190f35b6200041362002bc2565b6200038360048036036020811015620009c257600080fd5b50356001600160a01b031662002cde565b600e5460ff1681565b600954604080516306fdde0360e01b815290516060926001600160a01b0316916306fdde03916004808301926000929190829003018186803b15801562000a2257600080fd5b505afa15801562000a37573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052602081101562000a6157600080fd5b8101908080516040519392919084600160201b82111562000a8157600080fd5b90830190602082018581111562000a9757600080fd5b8251600160201b81118282018810171562000ab157600080fd5b82525081516020918201929091019080838360005b8381101562000ae057818101518382015260200162000ac6565b50505050905090810190601f16801562000b0e5780820380516001836020036101000a031916815260200191505b506040525050506040516020018080690223930b3b3b0b13632960b51b815250600a0182805190602001908083835b6020831062000b5e5780518252601f19909201916020918201910162000b3d565b6001836020036101000a038019825116818451168082178552505050505050905001915050604051602081830303815290604052905090565b600a5481565b600062000bac33848462002cfc565b5060015b92915050565b6007546001600160a01b031681565b62000bcf620035d9565b506001600160a01b038082166000908152600560209081526040918290208251608081018452815485168152600182015492810183905260028201549381019390935260030154909216606082018190529091908162000c67576040805162461bcd60e51b815260206004820152600e60248201526d139bc818db185a5b48199bdd5b9960921b604482015290519081900360640190fd5b82516001600160a01b0316331462000cc6576040805162461bcd60e51b815260206004820152601f60248201527f4f6e6c7920636c61696d616e742063616e207265736f6c766520636c61696d00604482015290519081900360640190fd5b4262000ce2600454856040015162002d5e90919063ffffffff16565b111562000d36576040805162461bcd60e51b815260206004820152601960248201527f436c61696d20706572696f64206e6f74206f7665722079657400000000000000604482015290519081900360640190fd5b82516001600160a01b03808616600090815260056020908152604080832080546001600160a01b031990811682556001820185905560028201859055600390910180549091169055805163a9059cbb60e01b815284861660048201526024810188905290519386169363a9059cbb93604480840194938390030190829087803b15801562000dc357600080fd5b505af115801562000dd8573d6000803e3d6000fd5b505050506040513d602081101562000def57600080fd5b505162000e40576040805162461bcd60e51b815260206004820152601a60248201527910dbdb1b185d195c985b081d1c985b9cd9995c8819985a5b195960321b604482015290519081900360640190fd5b62000e57858262000e518862002403565b62002d6c565b806001600160a01b0316856001600160a01b03167f52a5c2b28bc6eb9712d0ced43463103b486b13ccc9cda499fd3b2d7b6a74a8ee856040518082815260200191505060405180910390a35050505050565b62000eb362002d7e565b801562000ec25750600e5460ff165b62000f07576040805162461bcd60e51b815260206004820152601060248201526f3737903832b73234b7339037b33332b960811b604482015290519081900360640190fd5b600b60009054906101000a90046001600160a01b03166001600160a01b0316637150d8ae6040518163ffffffff1660e01b815260040160206040518083038186803b15801562000f5657600080fd5b505afa15801562000f6b573d6000803e3d6000fd5b505050506040513d602081101562000f8257600080fd5b50516001600160a01b0316331462000f9957600080fd5b600b60009054906101000a90046001600160a01b03166001600160a01b031663d7be4e296040518163ffffffff1660e01b815260040160206040518083038186803b15801562000fe857600080fd5b505afa15801562000ffd573d6000803e3d6000fd5b505050506040513d60208110156200101457600080fd5b50516200105f576040805162461bcd60e51b8152602060048201526014602482015273125b9cdd59999a58da595b9d081cdd5c1c1bdc9d60621b604482015290519081900360640190fd5b6200115b33600b60009054906101000a90046001600160a01b03166001600160a01b031663e5a6b10f6040518163ffffffff1660e01b815260040160206040518083038186803b158015620010b357600080fd5b505afa158015620010c8573d6000803e3d6000fd5b505050506040513d6020811015620010df57600080fd5b5051600b546040805163501ad8ff60e11b815290516001600160a01b039092169163a035b1fe91600480820192602092909190829003018186803b1580156200112757600080fd5b505afa1580156200113c573d6000803e3d6000fd5b505050506040513d60208110156200115357600080fd5b505162002d8f565b600b546040805133808252600160208301526001600160a01b039390931660608201526080818301819052600790820152665375636365737360c81b60a082015290517fc88f58ae9feb0742d9422f604dd3c1be6d02818f8dec340c5061f428b554e9759181900360c00190a2565b60025490565b6001600160a01b03808216600090815260056020526040902054165b919050565b60006200120084848462002d6c565b6001600160a01b0384166000908152600160209081526040808320338085529252909120546200123e91869162001238908662002f34565b62002cfc565b5060019392505050565b62001253816200281d565b620012a5576040805162461bcd60e51b815260206004820181905260248201527f436c61696d732064697361626c656420666f7220746869732061646472657373604482015290519081900360640190fd5b6000620012b2836200241e565b90506000811162001303576040805162461bcd60e51b8152602060048201526016602482015275155b9cdd5c1c1bdc9d19590818dbdb1b185d195c985b60521b604482015290519081900360640190fd5b336000620013118462002403565b9050600062001321828562002f47565b9050858262001377576040805162461bcd60e51b815260206004820152601f60248201527f436c61696d6564206164647265737320686f6c6473206e6f2073686172657300604482015290519081900360640190fd5b6001600160a01b03861660009081526005602052604090206001015415620013e6576040805162461bcd60e51b815260206004820152601760248201527f4164647265737320616c726561647920636c61696d6564000000000000000000604482015290519081900360640190fd5b604080516323b872dd60e01b81526001600160a01b038681166004830152306024830152604482018590529151918316916323b872dd916064808201926020929091908290030181600087803b1580156200144057600080fd5b505af115801562001455573d6000803e3d6000fd5b505050506040513d60208110156200146c57600080fd5b5051620014bd576040805162461bcd60e51b815260206004820152601a60248201527910dbdb1b185d195c985b081d1c985b9cd9995c8819985a5b195960321b604482015290519081900360640190fd5b604080516080810182526001600160a01b038087168083526020808401878152428587019081528d8516606087019081528d8616600081815260058652899020975188549088166001600160a01b0319918216178955935160018901559151600288015551600390960180549690951695909116949094179092558351878152935190937f1982ca8958fc8a8176cb52be509260f4bc5af7ce04e1533711793f1c56dd535992908290030190a350505050505050565b60095460408051632a0a4ed560e01b815290516000926001600160a01b031691632a0a4ed5916004808301926020929190829003018186803b158015620015b957600080fd5b505afa158015620015ce573d6000803e3d6000fd5b505050506040513d6020811015620015e557600080fd5b5051905090565b60035460ff1681565b620015ff62001573565b6001600160a01b0316336001600160a01b03161462001665576040805162461bcd60e51b815260206004820152601860248201527f596f752063616e6e6f742064656c65746520636c61696d730000000000000000604482015290519081900360640190fd5b6200166f620035d9565b506001600160a01b03808216600090815260056020908152604091829020825160808101845281548516815260018201549281018390526002820154938101939093526003015490921660608201819052909162001705576040805162461bcd60e51b815260206004820152600e60248201526d139bc818db185a5b48199bdd5b9960921b604482015290519081900360640190fd5b6001600160a01b03808416600090815260056020908152604080832080546001600160a01b031990811682556001820185905560028201859055600390910180549091169055855186830151825163a9059cbb60e01b81529186166004830152602482015290519385169363a9059cbb93604480840194938390030190829087803b1580156200179457600080fd5b505af1158015620017a9573d6000803e3d6000fd5b505050506040513d6020811015620017c057600080fd5b505162001811576040805162461bcd60e51b815260206004820152601a60248201527910dbdb1b185d195c985b081d1c985b9cd9995c8819985a5b195960321b604482015290519081900360640190fd5b815160208084015160408051918252516001600160a01b03938416938716927fbb036e629a9f4c0897ee5d48440dfdb36f7e772117723a2ed603a6514244c2d5928290030190a3505050565b600d5481565b3360008181526001602090815260408083206001600160a01b0387168452909152812054909162000bac91859062001238908662002d5e565b6001600160a01b039081166000908152600560205260409020600301541690565b600080620018cc868662002899565b905080156200197b57856001600160a01b031663a4c0ed36338787876040518563ffffffff1660e01b815260040180856001600160a01b03168152602001848152602001806020018281038252848482818152602001925080828437600081840152601f19601f82011690508083019250505095505050505050600060405180830381600087803b1580156200196157600080fd5b505af115801562001976573d6000803e3d6000fd5b505050505b95945050505050565b6200198e62002d7e565b80156200199d5750600e5460ff165b620019e2576040805162461bcd60e51b815260206004820152601060248201526f3737903832b73234b7339037b33332b960811b604482015290519081900360640190fd5b600b546001600160a01b0316634b91562e33620019ff8162002403565b6040518363ffffffff1660e01b815260040180836001600160a01b0316815260200182815260200192505050600060405180830381600087803b15801562001a4657600080fd5b505af115801562001a5b573d6000803e3d6000fd5b50505050565b62001a6d338262002f70565b600954600a546001600160a01b03909116906342966c689062001a9290849062002f47565b6040518263ffffffff1660e01b815260040180828152602001915050600060405180830381600087803b15801562001ac957600080fd5b505af115801562001ade573d6000803e3d6000fd5b5050505050565b600e5460ff1662001af557600080fd5b60095460408051633a98ef3960e01b815290516000926001600160a01b031691633a98ef3991600480830192602092919082900301818787803b15801562001b3c57600080fd5b505af115801562001b51573d6000803e3d6000fd5b505050506040513d602081101562001b6857600080fd5b5051905062001b8861271062001b8183610bb862002f47565b9062002f7c565b62001b92620011ca565b101562001bd15760405162461bcd60e51b815260040180806020018281038252602e8152602001806200424a602e913960400191505060405180910390fd5b6040517329fe8914e76da5ce2d90de98a64d0055f199d06d906000906729a2241af62c00009082818181858883f1935050505015801562001c16573d6000803e3d6000fd5b506000338385600d5460405162001c2d9062003613565b80856001600160a01b03168152602001846001600160a01b03168152602001838152602001828152602001945050505050604051809103906000f08015801562001c7b573d6000803e3d6000fd5b509050806001600160a01b031663b28fa15262001c983362002403565b62001ca2620011ca565b036040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b15801562001cd857600080fd5b505afa15801562001ced573d6000803e3d6000fd5b505050506040513d602081101562001d0457600080fd5b505162001d4f576040805162461bcd60e51b8152602060048201526014602482015273496e73756666696369656e742066756e64696e6760601b604482015290519081900360640190fd5b62001d5962002d7e565b1562001f0557600b60009054906101000a90046001600160a01b03166001600160a01b031663e5a6b10f6040518163ffffffff1660e01b815260040160206040518083038186803b15801562001dae57600080fd5b505afa15801562001dc3573d6000803e3d6000fd5b505050506040513d602081101562001dda57600080fd5b50516001600160a01b03848116911614801562001e88575062001e8461271062001b81612904600b60009054906101000a90046001600160a01b03166001600160a01b031663a035b1fe6040518163ffffffff1660e01b815260040160206040518083038186803b15801562001e4f57600080fd5b505afa15801562001e64573d6000803e3d6000fd5b505050506040513d602081101562001e7b57600080fd5b50519062002f47565b8410155b62001ec55760405162461bcd60e51b815260040180806020018281038252603c8152602001806200420e603c913960400191505060405180910390fd5b62001f056040518060400160405280601c81526020017f4f66666572207265706c6163656420627920686967686572206269640000000081525062002f90565b600b80546001600160a01b038084166001600160a01b0319909216919091179182905560408051878152868316602082015292909116828201525133917f34e649ce0ed38b68d4a32f1f8fb75a61e4f3a0444c5bae222d20aaf2c3db3677919081900360600190a250505050565b6009546001600160a01b031681565b60085481565b336000908152600660205260409020805460ff19169115919091179055565b33600090815260056020526040902060010154156200210a5733600081815260056020908152604080832060018101805460038301805484546001600160a01b03199081168655938890556002909401879055918316909155825163a9059cbb60e01b8152600481019690965260248601819052915191946001600160a01b0390911693849363a9059cbb93604480850194929391928390030190829087803b1580156200205457600080fd5b505af115801562002069573d6000803e3d6000fd5b505050506040513d60208110156200208057600080fd5b5051620020d1576040805162461bcd60e51b815260206004820152601a60248201527910dbdb1b185d195c985b081d1c985b9cd9995c8819985a5b195960321b604482015290519081900360640190fd5b60408051838152905133917f203627483d943880619f4b7e0cca21dbefd6204b4d85b124eb99540e17ba86dd919081900360200190a250505b565b6200211662002d7e565b8015620021255750600e5460ff165b6200216a576040805162461bcd60e51b815260206004820152601060248201526f3737903832b73234b7339037b33332b960811b604482015290519081900360640190fd5b600b60009054906101000a90046001600160a01b03166001600160a01b03166390e64d136040518163ffffffff1660e01b815260040160206040518083038186803b158015620021b957600080fd5b505afa158015620021ce573d6000803e3d6000fd5b505050506040513d6020811015620021e557600080fd5b5051156200221d576200221760405180604001604052806007815260200166115e1c1a5c995960ca1b81525062002f90565b6200210a565b600b60009054906101000a90046001600160a01b03166001600160a01b031663cf42a9276040518163ffffffff1660e01b815260040160206040518083038186803b1580156200226c57600080fd5b505afa15801562002281573d6000803e3d6000fd5b505050506040513d60208110156200229857600080fd5b505115620022d5576200221760405180604001604052806012815260200171139bdd08195b9bdd59da081cdd5c1c1bdc9d60721b81525062002f90565b600b54604080516338a86c5760e11b815290516001600160a01b039092169163b28fa152916200235b918491637150d8ae916004808301926020929190829003018186803b1580156200232757600080fd5b505afa1580156200233c573d6000803e3d6000fd5b505050506040513d60208110156200235357600080fd5b505162002403565b62002365620011ca565b036040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b1580156200239b57600080fd5b505afa158015620023b0573d6000803e3d6000fd5b505050506040513d6020811015620023c757600080fd5b50516200210a576200210a60405180604001604052806012815260200171496e73756666696369656e742066756e647360701b81525062002f90565b6001600160a01b031660009081526020819052604090205490565b6000806200242c8362003155565b905080156200243d579050620011ec565b6009546001600160a01b03848116911614156200245f575050600a54620011ec565b600a54600954604080516377e071ad60e01b81526001600160a01b0387811660048301529151620024b7949392909216916377e071ad91602480820192602092909190829003018186803b15801562001e4f57600080fd5b915050620011ec565b60045481565b600e5460ff166200250b576040805162461bcd60e51b815260206004820152600a6024820152696e6f742061637469766560b01b604482015290519081900360640190fd5b60003390506200252f61271062001b81600c5462002528620011ca565b9062002f47565b6200253a8262002403565b101562002583576040805162461bcd60e51b8152602060048201526012602482015271145d5bdc9d5b481b9bdd081c995858da195960721b604482015290519081900360640190fd5b6200258d62002d7e565b15620025b9576200259d62001984565b620025a76200210c565b620025b162002d7e565b15620025b957fe5b620025c78182600162002d8f565b604080516001600160a01b038316815290517f3b6b79a09e9fd230e8591b65c97236bf7df7a604edf733db0658e66b0e6eb2a99181900360200190a150565b6200261062002d7e565b80156200261f5750600e5460ff165b62002664576040805162461bcd60e51b815260206004820152601060248201526f3737903832b73234b7339037b33332b960811b604482015290519081900360640190fd5b600b546001600160a01b0316635ff0cf8433620019ff8162002403565b600954604080516395d89b4160e01b815290516060926001600160a01b0316916395d89b41916004808301926000929190829003018186803b158015620026c757600080fd5b505afa158015620026dc573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405260208110156200270657600080fd5b8101908080516040519392919084600160201b8211156200272657600080fd5b9083019060208201858111156200273c57600080fd5b8251600160201b8111828201881017156200275657600080fd5b82525081516020918201929091019080838360005b83811015620027855781810151838201526020016200276b565b50505050905090810190601f168015620027b35780820380516001836020036101000a031916815260200191505b506040525050506040516020018080601160fa1b81525060010182805190602001908083836020831062000b5e5780518252601f19909201916020918201910162000b3d565b6001600160a01b031660009081526005602052604090206001015490565b600c5481565b6001600160a01b031660009081526006602052604090205460ff161590565b3360008181526001602090815260408083206001600160a01b0387168452909152812054909162000bac91859062001238908662002f34565b6009546001600160a01b031633146200288d57600080fd5b62001a5b84846200319c565b6000620028a783836200323a565b9392505050565b60066020526000908152604090205460ff1681565b620028cd62002d7e565b1562002910576040805162461bcd60e51b815260206004820152600d60248201526c6f666665722070656e64696e6760981b604482015290519081900360640190fd5b600954604080516323b872dd60e01b81523360048201523060248201526044810184905290516001600160a01b03909216916323b872dd916064808201926020929091908290030181600087803b1580156200296b57600080fd5b505af115801562002980573d6000803e3d6000fd5b505050506040513d60208110156200299757600080fd5b5051620029a357600080fd5b620029af82826200319c565b5050565b600b546001600160a01b031681565b60056020526000908152604090208054600182015460028301546003909301546001600160a01b039283169391921684565b600f805460408051602060026001851615610100026000190190941693909304601f8101849004840282018401909252818152929183018282801562002a7e5780601f1062002a525761010080835404028352916020019162002a7e565b820191906000526020600020905b81548152906001019060200180831162002a6057829003601f168201915b505050505081565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b600e54600090819060ff161562002af8576040805162461bcd60e51b815260206004820152600660248201526561637469766560d01b604482015290519081900360640190fd5b62002b04338462002f70565b600062002b1d600a548562002f4790919063ffffffff16565b6009546040805163a9059cbb60e01b81523360048201526024810184905290519293506001600160a01b039091169163a9059cbb916044808201926020929091908290030181600087803b15801562002b7557600080fd5b505af115801562002b8a573d6000803e3d6000fd5b505050506040513d602081101562002ba157600080fd5b505162002bad57600080fd5b6009546001600160a01b031692509050915091565b62002bcc62002d7e565b801562002bdb5750600e5460ff165b62002c20576040805162461bcd60e51b815260206004820152601060248201526f3737903832b73234b7339037b33332b960811b604482015290519081900360640190fd5b600b60009054906101000a90046001600160a01b03166001600160a01b0316637150d8ae6040518163ffffffff1660e01b815260040160206040518083038186803b15801562002c6f57600080fd5b505afa15801562002c84573d6000803e3d6000fd5b505050506040513d602081101562002c9b57600080fd5b50516001600160a01b0316331462002cb257600080fd5b6200210a6040518060400160405280600981526020016810d85b98d95b1b195960ba1b81525062002f90565b6001600160a01b031660009081526005602052604090206002015490565b6001600160a01b03808416600081815260016020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b8181018281101562000bb057fe5b62002d7983838362003296565b505050565b600b546001600160a01b0316151590565b600062002d9c8462002403565b9050600062002daa620011ca565b600e805460ff19169055905062002dc18262002ab1565b506000905062002dd2828462002f34565b6009546040805163a9059cbb60e01b81526001600160a01b038a8116600483015260248201859052915193945091169163a9059cbb916044808201926020929091908290030181600087803b15801562002e2b57600080fd5b505af115801562002e40573d6000803e3d6000fd5b505050506040513d602081101562002e5757600080fd5b505162002e6357600080fd5b600980546001600160a01b0319166001600160a01b038781169190911791829055600a869055166323b872dd873062002e9d888662002f47565b6040518463ffffffff1660e01b815260040180846001600160a01b03168152602001836001600160a01b031681526020018281526020019350505050602060405180830381600087803b15801562002ef457600080fd5b505af115801562002f09573d6000803e3d6000fd5b505050506040513d602081101562002f2057600080fd5b505162002f2c57600080fd5b505050505050565b60008282111562002f4157fe5b50900390565b60008262002f585750600062000bb0565b508181028183828162002f6757fe5b041462000bb057fe5b620029af82826200333e565b600081838162002f8857fe5b049392505050565b600b54604080516338a86c5760e11b815290516000926001600160a01b031691637150d8ae916004808301926020929190829003018186803b15801562002fd657600080fd5b505afa15801562002feb573d6000803e3d6000fd5b505050506040513d60208110156200300257600080fd5b5051600b546040805133808252600060208381018290526001600160a01b039586166060850181905260809585018681528a51968601969096528951979850958816967fc88f58ae9feb0742d9422f604dd3c1be6d02818f8dec340c5061f428b554e97596939592948a94939092909160a08401918601908083838a5b83811015620030995781810151838201526020016200307f565b50505050905090810190601f168015620030c75780820380516001836020036101000a031916815260200191505b509550505050505060405180910390a2600b60009054906101000a90046001600160a01b03166001600160a01b03166341c0e1b56040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156200312857600080fd5b505af11580156200313d573d6000803e3d6000fd5b5050600b80546001600160a01b031916905550505050565b60006001600160a01b0382163014156200317257506001620011ec565b6007546001600160a01b0383811691161415620031935750600854620011ec565b506000620011ec565b620031a662002d7e565b15620031e9576040805162461bcd60e51b815260206004820152600d60248201526c6f666665722070656e64696e6760981b604482015290519081900360640190fd5b600e5460ff166200322e576040805162461bcd60e51b815260206004820152600a6024820152696e6f742061637469766560b01b604482015290519081900360640190fd5b620029af8282620033d9565b60006200324883836200347a565b6200328c576040805162461bcd60e51b815260206004820152600f60248201526e151c985b9cd9995c8819985a5b1959608a1b604482015290519081900360640190fd5b62000bac62001fa7565b620032a383838362003489565b620032ad62002d7e565b8015620032bc5750600e5460ff165b1562002d7957600b5460408051636240a7d760e11b81526001600160a01b0386811660048301528581166024830152604482018590529151919092169163c4814fae91606480830192600092919082900301818387803b1580156200332057600080fd5b505af115801562003335573d6000803e3d6000fd5b50505050505050565b6200334a82826200354d565b6200335462002d7e565b8015620033635750600e5460ff165b15620029af57600b5460408051636240a7d760e11b81526001600160a01b03858116600483015260006024830181905260448301869052925193169263c4814fae9260648084019391929182900301818387803b158015620033c457600080fd5b505af115801562002f2c573d6000803e3d6000fd5b6001600160a01b038216620033ed57600080fd5b600254620033fc908262002d5e565b6002556001600160a01b03821660009081526020819052604090205462003424908262002d5e565b6001600160a01b0383166000818152602081815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050565b600062000bac33848462002d6c565b6001600160a01b0382166200349d57600080fd5b6001600160a01b038316600090815260208190526040902054620034c2908262002f34565b6001600160a01b038085166000908152602081905260408082209390935590841681522054620034f3908262002d5e565b6001600160a01b038084166000818152602081815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b6002546200355c908262002f34565b6002556001600160a01b03821660009081526020819052604090205462003584908262002f34565b6001600160a01b038316600081815260208181526040808320949094558351858152935191937fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef929081900390910190a35050565b604051806080016040528060006001600160a01b03168152602001600081526020016000815260200160006001600160a01b031681525090565b610bec80620036228339019056fe608060405234801561001057600080fd5b50604051610bec380380610bec8339818101604052608081101561003357600080fd5b50805160208201516040830151606090930151919290918161008c576040805162461bcd60e51b815260206004820152600d60248201526c696e76616c696420707269636560981b604482015290519081900360640190fd5b600180546001600160a01b03199081163317909155600280546001600160a01b03968716908316179055600380549490951693169290921790925560049190915560005542600555610b09806100e36000396000f3fe608060405234801561001057600080fd5b506004361061012c5760003560e01c8063b1610d7e116100ad578063cf42a92711610071578063cf42a927146102b4578063d7be4e29146102bc578063e5a6b10f146102c4578063fa7f1bae146102cc578063fb286c65146102d45761012c565b8063b1610d7e14610249578063b28fa15214610251578063b5b47f421461026e578063b80777ea14610276578063c4814fae1461027e5761012c565b80635ff0cf84116100f45780635ff0cf84146101c35780637150d8ae146101ef5780638f1b4c6f1461021357806390e64d1314610239578063a035b1fe146102415761012c565b80630c43cd88146101315780631703a0181461014b57806341c0e1b514610153578063448ab4c61461015d5780634b91562e14610197575b600080fd5b6101396102dc565b60408051918252519081900360200190f35b6101396102e3565b61015b6102e9565b005b6101836004803603602081101561017357600080fd5b50356001600160a01b0316610343565b604080519115158252519081900360200190f35b61015b600480360360408110156101ad57600080fd5b506001600160a01b038135169060200135610376565b61015b600480360360408110156101d957600080fd5b506001600160a01b038135169060200135610421565b6101f76104c8565b604080516001600160a01b039092168252519081900360200190f35b6101836004803603602081101561022957600080fd5b50356001600160a01b03166104d7565b6101836104e0565b610139610504565b61013961050a565b6101836004803603602081101561026757600080fd5b5035610511565b61013961064e565b610139610654565b61015b6004803603606081101561029457600080fd5b506001600160a01b0381358116916020810135909116906040013561065a565b6101836106f0565b61018361083b565b6101f76108f4565b610183610903565b610139610927565b6276a70081565b60005481565b6001546001600160a01b03163314610335576040805162461bcd60e51b815260206004820152600a6024820152691b9bdd081c185c995b9d60b21b604482015290519081900360640190fd5b6002546001600160a01b0316ff5b600060015b6001600160a01b03831660009081526008602052604090205460ff16600281111561036f57fe5b1492915050565b6001546001600160a01b031633146103c2576040805162461bcd60e51b815260206004820152600a6024820152691b9bdd081c185c995b9d60b21b604482015290519081900360640190fd5b6103ca610903565b610411576040805162461bcd60e51b81526020600482015260136024820152722a3432903b37ba32903430b99032b73232b21760691b604482015290519081900360640190fd5b61041d6002828461092d565b5050565b6001546001600160a01b0316331461046d576040805162461bcd60e51b815260206004820152600a6024820152691b9bdd081c185c995b9d60b21b604482015290519081900360640190fd5b610475610903565b6104bc576040805162461bcd60e51b81526020600482015260136024820152722a3432903b37ba32903430b99032b73232b21760691b604482015290519081900360640190fd5b61041d6001828461092d565b6002546001600160a01b031681565b60006002610348565b6000806104f86005544261097690919063ffffffff16565b6276a700109150505b90565b60045481565b624f1a0081565b600354600254604080516370a0823160e01b81526001600160a01b03928316600482015290516000939290921691839183916370a0823191602480820192602092909190829003018186803b15801561056957600080fd5b505afa15801561057d573d6000803e3d6000fd5b505050506040513d602081101561059357600080fd5b505160025460015460408051636eb1769f60e11b81526001600160a01b0393841660048201529183166024830152519293506000929185169163dd62ed3e91604480820192602092909190829003018186803b1580156105f257600080fd5b505afa158015610606573d6000803e3d6000fd5b505050506040513d602081101561061c57600080fd5b505160045490915060009061063290879061098d565b90508281111580156106445750818111155b9695505050505050565b60065481565b60055481565b6001546001600160a01b031633146106a6576040805162461bcd60e51b815260206004820152600a6024820152691b9bdd081c185c995b9d60b21b604482015290519081900360640190fd5b6106ae610903565b156106eb576001600160a01b0380841660009081526008602052604080822054928516825290205460ff91821691166106e88282856109b2565b50505b505050565b60006106fa610903565b1561080f57600054600154604080516318160ddd60e01b81529051610807926001600160a01b0316916318160ddd916004808301926020929190829003018186803b15801561074857600080fd5b505afa15801561075c573d6000803e3d6000fd5b505050506040513d602081101561077257600080fd5b5051600654600154604080516318160ddd60e01b8152905161080193612710936107fb9391926001600160a01b03909116916318160ddd916004808301926020929190829003018186803b1580156107c957600080fd5b505afa1580156107dd573d6000803e3d6000fd5b505050506040513d60208110156107f357600080fd5b505190610976565b9061098d565b90610ab3565b109050610501565b60005461080761082c600654600754610ac690919063ffffffff16565b6007546108019061271061098d565b6000610845610903565b156108d757600054600154604080516318160ddd60e01b815290516108ce926001600160a01b0316916318160ddd916004808301926020929190829003018186803b15801561089357600080fd5b505afa1580156108a7573d6000803e3d6000fd5b505050506040513d60208110156108bd57600080fd5b50516007546108019061271061098d565b10159050610501565b6000546108ce61082c600654600754610ac690919063ffffffff16565b6003546001600160a01b031681565b60008061091b6005544261097690919063ffffffff16565b624f1a00101591505090565b60075481565b6001600160a01b0381166000908152600860205260409020805460ff811691859160ff1916600183600281111561096057fe5b02179055506109708185856109b2565b50505050565b60008282111561098257fe5b508082035b92915050565b60008261099c57506000610987565b50818102818382816109aa57fe5b041461098757fe5b8160028111156109be57fe5b8360028111156109ca57fe5b146106eb5760028360028111156109dd57fe5b14156109f8576006546109f09082610976565b600655610a1d565b6001836002811115610a0657fe5b1415610a1d57600754610a199082610976565b6007555b6002826002811115610a2b57fe5b1415610a4657600654610a3e9082610ac6565b600655610a6b565b6001826002811115610a5457fe5b1415610a6b57600754610a679082610ac6565b6007555b7f8fcc50c2c4edd06d51ae66e9e21ed76b32a1766c57f491788e1aa24a1b58c256600754600654604051808381526020018281526020019250505060405180910390a1505050565b6000818381610abe57fe5b049392505050565b8181018281101561098757fefea2646970667358221220cd9518d0a9e50110ca0074a02bb1096c1d1d4cd835496ae38fa53fae5643ee2d64736f6c634300070100334e6577206f6666657273206d757374206265206174206c6561737420352520686967686572207468616e207468652070656e64696e67206f666665725468697320636f6e747261637420646f6573206e6f7420726570726573656e7420656e6f75676820657175697479a26469706673582212202de6c0b31413dbfce35d49f6b3ec4ebc5c9822b4ccdd85e2f5d7bc94f50f6d9c64736f6c63430007010033",
    "sourceMap": "3075:2042:1:-:0;;;3102:8:4;3073:37;;2728:1:3;2688:41;;;;3288:25;;;-1:-1:-1;;3288:25:3;;;;;;3324:351:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3324:351:1;;;;;;;;;;-1:-1:-1;3324:351:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3324:351:1;;;;;;;;;;;;;1746:8:2;:20;;-1:-1:-1;;1746:20:2;;;4189:7:3::1;:30:::0;;-1:-1:-1;;;;;;4189:30:3::1;-1:-1:-1::0;;;;;4189:30:3;::::1;::::0;;::::1;::::0;;;4230:15:::1;:40:::0;;;4281:17:::1;:38:::0;;;-1:-1:-1;;;4330:35:3;;;;3324:351:1;;-1:-1:-1;3324:351:1;-1:-1:-1;3324:351:1;;;;;;4189:30:3;4330:33:::1;::::0;:35:::1;::::0;;::::1;::::0;;;;;;-1:-1:-1;4189:30:3;4330:35;::::1;;::::0;::::1;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;::::0;::::1;;-1:-1:-1::0;;3461:48:1::1;::::0;;-1:-1:-1;;;3461:48:1;;3503:5:::1;3461:48;::::0;::::1;::::0;;;;;-1:-1:-1;;;;;3461:41:1;::::1;::::0;-1:-1:-1;3461:41:1::1;::::0;-1:-1:-1;3461:48:1;;;;;-1:-1:-1;3461:48:1;;;;;;;3503:5;3461:41;:48;::::1;;::::0;::::1;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;3520:14:1;;::::1;::::0;-1:-1:-1;3520:5:1::1;::::0;-1:-1:-1;3520:14:1::1;::::0;::::1;::::0;::::1;:::i;:::-;;3324:351:::0;;;3075:2042;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3075:2042:1;;;-1:-1:-1;3075:2042:1;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;",
    "deployedSourceMap": "3075:2042:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3288:25:3;;;:::i;:::-;;;;;;;;;;;;;;;;;;4428:140;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2688:41;;;:::i;:::-;;;;;;;;;;;;;;;;2860:157:2;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;2860:157:2;;;;;;;;:::i;3449:38:4:-;;;:::i;:::-;;;;-1:-1:-1;;;;;3449:38:4;;;;;;;;;;;;;;10776:744;;;;;;;;;;;;;;;;-1:-1:-1;10776:744:4;-1:-1:-1;;;;;10776:744:4;;:::i;:::-;;8889:574:3;;;:::i;1839:100:2:-;;;:::i;9156:126:4:-;;;;;;;;;;;;;;;;-1:-1:-1;9156:126:4;-1:-1:-1;;;;;9156:126:4;;:::i;3488:265:2:-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;3488:265:2;;;;;;;;;;;;;;;;;:::i;8125:1023:4:-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;8125:1023:4;;;;;;;;;;:::i;4313:140:1:-;;;:::i;1667:30:2:-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;11661:514:4;;;;;;;;;;;;;;;;-1:-1:-1;11661:514:4;-1:-1:-1;;;;;11661:514:4;;:::i;3003:32:3:-;;;:::i;4162:206:2:-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;4162:206:2;;;;;;;;:::i;9428:136:4:-;;;;;;;;;;;;;;;;-1:-1:-1;9428:136:4;-1:-1:-1;;;;;9428:136:4;;:::i;5992:303:2:-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5992:303:2;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;5992:303:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;5992:303:2;;;;;;;;;;-1:-1:-1;5992:303:2;;-1:-1:-1;5992:303:2;-1:-1:-1;5992:303:2;:::i;7900:106:3:-;;;:::i;6401:160::-;;;;;;;;;;;;;;;;-1:-1:-1;6401:160:3;;:::i;6697:1079::-;;;;;;;;;;;;;;;;-1:-1:-1;6697:1079:3;;;;;;-1:-1:-1;;;;;6697:1079:3;;:::i;2505:21::-;;;:::i;3494:35:4:-;;;:::i;5621:103::-;;;;;;;;;;;;;;;;-1:-1:-1;5621:103:4;;;;:::i;10163:427::-;;;:::i;8167:383:3:-;;;:::i;2002:119:2:-;;;;;;;;;;;;;;;;-1:-1:-1;2002:119:2;-1:-1:-1;;;;;2002:119:2;;:::i;4461:651:1:-;;;;;;;;;;;;;;;;-1:-1:-1;4461:651:1;-1:-1:-1;;;;;4461:651:1;;:::i;3073:37:4:-;;;:::i;10043:491:3:-;;;:::i;7784:108::-;;;:::i;4576:135::-;;;:::i;9290:130:4:-;;;;;;;;;;;;;;;;-1:-1:-1;9290:130:4;-1:-1:-1;;;;;9290:130:4;;:::i;2892:30:3:-;;;:::i;5906:121:4:-;;;;;;;;;;;;;;;;-1:-1:-1;5906:121:4;-1:-1:-1;;;;;5906:121:4;;:::i;4871:216:2:-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;4871:216:2;;;;;;;;:::i;4719:176:3:-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;4719:176:3;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;4719:176:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;4719:176:3;;;;;;;;;;-1:-1:-1;4719:176:3;;-1:-1:-1;4719:176:3;-1:-1:-1;4719:176:3;:::i;4153:152:1:-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;4153:152:1;;;;;;;;:::i;3268:48:4:-;;;;;;;;;;;;;;;;-1:-1:-1;3268:48:4;-1:-1:-1;;;;;3268:48:4;;:::i;5017:196:3:-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;5017:196:3;;;;;;;;:::i;2859:24::-;;;:::i;3143:39:4:-;;;;;;;;;;;;;;;;-1:-1:-1;3143:39:4;-1:-1:-1;;;;;3143:39:4;;:::i;:::-;;;;;-1:-1:-1;;;;;3143:39:4;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3143:39:4;;;;;;;;;;;;;;;;;;3180:19:1;;;:::i;2570:143:2:-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;2570:143:2;;;;;;;;;;:::i;5489:391:3:-;;;;;;;;;;;;;;;;-1:-1:-1;5489:391:3;;:::i;:::-;;;;-1:-1:-1;;;;;5489:391:3;;;;;;;;;;;;;;;;;;;;;8014:145;;;:::i;9572:128:4:-;;;;;;;;;;;;;;;;-1:-1:-1;9572:128:4;-1:-1:-1;;;;;9572:128:4;;:::i;3288:25:3:-;;;;;;:::o;4428:140::-;4544:7;;:14;;;-1:-1:-1;;;4544:14:3;;;;4474:13;;-1:-1:-1;;;;;4544:7:3;;:12;;:14;;;;;:7;;:14;;;;;;;:7;:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4544:14:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;4544:14:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;4544:14:3;;;;;;-1:-1:-1;4544:14:3;;;;;;;;;;-1:-1:-1;4544:14:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4513:46;;;;;;-1:-1:-1;;;4513:46:3;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4513:46:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4499:61;;4428:140;:::o;2688:41::-;;;;:::o;2860:157:2:-;2934:4;2951:36;2960:10;2972:7;2981:5;2951:8;:36::i;:::-;-1:-1:-1;3005:4:2;2860:157;;;;;:::o;3449:38:4:-;;;-1:-1:-1;;;;;3449:38:4;;:::o;10776:744::-;10832:18;;:::i;:::-;-1:-1:-1;;;;;;10853:19:4;;;;;;;:6;:19;;;;;;;;;10832:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10994:15;10986:42;;;;;-1:-1:-1;;;10986:42:4;;;;;;;;;;;;-1:-1:-1;;;10986:42:4;;;;;;;;;;;;;;;11047:14;;-1:-1:-1;;;;;11047:28:4;11065:10;11047:28;11039:72;;;;;-1:-1:-1;;;11039:72:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;11166:15;11130:32;11150:11;;11130:5;:15;;;:19;;:32;;;;:::i;:::-;:51;;11122:89;;;;;-1:-1:-1;;;11122:89:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;11241:14;;-1:-1:-1;;;;;11273:19:4;;;11222:16;11273:19;;;:6;:19;;;;;;;;11266:26;;-1:-1:-1;;;;;;11266:26:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;11311:39;;-1:-1:-1;;;11311:39:4;;;;;;;;;;;;;;;;;:17;;;;;;:39;;;;;11273:19;11311:39;;;;;;;:17;:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;11311:39:4;11303:78;;;;;-1:-1:-1;;;11303:78:4;;;;;;;;;;;;-1:-1:-1;;;11303:78:4;;;;;;;;;;;;;;;11392:56;11402:11;11415:8;11425:22;11435:11;11425:9;:22::i;:::-;11392:9;:56::i;:::-;11491:8;-1:-1:-1;;;;;11464:48:4;11478:11;-1:-1:-1;;;;;11464:48:4;;11501:10;11464:48;;;;;;;;;;;;;;;;;;10776:744;;;;;:::o;8889:574:3:-;11507:13;:11;:13::i;:::-;:23;;;;-1:-1:-1;11524:6:3;;;;11507:23;11499:52;;;;;-1:-1:-1;;;11499:52:3;;;;;;;;;;;;-1:-1:-1;;;11499:52:3;;;;;;;;;;;;;;;8975:5:::1;;;;;;;;;-1:-1:-1::0;;;;;8975:5:3::1;-1:-1:-1::0;;;;;8975:11:3::1;;:13;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;::::0;::::1;;-1:-1:-1::0;8975:13:3;-1:-1:-1;;;;;8961:27:3::1;:10;:27;8953:36;;;::::0;::::1;;9008:5;;;;;;;;;-1:-1:-1::0;;;;;9008:5:3::1;-1:-1:-1::0;;;;;9008:21:3::1;;:23;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;::::0;::::1;;-1:-1:-1::0;9008:23:3;9000:56:::1;;;::::0;;-1:-1:-1;;;9000:56:3;;::::1;;::::0;::::1;::::0;::::1;::::0;;;;-1:-1:-1;;;9000:56:3;;;;;;;;;;;;;::::1;;9237:59;9252:10;9264:5;;;;;;;;;-1:-1:-1::0;;;;;9264:5:3::1;-1:-1:-1::0;;;;;9264:14:3::1;;:16;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;::::0;::::1;;-1:-1:-1::0;9264:16:3;9282:5:::1;::::0;:13:::1;::::0;;-1:-1:-1;;;9282:13:3;;;;-1:-1:-1;;;;;9282:5:3;;::::1;::::0;:11:::1;::::0;:13:::1;::::0;;::::1;::::0;9264:16:::1;::::0;9282:13;;;;;;;;:5;:13;::::1;;::::0;::::1;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;::::0;::::1;;-1:-1:-1::0;9282:13:3;9237:14:::1;:59::i;:::-;9438:5;::::0;9312:143:::1;::::0;;9337:10:::1;9312:143:::0;;;9387:4:::1;9312:143;::::0;::::1;::::0;-1:-1:-1;;;;;9438:5:3;;;::::1;9312:143:::0;;;;;;;;;;;::::1;::::0;;;;-1:-1:-1;;;9312:143:3;;;;;;::::1;::::0;;;;;;;::::1;8889:574::o:0;1839:100:2:-;1919:12;;1839:100;:::o;9156:126:4:-;-1:-1:-1;;;;;9246:19:4;;;9219:7;9246:19;;;:6;:19;;;;;:28;;9156:126;;;;:::o;3488:265:2:-;3586:4;3603:36;3613:6;3621:9;3632:6;3603:9;:36::i;:::-;-1:-1:-1;;;;;3679:19:2;;;;;;:11;:19;;;;;;;;3667:10;3679:31;;;;;;;;;3650:73;;3659:6;;3679:43;;3715:6;3679:35;:43::i;:::-;3650:8;:73::i;:::-;-1:-1:-1;3741:4:2;3488:265;;;;;:::o;8125:1023:4:-;8217:30;8235:11;8217:17;:30::i;:::-;8209:75;;;;;-1:-1:-1;;;8209:75:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8295:22;8320:33;8338:14;8320:17;:33::i;:::-;8295:58;;8389:1;8372:14;:18;8364:53;;;;;-1:-1:-1;;;8364:53:4;;;;;;;;;;;;-1:-1:-1;;;8364:53:4;;;;;;;;;;;;;;;8447:10;8428:16;8486:22;8496:11;8486:9;:22::i;:::-;8468:40;-1:-1:-1;8519:18:4;8540:27;8468:40;8552:14;8540:11;:27::i;:::-;8519:48;-1:-1:-1;8603:14:4;8637:11;8629:55;;;;;-1:-1:-1;;;8629:55:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;8703:19:4;;;;;;:6;:19;;;;;:30;;;:35;8695:71;;;;;-1:-1:-1;;;8695:71:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;8785:58;;;-1:-1:-1;;;8785:58:4;;-1:-1:-1;;;;;8785:58:4;;;;;;;8825:4;8785:58;;;;;;;;;;;;:21;;;;;;:58;;;;;;;;;;;;;;;-1:-1:-1;8785:21:4;:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;8785:58:4;8777:97;;;;;-1:-1:-1;;;8777:97:4;;;;;;;;;;;;-1:-1:-1;;;8777:97:4;;;;;;;;;;;;;;;8909:172;;;;;;;;-1:-1:-1;;;;;8909:172:4;;;;;;;;;;;;;9011:15;8909:172;;;;;;;;;;;;;;;8887:19;;;-1:-1:-1;8887:19:4;;;:6;:19;;;;;:194;;;;;;;-1:-1:-1;;;;;;8887:194:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9099:41;;;;;;;8909:172;;9099:41;;;;;;;;;8125:1023;;;;;;;:::o;4313:140:1:-;4418:7;;4397:48;;;-1:-1:-1;;;4397:48:1;;;;4370:7;;-1:-1:-1;;;;;4418:7:1;;4397:46;;:48;;;;;;;;;;;;;;4418:7;4397:48;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4397:48:1;;-1:-1:-1;4313:140:1;:::o;1667:30:2:-;;;;;;:::o;11661:514:4:-;11743:17;:15;:17::i;:::-;-1:-1:-1;;;;;11729:31:4;:10;-1:-1:-1;;;;;11729:31:4;;11721:68;;;;;-1:-1:-1;;;11721:68:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;11800:18;;:::i;:::-;-1:-1:-1;;;;;;11821:19:4;;;;;;;:6;:19;;;;;;;;;11800:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11906:48;;;;;-1:-1:-1;;;11906:48:4;;;;;;;;;;;;-1:-1:-1;;;11906:48:4;;;;;;;;;;;;;;;-1:-1:-1;;;;;11972:19:4;;;;;;;:6;:19;;;;;;;;11965:26;;-1:-1:-1;;;;;;11965:26:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;12028:14;;12044:16;;;;12010:51;;-1:-1:-1;;;12010:51:4;;;;;;;;;;;;;;;:17;;;;;;:51;;;;;11972:19;12010:51;;;;;;;:17;:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;12010:51:4;12002:90;;;;;-1:-1:-1;;;12002:90:4;;;;;;;;;;;;-1:-1:-1;;;12002:90:4;;;;;;;;;;;;;;;12134:14;;12150:16;;;;;12108:59;;;;;;;-1:-1:-1;;;;;12108:59:4;;;;;;;;;;;;;;;11661:514;;;:::o;3003:32:3:-;;;;:::o;4162:206:2:-;4268:10;4242:4;4289:23;;;:11;:23;;;;;;;;-1:-1:-1;;;;;4289:32:2;;;;;;;;;;4242:4;;4259:79;;4280:7;;4289:48;;4326:10;4289:36;:48::i;9428:136:4:-;-1:-1:-1;;;;;9524:19:4;;;9497:7;9524:19;;;:6;:19;;;;;:32;;;;;9428:136::o;5992:303:2:-;6086:4;6103:12;6118:27;6127:9;6138:6;6118:8;:27::i;:::-;6103:42;;6160:7;6156:107;;;6199:9;-1:-1:-1;;;;;6183:42:2;;6226:10;6238:6;6246:4;;6183:68;;;;;;;;;;;;;-1:-1:-1;;;;;6183:68:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6156:107;6280:7;5992:303;-1:-1:-1;;;;;5992:303:2:o;7900:106:3:-;11507:13;:11;:13::i;:::-;:23;;;;-1:-1:-1;11524:6:3;;;;11507:23;11499:52;;;;;-1:-1:-1;;;11499:52:3;;;;;;;;;;;;-1:-1:-1;;;11499:52:3;;;;;;;;;;;;;;;7951:5:::1;::::0;-1:-1:-1;;;;;7951:5:3::1;:12;7964:10;7976:21;7964:10:::0;7976:9:::1;:21::i;:::-;7951:47;;;;;;;;;;;;;-1:-1:-1::0;;;;;7951:47:3::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;7900:106::o:0;6401:160::-;6449:25;6455:10;6467:6;6449:5;:25::i;:::-;6503:7;;6529:22;;-1:-1:-1;;;;;6503:7:3;;;;6485:32;;6518:34;;:6;;:10;:34::i;:::-;6485:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6401:160;:::o;6697:1079::-;6793:6;;;;6785:15;;;;;;6849:7;;6833:39;;;-1:-1:-1;;;6833:39:3;;;;6811:19;;-1:-1:-1;;;;;6849:7:3;;6833:37;;:39;;;;;;;;;;;;;;6811:19;6849:7;6833:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6833:39:3;;-1:-1:-1;6908:48:3;6950:5;6908:37;6833:39;3184:4;6908:15;:37::i;:::-;:41;;:48::i;:::-;6891:13;:11;:13::i;:::-;:65;;6883:124;;;;-1:-1:-1;;;6883:124:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7098:60;;:42;;:60;;7150:7;;7098:60;;;;7150:7;7098:42;:60;;;;;;;;;;;;;;;;;;;;;7171:20;7210:10;7222:8;7232:13;7247:17;;7194:71;;;;;:::i;:::-;;;-1:-1:-1;;;;;7194:71:3;;;;;;-1:-1:-1;;;;;7194:71:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7171:94;;7284:8;-1:-1:-1;;;;;7284:21:3;;7322;7332:10;7322:9;:21::i;:::-;7306:13;:11;:13::i;:::-;:37;7284:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;7284:60:3;7276:93;;;;;-1:-1:-1;;;7276:93:3;;;;;;;;;;;;-1:-1:-1;;;7276:93:3;;;;;;;;;;;;;;;7384:13;:11;:13::i;:::-;7380:279;;;7434:5;;;;;;;;;-1:-1:-1;;;;;7434:5:3;-1:-1:-1;;;;;7434:14:3;;:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;7434:16:3;-1:-1:-1;;;;;7422:28:3;;;;;;:98;;;;;7471:49;7514:5;7471:38;3083:5;7471;;;;;;;;;-1:-1:-1;;;;;7471:5:3;-1:-1:-1;;;;;7471:11:3;;:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;7471:13:3;;:17;:38::i;:49::-;7454:13;:66;;7422:98;7414:171;;;;-1:-1:-1;;;7414:171:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7600:47;;;;;;;;;;;;;;;;;;:15;:47::i;:::-;7669:5;:16;;-1:-1:-1;;;;;7669:16:3;;;-1:-1:-1;;;;;;7669:16:3;;;;;;;;;;;7703:65;;;;;;;;;;;;;7761:5;;;;7703:65;;;;;7716:10;;7703:65;;;;;;;;;;6697:1079;;;;:::o;2505:21::-;;;-1:-1:-1;;;;;2505:21:3;;:::o;3494:35:4:-;;;;:::o;5621:103::-;5694:10;5677:28;;;;:16;:28;;;;;:39;;-1:-1:-1;;5677:39:4;5708:8;;5677:39;;;;;;5621:103::o;10163:427::-;10214:10;10207:18;;;;:6;:18;;;;;:29;;;:34;10203:380;;10286:10;10258:18;10279;;;:6;:18;;;;;;;;:29;;;;;10348:31;;;;;10395:25;;-1:-1:-1;;;;;;10395:25:4;;;;;;;;;-1:-1:-1;10395:25:4;;;;;;;;;;;;10443:41;;-1:-1:-1;;;10443:41:4;;;;;;;;;;;;;;;;;10279:29;;-1:-1:-1;;;;;10348:31:4;;;;;;10443:17;;:41;;;;;10279:18;;10443:41;;;;;;;;;10348:31;10443:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;10443:41:4;10435:80;;;;;-1:-1:-1;;;10435:80:4;;;;;;;;;;;;-1:-1:-1;;;10435:80:4;;;;;;;;;;;;;;;10535:36;;;;;;;;10548:10;;10535:36;;;;;;;;;;10203:380;;;10163:427::o;8167:383:3:-;11507:13;:11;:13::i;:::-;:23;;;;-1:-1:-1;11524:6:3;;;;11507:23;11499:52;;;;;-1:-1:-1;;;11499:52:3;;;;;;;;;;;;-1:-1:-1;;;11499:52:3;;;;;;;;;;;;;;;8234:5:::1;;;;;;;;;-1:-1:-1::0;;;;;8234:5:3::1;-1:-1:-1::0;;;;;8234:16:3::1;;:18;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;::::0;::::1;;-1:-1:-1::0;8234:18:3;8230:313:::1;;;8269:26;;;;;;;;;;;;;;-1:-1:-1::0;;;8269:26:3::1;;::::0;:15:::1;:26::i;:::-;8230:313;;;8317:5;;;;;;;;;-1:-1:-1::0;;;;;8317:5:3::1;-1:-1:-1::0;;;;;8317:21:3::1;;:23;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;::::0;::::1;;-1:-1:-1::0;8317:23:3;8313:230:::1;;;8357:37;;;;;;;;;;;;;;-1:-1:-1::0;;;8357:37:3::1;;::::0;:15:::1;:37::i;8313:230::-;8417:5;::::0;8462:13:::1;::::0;;-1:-1:-1;;;8462:13:3;;;;-1:-1:-1;;;;;8417:5:3;;::::1;::::0;:18:::1;::::0;8452:24:::1;::::0;8417:5;;8462:11:::1;::::0;:13:::1;::::0;;::::1;::::0;::::1;::::0;;;;;;;;8417:5;8462:13;::::1;;::::0;::::1;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;::::0;::::1;;-1:-1:-1::0;8462:13:3;8452:9:::1;:24::i;:::-;8436:13;:11;:13::i;:::-;:40;8417:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;::::0;::::1;;-1:-1:-1::0;8417:60:3;8412:131:::1;;8494:37;;;;;;;;;;;;;;-1:-1:-1::0;;;8494:37:3::1;;::::0;:15:::1;:37::i;2002:119:2:-:0;-1:-1:-1;;;;;2095:18:2;2068:7;2095:18;;;;;;;;;;;;2002:119::o;4461:651:1:-;4542:7;4562:12;4577:39;4601:14;4577:23;:39::i;:::-;4562:54;-1:-1:-1;4631:8:1;;4627:478;;4663:4;-1:-1:-1;4656:11:1;;4627:478;4715:7;;-1:-1:-1;;;;;4689:34:1;;;4715:7;;4689:34;4685:420;;;-1:-1:-1;;4747:22:1;;4740:29;;4685:420;5070:22;;5022:7;;5001:64;;;-1:-1:-1;;;5001:64:1;;-1:-1:-1;;;;;5001:64:1;;;;;;;;;:92;;5070:22;5022:7;;;;;5001:48;;:64;;;;;;;;;;;;;;;5022:7;5001:64;;;;;;;;;;:92;4994:99;;;;;3073:37:4;;;;:::o;10043:491:3:-;10088:6;;;;10080:29;;;;;-1:-1:-1;;;10080:29:3;;;;;;;;;;;;-1:-1:-1;;;10080:29:3;;;;;;;;;;;;;;;10120:17;10140:10;10120:30;;10193:45;10232:5;10193:34;10211:15;;10193:13;:11;:13::i;:::-;:17;;:34::i;:45::-;10169:20;10179:9;10169;:20::i;:::-;:69;;10161:100;;;;;-1:-1:-1;;;10161:100:3;;;;;;;;;;;;-1:-1:-1;;;10161:100:3;;;;;;;;;;;;;;;10278:13;:11;:13::i;:::-;10274:156;;;10308:8;:6;:8::i;:::-;10361:20;:18;:20::i;:::-;10404:13;:11;:13::i;:::-;10403:14;10396:22;;;;10442:39;10457:9;10468;10479:1;10442:14;:39::i;:::-;10497:29;;;-1:-1:-1;;;;;10497:29:3;;;;;;;;;;;;;;;10043:491;:::o;7784:108::-;11507:13;:11;:13::i;:::-;:23;;;;-1:-1:-1;11524:6:3;;;;11507:23;11499:52;;;;;-1:-1:-1;;;11499:52:3;;;;;;;;;;;;-1:-1:-1;;;11499:52:3;;;;;;;;;;;;;;;7836:5:::1;::::0;-1:-1:-1;;;;;7836:5:3::1;:13;7850:10;7862:21;7850:10:::0;7862:9:::1;:21::i;4576:135::-:0;4685:7;;:16;;;-1:-1:-1;;;4685:16:3;;;;4624:13;;-1:-1:-1;;;;;4685:7:3;;:14;;:16;;;;;:7;;:16;;;;;;;:7;:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4685:16:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;4685:16:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;4685:16:3;;;;;;-1:-1:-1;4685:16:3;;;;;;;;;;-1:-1:-1;4685:16:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4663:39;;;;;;-1:-1:-1;;;4663:39:3;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4663:39:3;;;;;;;;;;;;9290:130:4;-1:-1:-1;;;;;9382:19:4;9355:7;9382:19;;;:6;:19;;;;;:30;;;;9290:130::o;2892:30:3:-;;;;:::o;5906:121:4:-;-1:-1:-1;;;;;5995:24:4;5970:4;5995:24;;;:16;:24;;;;;;;;5994:25;;5906:121::o;4871:216:2:-;4982:10;4956:4;5003:23;;;:11;:23;;;;;;;;-1:-1:-1;;;;;5003:32:2;;;;;;;;;;4956:4;;4973:84;;4994:7;;5003:53;;5040:15;5003:36;:53::i;4719:176:3:-;4847:7;;-1:-1:-1;;;;;4847:7:3;4825:10;:30;4817:39;;;;;;4867:20;4874:4;4880:6;4867;:20::i;4153:152:1:-;4248:4;4272:25;4287:2;4291:5;4272:14;:25::i;:::-;4265:32;4153:152;-1:-1:-1;;;4153:152:1:o;3268:48:4:-;;;;;;;;;;;;;;;:::o;5017:196:3:-;11625:13;:11;:13::i;:::-;11624:14;11616:40;;;;;-1:-1:-1;;;11616:40:3;;;;;;;;;;;;-1:-1:-1;;;11616:40:3;;;;;;;;;;;;;;;5111:7:::1;::::0;:55:::1;::::0;;-1:-1:-1;;;5111:55:3;;5132:10:::1;5111:55;::::0;::::1;::::0;5152:4:::1;5111:55:::0;;;;;;;;;;;;-1:-1:-1;;;;;5111:7:3;;::::1;::::0;:20:::1;::::0;:55;;;;;::::1;::::0;;;;;;;;;:7:::1;::::0;:55;::::1;;::::0;::::1;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;::::0;::::1;;-1:-1:-1::0;5111:55:3;5103:64:::1;;;::::0;::::1;;5178:27;5185:11;5198:6;5178;:27::i;:::-;5017:196:::0;;:::o;2859:24::-;;;-1:-1:-1;;;;;2859:24:3;;:::o;3143:39:4:-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3143:39:4;;;;;;;;:::o;3180:19:1:-;;;;;;;;;;;;;;;-1:-1:-1;;3180:19:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2570:143:2:-;-1:-1:-1;;;;;2678:18:2;;;2651:7;2678:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;2570:143::o;5489:391:3:-;5575:6;;5537:7;;;;5575:6;;5574:7;5566:26;;;;;-1:-1:-1;;;5566:26:3;;;;;;;;;;;;-1:-1:-1;;;5566:26:3;;;;;;;;;;;;;;;5603:25;5609:10;5621:6;5603:5;:25::i;:::-;5639:23;5665:34;5676:22;;5665:6;:10;;:34;;;;:::i;:::-;5718:7;;:45;;;-1:-1:-1;;;5718:45:3;;5735:10;5718:45;;;;;;;;;;;;5639:60;;-1:-1:-1;;;;;;5718:7:3;;;;:16;;:45;;;;;;;;;;;;;;;:7;;:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5718:45:3;5710:54;;;;;;5791:7;;-1:-1:-1;;;;;5791:7:3;;-1:-1:-1;5801:15:3;-1:-1:-1;5489:391:3;;;:::o;8014:145::-;11507:13;:11;:13::i;:::-;:23;;;;-1:-1:-1;11524:6:3;;;;11507:23;11499:52;;;;;-1:-1:-1;;;11499:52:3;;;;;;;;;;;;-1:-1:-1;;;11499:52:3;;;;;;;;;;;;;;;8098:5:::1;;;;;;;;;-1:-1:-1::0;;;;;8098:5:3::1;-1:-1:-1::0;;;;;8098:11:3::1;;:13;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;::::0;::::1;;-1:-1:-1::0;8098:13:3;-1:-1:-1;;;;;8084:27:3::1;:10;:27;8076:36;;;::::0;::::1;;8123:28;;;;;;;;;;;;;;-1:-1:-1::0;;;8123:28:3::1;;::::0;:15:::1;:28::i;9572:128:4:-:0;-1:-1:-1;;;;;9663:19:4;9636:7;9663:19;;;:6;:19;;;;;:29;;;;9572:128::o;7864:175:2:-;-1:-1:-1;;;;;7949:18:2;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:35;;;8000:31;;;;;;;;;;;;;;;;;7864:175;;;:::o;1424:141:8:-;1508:5;;;1531:6;;;;1524:14;;;3993:152:1;4105:32;4121:4;4127:2;4131:5;4105:15;:32::i;:::-;3993:152;;;:::o;11350:106:3:-;11428:5;;-1:-1:-1;;;;;11428:5:3;11420:28;;11350:106;:::o;9471:564::-;9577:20;9600:19;9610:8;9600:9;:19::i;:::-;9577:42;;9630:21;9654:13;:11;:13::i;:::-;9678:6;:14;;-1:-1:-1;;9678:14:3;;;9630:37;-1:-1:-1;9703:20:3;9710:12;9703:6;:20::i;:::-;-1:-1:-1;9734:17:3;;-1:-1:-1;9754:31:3;:13;9772:12;9754:17;:31::i;:::-;9804:7;;:37;;;-1:-1:-1;;;9804:37:3;;-1:-1:-1;;;;;9804:37:3;;;;;;;;;;;;;;;9734:51;;-1:-1:-1;9804:7:3;;;:16;;:37;;;;;;;;;;;;;;;:7;;:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;9804:37:3;9796:46;;;;;;9853:7;:28;;-1:-1:-1;;;;;;9853:28:3;-1:-1:-1;;;;;9853:28:3;;;;;;;;;;;9892:22;:39;;;9950:7;:20;9971:8;9989:4;9996:29;9892:39;10015:9;9996:18;:29::i;:::-;9950:76;;;;;;;;;;;;;-1:-1:-1;;;;;9950:76:3;;;;;;-1:-1:-1;;;;;9950:76:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;9950:76:3;9942:85;;;;;;9471:564;;;;;;:::o;1232:123:8:-;1290:7;1322:1;1317;:6;;1310:14;;;;-1:-1:-1;1342:5:8;;;1232:123::o;305:424::-;363:9;609:6;605:47;;-1:-1:-1;639:1:8;632:8;;605:47;-1:-1:-1;668:5:8;;;672:1;668;:5;:1;691:5;;;;;:10;684:18;;;3841:144:1;3949:28;3961:7;3970:6;3949:11;:28::i;818:295:8:-;876:7;1104:1;1100;:5;;;;;;;818:295;-1:-1:-1;;;818:295:8:o;8558:323:3:-;8642:5;;:13;;;-1:-1:-1;;;8642:13:3;;;;8626;;-1:-1:-1;;;;;8642:5:3;;:11;;:13;;;;;;;;;;;;;;:5;:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;8642:13:3;8791:5;;8671:137;;;8716:10;8671:137;;;8741:5;8642:13;8671:137;;;;;;-1:-1:-1;;;;;8791:5:3;;;8671:137;;;;;;;;;;;;;;;;;;;;;;;;8642:13;;-1:-1:-1;8671:137:3;;;;;;8716:10;;8741:5;;8761:7;;8791:5;8671:137;;;;;;;;;;;;;;8741:5;8671:137;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8819:5;;;;;;;;;-1:-1:-1;;;;;8819:5:3;-1:-1:-1;;;;;8819:10:3;;:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;8842:5:3;:31;;-1:-1:-1;;;;;;8842:31:3;;;-1:-1:-1;;;;8558:323:3:o;3867:327:4:-;3947:7;-1:-1:-1;;;;;3971:31:4;;3997:4;3971:31;3967:220;;;-1:-1:-1;4026:1:4;4019:8;;3967:220;4067:23;;-1:-1:-1;;;;;4049:41:4;;;4067:23;;4049:41;4045:142;;;-1:-1:-1;4114:20:4;;4107:27;;4045:142;-1:-1:-1;4174:1:4;4167:8;;5221:164:3;11625:13;:11;:13::i;:::-;11624:14;11616:40;;;;;-1:-1:-1;;;11616:40:3;;;;;;;;;;;;-1:-1:-1;;;11616:40:3;;;;;;;;;;;;;;;5319:6:::1;::::0;::::1;;5311:29;;;::::0;;-1:-1:-1;;;5311:29:3;;::::1;;::::0;::::1;::::0;::::1;::::0;;;;-1:-1:-1;;;5311:29:3;;;;;;;;;;;;;::::1;;5351:26;5357:11;5370:6;5351:5;:26::i;9708:217:4:-:0;9794:4;9819:33;9834:9;9845:6;9819:14;:33::i;:::-;9811:61;;;;;-1:-1:-1;;;9811:61:4;;;;;;;;;;;;-1:-1:-1;;;9811:61:4;;;;;;;;;;;;;;;9883:12;:10;:12::i;10864:237:3:-;10961:32;10977:4;10983:2;10987:5;10961:15;:32::i;:::-;11008:13;:11;:13::i;:::-;:23;;;;-1:-1:-1;11025:6:3;;;;11008:23;11004:90;;;11048:5;;:34;;;-1:-1:-1;;;11048:34:3;;-1:-1:-1;;;;;11048:34:3;;;;;;;;;;;;;;;;;;;;;;:5;;;;;:17;;:34;;;;;:5;;:34;;;;;;;:5;;:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10864:237;;;:::o;11109:233::-;11194:28;11206:7;11215:6;11194:11;:28::i;:::-;11237:13;:11;:13::i;:::-;:23;;;;-1:-1:-1;11254:6:3;;;;11237:23;11233:102;;;11277:5;;:46;;;-1:-1:-1;;;11277:46:3;;-1:-1:-1;;;;;11277:46:3;;;;;;;:5;:46;;;;;;;;;;;;;;:5;;;:17;;:46;;;;;:5;;:46;;;;;;:5;;:46;;;;;;;;;;;;;;;;;;;;;;;;;;6576:281:2;-1:-1:-1;;;;;6660:21:2;;6652:30;;;;;;6710:12;;:24;;6727:6;6710:16;:24::i;:::-;6695:12;:39;-1:-1:-1;;;;;6766:18:2;;:9;:18;;;;;;;;;;;:30;;6789:6;6766:22;:30::i;:::-;-1:-1:-1;;;;;6745:18:2;;:9;:18;;;;;;;;;;;:51;;;;6812:37;;;;;;;6745:18;;:9;;6812:37;;;;;;;;;;6576:281;;:::o;2334:173::-;2420:4;2437:40;2447:10;2459:9;2470:6;2437:9;:40::i;5577:317::-;-1:-1:-1;;;;;5683:23:2;;5675:32;;;;;;-1:-1:-1;;;;;5740:17:2;;:9;:17;;;;;;;;;;;:29;;5762:6;5740:21;:29::i;:::-;-1:-1:-1;;;;;5720:17:2;;;:9;:17;;;;;;;;;;;:49;;;;5803:20;;;;;;;:32;;5828:6;5803:24;:32::i;:::-;-1:-1:-1;;;;;5780:20:2;;;:9;:20;;;;;;;;;;;;:55;;;;5851:35;;;;;;;5780:20;;5851:35;;;;;;;;;;;;;5577:317;;;:::o;7190:234::-;7280:12;;:23;;7297:5;7280:16;:23::i;:::-;7265:12;:38;-1:-1:-1;;;;;7335:18:2;;:9;:18;;;;;;;;;;;:29;;7358:5;7335:22;:29::i;:::-;-1:-1:-1;;;;;7314:18:2;;:9;:18;;;;;;;;;;;:50;;;;7380:36;;;;;;;7314:9;;7380:36;;;;;;;;;;;7190:234;;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;:::o",
    "sourcePath": "c:/Users/luziu/Documents/aktionariat/contracts/src/DraggableShares.sol",
    "compiler": {
        "name": "solc",
        "version": "0.7.1+commit.f4a555be"
    },
    "ast": {
        "absolutePath": "c:/Users/luziu/Documents/aktionariat/contracts/src/DraggableShares.sol",
        "exportedSymbols": {
            "DraggableShares": [
                650
            ],
            "IRecoverable": [
                668
            ]
        },
        "id": 669,
        "license": "LicenseRef-Aktionariat",
        "nodeType": "SourceUnit",
        "nodes": [
            {
                "id": 489,
                "literals": [
                    "solidity",
                    ">=",
                    "0.7"
                ],
                "nodeType": "PragmaDirective",
                "src": "1336:22:1"
            },
            {
                "absolutePath": "c:/Users/luziu/Documents/aktionariat/contracts/src/ERC20Recoverable.sol",
                "file": "./ERC20Recoverable.sol",
                "id": 490,
                "nodeType": "ImportDirective",
                "scope": 669,
                "sourceUnit": 2501,
                "src": "1362:32:1",
                "symbolAliases": [],
                "unitAlias": ""
            },
            {
                "absolutePath": "c:/Users/luziu/Documents/aktionariat/contracts/src/ERC20Draggable.sol",
                "file": "./ERC20Draggable.sol",
                "id": 491,
                "nodeType": "ImportDirective",
                "scope": 669,
                "sourceUnit": 1913,
                "src": "1396:30:1",
                "symbolAliases": [],
                "unitAlias": ""
            },
            {
                "abstract": false,
                "baseContracts": [
                    {
                        "baseName": {
                            "id": 493,
                            "name": "ERC20Recoverable",
                            "nodeType": "UserDefinedTypeName",
                            "referencedDeclaration": 2500,
                            "src": "3103:16:1",
                            "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC20Recoverable_$2500",
                                "typeString": "contract ERC20Recoverable"
                            }
                        },
                        "id": 494,
                        "nodeType": "InheritanceSpecifier",
                        "src": "3103:16:1"
                    },
                    {
                        "baseName": {
                            "id": 495,
                            "name": "ERC20Draggable",
                            "nodeType": "UserDefinedTypeName",
                            "referencedDeclaration": 1900,
                            "src": "3121:14:1",
                            "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC20Draggable_$1900",
                                "typeString": "contract ERC20Draggable"
                            }
                        },
                        "id": 496,
                        "nodeType": "InheritanceSpecifier",
                        "src": "3121:14:1"
                    }
                ],
                "contractDependencies": [
                    1099,
                    1900,
                    2500,
                    2593,
                    2605
                ],
                "contractKind": "contract",
                "documentation": {
                    "id": 492,
                    "nodeType": "StructuredDocumentation",
                    "src": "1430:1641:1",
                    "text": " @title Draggable CompanyName AG Shares\n @author Benjamin Rickenbacher, b.rickenbacher@intergga.ch\n @author Luzius Meisser, luzius@meissereconomics.com\n This is an ERC-20 token representing shares of CompanyName AG that are bound to\n a shareholder agreement that can be found at the URL defined in the constant 'terms'.\n The shareholder agreement is partially enforced through this smart contract. The agreement\n is designed to facilitate a complete acquisition of the firm even if a minority of shareholders\n disagree with the acquisition, to protect the interest of the minority shareholders by requiring\n the acquirer to offer the same conditions to everyone when acquiring the company, and to\n facilitate an update of the shareholder agreement even if a minority of the shareholders that\n are bound to this agreement disagree. The name \"draggable\" stems from the convention of calling\n the right to drag a minority along with a sale of the company \"drag-along\" rights. The name is\n chosen to ensure that token holders are aware that they are bound to such an agreement.\n The percentage of token holders that must agree with an update of the terms is defined by the\n constant UPDATE_QUORUM. The precentage of yes-votes that is needed to successfully complete an\n acquisition is defined in the constant ACQUISITION_QUORUM. Note that the update quorum is based\n on the total number of tokens in circulation. In contrast, the acquisition quorum is based on the\n number of votes cast during the voting period, not taking into account those who did not bother\n to vote."
                },
                "fullyImplemented": true,
                "id": 650,
                "linearizedBaseContracts": [
                    650,
                    1900,
                    2605,
                    2500,
                    1099,
                    2593
                ],
                "name": "DraggableShares",
                "nodeType": "ContractDefinition",
                "nodes": [
                    {
                        "id": 499,
                        "libraryName": {
                            "id": 497,
                            "name": "SafeMath",
                            "nodeType": "UserDefinedTypeName",
                            "referencedDeclaration": 2712,
                            "src": "3151:8:1",
                            "typeDescriptions": {
                                "typeIdentifier": "t_contract$_SafeMath_$2712",
                                "typeString": "library SafeMath"
                            }
                        },
                        "nodeType": "UsingForDirective",
                        "src": "3145:27:1",
                        "typeName": {
                            "id": 498,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "3164:7:1",
                            "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                            }
                        }
                    },
                    {
                        "constant": false,
                        "functionSelector": "d5025625",
                        "id": 501,
                        "mutability": "mutable",
                        "name": "terms",
                        "nodeType": "VariableDeclaration",
                        "scope": 650,
                        "src": "3180:19:1",
                        "stateVariable": true,
                        "storageLocation": "default",
                        "typeDescriptions": {
                            "typeIdentifier": "t_string_storage",
                            "typeString": "string"
                        },
                        "typeName": {
                            "id": 500,
                            "name": "string",
                            "nodeType": "ElementaryTypeName",
                            "src": "3180:6:1",
                            "typeDescriptions": {
                                "typeIdentifier": "t_string_storage_ptr",
                                "typeString": "string"
                            }
                        },
                        "visibility": "public"
                    },
                    {
                        "body": {
                            "id": 527,
                            "nodeType": "Block",
                            "src": "3450:225:1",
                            "statements": [
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "hexValue": "66616c7365",
                                                "id": 520,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "bool",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "3503:5:1",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                },
                                                "value": "false"
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            ],
                                            "expression": {
                                                "arguments": [
                                                    {
                                                        "id": 517,
                                                        "name": "wrappedToken",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 506,
                                                        "src": "3474:12:1",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        }
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        }
                                                    ],
                                                    "id": 516,
                                                    "name": "IRecoverable",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 668,
                                                    "src": "3461:12:1",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_type$_t_contract$_IRecoverable_$668_$",
                                                        "typeString": "type(contract IRecoverable)"
                                                    }
                                                },
                                                "id": 518,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "typeConversion",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "3461:26:1",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_contract$_IRecoverable_$668",
                                                    "typeString": "contract IRecoverable"
                                                }
                                            },
                                            "id": 519,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "setRecoverable",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 655,
                                            "src": "3461:41:1",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_external_nonpayable$_t_bool_$returns$__$",
                                                "typeString": "function (bool) external"
                                            }
                                        },
                                        "id": 521,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "3461:48:1",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 522,
                                    "nodeType": "ExpressionStatement",
                                    "src": "3461:48:1"
                                },
                                {
                                    "expression": {
                                        "id": 525,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftHandSide": {
                                            "id": 523,
                                            "name": "terms",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 501,
                                            "src": "3520:5:1",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_string_storage",
                                                "typeString": "string storage ref"
                                            }
                                        },
                                        "nodeType": "Assignment",
                                        "operator": "=",
                                        "rightHandSide": {
                                            "id": 524,
                                            "name": "_terms",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 504,
                                            "src": "3528:6:1",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_string_memory_ptr",
                                                "typeString": "string memory"
                                            }
                                        },
                                        "src": "3520:14:1",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_string_storage",
                                            "typeString": "string storage ref"
                                        }
                                    },
                                    "id": 526,
                                    "nodeType": "ExpressionStatement",
                                    "src": "3520:14:1"
                                }
                            ]
                        },
                        "documentation": {
                            "id": 502,
                            "nodeType": "StructuredDocumentation",
                            "src": "3208:110:1",
                            "text": " Designed to be used with the Crypto Franc as currency token. See also parent constructor."
                        },
                        "id": 528,
                        "implemented": true,
                        "kind": "constructor",
                        "modifiers": [
                            {
                                "arguments": [
                                    {
                                        "id": 511,
                                        "name": "wrappedToken",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 506,
                                        "src": "3420:12:1",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    {
                                        "id": 512,
                                        "name": "quorum",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 508,
                                        "src": "3434:6:1",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    {
                                        "id": 513,
                                        "name": "quorum",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 508,
                                        "src": "3442:6:1",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    }
                                ],
                                "id": 514,
                                "modifierName": {
                                    "id": 510,
                                    "name": "ERC20Draggable",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1900,
                                    "src": "3405:14:1",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_ERC20Draggable_$1900_$",
                                        "typeString": "type(contract ERC20Draggable)"
                                    }
                                },
                                "nodeType": "ModifierInvocation",
                                "src": "3405:44:1"
                            }
                        ],
                        "name": "",
                        "nodeType": "FunctionDefinition",
                        "parameters": {
                            "id": 509,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 504,
                                    "mutability": "mutable",
                                    "name": "_terms",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 528,
                                    "src": "3336:20:1",
                                    "stateVariable": false,
                                    "storageLocation": "memory",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_string_memory_ptr",
                                        "typeString": "string"
                                    },
                                    "typeName": {
                                        "id": 503,
                                        "name": "string",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "3336:6:1",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_string_storage_ptr",
                                            "typeString": "string"
                                        }
                                    },
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 506,
                                    "mutability": "mutable",
                                    "name": "wrappedToken",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 528,
                                    "src": "3358:20:1",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                    },
                                    "typeName": {
                                        "id": 505,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "3358:7:1",
                                        "stateMutability": "nonpayable",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 508,
                                    "mutability": "mutable",
                                    "name": "quorum",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 528,
                                    "src": "3380:14:1",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                    },
                                    "typeName": {
                                        "id": 507,
                                        "name": "uint256",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "3380:7:1",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "3335:60:1"
                        },
                        "returnParameters": {
                            "id": 515,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "3450:0:1"
                        },
                        "scope": 650,
                        "src": "3324:351:1",
                        "stateMutability": "nonpayable",
                        "virtual": false,
                        "visibility": "public"
                    },
                    {
                        "baseFunctions": [
                            1044,
                            1860
                        ],
                        "body": {
                            "id": 545,
                            "nodeType": "Block",
                            "src": "3938:47:1",
                            "statements": [
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "id": 541,
                                                "name": "account",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 530,
                                                "src": "3961:7:1",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            {
                                                "id": 542,
                                                "name": "amount",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 532,
                                                "src": "3970:6:1",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                },
                                                {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            ],
                                            "expression": {
                                                "id": 538,
                                                "name": "super",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": -25,
                                                "src": "3949:5:1",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_super$_DraggableShares_$650",
                                                    "typeString": "contract super DraggableShares"
                                                }
                                            },
                                            "id": 540,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "_burn",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 1860,
                                            "src": "3949:11:1",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                                                "typeString": "function (address,uint256)"
                                            }
                                        },
                                        "id": 543,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "3949:28:1",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 544,
                                    "nodeType": "ExpressionStatement",
                                    "src": "3949:28:1"
                                }
                            ]
                        },
                        "id": 546,
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [],
                        "name": "_burn",
                        "nodeType": "FunctionDefinition",
                        "overrides": {
                            "id": 536,
                            "nodeType": "OverrideSpecifier",
                            "overrides": [
                                {
                                    "id": 534,
                                    "name": "ERC20Draggable",
                                    "nodeType": "UserDefinedTypeName",
                                    "referencedDeclaration": 1900,
                                    "src": "3906:14:1",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_ERC20Draggable_$1900",
                                        "typeString": "contract ERC20Draggable"
                                    }
                                },
                                {
                                    "id": 535,
                                    "name": "ERC20",
                                    "nodeType": "UserDefinedTypeName",
                                    "referencedDeclaration": 1099,
                                    "src": "3922:5:1",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_ERC20_$1099",
                                        "typeString": "contract ERC20"
                                    }
                                }
                            ],
                            "src": "3897:31:1"
                        },
                        "parameters": {
                            "id": 533,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 530,
                                    "mutability": "mutable",
                                    "name": "account",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 546,
                                    "src": "3856:15:1",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                    },
                                    "typeName": {
                                        "id": 529,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "3856:7:1",
                                        "stateMutability": "nonpayable",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 532,
                                    "mutability": "mutable",
                                    "name": "amount",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 546,
                                    "src": "3873:14:1",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                    },
                                    "typeName": {
                                        "id": 531,
                                        "name": "uint256",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "3873:7:1",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "3855:33:1"
                        },
                        "returnParameters": {
                            "id": 537,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "3938:0:1"
                        },
                        "scope": 650,
                        "src": "3841:144:1",
                        "stateMutability": "nonpayable",
                        "virtual": true,
                        "visibility": "internal"
                    },
                    {
                        "baseFunctions": [
                            929,
                            1827
                        ],
                        "body": {
                            "id": 566,
                            "nodeType": "Block",
                            "src": "4094:51:1",
                            "statements": [
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "id": 561,
                                                "name": "from",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 548,
                                                "src": "4121:4:1",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            {
                                                "id": 562,
                                                "name": "to",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 550,
                                                "src": "4127:2:1",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            {
                                                "id": 563,
                                                "name": "value",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 552,
                                                "src": "4131:5:1",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                },
                                                {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                },
                                                {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            ],
                                            "expression": {
                                                "id": 558,
                                                "name": "super",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": -25,
                                                "src": "4105:5:1",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_super$_DraggableShares_$650",
                                                    "typeString": "contract super DraggableShares"
                                                }
                                            },
                                            "id": 560,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "_transfer",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 1827,
                                            "src": "4105:15:1",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                                                "typeString": "function (address,address,uint256)"
                                            }
                                        },
                                        "id": 564,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "4105:32:1",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 565,
                                    "nodeType": "ExpressionStatement",
                                    "src": "4105:32:1"
                                }
                            ]
                        },
                        "id": 567,
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [],
                        "name": "_transfer",
                        "nodeType": "FunctionDefinition",
                        "overrides": {
                            "id": 556,
                            "nodeType": "OverrideSpecifier",
                            "overrides": [
                                {
                                    "id": 554,
                                    "name": "ERC20Draggable",
                                    "nodeType": "UserDefinedTypeName",
                                    "referencedDeclaration": 1900,
                                    "src": "4062:14:1",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_ERC20Draggable_$1900",
                                        "typeString": "contract ERC20Draggable"
                                    }
                                },
                                {
                                    "id": 555,
                                    "name": "ERC20",
                                    "nodeType": "UserDefinedTypeName",
                                    "referencedDeclaration": 1099,
                                    "src": "4078:5:1",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_ERC20_$1099",
                                        "typeString": "contract ERC20"
                                    }
                                }
                            ],
                            "src": "4053:31:1"
                        },
                        "parameters": {
                            "id": 553,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 548,
                                    "mutability": "mutable",
                                    "name": "from",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 567,
                                    "src": "4012:12:1",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                    },
                                    "typeName": {
                                        "id": 547,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "4012:7:1",
                                        "stateMutability": "nonpayable",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 550,
                                    "mutability": "mutable",
                                    "name": "to",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 567,
                                    "src": "4026:10:1",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                    },
                                    "typeName": {
                                        "id": 549,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "4026:7:1",
                                        "stateMutability": "nonpayable",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 552,
                                    "mutability": "mutable",
                                    "name": "value",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 567,
                                    "src": "4038:13:1",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                    },
                                    "typeName": {
                                        "id": 551,
                                        "name": "uint256",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "4038:7:1",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "4011:41:1"
                        },
                        "returnParameters": {
                            "id": 557,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "4094:0:1"
                        },
                        "scope": 650,
                        "src": "3993:152:1",
                        "stateMutability": "nonpayable",
                        "virtual": false,
                        "visibility": "internal"
                    },
                    {
                        "baseFunctions": [
                            749,
                            2298
                        ],
                        "body": {
                            "id": 585,
                            "nodeType": "Block",
                            "src": "4254:51:1",
                            "statements": [
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "id": 581,
                                                "name": "to",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 569,
                                                "src": "4287:2:1",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            {
                                                "id": 582,
                                                "name": "value",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 571,
                                                "src": "4291:5:1",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                },
                                                {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            ],
                                            "expression": {
                                                "id": 579,
                                                "name": "super",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": -25,
                                                "src": "4272:5:1",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_super$_DraggableShares_$650",
                                                    "typeString": "contract super DraggableShares"
                                                }
                                            },
                                            "id": 580,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "transfer",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 2298,
                                            "src": "4272:14:1",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                                "typeString": "function (address,uint256) returns (bool)"
                                            }
                                        },
                                        "id": 583,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "4272:25:1",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                        }
                                    },
                                    "functionReturnParameters": 578,
                                    "id": 584,
                                    "nodeType": "Return",
                                    "src": "4265:32:1"
                                }
                            ]
                        },
                        "functionSelector": "a9059cbb",
                        "id": 586,
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [],
                        "name": "transfer",
                        "nodeType": "FunctionDefinition",
                        "overrides": {
                            "id": 575,
                            "nodeType": "OverrideSpecifier",
                            "overrides": [
                                {
                                    "id": 573,
                                    "name": "ERC20Recoverable",
                                    "nodeType": "UserDefinedTypeName",
                                    "referencedDeclaration": 2500,
                                    "src": "4207:16:1",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_ERC20Recoverable_$2500",
                                        "typeString": "contract ERC20Recoverable"
                                    }
                                },
                                {
                                    "id": 574,
                                    "name": "ERC20",
                                    "nodeType": "UserDefinedTypeName",
                                    "referencedDeclaration": 1099,
                                    "src": "4225:5:1",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_ERC20_$1099",
                                        "typeString": "contract ERC20"
                                    }
                                }
                            ],
                            "src": "4198:33:1"
                        },
                        "parameters": {
                            "id": 572,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 569,
                                    "mutability": "mutable",
                                    "name": "to",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 586,
                                    "src": "4171:10:1",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                    },
                                    "typeName": {
                                        "id": 568,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "4171:7:1",
                                        "stateMutability": "nonpayable",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 571,
                                    "mutability": "mutable",
                                    "name": "value",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 586,
                                    "src": "4183:13:1",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                    },
                                    "typeName": {
                                        "id": 570,
                                        "name": "uint256",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "4183:7:1",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "4170:27:1"
                        },
                        "returnParameters": {
                            "id": 578,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 577,
                                    "mutability": "mutable",
                                    "name": "",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 586,
                                    "src": "4248:4:1",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                    },
                                    "typeName": {
                                        "id": 576,
                                        "name": "bool",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "4248:4:1",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "4247:6:1"
                        },
                        "scope": 650,
                        "src": "4153:152:1",
                        "stateMutability": "nonpayable",
                        "virtual": false,
                        "visibility": "public"
                    },
                    {
                        "baseFunctions": [
                            2023
                        ],
                        "body": {
                            "id": 601,
                            "nodeType": "Block",
                            "src": "4379:74:1",
                            "statements": [
                                {
                                    "expression": {
                                        "arguments": [],
                                        "expression": {
                                            "argumentTypes": [],
                                            "expression": {
                                                "arguments": [
                                                    {
                                                        "arguments": [
                                                            {
                                                                "id": 595,
                                                                "name": "wrapped",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [],
                                                                "referencedDeclaration": 1117,
                                                                "src": "4418:7:1",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_contract$_IERC20_$2593",
                                                                    "typeString": "contract IERC20"
                                                                }
                                                            }
                                                        ],
                                                        "expression": {
                                                            "argumentTypes": [
                                                                {
                                                                    "typeIdentifier": "t_contract$_IERC20_$2593",
                                                                    "typeString": "contract IERC20"
                                                                }
                                                            ],
                                                            "id": 594,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": true,
                                                            "lValueRequested": false,
                                                            "nodeType": "ElementaryTypeNameExpression",
                                                            "src": "4410:7:1",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_type$_t_address_$",
                                                                "typeString": "type(address)"
                                                            },
                                                            "typeName": {
                                                                "id": 593,
                                                                "name": "address",
                                                                "nodeType": "ElementaryTypeName",
                                                                "src": "4410:7:1",
                                                                "typeDescriptions": {}
                                                            }
                                                        },
                                                        "id": 596,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "kind": "typeConversion",
                                                        "lValueRequested": false,
                                                        "names": [],
                                                        "nodeType": "FunctionCall",
                                                        "src": "4410:16:1",
                                                        "tryCall": false,
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        }
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        }
                                                    ],
                                                    "id": 592,
                                                    "name": "IRecoverable",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 668,
                                                    "src": "4397:12:1",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_type$_t_contract$_IRecoverable_$668_$",
                                                        "typeString": "type(contract IRecoverable)"
                                                    }
                                                },
                                                "id": 597,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "typeConversion",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "4397:30:1",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_contract$_IRecoverable_$668",
                                                    "typeString": "contract IRecoverable"
                                                }
                                            },
                                            "id": 598,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "getClaimDeleter",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 667,
                                            "src": "4397:46:1",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                                                "typeString": "function () view external returns (address)"
                                            }
                                        },
                                        "id": 599,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "4397:48:1",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "functionReturnParameters": 591,
                                    "id": 600,
                                    "nodeType": "Return",
                                    "src": "4390:55:1"
                                }
                            ]
                        },
                        "functionSelector": "2a0a4ed5",
                        "id": 602,
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [],
                        "name": "getClaimDeleter",
                        "nodeType": "FunctionDefinition",
                        "overrides": {
                            "id": 588,
                            "nodeType": "OverrideSpecifier",
                            "overrides": [],
                            "src": "4352:8:1"
                        },
                        "parameters": {
                            "id": 587,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "4337:2:1"
                        },
                        "returnParameters": {
                            "id": 591,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 590,
                                    "mutability": "mutable",
                                    "name": "",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 602,
                                    "src": "4370:7:1",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                    },
                                    "typeName": {
                                        "id": 589,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "4370:7:1",
                                        "stateMutability": "nonpayable",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "4369:9:1"
                        },
                        "scope": 650,
                        "src": "4313:140:1",
                        "stateMutability": "view",
                        "virtual": false,
                        "visibility": "public"
                    },
                    {
                        "baseFunctions": [
                            1976
                        ],
                        "body": {
                            "id": 648,
                            "nodeType": "Block",
                            "src": "4551:561:1",
                            "statements": [
                                {
                                    "assignments": [
                                        611
                                    ],
                                    "declarations": [
                                        {
                                            "constant": false,
                                            "id": 611,
                                            "mutability": "mutable",
                                            "name": "rate",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 648,
                                            "src": "4562:12:1",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            },
                                            "typeName": {
                                                "id": 610,
                                                "name": "uint256",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "4562:7:1",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "id": 616,
                                    "initialValue": {
                                        "arguments": [
                                            {
                                                "id": 614,
                                                "name": "collateralType",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 604,
                                                "src": "4601:14:1",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            ],
                                            "expression": {
                                                "id": 612,
                                                "name": "super",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": -25,
                                                "src": "4577:5:1",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_super$_DraggableShares_$650",
                                                    "typeString": "contract super DraggableShares"
                                                }
                                            },
                                            "id": 613,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "getCollateralRate",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 1976,
                                            "src": "4577:23:1",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                                                "typeString": "function (address) view returns (uint256)"
                                            }
                                        },
                                        "id": 615,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "4577:39:1",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "nodeType": "VariableDeclarationStatement",
                                    "src": "4562:54:1"
                                },
                                {
                                    "condition": {
                                        "commonType": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        },
                                        "id": 619,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                            "id": 617,
                                            "name": "rate",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 611,
                                            "src": "4631:4:1",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": ">",
                                        "rightExpression": {
                                            "hexValue": "30",
                                            "id": 618,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "number",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "4638:1:1",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_rational_0_by_1",
                                                "typeString": "int_const 0"
                                            },
                                            "value": "0"
                                        },
                                        "src": "4631:8:1",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                        }
                                    },
                                    "falseBody": {
                                        "condition": {
                                            "commonType": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            },
                                            "id": 628,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "leftExpression": {
                                                "id": 623,
                                                "name": "collateralType",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 604,
                                                "src": "4689:14:1",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            "nodeType": "BinaryOperation",
                                            "operator": "==",
                                            "rightExpression": {
                                                "arguments": [
                                                    {
                                                        "id": 626,
                                                        "name": "wrapped",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 1117,
                                                        "src": "4715:7:1",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_contract$_IERC20_$2593",
                                                            "typeString": "contract IERC20"
                                                        }
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_contract$_IERC20_$2593",
                                                            "typeString": "contract IERC20"
                                                        }
                                                    ],
                                                    "id": 625,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "lValueRequested": false,
                                                    "nodeType": "ElementaryTypeNameExpression",
                                                    "src": "4707:7:1",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_type$_t_address_$",
                                                        "typeString": "type(address)"
                                                    },
                                                    "typeName": {
                                                        "id": 624,
                                                        "name": "address",
                                                        "nodeType": "ElementaryTypeName",
                                                        "src": "4707:7:1",
                                                        "typeDescriptions": {}
                                                    }
                                                },
                                                "id": 627,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "typeConversion",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "4707:16:1",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            "src": "4689:34:1",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_bool",
                                                "typeString": "bool"
                                            }
                                        },
                                        "falseBody": {
                                            "id": 645,
                                            "nodeType": "Block",
                                            "src": "4787:318:1",
                                            "statements": [
                                                {
                                                    "expression": {
                                                        "arguments": [
                                                            {
                                                                "id": 642,
                                                                "name": "unwrapConversionFactor",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [],
                                                                "referencedDeclaration": 1120,
                                                                "src": "5070:22:1",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_uint256",
                                                                    "typeString": "uint256"
                                                                }
                                                            }
                                                        ],
                                                        "expression": {
                                                            "argumentTypes": [
                                                                {
                                                                    "typeIdentifier": "t_uint256",
                                                                    "typeString": "uint256"
                                                                }
                                                            ],
                                                            "expression": {
                                                                "arguments": [
                                                                    {
                                                                        "id": 639,
                                                                        "name": "collateralType",
                                                                        "nodeType": "Identifier",
                                                                        "overloadedDeclarations": [],
                                                                        "referencedDeclaration": 604,
                                                                        "src": "5050:14:1",
                                                                        "typeDescriptions": {
                                                                            "typeIdentifier": "t_address",
                                                                            "typeString": "address"
                                                                        }
                                                                    }
                                                                ],
                                                                "expression": {
                                                                    "argumentTypes": [
                                                                        {
                                                                            "typeIdentifier": "t_address",
                                                                            "typeString": "address"
                                                                        }
                                                                    ],
                                                                    "expression": {
                                                                        "arguments": [
                                                                            {
                                                                                "arguments": [
                                                                                    {
                                                                                        "id": 635,
                                                                                        "name": "wrapped",
                                                                                        "nodeType": "Identifier",
                                                                                        "overloadedDeclarations": [],
                                                                                        "referencedDeclaration": 1117,
                                                                                        "src": "5022:7:1",
                                                                                        "typeDescriptions": {
                                                                                            "typeIdentifier": "t_contract$_IERC20_$2593",
                                                                                            "typeString": "contract IERC20"
                                                                                        }
                                                                                    }
                                                                                ],
                                                                                "expression": {
                                                                                    "argumentTypes": [
                                                                                        {
                                                                                            "typeIdentifier": "t_contract$_IERC20_$2593",
                                                                                            "typeString": "contract IERC20"
                                                                                        }
                                                                                    ],
                                                                                    "id": 634,
                                                                                    "isConstant": false,
                                                                                    "isLValue": false,
                                                                                    "isPure": true,
                                                                                    "lValueRequested": false,
                                                                                    "nodeType": "ElementaryTypeNameExpression",
                                                                                    "src": "5014:7:1",
                                                                                    "typeDescriptions": {
                                                                                        "typeIdentifier": "t_type$_t_address_$",
                                                                                        "typeString": "type(address)"
                                                                                    },
                                                                                    "typeName": {
                                                                                        "id": 633,
                                                                                        "name": "address",
                                                                                        "nodeType": "ElementaryTypeName",
                                                                                        "src": "5014:7:1",
                                                                                        "typeDescriptions": {}
                                                                                    }
                                                                                },
                                                                                "id": 636,
                                                                                "isConstant": false,
                                                                                "isLValue": false,
                                                                                "isPure": false,
                                                                                "kind": "typeConversion",
                                                                                "lValueRequested": false,
                                                                                "names": [],
                                                                                "nodeType": "FunctionCall",
                                                                                "src": "5014:16:1",
                                                                                "tryCall": false,
                                                                                "typeDescriptions": {
                                                                                    "typeIdentifier": "t_address",
                                                                                    "typeString": "address"
                                                                                }
                                                                            }
                                                                        ],
                                                                        "expression": {
                                                                            "argumentTypes": [
                                                                                {
                                                                                    "typeIdentifier": "t_address",
                                                                                    "typeString": "address"
                                                                                }
                                                                            ],
                                                                            "id": 632,
                                                                            "name": "IRecoverable",
                                                                            "nodeType": "Identifier",
                                                                            "overloadedDeclarations": [],
                                                                            "referencedDeclaration": 668,
                                                                            "src": "5001:12:1",
                                                                            "typeDescriptions": {
                                                                                "typeIdentifier": "t_type$_t_contract$_IRecoverable_$668_$",
                                                                                "typeString": "type(contract IRecoverable)"
                                                                            }
                                                                        },
                                                                        "id": 637,
                                                                        "isConstant": false,
                                                                        "isLValue": false,
                                                                        "isPure": false,
                                                                        "kind": "typeConversion",
                                                                        "lValueRequested": false,
                                                                        "names": [],
                                                                        "nodeType": "FunctionCall",
                                                                        "src": "5001:30:1",
                                                                        "tryCall": false,
                                                                        "typeDescriptions": {
                                                                            "typeIdentifier": "t_contract$_IRecoverable_$668",
                                                                            "typeString": "contract IRecoverable"
                                                                        }
                                                                    },
                                                                    "id": 638,
                                                                    "isConstant": false,
                                                                    "isLValue": false,
                                                                    "isPure": false,
                                                                    "lValueRequested": false,
                                                                    "memberName": "getCollateralRate",
                                                                    "nodeType": "MemberAccess",
                                                                    "referencedDeclaration": 662,
                                                                    "src": "5001:48:1",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                                                        "typeString": "function (address) view external returns (uint256)"
                                                                    }
                                                                },
                                                                "id": 640,
                                                                "isConstant": false,
                                                                "isLValue": false,
                                                                "isPure": false,
                                                                "kind": "functionCall",
                                                                "lValueRequested": false,
                                                                "names": [],
                                                                "nodeType": "FunctionCall",
                                                                "src": "5001:64:1",
                                                                "tryCall": false,
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_uint256",
                                                                    "typeString": "uint256"
                                                                }
                                                            },
                                                            "id": 641,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": false,
                                                            "lValueRequested": false,
                                                            "memberName": "mul",
                                                            "nodeType": "MemberAccess",
                                                            "referencedDeclaration": 2650,
                                                            "src": "5001:68:1",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                                                            }
                                                        },
                                                        "id": 643,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "kind": "functionCall",
                                                        "lValueRequested": false,
                                                        "names": [],
                                                        "nodeType": "FunctionCall",
                                                        "src": "5001:92:1",
                                                        "tryCall": false,
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        }
                                                    },
                                                    "functionReturnParameters": 609,
                                                    "id": 644,
                                                    "nodeType": "Return",
                                                    "src": "4994:99:1"
                                                }
                                            ]
                                        },
                                        "id": 646,
                                        "nodeType": "IfStatement",
                                        "src": "4685:420:1",
                                        "trueBody": {
                                            "id": 631,
                                            "nodeType": "Block",
                                            "src": "4725:56:1",
                                            "statements": [
                                                {
                                                    "expression": {
                                                        "id": 629,
                                                        "name": "unwrapConversionFactor",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 1120,
                                                        "src": "4747:22:1",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        }
                                                    },
                                                    "functionReturnParameters": 609,
                                                    "id": 630,
                                                    "nodeType": "Return",
                                                    "src": "4740:29:1"
                                                }
                                            ]
                                        }
                                    },
                                    "id": 647,
                                    "nodeType": "IfStatement",
                                    "src": "4627:478:1",
                                    "trueBody": {
                                        "id": 622,
                                        "nodeType": "Block",
                                        "src": "4641:38:1",
                                        "statements": [
                                            {
                                                "expression": {
                                                    "id": 620,
                                                    "name": "rate",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 611,
                                                    "src": "4663:4:1",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    }
                                                },
                                                "functionReturnParameters": 609,
                                                "id": 621,
                                                "nodeType": "Return",
                                                "src": "4656:11:1"
                                            }
                                        ]
                                    }
                                }
                            ]
                        },
                        "functionSelector": "77e071ad",
                        "id": 649,
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [],
                        "name": "getCollateralRate",
                        "nodeType": "FunctionDefinition",
                        "overrides": {
                            "id": 606,
                            "nodeType": "OverrideSpecifier",
                            "overrides": [],
                            "src": "4524:8:1"
                        },
                        "parameters": {
                            "id": 605,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 604,
                                    "mutability": "mutable",
                                    "name": "collateralType",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 649,
                                    "src": "4488:22:1",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                    },
                                    "typeName": {
                                        "id": 603,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "4488:7:1",
                                        "stateMutability": "nonpayable",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "4487:24:1"
                        },
                        "returnParameters": {
                            "id": 609,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 608,
                                    "mutability": "mutable",
                                    "name": "",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 649,
                                    "src": "4542:7:1",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                    },
                                    "typeName": {
                                        "id": 607,
                                        "name": "uint256",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "4542:7:1",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "4541:9:1"
                        },
                        "scope": 650,
                        "src": "4461:651:1",
                        "stateMutability": "view",
                        "virtual": false,
                        "visibility": "public"
                    }
                ],
                "scope": 669,
                "src": "3075:2042:1"
            },
            {
                "abstract": true,
                "baseContracts": [],
                "contractDependencies": [],
                "contractKind": "contract",
                "fullyImplemented": false,
                "id": 668,
                "linearizedBaseContracts": [
                    668
                ],
                "name": "IRecoverable",
                "nodeType": "ContractDefinition",
                "nodes": [
                    {
                        "functionSelector": "6427ed97",
                        "id": 655,
                        "implemented": false,
                        "kind": "function",
                        "modifiers": [],
                        "name": "setRecoverable",
                        "nodeType": "FunctionDefinition",
                        "parameters": {
                            "id": 653,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 652,
                                    "mutability": "mutable",
                                    "name": "",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 655,
                                    "src": "5183:4:1",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                    },
                                    "typeName": {
                                        "id": 651,
                                        "name": "bool",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "5183:4:1",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "5182:6:1"
                        },
                        "returnParameters": {
                            "id": 654,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "5203:0:1"
                        },
                        "scope": 668,
                        "src": "5159:45:1",
                        "stateMutability": "nonpayable",
                        "virtual": true,
                        "visibility": "public"
                    },
                    {
                        "functionSelector": "77e071ad",
                        "id": 662,
                        "implemented": false,
                        "kind": "function",
                        "modifiers": [],
                        "name": "getCollateralRate",
                        "nodeType": "FunctionDefinition",
                        "parameters": {
                            "id": 658,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 657,
                                    "mutability": "mutable",
                                    "name": "",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 662,
                                    "src": "5237:7:1",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                    },
                                    "typeName": {
                                        "id": 656,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "5237:7:1",
                                        "stateMutability": "nonpayable",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "5236:9:1"
                        },
                        "returnParameters": {
                            "id": 661,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 660,
                                    "mutability": "mutable",
                                    "name": "",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 662,
                                    "src": "5275:7:1",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                    },
                                    "typeName": {
                                        "id": 659,
                                        "name": "uint256",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "5275:7:1",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "5274:9:1"
                        },
                        "scope": 668,
                        "src": "5210:74:1",
                        "stateMutability": "view",
                        "virtual": true,
                        "visibility": "public"
                    },
                    {
                        "functionSelector": "2a0a4ed5",
                        "id": 667,
                        "implemented": false,
                        "kind": "function",
                        "modifiers": [],
                        "name": "getClaimDeleter",
                        "nodeType": "FunctionDefinition",
                        "parameters": {
                            "id": 663,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "5314:2:1"
                        },
                        "returnParameters": {
                            "id": 666,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 665,
                                    "mutability": "mutable",
                                    "name": "",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 667,
                                    "src": "5346:7:1",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                    },
                                    "typeName": {
                                        "id": 664,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "5346:7:1",
                                        "stateMutability": "nonpayable",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "5345:9:1"
                        },
                        "scope": 668,
                        "src": "5290:65:1",
                        "stateMutability": "view",
                        "virtual": true,
                        "visibility": "public"
                    }
                ],
                "scope": 669,
                "src": "5121:237:1"
            }
        ],
        "src": "1336:4022:1"
    },
    "functionHashes": {
        "acquisitionQuorum()": "3549788a",
        "active()": "02fb0c5e",
        "allowance(address,address)": "dd62ed3e",
        "approve(address,uint256)": "095ea7b3",
        "balanceOf(address)": "70a08231",
        "burn(uint256)": "42966c68",
        "cancelAcquisition()": "e1b8c38e",
        "claimPeriod()": "7dc2cd98",
        "claims(address)": "c6788bdd",
        "clearClaim()": "6b03ed5f",
        "completeAcquisition()": "141c7068",
        "contestAcquisition()": "6f4b18df",
        "customCollateralAddress()": "0c6f0e5d",
        "customCollateralRate()": "60918117",
        "decimals()": "313ce567",
        "declareLost(address,address)": "26773ddd",
        "decreaseAllowance(address,uint256)": "a457c2d7",
        "deleteClaim(address)": "32a7ae95",
        "getClaimDeleter()": "2a0a4ed5",
        "getClaimant(address)": "1e3b9de5",
        "getCollateral(address)": "9b56d6c9",
        "getCollateralRate(address)": "77e071ad",
        "getCollateralType(address)": "3bcc45ba",
        "getTimeStamp(address)": "eb470ebf",
        "increaseAllowance(address,uint256)": "39509351",
        "initiateAcquisition(uint256,address)": "49b210b7",
        "isRecoveryEnabled(address)": "a3ec1883",
        "migrate()": "8fd3ab80",
        "migrationQuorum()": "9e8a9a5a",
        "name()": "06fdde03",
        "offer()": "c028df06",
        "onTokenTransfer(address,uint256,bytes)": "a4c0ed36",
        "recover(address)": "0cd865ec",
        "recoveryDisabled(address)": "b40e80d1",
        "setRecoverable(bool)": "6427ed97",
        "symbol()": "95d89b41",
        "terms()": "d5025625",
        "totalSupply()": "18160ddd",
        "transfer(address,uint256)": "a9059cbb",
        "transferAndCall(address,uint256,bytes)": "4000aea0",
        "transferFrom(address,address,uint256)": "23b872dd",
        "unwrap(uint256)": "de0e9a3e",
        "unwrapConversionFactor()": "0832e470",
        "voteNo()": "41c12a70",
        "voteYes()": "90cf581c",
        "wrap(address,uint256)": "bf376c7a",
        "wrapped()": "50e70d48"
    },
    "gasEstimates": {
        "creation": {
            "codeDepositCost": "3413800",
            "executionCost": "infinite",
            "totalCost": "infinite"
        },
        "external": {
            "acquisitionQuorum()": "1110",
            "active()": "1057",
            "allowance(address,address)": "1338",
            "approve(address,uint256)": "22433",
            "balanceOf(address)": "1257",
            "burn(uint256)": "infinite",
            "cancelAcquisition()": "infinite",
            "claimPeriod()": "1154",
            "claims(address)": "3740",
            "clearClaim()": "infinite",
            "completeAcquisition()": "infinite",
            "contestAcquisition()": "infinite",
            "customCollateralAddress()": "1172",
            "customCollateralRate()": "1153",
            "decimals()": "1081",
            "declareLost(address,address)": "infinite",
            "decreaseAllowance(address,uint256)": "23400",
            "deleteClaim(address)": "infinite",
            "getClaimDeleter()": "infinite",
            "getClaimant(address)": "1290",
            "getCollateral(address)": "1259",
            "getCollateralRate(address)": "infinite",
            "getCollateralType(address)": "1334",
            "getTimeStamp(address)": "1302",
            "increaseAllowance(address,uint256)": "infinite",
            "initiateAcquisition(uint256,address)": "infinite",
            "isRecoveryEnabled(address)": "1312",
            "migrate()": "infinite",
            "migrationQuorum()": "1131",
            "name()": "infinite",
            "offer()": "1192",
            "onTokenTransfer(address,uint256,bytes)": "infinite",
            "recover(address)": "infinite",
            "recoveryDisabled(address)": "1247",
            "setRecoverable(bool)": "21142",
            "symbol()": "infinite",
            "terms()": "infinite",
            "totalSupply()": "1088",
            "transfer(address,uint256)": "infinite",
            "transferAndCall(address,uint256,bytes)": "infinite",
            "transferFrom(address,address,uint256)": "infinite",
            "unwrap(uint256)": "infinite",
            "unwrapConversionFactor()": "1089",
            "voteNo()": "infinite",
            "voteYes()": "infinite",
            "wrap(address,uint256)": "infinite",
            "wrapped()": "1170"
        },
        "internal": {
            "_burn(address,uint256)": "infinite",
            "_transfer(address,address,uint256)": "infinite"
        }
    }
}