{
    "contractName": "DraggableShares",
    "abi": [
        {
            "inputs": [
                {
                    "internalType": "string",
                    "name": "_terms",
                    "type": "string"
                },
                {
                    "internalType": "address",
                    "name": "wrappedToken",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "quorumBps",
                    "type": "uint256"
                },
                {
                    "internalType": "uint256",
                    "name": "votePeriodSeconds",
                    "type": "uint256"
                }
            ],
            "stateMutability": "nonpayable",
            "type": "constructor"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "owner",
                    "type": "address"
                },
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "spender",
                    "type": "address"
                },
                {
                    "indexed": false,
                    "internalType": "uint256",
                    "name": "value",
                    "type": "uint256"
                }
            ],
            "name": "Approval",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": false,
                    "internalType": "address",
                    "name": "newContractAddress",
                    "type": "address"
                },
                {
                    "indexed": false,
                    "internalType": "uint256",
                    "name": "yesVotes",
                    "type": "uint256"
                },
                {
                    "indexed": false,
                    "internalType": "uint256",
                    "name": "oracleVotes",
                    "type": "uint256"
                },
                {
                    "indexed": false,
                    "internalType": "uint256",
                    "name": "totalVotingPower",
                    "type": "uint256"
                }
            ],
            "name": "MigrationSucceeded",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "from",
                    "type": "address"
                },
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "to",
                    "type": "address"
                },
                {
                    "indexed": false,
                    "internalType": "uint256",
                    "name": "value",
                    "type": "uint256"
                }
            ],
            "name": "Transfer",
            "type": "event"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "owner",
                    "type": "address"
                },
                {
                    "internalType": "address",
                    "name": "spender",
                    "type": "address"
                }
            ],
            "name": "allowance",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "spender",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "value",
                    "type": "uint256"
                }
            ],
            "name": "approve",
            "outputs": [
                {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool"
                }
            ],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "account",
                    "type": "address"
                }
            ],
            "name": "balanceOf",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "uint256",
                    "name": "amount",
                    "type": "uint256"
                }
            ],
            "name": "burn",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "claimPeriod",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "pure",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "customCollateralAddress",
            "outputs": [
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "customCollateralRate",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "decimals",
            "outputs": [
                {
                    "internalType": "uint8",
                    "name": "",
                    "type": "uint8"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "lostAddress",
                    "type": "address"
                }
            ],
            "name": "deleteClaim",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "buyer",
                    "type": "address"
                },
                {
                    "internalType": "address",
                    "name": "currency",
                    "type": "address"
                }
            ],
            "name": "drag",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "factory",
            "outputs": [
                {
                    "internalType": "contract IOfferFactory",
                    "name": "",
                    "type": "address"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "getClaimDeleter",
            "outputs": [
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "collateralType",
                    "type": "address"
                }
            ],
            "name": "getCollateralRate",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "getOracle",
            "outputs": [
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "account",
                    "type": "address"
                },
                {
                    "internalType": "uint8",
                    "name": "number",
                    "type": "uint8"
                }
            ],
            "name": "hasFlag",
            "outputs": [
                {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "isBinding",
            "outputs": [
                {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "bytes32",
                    "name": "salt",
                    "type": "bytes32"
                },
                {
                    "internalType": "uint256",
                    "name": "pricePerShare",
                    "type": "uint256"
                },
                {
                    "internalType": "address",
                    "name": "currency",
                    "type": "address"
                }
            ],
            "name": "makeAcquisitionOffer",
            "outputs": [],
            "stateMutability": "payable",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "migrate",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "target",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "externalSupportingVotes",
                    "type": "uint256"
                }
            ],
            "name": "migrateWithExternalApproval",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "name",
            "outputs": [
                {
                    "internalType": "string",
                    "name": "",
                    "type": "string"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "target",
                    "type": "address"
                }
            ],
            "name": "notifyClaimDeleted",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "target",
                    "type": "address"
                }
            ],
            "name": "notifyClaimMade",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "notifyOfferEnded",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "offer",
            "outputs": [
                {
                    "internalType": "contract IOffer",
                    "name": "",
                    "type": "address"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "from",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "amount",
                    "type": "uint256"
                },
                {
                    "internalType": "bytes",
                    "name": "",
                    "type": "bytes"
                }
            ],
            "name": "onTokenTransfer",
            "outputs": [
                {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool"
                }
            ],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "quorum",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "oldAddress",
                    "type": "address"
                },
                {
                    "internalType": "address",
                    "name": "newAddress",
                    "type": "address"
                }
            ],
            "name": "recover",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "recovery",
            "outputs": [
                {
                    "internalType": "contract IRecoveryHub",
                    "name": "",
                    "type": "address"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "newOracle",
                    "type": "address"
                }
            ],
            "name": "setOracle",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "symbol",
            "outputs": [
                {
                    "internalType": "string",
                    "name": "",
                    "type": "string"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "terms",
            "outputs": [
                {
                    "internalType": "string",
                    "name": "",
                    "type": "string"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "totalSupply",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "totalVotingTokens",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "to",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "value",
                    "type": "uint256"
                }
            ],
            "name": "transfer",
            "outputs": [
                {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool"
                }
            ],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "recipient",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "amount",
                    "type": "uint256"
                },
                {
                    "internalType": "bytes",
                    "name": "data",
                    "type": "bytes"
                }
            ],
            "name": "transferAndCall",
            "outputs": [
                {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool"
                }
            ],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "sender",
                    "type": "address"
                },
                {
                    "internalType": "address",
                    "name": "recipient",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "amount",
                    "type": "uint256"
                }
            ],
            "name": "transferFrom",
            "outputs": [
                {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool"
                }
            ],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "uint256",
                    "name": "amount",
                    "type": "uint256"
                }
            ],
            "name": "unwrap",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "unwrapConversionFactor",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "votePeriod",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "voter",
                    "type": "address"
                }
            ],
            "name": "votingPower",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "shareholder",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "amount",
                    "type": "uint256"
                }
            ],
            "name": "wrap",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "wrapped",
            "outputs": [
                {
                    "internalType": "contract IERC20",
                    "name": "",
                    "type": "address"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        }
    ],
    "metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_terms\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"wrappedToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"quorumBps\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"votePeriodSeconds\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newContractAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"yesVotes\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oracleVotes\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalVotingPower\",\"type\":\"uint256\"}],\"name\":\"MigrationSucceeded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimPeriod\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"customCollateralAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"customCollateralRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"lostAddress\",\"type\":\"address\"}],\"name\":\"deleteClaim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"}],\"name\":\"drag\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"contract IOfferFactory\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getClaimDeleter\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"collateralType\",\"type\":\"address\"}],\"name\":\"getCollateralRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOracle\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"number\",\"type\":\"uint8\"}],\"name\":\"hasFlag\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isBinding\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"pricePerShare\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"}],\"name\":\"makeAcquisitionOffer\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"externalSupportingVotes\",\"type\":\"uint256\"}],\"name\":\"migrateWithExternalApproval\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"notifyClaimDeleted\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"notifyClaimMade\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"notifyOfferEnded\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"offer\",\"outputs\":[{\"internalType\":\"contract IOffer\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onTokenTransfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"quorum\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"oldAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"recover\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"recovery\",\"outputs\":[{\"internalType\":\"contract IRecoveryHub\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOracle\",\"type\":\"address\"}],\"name\":\"setOracle\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"terms\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalVotingTokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"unwrap\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unwrapConversionFactor\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"votePeriod\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"voter\",\"type\":\"address\"}],\"name\":\"votingPower\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"shareholder\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"wrap\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"wrapped\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Luzius Meisser, luzius@aktionariat.com This is an ERC-20 token representing shares of CompanyName AG that are bound to a shareholder agreement that can be found at the URL defined in the constant 'terms'. The shareholder agreement is partially enforced through this smart contract. The agreement is designed to facilitate a complete acquisition of the firm even if a minority of shareholders disagree with the acquisition, to protect the interest of the minority shareholders by requiring the acquirer to offer the same conditions to everyone when acquiring the company, and to facilitate an update of the shareholder agreement even if a minority of the shareholders that are bound to this agreement disagree. The name \\\"draggable\\\" stems from the convention of calling the right to drag a minority along with a sale of the company \\\"drag-along\\\" rights. The name is chosen to ensure that token holders are aware that they are bound to such an agreement. The percentage of token holders that must agree with an update of the terms is defined by the constant UPDATE_QUORUM. The percentage of yes-votes that is needed to successfully complete an acquisition is defined in the constant ACQUISITION_QUORUM. Note that the update quorum is based on the total number of tokens in circulation. In contrast, the acquisition quorum is based on the number of votes cast during the voting period, not taking into account those who did not bother to vote.\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See `IERC20.allowance`.\"},\"approve(address,uint256)\":{\"details\":\"See `IERC20.approve`. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See `IERC20.balanceOf`.\"},\"totalSupply()\":{\"details\":\"See `IERC20.totalSupply`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See `IERC20.transferFrom`. Emits an `Approval` event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of `ERC20`; Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `value`. - the caller must have allowance for `sender`'s tokens of at least `amount`.\"}},\"title\":\"Draggable CompanyName AG Shares\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"burn(uint256)\":{\"notice\":\"Burns both the token itself as well as the wrapped token! If you want to get out of the shareholder agreement, use unwrap after it has been deactivated by a majority vote or acquisition. Burning only works if wrapped token supports burning. Also, the exact meaning of this operation might depend on the circumstances. Burning and reussing the wrapped token does not free the sender from the legal obligations of the shareholder agreement.\"},\"getCollateralRate(address)\":{\"notice\":\"Returns the collateral rate for the given collateral type and 0 if that type of collateral is not accepted. By default, only the token itself is accepted at a rate of 1:1. Subclasses should override this method if they want to add additional types of collateral.\"},\"isBinding()\":{\"notice\":\"Indicates that the token holders are bound to the token terms and that: - Conversions back to the wrapped token (unwrap) are not allowed - The drag-along can be performed by making an according offer - They can be migrated to a new version of this contract in accordance with the terms\"},\"unwrap(uint256)\":{\"notice\":\"Decrease the number of drag-along tokens. The user gets back their shares in return \"},\"wrap(address,uint256)\":{\"notice\":\"Increases the number of drag-along tokens. Requires minter to deposit an equal amount of share tokens \"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"c:/Users/luziu/Documents/GitHub/contracts/src/DraggableShares.sol\":\"DraggableShares\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"c:/Users/luziu/Documents/GitHub/contracts/src/DraggableShares.sol\":{\"keccak256\":\"0x11e627d7888487ab9e3bd2ed238fd70202ce677ca0095d58275266a37217ac11\",\"license\":\"LicenseRef-Aktionariat\",\"urls\":[\"bzz-raw://bc60e02759b730f572919cd4cde91ffb93489d9970cca8388089e8076a3e3877\",\"dweb:/ipfs/QmVn6yp9PNGPtnQ13XcjtshVV6VUuYCtixEaL2r4DBqgKQ\"]},\"c:/Users/luziu/Documents/GitHub/contracts/src/ERC20Flaggable.sol\":{\"keccak256\":\"0xd79370831dfd964933b6ee43bbded710250a4e54707536309fa1c5fe5dcce485\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://096e478e5a131f438a07dc1bae56d70b27c651e70fae2546d17e83601474f685\",\"dweb:/ipfs/QmPWmp6doTGU2KDQxRhS7RE9nNaT3gsbAUhybg6LhiqUfM\"]},\"c:/Users/luziu/Documents/GitHub/contracts/src/IERC20.sol\":{\"keccak256\":\"0xdd9ef23be041b279c4815ae1483703e0532d8839865b8081e12955a52d4e148f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2eef9ae3fc010bd8012716c89852c245aacf07474f3a52b84280f9f7958210fe\",\"dweb:/ipfs/QmSsjJBfgFw8PzaBTaZwCLzHkqM6pfS6NDrrFysNkCbS2M\"]},\"c:/Users/luziu/Documents/GitHub/contracts/src/IERC677Receiver.sol\":{\"keccak256\":\"0x04613a7a3e5c67889c1476fca1c9b4c606e3527aa379e1ede01a9dfc7b9ae48d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://53dce0f0d8286dd9a720386b52ac8e9964c2986762aaa13f7d1e303ba400f4f8\",\"dweb:/ipfs/QmY2AocHahfW5JFGi4m5EVqh2JywqH8tHrABe9Y4fC93CL\"]},\"c:/Users/luziu/Documents/GitHub/contracts/src/recovery/ERC20Recoverable.sol\":{\"keccak256\":\"0xa1c9db9de66a1ed01efde6d969946f4d238f0085f7d937a5c688abe9583b6fd6\",\"license\":\"LicenseRef-Aktionariat\",\"urls\":[\"bzz-raw://44944ef97d04da55e951a6b9684f99f68ea80b3f08c030af9ae9d89c0d982030\",\"dweb:/ipfs/QmZG4iomuztUjD7PsbRzu5WmWMpEe566JQjXwwVsRZS1F4\"]},\"c:/Users/luziu/Documents/GitHub/contracts/src/recovery/IRecoverable.sol\":{\"keccak256\":\"0xea756349fa1a9f1f36e210f957e4d3f01e0c8d953edb65f0d65ebaba0b4a622d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://264a3f703922b9261c3700be0d7bdb7b4b065cc50d88d5db18d4a6fc3f7ce7ac\",\"dweb:/ipfs/QmXjD3EP59mUJAwWGwyhWENqQfmPcr8g8SWRi5yuJhS45P\"]},\"c:/Users/luziu/Documents/GitHub/contracts/src/recovery/IRecoveryHub.sol\":{\"keccak256\":\"0x8514bf589dea3a1e3705a2ca63601253cab9e92dc908cfb986e51b661e3ce16b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dc4cf51526145d829dae517755d6393355db3ff161430768a0b626a3b678a609\",\"dweb:/ipfs/QmeAaFNndRxdN1SLN35EvfJsi21Z7PvQ9xt2rYLJsFt6ic\"]},\"c:/Users/luziu/Documents/GitHub/contracts/src/sha/ERC20Draggable.sol\":{\"keccak256\":\"0x985b7707d85ab1e84e58f7e9711eff44b602a097d686e55995aa02a642f4585c\",\"license\":\"LicenseRef-Aktionariat\",\"urls\":[\"bzz-raw://c8c1b167920d401b2fe39db00d23775fc871ece1615e9bcdd928644ddf3e9140\",\"dweb:/ipfs/QmYQadX39rDBTe61kaJjaHQQ7LDVBRaXNso2rKPwc5h55G\"]},\"c:/Users/luziu/Documents/GitHub/contracts/src/sha/IDraggable.sol\":{\"keccak256\":\"0x1031bbe58e878821a8286317820f1af5282c094cdaa58134eeedd8c8f14bceba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4aa7f54bb399ca6a6e1b19cf389cc046b9499d7482614fa11850366ab9f8fcc4\",\"dweb:/ipfs/QmUnVRVEFrVnrvqsbziVgQdBRVw8d18EvA1Le48GhoY33M\"]}},\"version\":1}",
    "bytecode": "60c060405260006006553480156200001657600080fd5b5060405162002325380380620023258339810160408190526200003991620001c4565b6003805460ff19169055600580546001600160a01b0319166001600160a01b038516179055608082905260a0819052604051636427ed9760e01b81526000600482015283908390839064012312312390636427ed9790602401600060405180830381600087803b158015620000ad57600080fd5b505af1158015620000c2573d6000803e3d6000fd5b50508851620000e095506009945060208a0193509150620000eb9050565b505050505062000302565b828054620000f990620002c5565b90600052602060002090601f0160209004810192826200011d576000855562000168565b82601f106200013857805160ff191683800117855562000168565b8280016001018555821562000168579182015b82811115620001685782518255916020019190600101906200014b565b50620001769291506200017a565b5090565b5b808211156200017657600081556001016200017b565b634e487b7160e01b600052604160045260246000fd5b80516001600160a01b0381168114620001bf57600080fd5b919050565b60008060008060808587031215620001db57600080fd5b84516001600160401b0380821115620001f357600080fd5b818701915087601f8301126200020857600080fd5b8151818111156200021d576200021d62000191565b604051601f8201601f19908116603f0116810190838211818310171562000248576200024862000191565b81604052828152602093508a848487010111156200026557600080fd5b600091505b828210156200028957848201840151818301850152908301906200026a565b828211156200029b5760008484830101525b9750620002ad915050878201620001a7565b60408801516060909801519699909850945050505050565b600181811c90821680620002da57607f821691505b60208210811415620002fc57634e487b7160e01b600052602260045260246000fd5b50919050565b60805160a051611fe86200033d600039600081816105c401526110680152600081816103390152818161104201526112c40152611fe86000f3fe6080604052600436106102515760003560e01c80637dc2cd9811610139578063c07473f6116100b6578063dd62ed3e1161007a578063dd62ed3e146106c3578063ddceafa914610709578063de0e9a3e14610726578063e5b824ec14610746578063f5c0b95f14610766578063fcb79a7e1461078657600080fd5b8063c07473f614610646578063c18172c414610666578063c45a015514610686578063d50256251461069b578063dcc7d4ad146106b057600080fd5b8063a4c0ed36116100fd578063a4c0ed3614610592578063a7813587146105b2578063a9059cbb146105e6578063bf376c7a14610606578063c028df061461062657600080fd5b80637dc2cd981461051e578063833b1fce146105345780638fd3ab801461055257806395d89b41146105675780639e4b57451461057c57600080fd5b8063313ce567116101d257806350e70d481161019657806350e70d48146104685780636091811714610488578063648bf7741461049e57806370a08231146104be57806377e071ad146104de5780637adbf973146104fe57600080fd5b8063313ce567146103c757806332a7ae95146103f357806332bc320b146104135780634000aea01461042857806342966c681461044857600080fd5b80631703a018116102195780631703a0181461032757806318160ddd1461035b578063198453541461037057806323b872dd146103925780632a0a4ed5146103b257600080fd5b806306fdde03146102565780630832e47014610281578063095ea7b3146102a55780630a81b2de146102d55780630c6f0e5d146102ea575b600080fd5b34801561026257600080fd5b5061026b6107a6565b6040516102789190611ada565b60405180910390f35b34801561028d57600080fd5b5061029760065481565b604051908152602001610278565b3480156102b157600080fd5b506102c56102c0366004611b22565b6108ff565b6040519015158152602001610278565b3480156102e157600080fd5b50610297610915565b3480156102f657600080fd5b5060035461030f9061010090046001600160a01b031681565b6040516001600160a01b039091168152602001610278565b34801561033357600080fd5b506102977f000000000000000000000000000000000000000000000000000000000000000081565b34801561036757600080fd5b50600254610297565b34801561037c57600080fd5b5061039061038b366004611b22565b610997565b005b34801561039e57600080fd5b506102c56103ad366004611b4e565b6109e3565b3480156103be57600080fd5b5061030f610a3f565b3480156103d357600080fd5b506003546103e19060ff1681565b60405160ff9091168152602001610278565b3480156103ff57600080fd5b5061039061040e366004611b8f565b610a53565b34801561041f57600080fd5b50610390610b11565b34801561043457600080fd5b506102c5610443366004611bac565b610b37565b34801561045457600080fd5b50610390610463366004611c35565b610bdc565b34801561047457600080fd5b5060055461030f906001600160a01b031681565b34801561049457600080fd5b5061029760045481565b3480156104aa57600080fd5b506103906104b9366004611c4e565b610c73565b3480156104ca57600080fd5b506102976104d9366004611b8f565b610c9b565b3480156104ea57600080fd5b506102976104f9366004611b8f565b610cbf565b34801561050a57600080fd5b50610390610519366004611b8f565b610d90565b34801561052a57600080fd5b5062ed4e00610297565b34801561054057600080fd5b506008546001600160a01b031661030f565b34801561055e57600080fd5b50610390610dc9565b34801561057357600080fd5b5061026b610dd4565b34801561058857600080fd5b50600654156102c5565b34801561059e57600080fd5b506102c56105ad366004611bac565b610e65565b3480156105be57600080fd5b506102977f000000000000000000000000000000000000000000000000000000000000000081565b3480156105f257600080fd5b506102c5610601366004611b22565b610e89565b34801561061257600080fd5b50610390610621366004611b22565b610e95565b34801561063257600080fd5b5060075461030f906001600160a01b031681565b34801561065257600080fd5b50610297610661366004611b8f565b610f32565b34801561067257600080fd5b50610390610681366004611b8f565b610f43565b34801561069257600080fd5b5061030f600081565b3480156106a757600080fd5b5061026b610f75565b6103906106be366004611c87565b611003565b3480156106cf57600080fd5b506102976106de366004611c4e565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b34801561071557600080fd5b5061030f6812312312312312312381565b34801561073257600080fd5b50610390610741366004611c35565b61118e565b34801561075257600080fd5b50610390610761366004611b8f565b6111a7565b34801561077257600080fd5b506102c5610781366004611cc0565b6111d7565b34801561079257600080fd5b506103906107a1366004611c4e565b6111e3565b60606107b26006541590565b1561086557600560009054906101000a90046001600160a01b03166001600160a01b03166306fdde036040518163ffffffff1660e01b815260040160006040518083038186803b15801561080557600080fd5b505afa158015610819573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526108419190810190611d0a565b6040516020016108519190611db7565b604051602081830303815290604052905090565b600560009054906101000a90046001600160a01b03166001600160a01b03166306fdde036040518163ffffffff1660e01b815260040160006040518083038186803b1580156108b357600080fd5b505afa1580156108c7573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526108ef9190810190611d0a565b6040516020016108519190611ddf565b600061090c338484611218565b50600192915050565b60055460408051633a98ef3960e01b815290516000926001600160a01b031691633a98ef39916004808301926020929190829003018186803b15801561095a57600080fd5b505afa15801561096e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109929190611e0d565b905090565b6008546001600160a01b031633146109ae57600080fd5b6109b6610915565b816109c060025490565b6109ca9190611e3c565b11156109d557600080fd5b6109df828261127a565b5050565b60006109f084848461138d565b6001600160a01b0384166000908152600160209081526040808320338452909152902054600160ff1b811015610a3457610a348533610a2f8685611e54565b611218565b506001949350505050565b60006109926008546001600160a01b031690565b610a5b610a3f565b6001600160a01b0316336001600160a01b031614610aac5760405162461bcd60e51b81526020600482015260096024820152686e6f2061636365737360b81b60448201526064015b60405180910390fd5b6040516332a7ae9560e01b81526001600160a01b038216600482015268123123123123123123906332a7ae9590602401600060405180830381600087803b158015610af657600080fd5b505af1158015610b0a573d6000803e3d6000fd5b5050505050565b6007546001600160a01b0316331415610b3557600780546001600160a01b03191690555b565b600080610b448686610e89565b90508015610bd357604051635260769b60e11b81526001600160a01b0387169063a4c0ed3690610b7e903390899089908990600401611e6b565b602060405180830381600087803b158015610b9857600080fd5b505af1158015610bac573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bd09190611eb3565b90505b95945050505050565b610be63382611415565b6000610bf26006541590565b610bfe57600654610c01565b60015b6005549091506001600160a01b03166342966c68610c1f8385611ed5565b6040518263ffffffff1660e01b8152600401610c3d91815260200190565b600060405180830381600087803b158015610c5757600080fd5b505af1158015610c6b573d6000803e3d6000fd5b505050505050565b336812312312312312312314610c8857600080fd5b6109df8282610c9685610c9b565b61138d565b6001600160a01b03166000908152602081905260409020546001600160e01b031690565b600080610ccb836114ab565b90508015610cd95792915050565b6005546001600160a01b0384811691161415610cf9575050600654919050565b6006546005546040516377e071ad60e01b81526001600160a01b038681166004830152909116906377e071ad9060240160206040518083038186803b158015610d4157600080fd5b505afa158015610d55573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d799190611e0d565b610d839190611ed5565b9392505050565b50919050565b6008546001600160a01b03163314610da757600080fd5b600880546001600160a01b0319166001600160a01b0392909216919091179055565b610b3533600061127a565b600554604080516395d89b4160e01b815290516060926001600160a01b0316916395d89b41916004808301926000929190829003018186803b158015610e1957600080fd5b505afa158015610e2d573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610e559190810190611d0a565b6040516020016108519190611ef4565b6005546000906001600160a01b03163314610e7f57600080fd5b610a3485856114f1565b6000610d83838361155d565b6005546040516323b872dd60e01b8152336004820152306024820152604481018390526001600160a01b03909116906323b872dd90606401602060405180830381600087803b158015610ee757600080fd5b505af1158015610efb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f1f9190611eb3565b610f2857600080fd5b6109df82826114f1565b6000610f3d82610c9b565b92915050565b336812312312312312312314610f5857600080fd5b610f6381600a6115e4565b610f7257610f7281600a611624565b50565b60098054610f8290611f19565b80601f0160208091040260200160405190810160405280929190818152602001828054610fae90611f19565b8015610ffb5780601f10610fd057610100808354040283529160200191610ffb565b820191906000526020600020905b815481529060010190602001808311610fde57829003601f168201915b505050505081565b6006541561101057600080fd5b604051634dc5e43160e01b815260048101849052336024820152604481018390526001600160a01b03821660648201527f000000000000000000000000000000000000000000000000000000000000000060848201527f000000000000000000000000000000000000000000000000000000000000000060a48201526000908190634dc5e43190349060c4016020604051808303818588803b1580156110b557600080fd5b505af11580156110c9573d6000803e3d6000fd5b50505050506040513d601f19601f820116820180604052508101906110ee9190611f4e565b90506111046007546001600160a01b0316151590565b15611169576007546040516306a169ed60e01b81526001600160a01b038381166004830152909116906306a169ed90602401600060405180830381600087803b15801561115057600080fd5b505af1158015611164573d6000803e3d6000fd5b505050505b600780546001600160a01b0319166001600160a01b0392909216919091179055505050565b60065461119a57600080fd5b610f723382600654611662565b3368123123123123123123146111bc57600080fd5b6111c781600a6111d7565b15610f7257610f7281600a611624565b6000610d8383836115e4565b6007546001600160a01b031633146111fa57600080fd5b61120e8261120784610c9b565b6001611662565b6109df8183611714565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b600061128583610c9b565b61128f9083611e3c565b9050600061129b610915565b90508082106112a957600080fd5b6007546001600160a01b0316156112bf57600080fd5b6112e97f000000000000000000000000000000000000000000000000000000000000000082611ed5565b6112f583612710611ed5565b101561132c5760405162461bcd60e51b815260206004820152600660248201526571756f72756d60d01b6044820152606401610aa3565b6113368485611714565b604080516001600160a01b038616815260208101849052908101849052606081018290527f85e5711a70a7d2bae18e1232af474d82c98600b0e62fe079a28208520b58568e9060800160405180910390a150505050565b6113988383836118d9565b6001600160a01b038316600090815260208190526040812080548392906113c0908490611e54565b909155506113d0905082826118e4565b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161126d91815260200190565b611421826000836118d9565b80600260008282546114339190611e54565b90915550506001600160a01b03821660009081526020819052604081208054839290611460908490611e54565b90915550506040518181526000906001600160a01b038416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906020015b60405180910390a35050565b60006001600160a01b0382163014156114c657506001919050565b6003546001600160a01b038381166101009092041614156114e957505060045490565b506000919050565b6114fd600083836118d9565b806002600082825461150f9190611e3c565b9091555061151f905082826118e4565b6040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200161149f565b6000611569838361197e565b61157257600080fd5b61157d33600a6115e4565b1561090c576040516304d301a360e41b81523360048201526812312312312312312390634d301a3090602401600060405180830381600087803b1580156115c357600080fd5b505af11580156115d7573d6000803e3d6000fd5b5050505050600192915050565b6000806115f28360e0611f6b565b6001600160a01b038516600090815260208190526040902054600160ff929092169190911b9081161491505092915050565b60006116318260e0611f6b565b6001600160a01b039390931660009081526020819052604090208054600160ff9095169490941b9093189092555050565b61166c8383611415565b6005546001600160a01b031663a9059cbb846116888486611ed5565b6040516001600160e01b031960e085901b1681526001600160a01b0390921660048301526024820152604401602060405180830381600087803b1580156116ce57600080fd5b505af11580156116e2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117069190611eb3565b61170f57600080fd5b505050565b6006541561172157600080fd5b6005546040516370a0823160e01b81523060048201526001600160a01b039091169063a9059cbb90839083906370a082319060240160206040518083038186803b15801561176e57600080fd5b505afa158015611782573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117a69190611e0d565b6040516001600160e01b031960e085901b1681526001600160a01b0390921660048301526024820152604401602060405180830381600087803b1580156117ec57600080fd5b505af1158015611800573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118249190611eb3565b61182d57600080fd5b600580546001600160a01b0319166001600160a01b0384161790556002546109df906005546040516370a0823160e01b81523060048201526001600160a01b03909116906370a082319060240160206040518083038186803b15801561189257600080fd5b505afa1580156118a6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118ca9190611e0d565b6118d49190611f90565b61198b565b61170f8383836119ca565b6001600160a01b038216600090815260208190526040812054906001600160e01b03198216906119148484611e3c565b90506001600160e01b0319811682811461195b5760405162461bcd60e51b81526020600482015260086024820152676f766572666c6f7760c01b6044820152606401610aa3565b506001600160a01b03909416600090815260208190526040902093909355505050565b600061090c33848461138d565b60018110156119c55760405162461bcd60e51b81526020600482015260066024820152653330b1ba37b960d11b6044820152606401610aa3565b600655565b6119d383611a9d565b806119e257506119e282611a9d565b1561170f576007546001600160a01b031615611a6b5760075460405163e1a1810f60e01b81526001600160a01b0385811660048301528481166024830152604482018490529091169063e1a1810f90606401600060405180830381600087803b158015611a4e57600080fd5b505af1158015611a62573d6000803e3d6000fd5b50505050505050565b611a7483611a9d565b15611a8457611a84836001611624565b611a8d82611a9d565b1561170f5761170f826001611624565b6000610f3d8260016115e4565b60005b83811015611ac5578181015183820152602001611aad565b83811115611ad4576000848401525b50505050565b6020815260008251806020840152611af9816040850160208701611aaa565b601f01601f19169190910160400192915050565b6001600160a01b0381168114610f7257600080fd5b60008060408385031215611b3557600080fd5b8235611b4081611b0d565b946020939093013593505050565b600080600060608486031215611b6357600080fd5b8335611b6e81611b0d565b92506020840135611b7e81611b0d565b929592945050506040919091013590565b600060208284031215611ba157600080fd5b8135610d8381611b0d565b60008060008060608587031215611bc257600080fd5b8435611bcd81611b0d565b935060208501359250604085013567ffffffffffffffff80821115611bf157600080fd5b818701915087601f830112611c0557600080fd5b813581811115611c1457600080fd5b886020828501011115611c2657600080fd5b95989497505060200194505050565b600060208284031215611c4757600080fd5b5035919050565b60008060408385031215611c6157600080fd5b8235611c6c81611b0d565b91506020830135611c7c81611b0d565b809150509250929050565b600080600060608486031215611c9c57600080fd5b83359250602084013591506040840135611cb581611b0d565b809150509250925092565b60008060408385031215611cd357600080fd5b8235611cde81611b0d565b9150602083013560ff81168114611c7c57600080fd5b634e487b7160e01b600052604160045260246000fd5b600060208284031215611d1c57600080fd5b815167ffffffffffffffff80821115611d3457600080fd5b818401915084601f830112611d4857600080fd5b815181811115611d5a57611d5a611cf4565b604051601f8201601f19908116603f01168101908382118183101715611d8257611d82611cf4565b81604052828152876020848701011115611d9b57600080fd5b611dac836020830160208801611aaa565b979650505050505050565b60008251611dc9818460208701611aaa565b632053484160e01b920191825250600401919050565b60008251611df1818460208701611aaa565b692028577261707065642960b01b920191825250600a01919050565b600060208284031215611e1f57600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b60008219821115611e4f57611e4f611e26565b500190565b600082821015611e6657611e66611e26565b500390565b6001600160a01b0385168152602081018490526060604082018190528101829052818360808301376000818301608090810191909152601f909201601f191601019392505050565b600060208284031215611ec557600080fd5b81518015158114610d8357600080fd5b6000816000190483118215151615611eef57611eef611e26565b500290565b60008251611f06818460208701611aaa565b605360f81b920191825250600101919050565b600181811c90821680611f2d57607f821691505b60208210811415610d8a57634e487b7160e01b600052602260045260246000fd5b600060208284031215611f6057600080fd5b8151610d8381611b0d565b600060ff821660ff84168060ff03821115611f8857611f88611e26565b019392505050565b600082611fad57634e487b7160e01b600052601260045260246000fd5b50049056fea2646970667358221220733c21b4964f1713e935e63d3455d64b30578802db5e210d43d24361c1543b4e64736f6c63430008090033",
    "deployedBytecode": "6080604052600436106102515760003560e01c80637dc2cd9811610139578063c07473f6116100b6578063dd62ed3e1161007a578063dd62ed3e146106c3578063ddceafa914610709578063de0e9a3e14610726578063e5b824ec14610746578063f5c0b95f14610766578063fcb79a7e1461078657600080fd5b8063c07473f614610646578063c18172c414610666578063c45a015514610686578063d50256251461069b578063dcc7d4ad146106b057600080fd5b8063a4c0ed36116100fd578063a4c0ed3614610592578063a7813587146105b2578063a9059cbb146105e6578063bf376c7a14610606578063c028df061461062657600080fd5b80637dc2cd981461051e578063833b1fce146105345780638fd3ab801461055257806395d89b41146105675780639e4b57451461057c57600080fd5b8063313ce567116101d257806350e70d481161019657806350e70d48146104685780636091811714610488578063648bf7741461049e57806370a08231146104be57806377e071ad146104de5780637adbf973146104fe57600080fd5b8063313ce567146103c757806332a7ae95146103f357806332bc320b146104135780634000aea01461042857806342966c681461044857600080fd5b80631703a018116102195780631703a0181461032757806318160ddd1461035b578063198453541461037057806323b872dd146103925780632a0a4ed5146103b257600080fd5b806306fdde03146102565780630832e47014610281578063095ea7b3146102a55780630a81b2de146102d55780630c6f0e5d146102ea575b600080fd5b34801561026257600080fd5b5061026b6107a6565b6040516102789190611ada565b60405180910390f35b34801561028d57600080fd5b5061029760065481565b604051908152602001610278565b3480156102b157600080fd5b506102c56102c0366004611b22565b6108ff565b6040519015158152602001610278565b3480156102e157600080fd5b50610297610915565b3480156102f657600080fd5b5060035461030f9061010090046001600160a01b031681565b6040516001600160a01b039091168152602001610278565b34801561033357600080fd5b506102977f000000000000000000000000000000000000000000000000000000000000000081565b34801561036757600080fd5b50600254610297565b34801561037c57600080fd5b5061039061038b366004611b22565b610997565b005b34801561039e57600080fd5b506102c56103ad366004611b4e565b6109e3565b3480156103be57600080fd5b5061030f610a3f565b3480156103d357600080fd5b506003546103e19060ff1681565b60405160ff9091168152602001610278565b3480156103ff57600080fd5b5061039061040e366004611b8f565b610a53565b34801561041f57600080fd5b50610390610b11565b34801561043457600080fd5b506102c5610443366004611bac565b610b37565b34801561045457600080fd5b50610390610463366004611c35565b610bdc565b34801561047457600080fd5b5060055461030f906001600160a01b031681565b34801561049457600080fd5b5061029760045481565b3480156104aa57600080fd5b506103906104b9366004611c4e565b610c73565b3480156104ca57600080fd5b506102976104d9366004611b8f565b610c9b565b3480156104ea57600080fd5b506102976104f9366004611b8f565b610cbf565b34801561050a57600080fd5b50610390610519366004611b8f565b610d90565b34801561052a57600080fd5b5062ed4e00610297565b34801561054057600080fd5b506008546001600160a01b031661030f565b34801561055e57600080fd5b50610390610dc9565b34801561057357600080fd5b5061026b610dd4565b34801561058857600080fd5b50600654156102c5565b34801561059e57600080fd5b506102c56105ad366004611bac565b610e65565b3480156105be57600080fd5b506102977f000000000000000000000000000000000000000000000000000000000000000081565b3480156105f257600080fd5b506102c5610601366004611b22565b610e89565b34801561061257600080fd5b50610390610621366004611b22565b610e95565b34801561063257600080fd5b5060075461030f906001600160a01b031681565b34801561065257600080fd5b50610297610661366004611b8f565b610f32565b34801561067257600080fd5b50610390610681366004611b8f565b610f43565b34801561069257600080fd5b5061030f600081565b3480156106a757600080fd5b5061026b610f75565b6103906106be366004611c87565b611003565b3480156106cf57600080fd5b506102976106de366004611c4e565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b34801561071557600080fd5b5061030f6812312312312312312381565b34801561073257600080fd5b50610390610741366004611c35565b61118e565b34801561075257600080fd5b50610390610761366004611b8f565b6111a7565b34801561077257600080fd5b506102c5610781366004611cc0565b6111d7565b34801561079257600080fd5b506103906107a1366004611c4e565b6111e3565b60606107b26006541590565b1561086557600560009054906101000a90046001600160a01b03166001600160a01b03166306fdde036040518163ffffffff1660e01b815260040160006040518083038186803b15801561080557600080fd5b505afa158015610819573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526108419190810190611d0a565b6040516020016108519190611db7565b604051602081830303815290604052905090565b600560009054906101000a90046001600160a01b03166001600160a01b03166306fdde036040518163ffffffff1660e01b815260040160006040518083038186803b1580156108b357600080fd5b505afa1580156108c7573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526108ef9190810190611d0a565b6040516020016108519190611ddf565b600061090c338484611218565b50600192915050565b60055460408051633a98ef3960e01b815290516000926001600160a01b031691633a98ef39916004808301926020929190829003018186803b15801561095a57600080fd5b505afa15801561096e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109929190611e0d565b905090565b6008546001600160a01b031633146109ae57600080fd5b6109b6610915565b816109c060025490565b6109ca9190611e3c565b11156109d557600080fd5b6109df828261127a565b5050565b60006109f084848461138d565b6001600160a01b0384166000908152600160209081526040808320338452909152902054600160ff1b811015610a3457610a348533610a2f8685611e54565b611218565b506001949350505050565b60006109926008546001600160a01b031690565b610a5b610a3f565b6001600160a01b0316336001600160a01b031614610aac5760405162461bcd60e51b81526020600482015260096024820152686e6f2061636365737360b81b60448201526064015b60405180910390fd5b6040516332a7ae9560e01b81526001600160a01b038216600482015268123123123123123123906332a7ae9590602401600060405180830381600087803b158015610af657600080fd5b505af1158015610b0a573d6000803e3d6000fd5b5050505050565b6007546001600160a01b0316331415610b3557600780546001600160a01b03191690555b565b600080610b448686610e89565b90508015610bd357604051635260769b60e11b81526001600160a01b0387169063a4c0ed3690610b7e903390899089908990600401611e6b565b602060405180830381600087803b158015610b9857600080fd5b505af1158015610bac573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bd09190611eb3565b90505b95945050505050565b610be63382611415565b6000610bf26006541590565b610bfe57600654610c01565b60015b6005549091506001600160a01b03166342966c68610c1f8385611ed5565b6040518263ffffffff1660e01b8152600401610c3d91815260200190565b600060405180830381600087803b158015610c5757600080fd5b505af1158015610c6b573d6000803e3d6000fd5b505050505050565b336812312312312312312314610c8857600080fd5b6109df8282610c9685610c9b565b61138d565b6001600160a01b03166000908152602081905260409020546001600160e01b031690565b600080610ccb836114ab565b90508015610cd95792915050565b6005546001600160a01b0384811691161415610cf9575050600654919050565b6006546005546040516377e071ad60e01b81526001600160a01b038681166004830152909116906377e071ad9060240160206040518083038186803b158015610d4157600080fd5b505afa158015610d55573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d799190611e0d565b610d839190611ed5565b9392505050565b50919050565b6008546001600160a01b03163314610da757600080fd5b600880546001600160a01b0319166001600160a01b0392909216919091179055565b610b3533600061127a565b600554604080516395d89b4160e01b815290516060926001600160a01b0316916395d89b41916004808301926000929190829003018186803b158015610e1957600080fd5b505afa158015610e2d573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610e559190810190611d0a565b6040516020016108519190611ef4565b6005546000906001600160a01b03163314610e7f57600080fd5b610a3485856114f1565b6000610d83838361155d565b6005546040516323b872dd60e01b8152336004820152306024820152604481018390526001600160a01b03909116906323b872dd90606401602060405180830381600087803b158015610ee757600080fd5b505af1158015610efb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f1f9190611eb3565b610f2857600080fd5b6109df82826114f1565b6000610f3d82610c9b565b92915050565b336812312312312312312314610f5857600080fd5b610f6381600a6115e4565b610f7257610f7281600a611624565b50565b60098054610f8290611f19565b80601f0160208091040260200160405190810160405280929190818152602001828054610fae90611f19565b8015610ffb5780601f10610fd057610100808354040283529160200191610ffb565b820191906000526020600020905b815481529060010190602001808311610fde57829003601f168201915b505050505081565b6006541561101057600080fd5b604051634dc5e43160e01b815260048101849052336024820152604481018390526001600160a01b03821660648201527f000000000000000000000000000000000000000000000000000000000000000060848201527f000000000000000000000000000000000000000000000000000000000000000060a48201526000908190634dc5e43190349060c4016020604051808303818588803b1580156110b557600080fd5b505af11580156110c9573d6000803e3d6000fd5b50505050506040513d601f19601f820116820180604052508101906110ee9190611f4e565b90506111046007546001600160a01b0316151590565b15611169576007546040516306a169ed60e01b81526001600160a01b038381166004830152909116906306a169ed90602401600060405180830381600087803b15801561115057600080fd5b505af1158015611164573d6000803e3d6000fd5b505050505b600780546001600160a01b0319166001600160a01b0392909216919091179055505050565b60065461119a57600080fd5b610f723382600654611662565b3368123123123123123123146111bc57600080fd5b6111c781600a6111d7565b15610f7257610f7281600a611624565b6000610d8383836115e4565b6007546001600160a01b031633146111fa57600080fd5b61120e8261120784610c9b565b6001611662565b6109df8183611714565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b600061128583610c9b565b61128f9083611e3c565b9050600061129b610915565b90508082106112a957600080fd5b6007546001600160a01b0316156112bf57600080fd5b6112e97f000000000000000000000000000000000000000000000000000000000000000082611ed5565b6112f583612710611ed5565b101561132c5760405162461bcd60e51b815260206004820152600660248201526571756f72756d60d01b6044820152606401610aa3565b6113368485611714565b604080516001600160a01b038616815260208101849052908101849052606081018290527f85e5711a70a7d2bae18e1232af474d82c98600b0e62fe079a28208520b58568e9060800160405180910390a150505050565b6113988383836118d9565b6001600160a01b038316600090815260208190526040812080548392906113c0908490611e54565b909155506113d0905082826118e4565b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161126d91815260200190565b611421826000836118d9565b80600260008282546114339190611e54565b90915550506001600160a01b03821660009081526020819052604081208054839290611460908490611e54565b90915550506040518181526000906001600160a01b038416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906020015b60405180910390a35050565b60006001600160a01b0382163014156114c657506001919050565b6003546001600160a01b038381166101009092041614156114e957505060045490565b506000919050565b6114fd600083836118d9565b806002600082825461150f9190611e3c565b9091555061151f905082826118e4565b6040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200161149f565b6000611569838361197e565b61157257600080fd5b61157d33600a6115e4565b1561090c576040516304d301a360e41b81523360048201526812312312312312312390634d301a3090602401600060405180830381600087803b1580156115c357600080fd5b505af11580156115d7573d6000803e3d6000fd5b5050505050600192915050565b6000806115f28360e0611f6b565b6001600160a01b038516600090815260208190526040902054600160ff929092169190911b9081161491505092915050565b60006116318260e0611f6b565b6001600160a01b039390931660009081526020819052604090208054600160ff9095169490941b9093189092555050565b61166c8383611415565b6005546001600160a01b031663a9059cbb846116888486611ed5565b6040516001600160e01b031960e085901b1681526001600160a01b0390921660048301526024820152604401602060405180830381600087803b1580156116ce57600080fd5b505af11580156116e2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117069190611eb3565b61170f57600080fd5b505050565b6006541561172157600080fd5b6005546040516370a0823160e01b81523060048201526001600160a01b039091169063a9059cbb90839083906370a082319060240160206040518083038186803b15801561176e57600080fd5b505afa158015611782573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117a69190611e0d565b6040516001600160e01b031960e085901b1681526001600160a01b0390921660048301526024820152604401602060405180830381600087803b1580156117ec57600080fd5b505af1158015611800573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118249190611eb3565b61182d57600080fd5b600580546001600160a01b0319166001600160a01b0384161790556002546109df906005546040516370a0823160e01b81523060048201526001600160a01b03909116906370a082319060240160206040518083038186803b15801561189257600080fd5b505afa1580156118a6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118ca9190611e0d565b6118d49190611f90565b61198b565b61170f8383836119ca565b6001600160a01b038216600090815260208190526040812054906001600160e01b03198216906119148484611e3c565b90506001600160e01b0319811682811461195b5760405162461bcd60e51b81526020600482015260086024820152676f766572666c6f7760c01b6044820152606401610aa3565b506001600160a01b03909416600090815260208190526040902093909355505050565b600061090c33848461138d565b60018110156119c55760405162461bcd60e51b81526020600482015260066024820152653330b1ba37b960d11b6044820152606401610aa3565b600655565b6119d383611a9d565b806119e257506119e282611a9d565b1561170f576007546001600160a01b031615611a6b5760075460405163e1a1810f60e01b81526001600160a01b0385811660048301528481166024830152604482018490529091169063e1a1810f90606401600060405180830381600087803b158015611a4e57600080fd5b505af1158015611a62573d6000803e3d6000fd5b50505050505050565b611a7483611a9d565b15611a8457611a84836001611624565b611a8d82611a9d565b1561170f5761170f826001611624565b6000610f3d8260016115e4565b60005b83811015611ac5578181015183820152602001611aad565b83811115611ad4576000848401525b50505050565b6020815260008251806020840152611af9816040850160208701611aaa565b601f01601f19169190910160400192915050565b6001600160a01b0381168114610f7257600080fd5b60008060408385031215611b3557600080fd5b8235611b4081611b0d565b946020939093013593505050565b600080600060608486031215611b6357600080fd5b8335611b6e81611b0d565b92506020840135611b7e81611b0d565b929592945050506040919091013590565b600060208284031215611ba157600080fd5b8135610d8381611b0d565b60008060008060608587031215611bc257600080fd5b8435611bcd81611b0d565b935060208501359250604085013567ffffffffffffffff80821115611bf157600080fd5b818701915087601f830112611c0557600080fd5b813581811115611c1457600080fd5b886020828501011115611c2657600080fd5b95989497505060200194505050565b600060208284031215611c4757600080fd5b5035919050565b60008060408385031215611c6157600080fd5b8235611c6c81611b0d565b91506020830135611c7c81611b0d565b809150509250929050565b600080600060608486031215611c9c57600080fd5b83359250602084013591506040840135611cb581611b0d565b809150509250925092565b60008060408385031215611cd357600080fd5b8235611cde81611b0d565b9150602083013560ff81168114611c7c57600080fd5b634e487b7160e01b600052604160045260246000fd5b600060208284031215611d1c57600080fd5b815167ffffffffffffffff80821115611d3457600080fd5b818401915084601f830112611d4857600080fd5b815181811115611d5a57611d5a611cf4565b604051601f8201601f19908116603f01168101908382118183101715611d8257611d82611cf4565b81604052828152876020848701011115611d9b57600080fd5b611dac836020830160208801611aaa565b979650505050505050565b60008251611dc9818460208701611aaa565b632053484160e01b920191825250600401919050565b60008251611df1818460208701611aaa565b692028577261707065642960b01b920191825250600a01919050565b600060208284031215611e1f57600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b60008219821115611e4f57611e4f611e26565b500190565b600082821015611e6657611e66611e26565b500390565b6001600160a01b0385168152602081018490526060604082018190528101829052818360808301376000818301608090810191909152601f909201601f191601019392505050565b600060208284031215611ec557600080fd5b81518015158114610d8357600080fd5b6000816000190483118215151615611eef57611eef611e26565b500290565b60008251611f06818460208701611aaa565b605360f81b920191825250600101919050565b600181811c90821680611f2d57607f821691505b60208210811415610d8a57634e487b7160e01b600052602260045260246000fd5b600060208284031215611f6057600080fd5b8151610d8381611b0d565b600060ff821660ff84168060ff03821115611f8857611f88611e26565b019392505050565b600082611fad57634e487b7160e01b600052601260045260246000fd5b50049056fea2646970667358221220733c21b4964f1713e935e63d3455d64b30578802db5e210d43d24361c1543b4e64736f6c63430008090033",
    "sourceMap": "3021:2075:0:-:0;;;2789:1:7;2749:41;;3119:354:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2475:8:1;:20;;-1:-1:-1;;2475:20:1;;;3338:7:7;:30;;-1:-1:-1;;;;;;3338:30:7;-1:-1:-1;;;;;3338:30:7;;;;;3379:16;;;;3406:24;;;;3441:56;;-1:-1:-1;;;3441:56:7;;-1:-1:-1;3441:56:7;;;1770:41:9;3338:30:7;;3379:16;;3406:24;;3462:11;;3441:49;;1743:18:9;;3441:56:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3318:14:0;;::::2;::::0;-1:-1:-1;3318:5:0::2;::::0;-1:-1:-1;3318:14:0::2;::::0;::::2;::::0;-1:-1:-1;3318:14:0;-1:-1:-1;3318:14:0::2;::::0;-1:-1:-1;3318:14:0:i:2;:::-;;3119:354:::0;;;;3021:2075;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3021:2075:0;;;-1:-1:-1;3021:2075:0;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:127:9;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:177;225:13;;-1:-1:-1;;;;;267:31:9;;257:42;;247:70;;313:1;310;303:12;247:70;146:177;;;:::o;328:1297::-;435:6;443;451;459;512:3;500:9;491:7;487:23;483:33;480:53;;;529:1;526;519:12;480:53;556:16;;-1:-1:-1;;;;;621:14:9;;;618:34;;;648:1;645;638:12;618:34;686:6;675:9;671:22;661:32;;731:7;724:4;720:2;716:13;712:27;702:55;;753:1;750;743:12;702:55;782:2;776:9;804:2;800;797:10;794:36;;;810:18;;:::i;:::-;885:2;879:9;853:2;939:13;;-1:-1:-1;;935:22:9;;;959:2;931:31;927:40;915:53;;;983:18;;;1003:22;;;980:46;977:72;;;1029:18;;:::i;:::-;1069:10;1065:2;1058:22;1104:2;1096:6;1089:18;1126:4;1116:14;;1167:7;1162:2;1157;1153;1149:11;1145:20;1142:33;1139:53;;;1188:1;1185;1178:12;1139:53;1210:1;1201:10;;1220:129;1234:2;1231:1;1228:9;1220:129;;;1322:10;;;1318:19;;1312:26;1291:14;;;1287:23;;1280:59;1245:10;;;;1220:129;;;1367:2;1364:1;1361:9;1358:80;;;1426:1;1421:2;1416;1408:6;1404:15;1400:24;1393:35;1358:80;1457:6;-1:-1:-1;1482:49:9;;-1:-1:-1;;1512:18:9;;;1482:49;:::i;:::-;1571:2;1556:18;;1550:25;1615:2;1600:18;;;1594:25;328:1297;;1472:59;;-1:-1:-1;328:1297:9;-1:-1:-1;;;;;328:1297:9:o;1822:380::-;1901:1;1897:12;;;;1944;;;1965:61;;2019:4;2011:6;2007:17;1997:27;;1965:61;2072:2;2064:6;2061:14;2041:18;2038:38;2035:161;;;2118:10;2113:3;2109:20;2106:1;2099:31;2153:4;2150:1;2143:15;2181:4;2178:1;2171:15;2035:161;;1822:380;;;:::o;:::-;3021:2075:0;;;;;;;;;;;;;;",
    "deployedSourceMap": "3021:2075:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3481:270;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2749:41:7;;;;;;;;;;;;;;;;;;;811:25:9;;;799:2;784:18;2749:41:7;665:177:9;4105:157:1;;;;;;;;;;-1:-1:-1;4105:157:1;;;;;:::i;:::-;;:::i;:::-;;;1468:14:9;;1461:22;1443:41;;1431:2;1416:18;4105:157:1;1303:187:9;8726:133:7;;;;;;;;;;;;;:::i;2799:38:4:-;;;;;;;;;;-1:-1:-1;2799:38:4;;;;;;;-1:-1:-1;;;;;2799:38:4;;;;;;-1:-1:-1;;;;;1659:32:9;;;1641:51;;1629:2;1614:18;2799:38:4;1495:203:9;2948:31:7;;;;;;;;;;;;;;;2568:100:1;;;;;;;;;;-1:-1:-1;2648:12:1;;2568:100;;7318:641:7;;;;;;;;;;-1:-1:-1;7318:641:7;;;;;:::i;:::-;;:::i;:::-;;4733:508:1;;;;;;;;;;-1:-1:-1;4733:508:1;;;;;:::i;:::-;;:::i;4131:103:0:-;;;;;;;;;;;;;:::i;2396:30:1:-;;;;;;;;;;-1:-1:-1;2396:30:1;;;;;;;;;;;2336:4:9;2324:17;;;2306:36;;2294:2;2279:18;2396:30:1;2164:184:9;5444:165:4;;;;;;;;;;-1:-1:-1;5444:165:4;;;;;:::i;:::-;;:::i;6510:148:7:-;;;;;;;;;;;;;:::i;6104:313:1:-;;;;;;;;;;-1:-1:-1;6104:313:1;;;;;:::i;:::-;;:::i;5695:207:7:-;;;;;;;;;;-1:-1:-1;5695:207:7;;;;;:::i;:::-;;:::i;2475:21::-;;;;;;;;;;-1:-1:-1;2475:21:7;;;;-1:-1:-1;;;;;2475:21:7;;;2844:35:4;;;;;;;;;;;;;;;;5617:199;;;;;;;;;;-1:-1:-1;5617:199:4;;;;;:::i;:::-;;:::i;2731:135:1:-;;;;;;;;;;-1:-1:-1;2731:135:1;;;;;:::i;:::-;;:::i;4242:648:0:-;;;;;;;;;;-1:-1:-1;4242:648:0;;;;;:::i;:::-;;:::i;7188:122:7:-;;;;;;;;;;-1:-1:-1;7188:122:7;;;;;:::i;:::-;;:::i;3661:95:4:-;;;;;;;;;;-1:-1:-1;3740:8:4;3661:95;;7089:91:7;;;;;;;;;;-1:-1:-1;7166:6:7;;-1:-1:-1;;;;;7166:6:7;7089:91;;7967:75;;;;;;;;;;;;;:::i;3759:187:0:-;;;;;;;;;;;;;:::i;4406:101:7:-;;;;;;;;;;-1:-1:-1;4472:22:7;;:27;4406:101;;3550:212;;;;;;;;;;-1:-1:-1;3550:212:7;;;;;:::i;:::-;;:::i;3009:35::-;;;;;;;;;;;;;;;3954:169:0;;;;;;;;;;-1:-1:-1;3954:169:0;;;;;:::i;:::-;;:::i;3884:178:7:-;;;;;;;;;;-1:-1:-1;3884:178:7;;;;;:::i;:::-;;:::i;2920:19::-;;;;;;;;;;-1:-1:-1;2920:19:7;;;;-1:-1:-1;;;;;2920:19:7;;;8601:117;;;;;;;;;;-1:-1:-1;8601:117:7;;;;;:::i;:::-;;:::i;4954:240:4:-;;;;;;;;;;-1:-1:-1;4954:240:4;;;;;:::i;:::-;;:::i;2556:67:7:-;;;;;;;;;;;;2618:3;2556:67;;3091:19:0;;;;;;;;;;;;;:::i;5910:378:7:-;;;;;;:::i;:::-;;:::i;3815:143:1:-;;;;;;;;;;-1:-1:-1;3815:143:1;;;;;:::i;:::-;-1:-1:-1;;;;;3923:18:1;;;3896:7;3923:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3815:143;2888:83:4;;;;;;;;;;;;2949:20;2888:83;;4851:140:7;;;;;;;;;;-1:-1:-1;4851:140:7;;;;;:::i;:::-;;:::i;5202:234:4:-;;;;;;;;;;-1:-1:-1;5202:234:4;;;;;:::i;:::-;;:::i;2874:133:1:-;;;;;;;;;;-1:-1:-1;2874:133:1;;;;;:::i;:::-;;:::i;6296:206:7:-;;;;;;;;;;-1:-1:-1;6296:206:7;;;;;:::i;:::-;;:::i;3481:270:0:-;3527:13;3556:11;4472:22:7;;:27;;4406:101;3556:11:0;3552:192;;;3614:7;;;;;;;;;-1:-1:-1;;;;;3614:7:0;-1:-1:-1;;;;;3614:12:0;;:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3614:14:0;;;;;;;;;;;;:::i;:::-;3597:40;;;;;;;;:::i;:::-;;;;;;;;;;;;;3583:55;;3481:270;:::o;3552:192::-;3702:7;;;;;;;;;-1:-1:-1;;;;;3702:7:0;-1:-1:-1;;;;;3702:12:0;;:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3702:14:0;;;;;;;;;;;;:::i;:::-;3685:46;;;;;;;;:::i;4105:157:1:-;4179:4;4196:36;4205:10;4217:7;4226:5;4196:8;:36::i;:::-;-1:-1:-1;4250:4:1;4105:157;;;;:::o;8726:133:7:-;8828:7;;8812:39;;;-1:-1:-1;;;8812:39:7;;;;8785:7;;-1:-1:-1;;;;;8828:7:7;;8812:37;;:39;;;;;;;;;;;;;;8828:7;8812:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8805:46;;8726:133;:::o;7318:641::-;7444:6;;-1:-1:-1;;;;;7444:6:7;7430:10;:20;7422:29;;;;;;7880:19;:17;:19::i;:::-;7853:23;7837:13;2648:12:1;;;2568:100;7837:13:7;:39;;;;:::i;:::-;:62;;7829:71;;;;;;7911:40;7919:6;7927:23;7911:7;:40::i;:::-;7318:641;;:::o;4733:508:1:-;4831:4;4848:36;4858:6;4866:9;4877:6;4848:9;:36::i;:::-;-1:-1:-1;;;;;4922:19:1;;4895:24;4922:19;;;:11;:19;;;;;;;;4942:10;4922:31;;;;;;;;-1:-1:-1;;;4968:29:1;;4964:248;;;5145:55;5154:6;5162:10;5174:25;5193:6;5174:16;:25;:::i;:::-;5145:8;:55::i;:::-;-1:-1:-1;5229:4:1;;4733:508;-1:-1:-1;;;;4733:508:1:o;4131:103:0:-;4188:7;4215:11;7166:6:7;;-1:-1:-1;;;;;7166:6:7;;7089:91;5444:165:4;5526:17;:15;:17::i;:::-;-1:-1:-1;;;;;5512:31:4;:10;-1:-1:-1;;;;;5512:31:4;;5504:53;;;;-1:-1:-1;;;5504:53:4;;8399:2:9;5504:53:4;;;8381:21:9;8438:1;8418:18;;;8411:29;-1:-1:-1;;;8456:18:9;;;8449:39;8505:18;;5504:53:4;;;;;;;;;5568:33;;-1:-1:-1;;;5568:33:4;;-1:-1:-1;;;;;1659:32:9;;5568:33:4;;;1641:51:9;2949:20:4;;5568;;1614:18:9;;5568:33:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5444:165;:::o;6510:148:7:-;6591:5;;-1:-1:-1;;;;;6591:5:7;6569:10;:28;6565:86;;;6613:5;:26;;-1:-1:-1;;;;;;6613:26:7;;;6565:86;6510:148::o;6104:313:1:-;6198:4;6215:12;6230:27;6239:9;6250:6;6230:8;:27::i;:::-;6215:42;;6272:7;6268:117;;;6305:68;;-1:-1:-1;;;6305:68:1;;-1:-1:-1;;;;;6305:42:1;;;;;:68;;6348:10;;6360:6;;6368:4;;;;6305:68;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6295:78;;6268:117;6402:7;6104:313;-1:-1:-1;;;;;6104:313:1:o;5695:207:7:-;5743:25;5749:10;5761:6;5743:5;:25::i;:::-;5779:14;5796:11;4472:22;;:27;;4406:101;5796:11;:40;;5814:22;;5796:40;;;5810:1;5796:40;5863:7;;5779:57;;-1:-1:-1;;;;;;5863:7:7;5847:30;5878:15;5779:57;5878:6;:15;:::i;:::-;5847:47;;;;;;;;;;;;;811:25:9;;799:2;784:18;;665:177;5847:47:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5732:170;5695:207;:::o;5617:199:4:-;5709:10;2949:20;5709:31;5701:40;;;;;;5752:56;5762:10;5774;5786:21;5796:10;5786:9;:21::i;:::-;5752:9;:56::i;2731:135:1:-;-1:-1:-1;;;;;2824:18:1;2797:7;2824:18;;;;;;;;;;;-1:-1:-1;;;;;2824:34:1;;2731:135::o;4242:648:0:-;4323:7;4343:12;4358:39;4382:14;4358:23;:39::i;:::-;4343:54;-1:-1:-1;4412:8:0;;4408:475;;4444:4;4242:648;-1:-1:-1;;4242:648:0:o;4408:475::-;4496:7;;-1:-1:-1;;;;;4470:34:0;;;4496:7;;4470:34;4466:417;;;-1:-1:-1;;4528:22:0;;;4242:648;-1:-1:-1;4242:648:0:o;4466:417::-;4849:22;;4803:7;;4782:64;;-1:-1:-1;;;4782:64:0;;-1:-1:-1;;;;;1659:32:9;;;4782:64:0;;;1641:51:9;4803:7:0;;;;4782:48;;1614:18:9;;4782:64:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:89;;;;:::i;:::-;4775:96;4242:648;-1:-1:-1;;;4242:648:0:o;4466:417::-;4332:558;4242:648;;;:::o;7188:122:7:-;7266:6;;-1:-1:-1;;;;;7266:6:7;7252:10;:20;7244:29;;;;;;7284:6;:18;;-1:-1:-1;;;;;;7284:18:7;-1:-1:-1;;;;;7284:18:7;;;;;;;;;;7188:122::o;7967:75::-;8004:22;8012:10;8024:1;8004:7;:22::i;3759:187:0:-;3915:7;;:16;;;-1:-1:-1;;;3915:16:0;;;;3807:13;;-1:-1:-1;;;;;3915:7:0;;:14;;:16;;;;;:7;;:16;;;;;;;:7;:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3915:16:0;;;;;;;;;;;;:::i;:::-;3898:39;;;;;;;;:::i;3550:212:7:-;3693:7;;3646:4;;-1:-1:-1;;;;;3693:7:7;3671:10;:30;3663:39;;;;;;3713:19;3719:4;3725:6;3713:5;:19::i;3954:169:0:-;4066:4;4090:25;4105:2;4109:5;4090:14;:25::i;3884:178:7:-;3961:7;;:55;;-1:-1:-1;;;3961:55:7;;3982:10;3961:55;;;10237:34:9;4002:4:7;10287:18:9;;;10280:43;10339:18;;;10332:34;;;-1:-1:-1;;;;;3961:7:7;;;;:20;;10172:18:9;;3961:55:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3953:64;;;;;;4028:26;4034:11;4047:6;4028:5;:26::i;8601:117::-;8667:7;8694:16;8704:5;8694:9;:16::i;:::-;8687:23;8601:117;-1:-1:-1;;8601:117:7:o;4954:240:4:-;5030:10;2949:20;5030:31;5022:40;;;;;;5078:43;5094:6;2717:2;5078:15;:43::i;:::-;5073:114;;5137:38;5148:6;2717:2;5137:10;:38::i;:::-;4954:240;:::o;3091:19:0:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;5910:378:7:-;4472:22;;:27;6021:20;;;;;;6071:95;;-1:-1:-1;;;6071:95:7;;;;;11049:25:9;;;6110:10:7;11128:18:9;;;11121:43;11180:18;;;11173:34;;;-1:-1:-1;;;;;11243:15:9;;11223:18;;;11216:43;6147:6:7;11275:19:9;;;11268:35;6155:10:7;11319:19:9;;;11312:35;6052:16:7;;;;6071:14;;6093:9;;11021:19:9;;6071:95:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6052:114;;6181:13;9637:5;;-1:-1:-1;;;;;9637:5:7;9629:28;;;9559:106;6181:13;6177:69;;;6211:5;;:23;;-1:-1:-1;;;6211:23:7;;-1:-1:-1;;;;;1659:32:9;;;6211:23:7;;;1641:51:9;6211:5:7;;;;:13;;1614:18:9;;6211:23:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6177:69;6256:5;:24;;-1:-1:-1;;;;;;6256:24:7;-1:-1:-1;;;;;6256:24:7;;;;;;;;;;-1:-1:-1;;;5910:378:7:o;4851:140::-;4472:22;;4901:21;;;;;;4933:50;4940:10;4952:6;4960:22;;4933:6;:50::i;5202:234:4:-;5281:10;2949:20;5281:31;5273:40;;;;;;5328:35;5336:6;2717:2;5328:7;:35::i;:::-;5324:105;;;5379:38;5390:6;2717:2;5379:10;:38::i;2874:133:1:-;2943:4;2967:32;2983:7;2992:6;2967:15;:32::i;6296:206:7:-;6400:5;;-1:-1:-1;;;;;6400:5:7;6378:10;:28;6370:37;;;;;;6418:34;6425:5;6432:16;6442:5;6432:9;:16::i;:::-;6450:1;6418:6;:34::i;:::-;6463:31;6478:8;6488:5;6463:14;:31::i;8408:175:1:-;-1:-1:-1;;;;;8493:18:1;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:35;;;8544:31;;811:25:9;;;8544:31:1;;784:18:9;8544:31:1;;;;;;;;8408:175;;;:::o;8050:543:7:-;8131:16;8168:20;8178:9;8168;:20::i;:::-;8150:38;;:15;:38;:::i;:::-;8131:57;;8199:18;8220:19;:17;:19::i;:::-;8199:40;;8269:10;8258:8;:21;8250:30;;;;;;9637:5;;-1:-1:-1;;;;;9637:5:7;9629:28;8291:23;;;;;;8424:19;8437:6;8424:10;:19;:::i;:::-;8404:16;:8;8415:5;8404:16;:::i;:::-;:39;;8396:58;;;;-1:-1:-1;;;8396:58:7;;11816:2:9;8396:58:7;;;11798:21:9;11855:1;11835:18;;;11828:29;-1:-1:-1;;;11873:18:9;;;11866:36;11919:18;;8396:58:7;11614:329:9;8396:58:7;8465:36;8480:9;8491;8465:14;:36::i;:::-;8517:68;;;-1:-1:-1;;;;;12197:32:9;;12179:51;;12261:2;12246:18;;12239:34;;;12289:18;;;12282:34;;;12347:2;12332:18;;12325:34;;;8517:68:7;;12166:3:9;12151:19;8517:68:7;;;;;;;8120:473;;8050:543;;:::o;5731:287:1:-;5829:47;5850:6;5858:9;5869:6;5829:20;:47::i;:::-;-1:-1:-1;;;;;5887:17:1;;:9;:17;;;;;;;;;;:27;;5908:6;;5887:9;:27;;5908:6;;5887:27;:::i;:::-;;;;-1:-1:-1;5925:34:1;;-1:-1:-1;5941:9:1;5952:6;5925:15;:34::i;:::-;5992:9;-1:-1:-1;;;;;5975:35:1;5984:6;-1:-1:-1;;;;;5975:35:1;;6003:6;5975:35;;;;811:25:9;;799:2;784:18;;665:177;7708:260:1;7784:49;7805:7;7822:1;7826:6;7784:20;:49::i;:::-;7862:6;7846:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;7879:18:1;;:9;:18;;;;;;;;;;:28;;7901:6;;7879:9;:28;;7901:6;;7879:28;:::i;:::-;;;;-1:-1:-1;;7923:37:1;;811:25:9;;;7949:1:1;;-1:-1:-1;;;;;7923:37:1;;;;;799:2:9;784:18;7923:37:1;;;;;;;;7708:260;;:::o;3317:336:4:-;3406:7;-1:-1:-1;;;;;3430:31:4;;3456:4;3430:31;3426:220;;;-1:-1:-1;3485:1:4;;3317:336;-1:-1:-1;3317:336:4:o;3426:220::-;3526:23;;-1:-1:-1;;;;;3508:41:4;;;3526:23;;;;;3508:41;3504:142;;;-1:-1:-1;;3573:20:4;;;3317:336::o;3504:142::-;-1:-1:-1;3633:1:4;;3317:336;-1:-1:-1;3317:336:4:o;6698:270:1:-;6776:51;6805:1;6809:9;6820:6;6776:20;:51::i;:::-;6854:6;6838:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;6871:34:1;;-1:-1:-1;6887:9:1;6898:6;6871:15;:34::i;:::-;6921:39;;811:25:9;;;-1:-1:-1;;;;;6921:39:1;;;6938:1;;6921:39;;799:2:9;784:18;6921:39:1;665:177:9;4642:304:4;4728:4;4753:33;4768:9;4779:6;4753:14;:33::i;:::-;4745:42;;;;;;4802:47;4818:10;2717:2;4802:15;:47::i;:::-;4798:119;;;4865:40;;-1:-1:-1;;;4865:40:4;;4894:10;4865:40;;;1641:51:9;2949:20:4;;4865:28;;1614:18:9;;4865:40:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4934:4:4;4642:304;;;;:::o;3015:191:1:-;3094:4;;3134:12;:6;3143:3;3134:12;:::i;:::-;-1:-1:-1;;;;;3165:18:1;;:9;:18;;;;;;;;;;;3126:3;:21;;;;;;;;;3165:25;;;:33;;-1:-1:-1;;3015:191:1;;;;:::o;3214:152::-;3285:12;3308;:6;3317:3;3308:12;:::i;:::-;-1:-1:-1;;;;;3332:18:1;;;;:9;:18;;;;;;;;;;:26;;3300:3;:21;;;;;;;;3332:26;;;;;;-1:-1:-1;;3214:152:1:o;5003:171:7:-;5086:20;5092:5;5099:6;5086:5;:20::i;:::-;5125:7;;-1:-1:-1;;;;;5125:7:7;:16;5142:5;5149:15;5158:6;5149;:15;:::i;:::-;5125:40;;-1:-1:-1;;;;;;5125:40:7;;;;;;;-1:-1:-1;;;;;12771:32:9;;;5125:40:7;;;12753:51:9;12820:18;;;12813:34;12726:18;;5125:40:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5117:49;;;;;;5003:171;;;:::o;6666:415::-;4472:22;;:27;6761:20;;;;;;6848:7;;6888:32;;-1:-1:-1;;;6888:32:7;;6914:4;6888:32;;;1641:51:9;-1:-1:-1;;;;;6848:7:7;;;;:16;;6865:21;;6848:7;;6888:17;;1614:18:9;;6888:32:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6848:73;;-1:-1:-1;;;;;;6848:73:7;;;;;;;-1:-1:-1;;;;;12771:32:9;;;6848:73:7;;;12753:51:9;12820:18;;;12813:34;12726:18;;6848:73:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6840:82;;;;;;6974:7;:28;;-1:-1:-1;;;;;;6974:28:7;-1:-1:-1;;;;;6974:28:7;;;;;2648:12:1;;7013:60:7;;7024:7;;:32;;-1:-1:-1;;;7024:32:7;;7050:4;7024:32;;;1641:51:9;-1:-1:-1;;;;;7024:7:7;;;;:17;;1614:18:9;;7024:32:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:48;;;;:::i;:::-;7013:10;:60::i;4898:193:0:-;5039:44;5066:4;5072:2;5076:6;5039:26;:44::i;6976:399:1:-;-1:-1:-1;;;;;7076:20:1;;7055:18;7076:20;;;;;;;;;;;;-1:-1:-1;;;;;;7129:26:1;;;7187:19;7200:6;7076:20;7187:19;:::i;:::-;7166:40;-1:-1:-1;;;;;;;7239:26:1;;7284;;;7276:47;;;;-1:-1:-1;;;7276:47:1;;13282:2:9;7276:47:1;;;13264:21:9;13321:1;13301:18;;;13294:29;-1:-1:-1;;;13339:18:9;;;13332:38;13387:18;;7276:47:1;13080:331:9;7276:47:1;-1:-1:-1;;;;;;7334:20:1;;;:9;:20;;;;;;;;;;:33;;;;-1:-1:-1;;;6976:399:1:o;3579:173::-;3665:4;3682:40;3692:10;3704:9;3715:6;3682:9;:40::i;4611:136:7:-;4685:1;4675:6;:11;;4667:30;;;;-1:-1:-1;;;4667:30:7;;13618:2:9;4667:30:7;;;13600:21:9;13657:1;13637:18;;;13630:29;-1:-1:-1;;;13675:18:9;;;13668:36;13721:18;;4667:30:7;13416:329:9;4667:30:7;4708:22;:31;4611:136::o;8996:555::-;9109:14;9118:4;9109:8;:14::i;:::-;:30;;;;9127:12;9136:2;9127:8;:12::i;:::-;9105:384;;;9637:5;;-1:-1:-1;;;;;9637:5:7;9629:28;9155:323;;9192:5;;:35;;-1:-1:-1;;;9192:35:7;;-1:-1:-1;;;;;10255:15:9;;;9192:35:7;;;10237:34:9;10307:15;;;10287:18;;;10280:43;10339:18;;;10332:34;;;9192:5:7;;;;:17;;10172:18:9;;9192:35:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5003:171;;;:::o;9155:323::-;9272:14;9281:4;9272:8;:14::i;:::-;9268:90;;;9310:28;9321:4;2465:1;9310:10;:28::i;:::-;9380:12;9389:2;9380:8;:12::i;:::-;9376:87;;;9417:26;9428:2;2465:1;9417:10;:26::i;8867:121::-;8923:4;8946:34;8962:5;2465:1;8946:15;:34::i;14:258:9:-;86:1;96:113;110:6;107:1;104:13;96:113;;;186:11;;;180:18;167:11;;;160:39;132:2;125:10;96:113;;;227:6;224:1;221:13;218:48;;;262:1;253:6;248:3;244:16;237:27;218:48;;14:258;;;:::o;277:383::-;426:2;415:9;408:21;389:4;458:6;452:13;501:6;496:2;485:9;481:18;474:34;517:66;576:6;571:2;560:9;556:18;551:2;543:6;539:15;517:66;:::i;:::-;644:2;623:15;-1:-1:-1;;619:29:9;604:45;;;;651:2;600:54;;277:383;-1:-1:-1;;277:383:9:o;847:131::-;-1:-1:-1;;;;;922:31:9;;912:42;;902:70;;968:1;965;958:12;983:315;1051:6;1059;1112:2;1100:9;1091:7;1087:23;1083:32;1080:52;;;1128:1;1125;1118:12;1080:52;1167:9;1154:23;1186:31;1211:5;1186:31;:::i;:::-;1236:5;1288:2;1273:18;;;;1260:32;;-1:-1:-1;;;983:315:9:o;1703:456::-;1780:6;1788;1796;1849:2;1837:9;1828:7;1824:23;1820:32;1817:52;;;1865:1;1862;1855:12;1817:52;1904:9;1891:23;1923:31;1948:5;1923:31;:::i;:::-;1973:5;-1:-1:-1;2030:2:9;2015:18;;2002:32;2043:33;2002:32;2043:33;:::i;:::-;1703:456;;2095:7;;-1:-1:-1;;;2149:2:9;2134:18;;;;2121:32;;1703:456::o;2353:247::-;2412:6;2465:2;2453:9;2444:7;2440:23;2436:32;2433:52;;;2481:1;2478;2471:12;2433:52;2520:9;2507:23;2539:31;2564:5;2539:31;:::i;2605:794::-;2693:6;2701;2709;2717;2770:2;2758:9;2749:7;2745:23;2741:32;2738:52;;;2786:1;2783;2776:12;2738:52;2825:9;2812:23;2844:31;2869:5;2844:31;:::i;:::-;2894:5;-1:-1:-1;2946:2:9;2931:18;;2918:32;;-1:-1:-1;3001:2:9;2986:18;;2973:32;3024:18;3054:14;;;3051:34;;;3081:1;3078;3071:12;3051:34;3119:6;3108:9;3104:22;3094:32;;3164:7;3157:4;3153:2;3149:13;3145:27;3135:55;;3186:1;3183;3176:12;3135:55;3226:2;3213:16;3252:2;3244:6;3241:14;3238:34;;;3268:1;3265;3258:12;3238:34;3313:7;3308:2;3299:6;3295:2;3291:15;3287:24;3284:37;3281:57;;;3334:1;3331;3324:12;3281:57;2605:794;;;;-1:-1:-1;;3365:2:9;3357:11;;-1:-1:-1;;;2605:794:9:o;3404:180::-;3463:6;3516:2;3504:9;3495:7;3491:23;3487:32;3484:52;;;3532:1;3529;3522:12;3484:52;-1:-1:-1;3555:23:9;;3404:180;-1:-1:-1;3404:180:9:o;3811:388::-;3879:6;3887;3940:2;3928:9;3919:7;3915:23;3911:32;3908:52;;;3956:1;3953;3946:12;3908:52;3995:9;3982:23;4014:31;4039:5;4014:31;:::i;:::-;4064:5;-1:-1:-1;4121:2:9;4106:18;;4093:32;4134:33;4093:32;4134:33;:::i;:::-;4186:7;4176:17;;;3811:388;;;;;:::o;4657:383::-;4734:6;4742;4750;4803:2;4791:9;4782:7;4778:23;4774:32;4771:52;;;4819:1;4816;4809:12;4771:52;4855:9;4842:23;4832:33;;4912:2;4901:9;4897:18;4884:32;4874:42;;4966:2;4955:9;4951:18;4938:32;4979:31;5004:5;4979:31;:::i;:::-;5029:5;5019:15;;;4657:383;;;;;:::o;5274:412::-;5340:6;5348;5401:2;5389:9;5380:7;5376:23;5372:32;5369:52;;;5417:1;5414;5407:12;5369:52;5456:9;5443:23;5475:31;5500:5;5475:31;:::i;:::-;5525:5;-1:-1:-1;5582:2:9;5567:18;;5554:32;5630:4;5617:18;;5605:31;;5595:59;;5650:1;5647;5640:12;5691:127;5752:10;5747:3;5743:20;5740:1;5733:31;5783:4;5780:1;5773:15;5807:4;5804:1;5797:15;5823:884;5903:6;5956:2;5944:9;5935:7;5931:23;5927:32;5924:52;;;5972:1;5969;5962:12;5924:52;6005:9;5999:16;6034:18;6075:2;6067:6;6064:14;6061:34;;;6091:1;6088;6081:12;6061:34;6129:6;6118:9;6114:22;6104:32;;6174:7;6167:4;6163:2;6159:13;6155:27;6145:55;;6196:1;6193;6186:12;6145:55;6225:2;6219:9;6247:2;6243;6240:10;6237:36;;;6253:18;;:::i;:::-;6328:2;6322:9;6296:2;6382:13;;-1:-1:-1;;6378:22:9;;;6402:2;6374:31;6370:40;6358:53;;;6426:18;;;6446:22;;;6423:46;6420:72;;;6472:18;;:::i;:::-;6512:10;6508:2;6501:22;6547:2;6539:6;6532:18;6587:7;6582:2;6577;6573;6569:11;6565:20;6562:33;6559:53;;;6608:1;6605;6598:12;6559:53;6621:55;6673:2;6668;6660:6;6656:15;6651:2;6647;6643:11;6621:55;:::i;:::-;6695:6;5823:884;-1:-1:-1;;;;;;;5823:884:9:o;6712:442::-;6944:3;6982:6;6976:13;6998:53;7044:6;7039:3;7032:4;7024:6;7020:17;6998:53;:::i;:::-;-1:-1:-1;;;7073:16:9;;7098:21;;;-1:-1:-1;7146:1:9;7135:13;;6712:442;-1:-1:-1;6712:442:9:o;7159:449::-;7391:3;7429:6;7423:13;7445:53;7491:6;7486:3;7479:4;7471:6;7467:17;7445:53;:::i;:::-;-1:-1:-1;;;7520:16:9;;7545:27;;;-1:-1:-1;7599:2:9;7588:14;;7159:449;-1:-1:-1;7159:449:9:o;7613:184::-;7683:6;7736:2;7724:9;7715:7;7711:23;7707:32;7704:52;;;7752:1;7749;7742:12;7704:52;-1:-1:-1;7775:16:9;;7613:184;-1:-1:-1;7613:184:9:o;7802:127::-;7863:10;7858:3;7854:20;7851:1;7844:31;7894:4;7891:1;7884:15;7918:4;7915:1;7908:15;7934:128;7974:3;8005:1;8001:6;7998:1;7995:13;7992:39;;;8011:18;;:::i;:::-;-1:-1:-1;8047:9:9;;7934:128::o;8067:125::-;8107:4;8135:1;8132;8129:8;8126:34;;;8140:18;;:::i;:::-;-1:-1:-1;8177:9:9;;8067:125::o;8534:559::-;-1:-1:-1;;;;;8747:32:9;;8729:51;;8811:2;8796:18;;8789:34;;;8859:2;8854;8839:18;;8832:30;;;8878:18;;8871:34;;;8898:6;8948;8942:3;8927:19;;8914:49;9013:1;8983:22;;;9007:3;8979:32;;;8972:43;;;;9076:2;9055:15;;;-1:-1:-1;;9051:29:9;9036:45;9032:55;;8534:559;-1:-1:-1;;;8534:559:9:o;9098:277::-;9165:6;9218:2;9206:9;9197:7;9193:23;9189:32;9186:52;;;9234:1;9231;9224:12;9186:52;9266:9;9260:16;9319:5;9312:13;9305:21;9298:5;9295:32;9285:60;;9341:1;9338;9331:12;9380:168;9420:7;9486:1;9482;9478:6;9474:14;9471:1;9468:21;9463:1;9456:9;9449:17;9445:45;9442:71;;;9493:18;;:::i;:::-;-1:-1:-1;9533:9:9;;9380:168::o;9553:439::-;9785:3;9823:6;9817:13;9839:53;9885:6;9880:3;9873:4;9865:6;9861:17;9839:53;:::i;:::-;-1:-1:-1;;;9914:16:9;;9939:18;;;-1:-1:-1;9984:1:9;9973:13;;9553:439;-1:-1:-1;9553:439:9:o;10377:380::-;10456:1;10452:12;;;;10499;;;10520:61;;10574:4;10566:6;10562:17;10552:27;;10520:61;10627:2;10619:6;10616:14;10596:18;10593:38;10590:161;;;10673:10;10668:3;10664:20;10661:1;10654:31;10708:4;10705:1;10698:15;10736:4;10733:1;10726:15;11358:251;11428:6;11481:2;11469:9;11460:7;11456:23;11452:32;11449:52;;;11497:1;11494;11487:12;11449:52;11529:9;11523:16;11548:31;11573:5;11548:31;:::i;12370:204::-;12408:3;12444:4;12441:1;12437:12;12476:4;12473:1;12469:12;12511:3;12505:4;12501:14;12496:3;12493:23;12490:49;;;12519:18;;:::i;:::-;12555:13;;12370:204;-1:-1:-1;;;12370:204:9:o;12858:217::-;12898:1;12924;12914:132;;12968:10;12963:3;12959:20;12956:1;12949:31;13003:4;13000:1;12993:15;13031:4;13028:1;13021:15;12914:132;-1:-1:-1;13060:9:9;;12858:217::o",
    "sourcePath": "c:/Users/luziu/Documents/GitHub/contracts/src/DraggableShares.sol",
    "compiler": {
        "name": "solc",
        "version": "0.8.9+commit.e5eed63a"
    },
    "ast": {
        "absolutePath": "c:/Users/luziu/Documents/GitHub/contracts/src/DraggableShares.sol",
        "exportedSymbols": {
            "DraggableShares": [
                183
            ],
            "ERC20Draggable": [
                1688
            ],
            "ERC20Flaggable": [
                645
            ],
            "ERC20Recoverable": [
                1000
            ],
            "IDraggable": [
                1762
            ],
            "IERC20": [
                738
            ],
            "IERC677Receiver": [
                752
            ],
            "IOffer": [
                1714
            ],
            "IOfferFactory": [
                1732
            ],
            "IRecoverable": [
                1032
            ],
            "IRecoveryHub": [
                1050
            ],
            "IShares": [
                1699
            ]
        },
        "id": 184,
        "license": "LicenseRef-Aktionariat",
        "nodeType": "SourceUnit",
        "nodes": [
            {
                "id": 1,
                "literals": [
                    "solidity",
                    ">=",
                    "0.8"
                ],
                "nodeType": "PragmaDirective",
                "src": "1336:22:0"
            },
            {
                "absolutePath": "c:/Users/luziu/Documents/GitHub/contracts/src/recovery/ERC20Recoverable.sol",
                "file": "./recovery/ERC20Recoverable.sol",
                "id": 2,
                "nameLocation": "-1:-1:-1",
                "nodeType": "ImportDirective",
                "scope": 184,
                "sourceUnit": 1001,
                "src": "1362:41:0",
                "symbolAliases": [],
                "unitAlias": ""
            },
            {
                "absolutePath": "c:/Users/luziu/Documents/GitHub/contracts/src/sha/ERC20Draggable.sol",
                "file": "./sha/ERC20Draggable.sol",
                "id": 3,
                "nameLocation": "-1:-1:-1",
                "nodeType": "ImportDirective",
                "scope": 184,
                "sourceUnit": 1733,
                "src": "1405:34:0",
                "symbolAliases": [],
                "unitAlias": ""
            },
            {
                "abstract": false,
                "baseContracts": [
                    {
                        "baseName": {
                            "id": 5,
                            "name": "ERC20Recoverable",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 1000,
                            "src": "3049:16:0"
                        },
                        "id": 6,
                        "nodeType": "InheritanceSpecifier",
                        "src": "3049:16:0"
                    },
                    {
                        "baseName": {
                            "id": 7,
                            "name": "ERC20Draggable",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 1688,
                            "src": "3067:14:0"
                        },
                        "id": 8,
                        "nodeType": "InheritanceSpecifier",
                        "src": "3067:14:0"
                    }
                ],
                "canonicalName": "DraggableShares",
                "contractDependencies": [],
                "contractKind": "contract",
                "documentation": {
                    "id": 4,
                    "nodeType": "StructuredDocumentation",
                    "src": "1443:1574:0",
                    "text": " @title Draggable CompanyName AG Shares\n @author Luzius Meisser, luzius@aktionariat.com\n This is an ERC-20 token representing shares of CompanyName AG that are bound to\n a shareholder agreement that can be found at the URL defined in the constant 'terms'.\n The shareholder agreement is partially enforced through this smart contract. The agreement\n is designed to facilitate a complete acquisition of the firm even if a minority of shareholders\n disagree with the acquisition, to protect the interest of the minority shareholders by requiring\n the acquirer to offer the same conditions to everyone when acquiring the company, and to\n facilitate an update of the shareholder agreement even if a minority of the shareholders that\n are bound to this agreement disagree. The name \"draggable\" stems from the convention of calling\n the right to drag a minority along with a sale of the company \"drag-along\" rights. The name is\n chosen to ensure that token holders are aware that they are bound to such an agreement.\n The percentage of token holders that must agree with an update of the terms is defined by the\n constant UPDATE_QUORUM. The percentage of yes-votes that is needed to successfully complete an\n acquisition is defined in the constant ACQUISITION_QUORUM. Note that the update quorum is based\n on the total number of tokens in circulation. In contrast, the acquisition quorum is based on the\n number of votes cast during the voting period, not taking into account those who did not bother\n to vote."
                },
                "fullyImplemented": true,
                "id": 183,
                "linearizedBaseContracts": [
                    183,
                    1688,
                    1762,
                    752,
                    1000,
                    1032,
                    645,
                    738
                ],
                "name": "DraggableShares",
                "nameLocation": "3030:15:0",
                "nodeType": "ContractDefinition",
                "nodes": [
                    {
                        "constant": false,
                        "functionSelector": "d5025625",
                        "id": 10,
                        "mutability": "mutable",
                        "name": "terms",
                        "nameLocation": "3105:5:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 183,
                        "src": "3091:19:0",
                        "stateVariable": true,
                        "storageLocation": "default",
                        "typeDescriptions": {
                            "typeIdentifier": "t_string_storage",
                            "typeString": "string"
                        },
                        "typeName": {
                            "id": 9,
                            "name": "string",
                            "nodeType": "ElementaryTypeName",
                            "src": "3091:6:0",
                            "typeDescriptions": {
                                "typeIdentifier": "t_string_storage_ptr",
                                "typeString": "string"
                            }
                        },
                        "visibility": "public"
                    },
                    {
                        "body": {
                            "id": 33,
                            "nodeType": "Block",
                            "src": "3307:166:0",
                            "statements": [
                                {
                                    "expression": {
                                        "id": 31,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftHandSide": {
                                            "id": 29,
                                            "name": "terms",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 10,
                                            "src": "3318:5:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_string_storage",
                                                "typeString": "string storage ref"
                                            }
                                        },
                                        "nodeType": "Assignment",
                                        "operator": "=",
                                        "rightHandSide": {
                                            "id": 30,
                                            "name": "_terms",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 12,
                                            "src": "3326:6:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_string_memory_ptr",
                                                "typeString": "string memory"
                                            }
                                        },
                                        "src": "3318:14:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_string_storage",
                                            "typeString": "string storage ref"
                                        }
                                    },
                                    "id": 32,
                                    "nodeType": "ExpressionStatement",
                                    "src": "3318:14:0"
                                }
                            ]
                        },
                        "id": 34,
                        "implemented": true,
                        "kind": "constructor",
                        "modifiers": [
                            {
                                "arguments": [
                                    {
                                        "id": 21,
                                        "name": "wrappedToken",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 14,
                                        "src": "3245:12:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    {
                                        "id": 22,
                                        "name": "quorumBps",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 16,
                                        "src": "3259:9:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    {
                                        "id": 23,
                                        "name": "votePeriodSeconds",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 18,
                                        "src": "3270:17:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    }
                                ],
                                "id": 24,
                                "kind": "baseConstructorSpecifier",
                                "modifierName": {
                                    "id": 20,
                                    "name": "ERC20Draggable",
                                    "nodeType": "IdentifierPath",
                                    "referencedDeclaration": 1688,
                                    "src": "3230:14:0"
                                },
                                "nodeType": "ModifierInvocation",
                                "src": "3230:58:0"
                            },
                            {
                                "arguments": [
                                    {
                                        "hexValue": "30",
                                        "id": 26,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "3304:1:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_rational_0_by_1",
                                            "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                    }
                                ],
                                "id": 27,
                                "kind": "baseConstructorSpecifier",
                                "modifierName": {
                                    "id": 25,
                                    "name": "ERC20Flaggable",
                                    "nodeType": "IdentifierPath",
                                    "referencedDeclaration": 645,
                                    "src": "3289:14:0"
                                },
                                "nodeType": "ModifierInvocation",
                                "src": "3289:17:0"
                            }
                        ],
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "FunctionDefinition",
                        "parameters": {
                            "id": 19,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 12,
                                    "mutability": "mutable",
                                    "name": "_terms",
                                    "nameLocation": "3145:6:0",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 34,
                                    "src": "3131:20:0",
                                    "stateVariable": false,
                                    "storageLocation": "memory",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_string_memory_ptr",
                                        "typeString": "string"
                                    },
                                    "typeName": {
                                        "id": 11,
                                        "name": "string",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "3131:6:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_string_storage_ptr",
                                            "typeString": "string"
                                        }
                                    },
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 14,
                                    "mutability": "mutable",
                                    "name": "wrappedToken",
                                    "nameLocation": "3161:12:0",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 34,
                                    "src": "3153:20:0",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                    },
                                    "typeName": {
                                        "id": 13,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "3153:7:0",
                                        "stateMutability": "nonpayable",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 16,
                                    "mutability": "mutable",
                                    "name": "quorumBps",
                                    "nameLocation": "3183:9:0",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 34,
                                    "src": "3175:17:0",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                    },
                                    "typeName": {
                                        "id": 15,
                                        "name": "uint256",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "3175:7:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 18,
                                    "mutability": "mutable",
                                    "name": "votePeriodSeconds",
                                    "nameLocation": "3202:17:0",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 34,
                                    "src": "3194:25:0",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                    },
                                    "typeName": {
                                        "id": 17,
                                        "name": "uint256",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "3194:7:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "3130:90:0"
                        },
                        "returnParameters": {
                            "id": 28,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "3307:0:0"
                        },
                        "scope": 183,
                        "src": "3119:354:0",
                        "stateMutability": "nonpayable",
                        "virtual": false,
                        "visibility": "public"
                    },
                    {
                        "baseFunctions": [
                            653
                        ],
                        "body": {
                            "id": 67,
                            "nodeType": "Block",
                            "src": "3541:210:0",
                            "statements": [
                                {
                                    "condition": {
                                        "arguments": [],
                                        "expression": {
                                            "argumentTypes": [],
                                            "id": 40,
                                            "name": "isBinding",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1202,
                                            "src": "3556:9:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                                                "typeString": "function () view returns (bool)"
                                            }
                                        },
                                        "id": 41,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "3556:11:0",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                        }
                                    },
                                    "falseBody": {
                                        "id": 65,
                                        "nodeType": "Block",
                                        "src": "3656:88:0",
                                        "statements": [
                                            {
                                                "expression": {
                                                    "arguments": [
                                                        {
                                                            "arguments": [
                                                                {
                                                                    "arguments": [],
                                                                    "expression": {
                                                                        "argumentTypes": [],
                                                                        "expression": {
                                                                            "id": 58,
                                                                            "name": "wrapped",
                                                                            "nodeType": "Identifier",
                                                                            "overloadedDeclarations": [],
                                                                            "referencedDeclaration": 1069,
                                                                            "src": "3702:7:0",
                                                                            "typeDescriptions": {
                                                                                "typeIdentifier": "t_contract$_IERC20_$738",
                                                                                "typeString": "contract IERC20"
                                                                            }
                                                                        },
                                                                        "id": 59,
                                                                        "isConstant": false,
                                                                        "isLValue": false,
                                                                        "isPure": false,
                                                                        "lValueRequested": false,
                                                                        "memberName": "name",
                                                                        "nodeType": "MemberAccess",
                                                                        "referencedDeclaration": 653,
                                                                        "src": "3702:12:0",
                                                                        "typeDescriptions": {
                                                                            "typeIdentifier": "t_function_external_view$__$returns$_t_string_memory_ptr_$",
                                                                            "typeString": "function () view external returns (string memory)"
                                                                        }
                                                                    },
                                                                    "id": 60,
                                                                    "isConstant": false,
                                                                    "isLValue": false,
                                                                    "isPure": false,
                                                                    "kind": "functionCall",
                                                                    "lValueRequested": false,
                                                                    "names": [],
                                                                    "nodeType": "FunctionCall",
                                                                    "src": "3702:14:0",
                                                                    "tryCall": false,
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_string_memory_ptr",
                                                                        "typeString": "string memory"
                                                                    }
                                                                },
                                                                {
                                                                    "hexValue": "20285772617070656429",
                                                                    "id": 61,
                                                                    "isConstant": false,
                                                                    "isLValue": false,
                                                                    "isPure": true,
                                                                    "kind": "string",
                                                                    "lValueRequested": false,
                                                                    "nodeType": "Literal",
                                                                    "src": "3718:12:0",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_stringliteral_00163387342fb3f3305509f0070f97b67724ca153e0dde4b5fba6eb87d508c27",
                                                                        "typeString": "literal_string \" (Wrapped)\""
                                                                    },
                                                                    "value": " (Wrapped)"
                                                                }
                                                            ],
                                                            "expression": {
                                                                "argumentTypes": [
                                                                    {
                                                                        "typeIdentifier": "t_string_memory_ptr",
                                                                        "typeString": "string memory"
                                                                    },
                                                                    {
                                                                        "typeIdentifier": "t_stringliteral_00163387342fb3f3305509f0070f97b67724ca153e0dde4b5fba6eb87d508c27",
                                                                        "typeString": "literal_string \" (Wrapped)\""
                                                                    }
                                                                ],
                                                                "expression": {
                                                                    "id": 56,
                                                                    "name": "abi",
                                                                    "nodeType": "Identifier",
                                                                    "overloadedDeclarations": [],
                                                                    "referencedDeclaration": 4294967295,
                                                                    "src": "3685:3:0",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_magic_abi",
                                                                        "typeString": "abi"
                                                                    }
                                                                },
                                                                "id": 57,
                                                                "isConstant": false,
                                                                "isLValue": false,
                                                                "isPure": true,
                                                                "lValueRequested": false,
                                                                "memberName": "encodePacked",
                                                                "nodeType": "MemberAccess",
                                                                "src": "3685:16:0",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                                                    "typeString": "function () pure returns (bytes memory)"
                                                                }
                                                            },
                                                            "id": 62,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": false,
                                                            "kind": "functionCall",
                                                            "lValueRequested": false,
                                                            "names": [],
                                                            "nodeType": "FunctionCall",
                                                            "src": "3685:46:0",
                                                            "tryCall": false,
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_bytes_memory_ptr",
                                                                "typeString": "bytes memory"
                                                            }
                                                        }
                                                    ],
                                                    "expression": {
                                                        "argumentTypes": [
                                                            {
                                                                "typeIdentifier": "t_bytes_memory_ptr",
                                                                "typeString": "bytes memory"
                                                            }
                                                        ],
                                                        "id": 55,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": true,
                                                        "lValueRequested": false,
                                                        "nodeType": "ElementaryTypeNameExpression",
                                                        "src": "3678:6:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                                                            "typeString": "type(string storage pointer)"
                                                        },
                                                        "typeName": {
                                                            "id": 54,
                                                            "name": "string",
                                                            "nodeType": "ElementaryTypeName",
                                                            "src": "3678:6:0",
                                                            "typeDescriptions": {}
                                                        }
                                                    },
                                                    "id": 63,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "kind": "typeConversion",
                                                    "lValueRequested": false,
                                                    "names": [],
                                                    "nodeType": "FunctionCall",
                                                    "src": "3678:54:0",
                                                    "tryCall": false,
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_string_memory_ptr",
                                                        "typeString": "string memory"
                                                    }
                                                },
                                                "functionReturnParameters": 39,
                                                "id": 64,
                                                "nodeType": "Return",
                                                "src": "3671:61:0"
                                            }
                                        ]
                                    },
                                    "id": 66,
                                    "nodeType": "IfStatement",
                                    "src": "3552:192:0",
                                    "trueBody": {
                                        "id": 53,
                                        "nodeType": "Block",
                                        "src": "3568:82:0",
                                        "statements": [
                                            {
                                                "expression": {
                                                    "arguments": [
                                                        {
                                                            "arguments": [
                                                                {
                                                                    "arguments": [],
                                                                    "expression": {
                                                                        "argumentTypes": [],
                                                                        "expression": {
                                                                            "id": 46,
                                                                            "name": "wrapped",
                                                                            "nodeType": "Identifier",
                                                                            "overloadedDeclarations": [],
                                                                            "referencedDeclaration": 1069,
                                                                            "src": "3614:7:0",
                                                                            "typeDescriptions": {
                                                                                "typeIdentifier": "t_contract$_IERC20_$738",
                                                                                "typeString": "contract IERC20"
                                                                            }
                                                                        },
                                                                        "id": 47,
                                                                        "isConstant": false,
                                                                        "isLValue": false,
                                                                        "isPure": false,
                                                                        "lValueRequested": false,
                                                                        "memberName": "name",
                                                                        "nodeType": "MemberAccess",
                                                                        "referencedDeclaration": 653,
                                                                        "src": "3614:12:0",
                                                                        "typeDescriptions": {
                                                                            "typeIdentifier": "t_function_external_view$__$returns$_t_string_memory_ptr_$",
                                                                            "typeString": "function () view external returns (string memory)"
                                                                        }
                                                                    },
                                                                    "id": 48,
                                                                    "isConstant": false,
                                                                    "isLValue": false,
                                                                    "isPure": false,
                                                                    "kind": "functionCall",
                                                                    "lValueRequested": false,
                                                                    "names": [],
                                                                    "nodeType": "FunctionCall",
                                                                    "src": "3614:14:0",
                                                                    "tryCall": false,
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_string_memory_ptr",
                                                                        "typeString": "string memory"
                                                                    }
                                                                },
                                                                {
                                                                    "hexValue": "20534841",
                                                                    "id": 49,
                                                                    "isConstant": false,
                                                                    "isLValue": false,
                                                                    "isPure": true,
                                                                    "kind": "string",
                                                                    "lValueRequested": false,
                                                                    "nodeType": "Literal",
                                                                    "src": "3630:6:0",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_stringliteral_6f209a0b4773ef78eda727953ae917d713eaebd0fd26a465e1ec4589e694a40a",
                                                                        "typeString": "literal_string \" SHA\""
                                                                    },
                                                                    "value": " SHA"
                                                                }
                                                            ],
                                                            "expression": {
                                                                "argumentTypes": [
                                                                    {
                                                                        "typeIdentifier": "t_string_memory_ptr",
                                                                        "typeString": "string memory"
                                                                    },
                                                                    {
                                                                        "typeIdentifier": "t_stringliteral_6f209a0b4773ef78eda727953ae917d713eaebd0fd26a465e1ec4589e694a40a",
                                                                        "typeString": "literal_string \" SHA\""
                                                                    }
                                                                ],
                                                                "expression": {
                                                                    "id": 44,
                                                                    "name": "abi",
                                                                    "nodeType": "Identifier",
                                                                    "overloadedDeclarations": [],
                                                                    "referencedDeclaration": 4294967295,
                                                                    "src": "3597:3:0",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_magic_abi",
                                                                        "typeString": "abi"
                                                                    }
                                                                },
                                                                "id": 45,
                                                                "isConstant": false,
                                                                "isLValue": false,
                                                                "isPure": true,
                                                                "lValueRequested": false,
                                                                "memberName": "encodePacked",
                                                                "nodeType": "MemberAccess",
                                                                "src": "3597:16:0",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                                                    "typeString": "function () pure returns (bytes memory)"
                                                                }
                                                            },
                                                            "id": 50,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": false,
                                                            "kind": "functionCall",
                                                            "lValueRequested": false,
                                                            "names": [],
                                                            "nodeType": "FunctionCall",
                                                            "src": "3597:40:0",
                                                            "tryCall": false,
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_bytes_memory_ptr",
                                                                "typeString": "bytes memory"
                                                            }
                                                        }
                                                    ],
                                                    "expression": {
                                                        "argumentTypes": [
                                                            {
                                                                "typeIdentifier": "t_bytes_memory_ptr",
                                                                "typeString": "bytes memory"
                                                            }
                                                        ],
                                                        "id": 43,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": true,
                                                        "lValueRequested": false,
                                                        "nodeType": "ElementaryTypeNameExpression",
                                                        "src": "3590:6:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                                                            "typeString": "type(string storage pointer)"
                                                        },
                                                        "typeName": {
                                                            "id": 42,
                                                            "name": "string",
                                                            "nodeType": "ElementaryTypeName",
                                                            "src": "3590:6:0",
                                                            "typeDescriptions": {}
                                                        }
                                                    },
                                                    "id": 51,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "kind": "typeConversion",
                                                    "lValueRequested": false,
                                                    "names": [],
                                                    "nodeType": "FunctionCall",
                                                    "src": "3590:48:0",
                                                    "tryCall": false,
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_string_memory_ptr",
                                                        "typeString": "string memory"
                                                    }
                                                },
                                                "functionReturnParameters": 39,
                                                "id": 52,
                                                "nodeType": "Return",
                                                "src": "3583:55:0"
                                            }
                                        ]
                                    }
                                }
                            ]
                        },
                        "functionSelector": "06fdde03",
                        "id": 68,
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [],
                        "name": "name",
                        "nameLocation": "3490:4:0",
                        "nodeType": "FunctionDefinition",
                        "overrides": {
                            "id": 36,
                            "nodeType": "OverrideSpecifier",
                            "overrides": [],
                            "src": "3504:8:0"
                        },
                        "parameters": {
                            "id": 35,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "3494:2:0"
                        },
                        "returnParameters": {
                            "id": 39,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 38,
                                    "mutability": "mutable",
                                    "name": "",
                                    "nameLocation": "-1:-1:-1",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 68,
                                    "src": "3527:13:0",
                                    "stateVariable": false,
                                    "storageLocation": "memory",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_string_memory_ptr",
                                        "typeString": "string"
                                    },
                                    "typeName": {
                                        "id": 37,
                                        "name": "string",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "3527:6:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_string_storage_ptr",
                                            "typeString": "string"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "3526:15:0"
                        },
                        "scope": 183,
                        "src": "3481:270:0",
                        "stateMutability": "view",
                        "virtual": false,
                        "visibility": "public"
                    },
                    {
                        "baseFunctions": [
                            658
                        ],
                        "body": {
                            "id": 85,
                            "nodeType": "Block",
                            "src": "3821:125:0",
                            "statements": [
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "arguments": [
                                                    {
                                                        "arguments": [],
                                                        "expression": {
                                                            "argumentTypes": [],
                                                            "expression": {
                                                                "id": 78,
                                                                "name": "wrapped",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [],
                                                                "referencedDeclaration": 1069,
                                                                "src": "3915:7:0",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_contract$_IERC20_$738",
                                                                    "typeString": "contract IERC20"
                                                                }
                                                            },
                                                            "id": 79,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": false,
                                                            "lValueRequested": false,
                                                            "memberName": "symbol",
                                                            "nodeType": "MemberAccess",
                                                            "referencedDeclaration": 658,
                                                            "src": "3915:14:0",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_function_external_view$__$returns$_t_string_memory_ptr_$",
                                                                "typeString": "function () view external returns (string memory)"
                                                            }
                                                        },
                                                        "id": 80,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "kind": "functionCall",
                                                        "lValueRequested": false,
                                                        "names": [],
                                                        "nodeType": "FunctionCall",
                                                        "src": "3915:16:0",
                                                        "tryCall": false,
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_string_memory_ptr",
                                                            "typeString": "string memory"
                                                        }
                                                    },
                                                    {
                                                        "hexValue": "53",
                                                        "id": 81,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": true,
                                                        "kind": "string",
                                                        "lValueRequested": false,
                                                        "nodeType": "Literal",
                                                        "src": "3933:3:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_stringliteral_a9463b19d1148abedba3d6925530d4465b271ce2cc61f80b1a0a80fd73eab881",
                                                            "typeString": "literal_string \"S\""
                                                        },
                                                        "value": "S"
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_string_memory_ptr",
                                                            "typeString": "string memory"
                                                        },
                                                        {
                                                            "typeIdentifier": "t_stringliteral_a9463b19d1148abedba3d6925530d4465b271ce2cc61f80b1a0a80fd73eab881",
                                                            "typeString": "literal_string \"S\""
                                                        }
                                                    ],
                                                    "expression": {
                                                        "id": 76,
                                                        "name": "abi",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 4294967295,
                                                        "src": "3898:3:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_magic_abi",
                                                            "typeString": "abi"
                                                        }
                                                    },
                                                    "id": 77,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "lValueRequested": false,
                                                    "memberName": "encodePacked",
                                                    "nodeType": "MemberAccess",
                                                    "src": "3898:16:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                                        "typeString": "function () pure returns (bytes memory)"
                                                    }
                                                },
                                                "id": 82,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "3898:39:0",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bytes_memory_ptr",
                                                    "typeString": "bytes memory"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_bytes_memory_ptr",
                                                    "typeString": "bytes memory"
                                                }
                                            ],
                                            "id": 75,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "lValueRequested": false,
                                            "nodeType": "ElementaryTypeNameExpression",
                                            "src": "3891:6:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                                                "typeString": "type(string storage pointer)"
                                            },
                                            "typeName": {
                                                "id": 74,
                                                "name": "string",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "3891:6:0",
                                                "typeDescriptions": {}
                                            }
                                        },
                                        "id": 83,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "typeConversion",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "3891:47:0",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_string_memory_ptr",
                                            "typeString": "string memory"
                                        }
                                    },
                                    "functionReturnParameters": 73,
                                    "id": 84,
                                    "nodeType": "Return",
                                    "src": "3884:54:0"
                                }
                            ]
                        },
                        "functionSelector": "95d89b41",
                        "id": 86,
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [],
                        "name": "symbol",
                        "nameLocation": "3768:6:0",
                        "nodeType": "FunctionDefinition",
                        "overrides": {
                            "id": 70,
                            "nodeType": "OverrideSpecifier",
                            "overrides": [],
                            "src": "3784:8:0"
                        },
                        "parameters": {
                            "id": 69,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "3774:2:0"
                        },
                        "returnParameters": {
                            "id": 73,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 72,
                                    "mutability": "mutable",
                                    "name": "",
                                    "nameLocation": "-1:-1:-1",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 86,
                                    "src": "3807:13:0",
                                    "stateVariable": false,
                                    "storageLocation": "memory",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_string_memory_ptr",
                                        "typeString": "string"
                                    },
                                    "typeName": {
                                        "id": 71,
                                        "name": "string",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "3807:6:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_string_storage_ptr",
                                            "typeString": "string"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "3806:15:0"
                        },
                        "scope": 183,
                        "src": "3759:187:0",
                        "stateMutability": "view",
                        "virtual": false,
                        "visibility": "public"
                    },
                    {
                        "baseFunctions": [
                            333,
                            894
                        ],
                        "body": {
                            "id": 104,
                            "nodeType": "Block",
                            "src": "4072:51:0",
                            "statements": [
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "id": 100,
                                                "name": "to",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 88,
                                                "src": "4105:2:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            {
                                                "id": 101,
                                                "name": "value",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 90,
                                                "src": "4109:5:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                },
                                                {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            ],
                                            "expression": {
                                                "id": 98,
                                                "name": "super",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 4294967271,
                                                "src": "4090:5:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_type$_t_super$_DraggableShares_$183_$",
                                                    "typeString": "type(contract super DraggableShares)"
                                                }
                                            },
                                            "id": 99,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "transfer",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 894,
                                            "src": "4090:14:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                                "typeString": "function (address,uint256) returns (bool)"
                                            }
                                        },
                                        "id": 102,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "4090:25:0",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                        }
                                    },
                                    "functionReturnParameters": 97,
                                    "id": 103,
                                    "nodeType": "Return",
                                    "src": "4083:32:0"
                                }
                            ]
                        },
                        "functionSelector": "a9059cbb",
                        "id": 105,
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [],
                        "name": "transfer",
                        "nameLocation": "3963:8:0",
                        "nodeType": "FunctionDefinition",
                        "overrides": {
                            "id": 94,
                            "nodeType": "OverrideSpecifier",
                            "overrides": [
                                {
                                    "id": 92,
                                    "name": "ERC20Recoverable",
                                    "nodeType": "IdentifierPath",
                                    "referencedDeclaration": 1000,
                                    "src": "4016:16:0"
                                },
                                {
                                    "id": 93,
                                    "name": "ERC20Flaggable",
                                    "nodeType": "IdentifierPath",
                                    "referencedDeclaration": 645,
                                    "src": "4034:14:0"
                                }
                            ],
                            "src": "4007:42:0"
                        },
                        "parameters": {
                            "id": 91,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 88,
                                    "mutability": "mutable",
                                    "name": "to",
                                    "nameLocation": "3980:2:0",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 105,
                                    "src": "3972:10:0",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                    },
                                    "typeName": {
                                        "id": 87,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "3972:7:0",
                                        "stateMutability": "nonpayable",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 90,
                                    "mutability": "mutable",
                                    "name": "value",
                                    "nameLocation": "3992:5:0",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 105,
                                    "src": "3984:13:0",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                    },
                                    "typeName": {
                                        "id": 89,
                                        "name": "uint256",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "3984:7:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "3971:27:0"
                        },
                        "returnParameters": {
                            "id": 97,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 96,
                                    "mutability": "mutable",
                                    "name": "",
                                    "nameLocation": "-1:-1:-1",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 105,
                                    "src": "4066:4:0",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                    },
                                    "typeName": {
                                        "id": 95,
                                        "name": "bool",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "4066:4:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "4065:6:0"
                        },
                        "scope": 183,
                        "src": "3954:169:0",
                        "stateMutability": "nonpayable",
                        "virtual": true,
                        "visibility": "public"
                    },
                    {
                        "baseFunctions": [
                            859
                        ],
                        "body": {
                            "id": 114,
                            "nodeType": "Block",
                            "src": "4197:37:0",
                            "statements": [
                                {
                                    "expression": {
                                        "arguments": [],
                                        "expression": {
                                            "argumentTypes": [],
                                            "id": 111,
                                            "name": "getOracle",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [
                                                1455
                                            ],
                                            "referencedDeclaration": 1455,
                                            "src": "4215:9:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                                "typeString": "function () view returns (address)"
                                            }
                                        },
                                        "id": 112,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "4215:11:0",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "functionReturnParameters": 110,
                                    "id": 113,
                                    "nodeType": "Return",
                                    "src": "4208:18:0"
                                }
                            ]
                        },
                        "functionSelector": "2a0a4ed5",
                        "id": 115,
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [],
                        "name": "getClaimDeleter",
                        "nameLocation": "4140:15:0",
                        "nodeType": "FunctionDefinition",
                        "overrides": {
                            "id": 107,
                            "nodeType": "OverrideSpecifier",
                            "overrides": [],
                            "src": "4170:8:0"
                        },
                        "parameters": {
                            "id": 106,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "4155:2:0"
                        },
                        "returnParameters": {
                            "id": 110,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 109,
                                    "mutability": "mutable",
                                    "name": "",
                                    "nameLocation": "-1:-1:-1",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 115,
                                    "src": "4188:7:0",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                    },
                                    "typeName": {
                                        "id": 108,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "4188:7:0",
                                        "stateMutability": "nonpayable",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "4187:9:0"
                        },
                        "scope": 183,
                        "src": "4131:103:0",
                        "stateMutability": "view",
                        "virtual": false,
                        "visibility": "public"
                    },
                    {
                        "baseFunctions": [
                            808
                        ],
                        "body": {
                            "id": 160,
                            "nodeType": "Block",
                            "src": "4332:558:0",
                            "statements": [
                                {
                                    "assignments": [
                                        124
                                    ],
                                    "declarations": [
                                        {
                                            "constant": false,
                                            "id": 124,
                                            "mutability": "mutable",
                                            "name": "rate",
                                            "nameLocation": "4351:4:0",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 160,
                                            "src": "4343:12:0",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            },
                                            "typeName": {
                                                "id": 123,
                                                "name": "uint256",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "4343:7:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "id": 129,
                                    "initialValue": {
                                        "arguments": [
                                            {
                                                "id": 127,
                                                "name": "collateralType",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 117,
                                                "src": "4382:14:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            ],
                                            "expression": {
                                                "id": 125,
                                                "name": "super",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 4294967271,
                                                "src": "4358:5:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_type$_t_super$_DraggableShares_$183_$",
                                                    "typeString": "type(contract super DraggableShares)"
                                                }
                                            },
                                            "id": 126,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "getCollateralRate",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 808,
                                            "src": "4358:23:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                                                "typeString": "function (address) view returns (uint256)"
                                            }
                                        },
                                        "id": 128,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "4358:39:0",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "nodeType": "VariableDeclarationStatement",
                                    "src": "4343:54:0"
                                },
                                {
                                    "condition": {
                                        "commonType": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        },
                                        "id": 132,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                            "id": 130,
                                            "name": "rate",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 124,
                                            "src": "4412:4:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": ">",
                                        "rightExpression": {
                                            "hexValue": "30",
                                            "id": 131,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "number",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "4419:1:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_rational_0_by_1",
                                                "typeString": "int_const 0"
                                            },
                                            "value": "0"
                                        },
                                        "src": "4412:8:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                        }
                                    },
                                    "falseBody": {
                                        "condition": {
                                            "commonType": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            },
                                            "id": 141,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "leftExpression": {
                                                "id": 136,
                                                "name": "collateralType",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 117,
                                                "src": "4470:14:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            "nodeType": "BinaryOperation",
                                            "operator": "==",
                                            "rightExpression": {
                                                "arguments": [
                                                    {
                                                        "id": 139,
                                                        "name": "wrapped",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 1069,
                                                        "src": "4496:7:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_contract$_IERC20_$738",
                                                            "typeString": "contract IERC20"
                                                        }
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_contract$_IERC20_$738",
                                                            "typeString": "contract IERC20"
                                                        }
                                                    ],
                                                    "id": 138,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "lValueRequested": false,
                                                    "nodeType": "ElementaryTypeNameExpression",
                                                    "src": "4488:7:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_type$_t_address_$",
                                                        "typeString": "type(address)"
                                                    },
                                                    "typeName": {
                                                        "id": 137,
                                                        "name": "address",
                                                        "nodeType": "ElementaryTypeName",
                                                        "src": "4488:7:0",
                                                        "typeDescriptions": {}
                                                    }
                                                },
                                                "id": 140,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "typeConversion",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "4488:16:0",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            "src": "4470:34:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_bool",
                                                "typeString": "bool"
                                            }
                                        },
                                        "falseBody": {
                                            "id": 157,
                                            "nodeType": "Block",
                                            "src": "4568:315:0",
                                            "statements": [
                                                {
                                                    "expression": {
                                                        "commonType": {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        },
                                                        "id": 155,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "leftExpression": {
                                                            "arguments": [
                                                                {
                                                                    "id": 152,
                                                                    "name": "collateralType",
                                                                    "nodeType": "Identifier",
                                                                    "overloadedDeclarations": [],
                                                                    "referencedDeclaration": 117,
                                                                    "src": "4831:14:0",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_address",
                                                                        "typeString": "address"
                                                                    }
                                                                }
                                                            ],
                                                            "expression": {
                                                                "argumentTypes": [
                                                                    {
                                                                        "typeIdentifier": "t_address",
                                                                        "typeString": "address"
                                                                    }
                                                                ],
                                                                "expression": {
                                                                    "arguments": [
                                                                        {
                                                                            "arguments": [
                                                                                {
                                                                                    "id": 148,
                                                                                    "name": "wrapped",
                                                                                    "nodeType": "Identifier",
                                                                                    "overloadedDeclarations": [],
                                                                                    "referencedDeclaration": 1069,
                                                                                    "src": "4803:7:0",
                                                                                    "typeDescriptions": {
                                                                                        "typeIdentifier": "t_contract$_IERC20_$738",
                                                                                        "typeString": "contract IERC20"
                                                                                    }
                                                                                }
                                                                            ],
                                                                            "expression": {
                                                                                "argumentTypes": [
                                                                                    {
                                                                                        "typeIdentifier": "t_contract$_IERC20_$738",
                                                                                        "typeString": "contract IERC20"
                                                                                    }
                                                                                ],
                                                                                "id": 147,
                                                                                "isConstant": false,
                                                                                "isLValue": false,
                                                                                "isPure": true,
                                                                                "lValueRequested": false,
                                                                                "nodeType": "ElementaryTypeNameExpression",
                                                                                "src": "4795:7:0",
                                                                                "typeDescriptions": {
                                                                                    "typeIdentifier": "t_type$_t_address_$",
                                                                                    "typeString": "type(address)"
                                                                                },
                                                                                "typeName": {
                                                                                    "id": 146,
                                                                                    "name": "address",
                                                                                    "nodeType": "ElementaryTypeName",
                                                                                    "src": "4795:7:0",
                                                                                    "typeDescriptions": {}
                                                                                }
                                                                            },
                                                                            "id": 149,
                                                                            "isConstant": false,
                                                                            "isLValue": false,
                                                                            "isPure": false,
                                                                            "kind": "typeConversion",
                                                                            "lValueRequested": false,
                                                                            "names": [],
                                                                            "nodeType": "FunctionCall",
                                                                            "src": "4795:16:0",
                                                                            "tryCall": false,
                                                                            "typeDescriptions": {
                                                                                "typeIdentifier": "t_address",
                                                                                "typeString": "address"
                                                                            }
                                                                        }
                                                                    ],
                                                                    "expression": {
                                                                        "argumentTypes": [
                                                                            {
                                                                                "typeIdentifier": "t_address",
                                                                                "typeString": "address"
                                                                            }
                                                                        ],
                                                                        "id": 145,
                                                                        "name": "IRecoverable",
                                                                        "nodeType": "Identifier",
                                                                        "overloadedDeclarations": [],
                                                                        "referencedDeclaration": 1032,
                                                                        "src": "4782:12:0",
                                                                        "typeDescriptions": {
                                                                            "typeIdentifier": "t_type$_t_contract$_IRecoverable_$1032_$",
                                                                            "typeString": "type(contract IRecoverable)"
                                                                        }
                                                                    },
                                                                    "id": 150,
                                                                    "isConstant": false,
                                                                    "isLValue": false,
                                                                    "isPure": false,
                                                                    "kind": "typeConversion",
                                                                    "lValueRequested": false,
                                                                    "names": [],
                                                                    "nodeType": "FunctionCall",
                                                                    "src": "4782:30:0",
                                                                    "tryCall": false,
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_contract$_IRecoverable_$1032",
                                                                        "typeString": "contract IRecoverable"
                                                                    }
                                                                },
                                                                "id": 151,
                                                                "isConstant": false,
                                                                "isLValue": false,
                                                                "isPure": false,
                                                                "lValueRequested": false,
                                                                "memberName": "getCollateralRate",
                                                                "nodeType": "MemberAccess",
                                                                "referencedDeclaration": 1024,
                                                                "src": "4782:48:0",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                                                    "typeString": "function (address) view external returns (uint256)"
                                                                }
                                                            },
                                                            "id": 153,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": false,
                                                            "kind": "functionCall",
                                                            "lValueRequested": false,
                                                            "names": [],
                                                            "nodeType": "FunctionCall",
                                                            "src": "4782:64:0",
                                                            "tryCall": false,
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_uint256",
                                                                "typeString": "uint256"
                                                            }
                                                        },
                                                        "nodeType": "BinaryOperation",
                                                        "operator": "*",
                                                        "rightExpression": {
                                                            "id": 154,
                                                            "name": "unwrapConversionFactor",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 1081,
                                                            "src": "4849:22:0",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_uint256",
                                                                "typeString": "uint256"
                                                            }
                                                        },
                                                        "src": "4782:89:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        }
                                                    },
                                                    "functionReturnParameters": 122,
                                                    "id": 156,
                                                    "nodeType": "Return",
                                                    "src": "4775:96:0"
                                                }
                                            ]
                                        },
                                        "id": 158,
                                        "nodeType": "IfStatement",
                                        "src": "4466:417:0",
                                        "trueBody": {
                                            "id": 144,
                                            "nodeType": "Block",
                                            "src": "4506:56:0",
                                            "statements": [
                                                {
                                                    "expression": {
                                                        "id": 142,
                                                        "name": "unwrapConversionFactor",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 1081,
                                                        "src": "4528:22:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        }
                                                    },
                                                    "functionReturnParameters": 122,
                                                    "id": 143,
                                                    "nodeType": "Return",
                                                    "src": "4521:29:0"
                                                }
                                            ]
                                        }
                                    },
                                    "id": 159,
                                    "nodeType": "IfStatement",
                                    "src": "4408:475:0",
                                    "trueBody": {
                                        "id": 135,
                                        "nodeType": "Block",
                                        "src": "4422:38:0",
                                        "statements": [
                                            {
                                                "expression": {
                                                    "id": 133,
                                                    "name": "rate",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 124,
                                                    "src": "4444:4:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    }
                                                },
                                                "functionReturnParameters": 122,
                                                "id": 134,
                                                "nodeType": "Return",
                                                "src": "4437:11:0"
                                            }
                                        ]
                                    }
                                }
                            ]
                        },
                        "functionSelector": "77e071ad",
                        "id": 161,
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [],
                        "name": "getCollateralRate",
                        "nameLocation": "4251:17:0",
                        "nodeType": "FunctionDefinition",
                        "overrides": {
                            "id": 119,
                            "nodeType": "OverrideSpecifier",
                            "overrides": [],
                            "src": "4305:8:0"
                        },
                        "parameters": {
                            "id": 118,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 117,
                                    "mutability": "mutable",
                                    "name": "collateralType",
                                    "nameLocation": "4277:14:0",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 161,
                                    "src": "4269:22:0",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                    },
                                    "typeName": {
                                        "id": 116,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "4269:7:0",
                                        "stateMutability": "nonpayable",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "4268:24:0"
                        },
                        "returnParameters": {
                            "id": 122,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 121,
                                    "mutability": "mutable",
                                    "name": "",
                                    "nameLocation": "-1:-1:-1",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 161,
                                    "src": "4323:7:0",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                    },
                                    "typeName": {
                                        "id": 120,
                                        "name": "uint256",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "4323:7:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "4322:9:0"
                        },
                        "scope": 183,
                        "src": "4242:648:0",
                        "stateMutability": "view",
                        "virtual": false,
                        "visibility": "public"
                    },
                    {
                        "baseFunctions": [
                            644,
                            1671
                        ],
                        "body": {
                            "id": 181,
                            "nodeType": "Block",
                            "src": "5028:63:0",
                            "statements": [
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "id": 176,
                                                "name": "from",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 163,
                                                "src": "5066:4:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            {
                                                "id": 177,
                                                "name": "to",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 165,
                                                "src": "5072:2:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            {
                                                "id": 178,
                                                "name": "amount",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 167,
                                                "src": "5076:6:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                },
                                                {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                },
                                                {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            ],
                                            "expression": {
                                                "id": 173,
                                                "name": "super",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 4294967271,
                                                "src": "5039:5:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_type$_t_super$_DraggableShares_$183_$",
                                                    "typeString": "type(contract super DraggableShares)"
                                                }
                                            },
                                            "id": 175,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "_beforeTokenTransfer",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 1671,
                                            "src": "5039:26:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                                                "typeString": "function (address,address,uint256)"
                                            }
                                        },
                                        "id": 179,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "5039:44:0",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 180,
                                    "nodeType": "ExpressionStatement",
                                    "src": "5039:44:0"
                                }
                            ]
                        },
                        "id": 182,
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [],
                        "name": "_beforeTokenTransfer",
                        "nameLocation": "4907:20:0",
                        "nodeType": "FunctionDefinition",
                        "overrides": {
                            "id": 171,
                            "nodeType": "OverrideSpecifier",
                            "overrides": [
                                {
                                    "id": 169,
                                    "name": "ERC20Draggable",
                                    "nodeType": "IdentifierPath",
                                    "referencedDeclaration": 1688,
                                    "src": "4987:14:0"
                                },
                                {
                                    "id": 170,
                                    "name": "ERC20Flaggable",
                                    "nodeType": "IdentifierPath",
                                    "referencedDeclaration": 645,
                                    "src": "5003:14:0"
                                }
                            ],
                            "src": "4978:40:0"
                        },
                        "parameters": {
                            "id": 168,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 163,
                                    "mutability": "mutable",
                                    "name": "from",
                                    "nameLocation": "4936:4:0",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 182,
                                    "src": "4928:12:0",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                    },
                                    "typeName": {
                                        "id": 162,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "4928:7:0",
                                        "stateMutability": "nonpayable",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 165,
                                    "mutability": "mutable",
                                    "name": "to",
                                    "nameLocation": "4950:2:0",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 182,
                                    "src": "4942:10:0",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                    },
                                    "typeName": {
                                        "id": 164,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "4942:7:0",
                                        "stateMutability": "nonpayable",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 167,
                                    "mutability": "mutable",
                                    "name": "amount",
                                    "nameLocation": "4962:6:0",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 182,
                                    "src": "4954:14:0",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                    },
                                    "typeName": {
                                        "id": 166,
                                        "name": "uint256",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "4954:7:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "4927:42:0"
                        },
                        "returnParameters": {
                            "id": 172,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "5028:0:0"
                        },
                        "scope": 183,
                        "src": "4898:193:0",
                        "stateMutability": "nonpayable",
                        "virtual": true,
                        "visibility": "internal"
                    }
                ],
                "scope": 184,
                "src": "3021:2075:0",
                "usedErrors": []
            }
        ],
        "src": "1336:3760:0"
    },
    "functionHashes": {
        "allowance(address,address)": "dd62ed3e",
        "approve(address,uint256)": "095ea7b3",
        "balanceOf(address)": "70a08231",
        "burn(uint256)": "42966c68",
        "claimPeriod()": "7dc2cd98",
        "customCollateralAddress()": "0c6f0e5d",
        "customCollateralRate()": "60918117",
        "decimals()": "313ce567",
        "deleteClaim(address)": "32a7ae95",
        "drag(address,address)": "fcb79a7e",
        "factory()": "c45a0155",
        "getClaimDeleter()": "2a0a4ed5",
        "getCollateralRate(address)": "77e071ad",
        "getOracle()": "833b1fce",
        "hasFlag(address,uint8)": "f5c0b95f",
        "isBinding()": "9e4b5745",
        "makeAcquisitionOffer(bytes32,uint256,address)": "dcc7d4ad",
        "migrate()": "8fd3ab80",
        "migrateWithExternalApproval(address,uint256)": "19845354",
        "name()": "06fdde03",
        "notifyClaimDeleted(address)": "e5b824ec",
        "notifyClaimMade(address)": "c18172c4",
        "notifyOfferEnded()": "32bc320b",
        "offer()": "c028df06",
        "onTokenTransfer(address,uint256,bytes)": "a4c0ed36",
        "quorum()": "1703a018",
        "recover(address,address)": "648bf774",
        "recovery()": "ddceafa9",
        "setOracle(address)": "7adbf973",
        "symbol()": "95d89b41",
        "terms()": "d5025625",
        "totalSupply()": "18160ddd",
        "totalVotingTokens()": "0a81b2de",
        "transfer(address,uint256)": "a9059cbb",
        "transferAndCall(address,uint256,bytes)": "4000aea0",
        "transferFrom(address,address,uint256)": "23b872dd",
        "unwrap(uint256)": "de0e9a3e",
        "unwrapConversionFactor()": "0832e470",
        "votePeriod()": "a7813587",
        "votingPower(address)": "c07473f6",
        "wrap(address,uint256)": "bf376c7a",
        "wrapped()": "50e70d48"
    },
    "gasEstimates": {
        "creation": {
            "codeDepositCost": "1633600",
            "executionCost": "infinite",
            "totalCost": "infinite"
        },
        "external": {
            "allowance(address,address)": "infinite",
            "approve(address,uint256)": "24612",
            "balanceOf(address)": "2675",
            "burn(uint256)": "infinite",
            "claimPeriod()": "238",
            "customCollateralAddress()": "2483",
            "customCollateralRate()": "2362",
            "decimals()": "2359",
            "deleteClaim(address)": "infinite",
            "drag(address,address)": "infinite",
            "factory()": "305",
            "getClaimDeleter()": "2503",
            "getCollateralRate(address)": "infinite",
            "getOracle()": "2399",
            "hasFlag(address,uint8)": "2952",
            "isBinding()": "2435",
            "makeAcquisitionOffer(bytes32,uint256,address)": "infinite",
            "migrate()": "infinite",
            "migrateWithExternalApproval(address,uint256)": "infinite",
            "name()": "infinite",
            "notifyClaimDeleted(address)": "infinite",
            "notifyClaimMade(address)": "infinite",
            "notifyOfferEnded()": "26607",
            "offer()": "2470",
            "onTokenTransfer(address,uint256,bytes)": "infinite",
            "quorum()": "infinite",
            "recover(address,address)": "infinite",
            "recovery()": "282",
            "setOracle(address)": "26860",
            "symbol()": "infinite",
            "terms()": "infinite",
            "totalSupply()": "2360",
            "totalVotingTokens()": "infinite",
            "transfer(address,uint256)": "infinite",
            "transferAndCall(address,uint256,bytes)": "infinite",
            "transferFrom(address,address,uint256)": "infinite",
            "unwrap(uint256)": "infinite",
            "unwrapConversionFactor()": "2364",
            "votePeriod()": "infinite",
            "votingPower(address)": "2649",
            "wrap(address,uint256)": "infinite",
            "wrapped()": "2382"
        },
        "internal": {
            "_beforeTokenTransfer(address,address,uint256)": "infinite"
        }
    }
}