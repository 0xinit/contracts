{
    "contractName": "DraggableShares",
    "abi": [
        {
            "inputs": [
                {
                    "internalType": "string",
                    "name": "_terms",
                    "type": "string"
                },
                {
                    "internalType": "address",
                    "name": "wrappedToken",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "quorum",
                    "type": "uint256"
                }
            ],
            "stateMutability": "nonpayable",
            "type": "constructor"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "owner",
                    "type": "address"
                },
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "spender",
                    "type": "address"
                },
                {
                    "indexed": false,
                    "internalType": "uint256",
                    "name": "value",
                    "type": "uint256"
                }
            ],
            "name": "Approval",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "lostAddress",
                    "type": "address"
                },
                {
                    "indexed": false,
                    "internalType": "uint256",
                    "name": "collateral",
                    "type": "uint256"
                }
            ],
            "name": "ClaimCleared",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "lostAddress",
                    "type": "address"
                },
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "claimant",
                    "type": "address"
                },
                {
                    "indexed": false,
                    "internalType": "uint256",
                    "name": "collateral",
                    "type": "uint256"
                }
            ],
            "name": "ClaimDeleted",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "lostAddress",
                    "type": "address"
                },
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "claimant",
                    "type": "address"
                },
                {
                    "indexed": false,
                    "internalType": "uint256",
                    "name": "balance",
                    "type": "uint256"
                }
            ],
            "name": "ClaimMade",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": false,
                    "internalType": "uint256",
                    "name": "newClaimPeriodInDays",
                    "type": "uint256"
                }
            ],
            "name": "ClaimPeriodChanged",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "lostAddress",
                    "type": "address"
                },
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "claimant",
                    "type": "address"
                },
                {
                    "indexed": false,
                    "internalType": "uint256",
                    "name": "collateral",
                    "type": "uint256"
                }
            ],
            "name": "ClaimResolved",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": false,
                    "internalType": "address",
                    "name": "newCustomCollateralAddress",
                    "type": "address"
                },
                {
                    "indexed": false,
                    "internalType": "uint256",
                    "name": "newCustomCollareralRate",
                    "type": "uint256"
                }
            ],
            "name": "CustomClaimCollateralChanged",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": false,
                    "internalType": "address",
                    "name": "newContractAddress",
                    "type": "address"
                }
            ],
            "name": "MigrationSucceeded",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "from",
                    "type": "address"
                },
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "to",
                    "type": "address"
                },
                {
                    "indexed": false,
                    "internalType": "uint256",
                    "name": "value",
                    "type": "uint256"
                }
            ],
            "name": "Transfer",
            "type": "event"
        },
        {
            "inputs": [],
            "name": "OFFER_FACTORY",
            "outputs": [
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "VALIDITY_PERIOD",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "VOTING_PERIOD",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "owner",
                    "type": "address"
                },
                {
                    "internalType": "address",
                    "name": "spender",
                    "type": "address"
                }
            ],
            "name": "allowance",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "spender",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "value",
                    "type": "uint256"
                }
            ],
            "name": "approve",
            "outputs": [
                {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool"
                }
            ],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "account",
                    "type": "address"
                }
            ],
            "name": "balanceOf",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "uint256",
                    "name": "amount",
                    "type": "uint256"
                }
            ],
            "name": "burn",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "claimPeriod",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address"
                }
            ],
            "name": "claims",
            "outputs": [
                {
                    "internalType": "address",
                    "name": "claimant",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "collateral",
                    "type": "uint256"
                },
                {
                    "internalType": "uint256",
                    "name": "timestamp",
                    "type": "uint256"
                },
                {
                    "internalType": "address",
                    "name": "currencyUsed",
                    "type": "address"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "clearClaim",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "customCollateralAddress",
            "outputs": [
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "customCollateralRate",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "decimals",
            "outputs": [
                {
                    "internalType": "uint8",
                    "name": "",
                    "type": "uint8"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "collateralType",
                    "type": "address"
                },
                {
                    "internalType": "address",
                    "name": "lostAddress",
                    "type": "address"
                }
            ],
            "name": "declareLost",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "spender",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "subtractedValue",
                    "type": "uint256"
                }
            ],
            "name": "decreaseAllowance",
            "outputs": [
                {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool"
                }
            ],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "lostAddress",
                    "type": "address"
                }
            ],
            "name": "deleteClaim",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "buyer",
                    "type": "address"
                },
                {
                    "internalType": "address",
                    "name": "currency",
                    "type": "address"
                }
            ],
            "name": "drag",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "getClaimDeleter",
            "outputs": [
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "lostAddress",
                    "type": "address"
                }
            ],
            "name": "getClaimant",
            "outputs": [
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "lostAddress",
                    "type": "address"
                }
            ],
            "name": "getCollateral",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "collateralType",
                    "type": "address"
                }
            ],
            "name": "getCollateralRate",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "lostAddress",
                    "type": "address"
                }
            ],
            "name": "getCollateralType",
            "outputs": [
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "lostAddress",
                    "type": "address"
                }
            ],
            "name": "getTimeStamp",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "spender",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "addedValue",
                    "type": "uint256"
                }
            ],
            "name": "increaseAllowance",
            "outputs": [
                {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool"
                }
            ],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "isBinding",
            "outputs": [
                {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "target",
                    "type": "address"
                }
            ],
            "name": "isRecoveryEnabled",
            "outputs": [
                {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "bytes32",
                    "name": "salt",
                    "type": "bytes32"
                },
                {
                    "internalType": "uint256",
                    "name": "pricePerShare",
                    "type": "uint256"
                },
                {
                    "internalType": "address",
                    "name": "currency",
                    "type": "address"
                }
            ],
            "name": "makeAcquisitionOffer",
            "outputs": [],
            "stateMutability": "payable",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "migrate",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "name",
            "outputs": [
                {
                    "internalType": "string",
                    "name": "",
                    "type": "string"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "notifyOfferEnded",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "offer",
            "outputs": [
                {
                    "internalType": "contract IOffer",
                    "name": "",
                    "type": "address"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "from",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "amount",
                    "type": "uint256"
                },
                {
                    "internalType": "bytes",
                    "name": "",
                    "type": "bytes"
                }
            ],
            "name": "onTokenTransfer",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "quorum",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "lostAddress",
                    "type": "address"
                }
            ],
            "name": "recover",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address"
                }
            ],
            "name": "recoveryDisabled",
            "outputs": [
                {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "bool",
                    "name": "enabled",
                    "type": "bool"
                }
            ],
            "name": "setRecoverable",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "symbol",
            "outputs": [
                {
                    "internalType": "string",
                    "name": "",
                    "type": "string"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "terms",
            "outputs": [
                {
                    "internalType": "string",
                    "name": "",
                    "type": "string"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "totalSupply",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "to",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "value",
                    "type": "uint256"
                }
            ],
            "name": "transfer",
            "outputs": [
                {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool"
                }
            ],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "recipient",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "amount",
                    "type": "uint256"
                },
                {
                    "internalType": "bytes",
                    "name": "data",
                    "type": "bytes"
                }
            ],
            "name": "transferAndCall",
            "outputs": [
                {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool"
                }
            ],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "sender",
                    "type": "address"
                },
                {
                    "internalType": "address",
                    "name": "recipient",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "amount",
                    "type": "uint256"
                }
            ],
            "name": "transferFrom",
            "outputs": [
                {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool"
                }
            ],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "uint256",
                    "name": "amount",
                    "type": "uint256"
                }
            ],
            "name": "unwrap",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "unwrapConversionFactor",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "shareholder",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "amount",
                    "type": "uint256"
                }
            ],
            "name": "wrap",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "wrapped",
            "outputs": [
                {
                    "internalType": "contract IERC20",
                    "name": "",
                    "type": "address"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        }
    ],
    "metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_terms\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"wrappedToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"quorum\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"lostAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"collateral\",\"type\":\"uint256\"}],\"name\":\"ClaimCleared\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"lostAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"claimant\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"collateral\",\"type\":\"uint256\"}],\"name\":\"ClaimDeleted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"lostAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"claimant\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"name\":\"ClaimMade\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newClaimPeriodInDays\",\"type\":\"uint256\"}],\"name\":\"ClaimPeriodChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"lostAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"claimant\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"collateral\",\"type\":\"uint256\"}],\"name\":\"ClaimResolved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newCustomCollateralAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newCustomCollareralRate\",\"type\":\"uint256\"}],\"name\":\"CustomClaimCollateralChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newContractAddress\",\"type\":\"address\"}],\"name\":\"MigrationSucceeded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"OFFER_FACTORY\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"VALIDITY_PERIOD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"VOTING_PERIOD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimPeriod\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"claims\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"claimant\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"collateral\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"currencyUsed\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"clearClaim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"customCollateralAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"customCollateralRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"collateralType\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"lostAddress\",\"type\":\"address\"}],\"name\":\"declareLost\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"lostAddress\",\"type\":\"address\"}],\"name\":\"deleteClaim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"}],\"name\":\"drag\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getClaimDeleter\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"lostAddress\",\"type\":\"address\"}],\"name\":\"getClaimant\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"lostAddress\",\"type\":\"address\"}],\"name\":\"getCollateral\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"collateralType\",\"type\":\"address\"}],\"name\":\"getCollateralRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"lostAddress\",\"type\":\"address\"}],\"name\":\"getCollateralType\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"lostAddress\",\"type\":\"address\"}],\"name\":\"getTimeStamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isBinding\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"isRecoveryEnabled\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"pricePerShare\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"}],\"name\":\"makeAcquisitionOffer\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"notifyOfferEnded\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"offer\",\"outputs\":[{\"internalType\":\"contract IOffer\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onTokenTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"quorum\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"lostAddress\",\"type\":\"address\"}],\"name\":\"recover\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"recoveryDisabled\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"enabled\",\"type\":\"bool\"}],\"name\":\"setRecoverable\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"terms\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"unwrap\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unwrapConversionFactor\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"shareholder\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"wrap\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"wrapped\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Luzius Meisser, luzius@meissereconomics.com This is an ERC-20 token representing shares of CompanyName AG that are bound to a shareholder agreement that can be found at the URL defined in the constant 'terms'. The shareholder agreement is partially enforced through this smart contract. The agreement is designed to facilitate a complete acquisition of the firm even if a minority of shareholders disagree with the acquisition, to protect the interest of the minority shareholders by requiring the acquirer to offer the same conditions to everyone when acquiring the company, and to facilitate an update of the shareholder agreement even if a minority of the shareholders that are bound to this agreement disagree. The name \\\"draggable\\\" stems from the convention of calling the right to drag a minority along with a sale of the company \\\"drag-along\\\" rights. The name is chosen to ensure that token holders are aware that they are bound to such an agreement. The percentage of token holders that must agree with an update of the terms is defined by the constant UPDATE_QUORUM. The percentage of yes-votes that is needed to successfully complete an acquisition is defined in the constant ACQUISITION_QUORUM. Note that the update quorum is based on the total number of tokens in circulation. In contrast, the acquisition quorum is based on the number of votes cast during the voting period, not taking into account those who did not bother to vote.\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See `IERC20.allowance`.\"},\"approve(address,uint256)\":{\"details\":\"See `IERC20.approve`. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See `IERC20.balanceOf`.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to `approve` that can be used as a mitigation for problems described in `IERC20.approve`. Emits an `Approval` event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to `approve` that can be used as a mitigation for problems described in `IERC20.approve`. Emits an `Approval` event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"totalSupply()\":{\"details\":\"See `IERC20.totalSupply`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See `IERC20.transferFrom`. Emits an `Approval` event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of `ERC20`; Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `value`. - the caller must have allowance for `sender`'s tokens of at least `amount`.\"}},\"title\":\"Draggable CompanyName AG Shares\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"burn(uint256)\":{\"notice\":\"Burns both the token itself as well as the wrapped token! If you want to get out of the shareholder agreement, use unwrap after it has been deactivated by a majority vote or acquisition. Burning only works if wrapped token supports burning. Also, the exact meaning of this operation might depend on the circumstances. Burning and reussing the wrapped token does not free the sender from the legal obligations of the shareholder agreement.\"},\"clearClaim()\":{\"notice\":\"Clears a claim after the key has been found again and assigns the collateral to the \\\"lost\\\" address. This is the price an adverse claimer pays for filing a false claim and makes it risky to do so.\"},\"constructor\":{\"notice\":\"Designed to be used with the Crypto Franc as currency token. See also parent constructor.\"},\"declareLost(address,address)\":{\"notice\":\"Anyone can declare that the private key to a certain address was lost by calling declareLost providing a deposit/collateral. There are three possibilities of what can happen with the claim: 1) The claim period expires and the claimant can get the deposit and the shares back by calling recover 2) The \\\"lost\\\" private key is used at any time to call clearClaim. In that case, the claim is deleted and    the deposit sent to the shareholder (the owner of the private key). It is recommended to call recover    whenever someone transfers funds to let claims be resolved automatically when the \\\"lost\\\" private key is    used again. 3) The owner deletes the claim and assigns the deposit to the claimant. This is intended to be used to resolve    disputes. Generally, using this function implies that you have to trust the issuer of the tokens to handle    the situation well. As a rule of thumb, the contract owner should assume the owner of the lost address to be the    rightful owner of the deposit. It is highly recommended that the owner observes the claims made and informs the owners of the claimed addresses whenever a claim is made for their address (this of course is only possible if they are known to the owner, e.g. through a shareholder register). To prevent frontrunning attacks, a claim can only be made if the information revealed when calling \\\"declareLost\\\" was previously commited using the \\\"prepareClaim\\\" function.\"},\"deleteClaim(address)\":{\"notice\":\"This function is to be executed by the claim deleter only in case a dispute needs to be resolved manually.\"},\"getCollateralRate(address)\":{\"notice\":\"Returns the collateral rate for the given collateral type and 0 if that type of collateral is not accepted. By default, only the token itself is accepted at a rate of 1:1. Subclasses should override this method if they want to add additional types of collateral.\"},\"isBinding()\":{\"notice\":\"Indicates that the token holders are bound to the token terms and that: - Conversions back to the wrapped token (unwrap) are not allowed - The drag-along can be performed by making an according offer - They can be migrated to a new version of this contract in accordance with the terms\"},\"isRecoveryEnabled(address)\":{\"notice\":\"Some users might want to disable claims for their address completely. For example if they use a deep cold storage solution or paper wallet.\"},\"recover(address)\":{\"notice\":\"After the claim period has passed, the claimant can call this function to send the tokens on the lost address as well as the collateral to himself.\"},\"unwrap(uint256)\":{\"notice\":\"Decrease the number of drag-along tokens. The user gets back their shares in return \"},\"wrap(address,uint256)\":{\"notice\":\"Increases the number of drag-along tokens. Requires minter to deposit an equal amount of share tokens \"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"c:/Users/luziu/Documents/aktionariat/contracts/src/DraggableShares.sol\":\"DraggableShares\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"c:/Users/luziu/Documents/aktionariat/contracts/src/DraggableShares.sol\":{\"keccak256\":\"0xffc25e527d1df5f73564f66518fa09af2e31d60df833c3210effdafbc2fc452b\",\"license\":\"LicenseRef-Aktionariat\",\"urls\":[\"bzz-raw://88e423516f3ed745ed019307af93f38e90cd0178dfc5ca522b2cedd15eae8ba3\",\"dweb:/ipfs/QmeZbwudwVTyMzs9hatMHN6mtmd9fgvnV44brBCb3YvYRa\"]},\"c:/Users/luziu/Documents/aktionariat/contracts/src/ERC20.sol\":{\"keccak256\":\"0x7589205fed6098c2c1f39106f2d87ddcab37301d5f3f9ef0852340e39c058247\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://652fbfb982c5ef52e9e6addc8d24a1a7b6e0a817c04c78e65c74f80f5fa408ba\",\"dweb:/ipfs/QmPxsUqFZRo4wTnURhLsPALxsJ8JCvcfFuZ3hxPwT1wRiK\"]},\"c:/Users/luziu/Documents/aktionariat/contracts/src/ERC20Draggable.sol\":{\"keccak256\":\"0x196ded85b835da0294c6045f58ec2f180f0a4387676ed6ab0c9c92ec363d0301\",\"license\":\"LicenseRef-Aktionariat\",\"urls\":[\"bzz-raw://4e972ab7ba1f2cf40cde0491428df9832c3a4b62eafb0942ba50103074400382\",\"dweb:/ipfs/QmRzGUoLrJELUA1ru3Eqa6NDaJtnQ784fuRYrRCyWvYHzQ\"]},\"c:/Users/luziu/Documents/aktionariat/contracts/src/ERC20Recoverable.sol\":{\"keccak256\":\"0x0a386ed93c20d20f9249e62fe92bdcc90dda77ed6b0d465e04e2399cf533f795\",\"license\":\"LicenseRef-Aktionariat\",\"urls\":[\"bzz-raw://87cdadcbd7eaf9315dc257c0c20099b4de116dc3b28aa3a358fe8e7a096cb315\",\"dweb:/ipfs/QmYfCc9Sfg2xahwyBf37ekTMnoMDteB1GqS53QnpPidz3g\"]},\"c:/Users/luziu/Documents/aktionariat/contracts/src/IERC20.sol\":{\"keccak256\":\"0xdd9ef23be041b279c4815ae1483703e0532d8839865b8081e12955a52d4e148f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2eef9ae3fc010bd8012716c89852c245aacf07474f3a52b84280f9f7958210fe\",\"dweb:/ipfs/QmSsjJBfgFw8PzaBTaZwCLzHkqM6pfS6NDrrFysNkCbS2M\"]},\"c:/Users/luziu/Documents/aktionariat/contracts/src/IERC677Receiver.sol\":{\"keccak256\":\"0xa1be3ece738b7e5231cbdb0f5d95e33015f917f8b9326083960deeee34b78752\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f13ac395559850cbf6ca4a35fc04c8b3ebbff238895ad228f47041d6520c96d6\",\"dweb:/ipfs/QmaEXT6Zxoz6jYQEMv4PDVuxt7LUick6Y3ebhuxRooJamK\"]}},\"version\":1}",
    "bytecode": "608060405262ed4e006004556000600a553480156200001d57600080fd5b5060405162002993380380620029938339810160408190526200004091620001a7565b6003805460ff19169055600980546001600160a01b0319166001600160a01b038416908117909155600c829055604051636427ed9760e01b8152636427ed9790620000919060009060040162000294565b600060405180830381600087803b158015620000ac57600080fd5b505af1158015620000c1573d6000803e3d6000fd5b50508451620000da9250600d91506020860190620000e4565b50505050620002f2565b828054620000f2906200029f565b90600052602060002090601f01602090048101928262000116576000855562000161565b82601f106200013157805160ff191683800117855562000161565b8280016001018555821562000161579182015b828111156200016157825182559160200191906001019062000144565b506200016f92915062000173565b5090565b5b808211156200016f576000815560010162000174565b80516001600160a01b0381168114620001a257600080fd5b919050565b600080600060608486031215620001bc578283fd5b83516001600160401b0380821115620001d3578485fd5b818601915086601f830112620001e7578485fd5b815181811115620001fc57620001fc620002dc565b6040516020601f8301601f1916820181018481118382101715620002245762000224620002dc565b60405282825284830181018a10156200023b578788fd5b8793505b828410156200025e57848401810151828501820152928301926200023f565b828411156200026f57878184840101525b8197506200027f818a016200018a565b96505050505050604084015190509250925092565b901515815260200190565b600281046001821680620002b457607f821691505b60208210811415620002d657634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fd5b61269180620003026000396000f3fe60806040526004361061027d5760003560e01c806370a082311161014f578063b1610d7e116100c1578063dcc7d4ad1161007a578063dcc7d4ad1461070d578063dd62ed3e14610720578063de0e9a3e14610740578063eb470ebf14610760578063f466307514610780578063fcb79a7e146107955761027d565b8063b1610d7e1461065e578063b40e80d114610673578063bf376c7a14610693578063c028df06146106b3578063c6788bdd146106c8578063d5025625146106f85761027d565b80639b56d6c9116101135780639b56d6c9146105a95780639e4b5745146105c9578063a3ec1883146105de578063a457c2d7146105fe578063a4c0ed361461061e578063a9059cbb1461063e5761027d565b806370a082311461052a57806377e071ad1461054a5780637dc2cd981461056a5780638fd3ab801461057f57806395d89b41146105945761027d565b80632a0a4ed5116101f35780634000aea0116101ac5780634000aea01461048b57806342966c68146104ab57806350e70d48146104cb57806360918117146104e05780636427ed97146104f55780636b03ed5f146105155761027d565b80632a0a4ed5146103df578063313ce567146103f457806332a7ae951461041657806332bc320b14610436578063395093511461044b5780633bcc45ba1461046b5761027d565b80630cd865ec116102455780630cd865ec146103335780631703a0181461035557806318160ddd1461036a5780631e3b9de51461037f57806323b872dd1461039f57806326773ddd146103bf5761027d565b806306fdde03146102825780630832e470146102ad578063095ea7b3146102cf5780630c43cd88146102fc5780630c6f0e5d14610311575b600080fd5b34801561028e57600080fd5b506102976107b5565b6040516102a491906122c7565b60405180910390f35b3480156102b957600080fd5b506102c261085a565b6040516102a49190612526565b3480156102db57600080fd5b506102ef6102ea366004611f6c565b610860565b6040516102a4919061227d565b34801561030857600080fd5b506102c2610876565b34801561031d57600080fd5b5061032661087d565b6040516102a491906121b9565b34801561033f57600080fd5b5061035361034e366004611ebc565b61088c565b005b34801561036157600080fd5b506102c2610a9d565b34801561037657600080fd5b506102c2610aa3565b34801561038b57600080fd5b5061032661039a366004611ebc565b610aa9565b3480156103ab57600080fd5b506102ef6103ba366004611f2c565b610aca565b3480156103cb57600080fd5b506103536103da366004611ef4565b610b1c565b3480156103eb57600080fd5b50610326610d3a565b34801561040057600080fd5b50610409610dbc565b6040516102a4919061252f565b34801561042257600080fd5b50610353610431366004611ebc565b610dc5565b34801561044257600080fd5b50610353610fa0565b34801561045757600080fd5b506102ef610466366004611f6c565b610fc6565b34801561047757600080fd5b50610326610486366004611ebc565b610ffd565b34801561049757600080fd5b506102ef6104a6366004611f97565b61101e565b3480156104b757600080fd5b506103536104c636600461212e565b6110a1565b3480156104d757600080fd5b50610326611134565b3480156104ec57600080fd5b506102c2611143565b34801561050157600080fd5b5061035361051036600461201b565b611149565b34801561052157600080fd5b50610353611168565b34801561053657600080fd5b506102c2610545366004611ebc565b6112a3565b34801561055657600080fd5b506102c2610565366004611ebc565b6112be565b34801561057657600080fd5b506102c2611394565b34801561058b57600080fd5b5061035361139a565b3480156105a057600080fd5b50610297611438565b3480156105b557600080fd5b506102c26105c4366004611ebc565b6114c9565b3480156105d557600080fd5b506102ef6114e7565b3480156105ea57600080fd5b506102ef6105f9366004611ebc565b6114ee565b34801561060a57600080fd5b506102ef610619366004611f6c565b61150d565b34801561062a57600080fd5b50610353610639366004611f97565b611544565b34801561064a57600080fd5b506102ef610659366004611f6c565b61156b565b34801561066a57600080fd5b506102c261157e565b34801561067f57600080fd5b506102ef61068e366004611ebc565b611585565b34801561069f57600080fd5b506103536106ae366004611f6c565b61159a565b3480156106bf57600080fd5b50610326611637565b3480156106d457600080fd5b506106e86106e3366004611ebc565b611646565b6040516102a49493929190612252565b34801561070457600080fd5b50610297611678565b61035361071b366004612053565b611706565b34801561072c57600080fd5b506102c261073b366004611ef4565b61183e565b34801561074c57600080fd5b5061035361075b36600461212e565b611869565b34801561076c57600080fd5b506102c261077b366004611ebc565b61188b565b34801561078c57600080fd5b506103266118a9565b3480156107a157600080fd5b506103536107b0366004611ef4565b6118ae565b600954604080516306fdde0360e01b815290516060926001600160a01b0316916306fdde03916004808301926000929190829003018186803b1580156107fa57600080fd5b505afa15801561080e573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610836919081019061208b565b6040516020016108469190612187565b604051602081830303815290604052905090565b600a5481565b600061086d3384846118e3565b50600192915050565b6276a70081565b6007546001600160a01b031681565b6001600160a01b03808216600090815260056020908152604091829020825160808101845281548516815260018201549281018390526002820154938101939093526003015490921660608201819052909190816109055760405162461bcd60e51b81526004016108fc906123c1565b60405180910390fd5b82516001600160a01b0316331461092e5760405162461bcd60e51b81526004016108fc906122fa565b426004548460400151610941919061253d565b111561095f5760405162461bcd60e51b81526004016108fc90612331565b82516001600160a01b0380861660009081526005602052604080822080546001600160a01b0319908116825560018201849055600282019390935560030180549092169091555163a9059cbb60e01b81529083169063a9059cbb906109ca90849087906004016121f1565b602060405180830381600087803b1580156109e457600080fd5b505af11580156109f8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a1c9190612037565b610a385760405162461bcd60e51b81526004016108fc906123e9565b610a4b8582610a46886112a3565b61193e565b806001600160a01b0316856001600160a01b03167f52a5c2b28bc6eb9712d0ced43463103b486b13ccc9cda499fd3b2d7b6a74a8ee85604051610a8e9190612526565b60405180910390a35050505050565b600c5481565b60025490565b6001600160a01b03808216600090815260056020526040902054165b919050565b6000610ad784848461193e565b6001600160a01b038416600090815260016020908152604080832033808552925290912054610b12918691610b0d908690612594565b6118e3565b5060019392505050565b610b25816114ee565b610b415760405162461bcd60e51b81526004016108fc90612420565b6000610b4c836112be565b905060008111610b6e5760405162461bcd60e51b81526004016108fc90612391565b336000610b7a846112a3565b90506000610b888483612575565b90508582610ba85760405162461bcd60e51b81526004016108fc906124b8565b6001600160a01b03861660009081526005602052604090206001015415610be15760405162461bcd60e51b81526004016108fc90612455565b6040516323b872dd60e01b81526001600160a01b038216906323b872dd90610c11908790309087906004016121cd565b602060405180830381600087803b158015610c2b57600080fd5b505af1158015610c3f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c639190612037565b610c7f5760405162461bcd60e51b81526004016108fc906123e9565b604080516080810182526001600160a01b038087168083526020808401878152428587019081528d8516606087019081528d86166000818152600590955293889020965187549087166001600160a01b0319918216178855925160018801559051600287015551600390950180549590941694169390931790915591517f1982ca8958fc8a8176cb52be509260f4bc5af7ce04e1533711793f1c56dd535990610d29908790612526565b60405180910390a350505050505050565b60095460408051632a0a4ed560e01b815290516000926001600160a01b031691632a0a4ed5916004808301926020929190829003018186803b158015610d7f57600080fd5b505afa158015610d93573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610db79190611ed8565b905090565b60035460ff1681565b610dcd610d3a565b6001600160a01b0316336001600160a01b031614610dfd5760405162461bcd60e51b81526004016108fc906124ef565b6001600160a01b038082166000908152600560209081526040918290208251608081018452815485168152600182015492810183905260028201549381019390935260030154909216606082018190529091610e6b5760405162461bcd60e51b81526004016108fc906123c1565b6001600160a01b03808416600090815260056020908152604080832080546001600160a01b031990811682556001820185905560028201949094556003018054909316909255845190850151915163a9059cbb60e01b81529284169263a9059cbb92610eda92916004016121f1565b602060405180830381600087803b158015610ef457600080fd5b505af1158015610f08573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f2c9190612037565b610f485760405162461bcd60e51b81526004016108fc906123e9565b81600001516001600160a01b0316836001600160a01b03167fbb036e629a9f4c0897ee5d48440dfdb36f7e772117723a2ed603a6514244c2d58460200151604051610f939190612526565b60405180910390a3505050565b600b546001600160a01b0316331415610fc457600b80546001600160a01b03191690555b565b3360008181526001602090815260408083206001600160a01b0387168452909152812054909161086d918590610b0d90869061253d565b6001600160a01b039081166000908152600560205260409020600301541690565b60008061102b868661156b565b9050801561109857604051635260769b60e11b81526001600160a01b0387169063a4c0ed369061106590339089908990899060040161220a565b600060405180830381600087803b15801561107f57600080fd5b505af1158015611093573d6000803e3d6000fd5b505050505b95945050505050565b6110ab33826119fb565b60006110b56114e7565b6110c157600a546110c4565b60015b6009549091506001600160a01b03166342966c686110e28385612575565b6040518263ffffffff1660e01b81526004016110fe9190612526565b600060405180830381600087803b15801561111857600080fd5b505af115801561112c573d6000803e3d6000fd5b505050505050565b6009546001600160a01b031681565b60085481565b336000908152600660205260409020805460ff19169115919091179055565b3360009081526005602052604090206001015415610fc4573360008181526005602052604080822060018101805460038301805484546001600160a01b0319908116865593879055600290940195909555908216909355905163a9059cbb60e01b815291926001600160a01b0390911691829163a9059cbb916111f0919086906004016121f1565b602060405180830381600087803b15801561120a57600080fd5b505af115801561121e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112429190612037565b61125e5760405162461bcd60e51b81526004016108fc906123e9565b336001600160a01b03167f203627483d943880619f4b7e0cca21dbefd6204b4d85b124eb99540e17ba86dd836040516112979190612526565b60405180910390a25050565b6001600160a01b031660009081526020819052604090205490565b6000806112ca83611a95565b905080156112d9579050610ac5565b6009546001600160a01b03848116911614156112f9575050600a54610ac5565b600a546009546040516377e071ad60e01b81526001600160a01b03909116906377e071ad9061132c9087906004016121b9565b60206040518083038186803b15801561134457600080fd5b505afa158015611358573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061137c9190612146565b6113869190612575565b915050610ac5565b50919050565b60045481565b336113a3611ad7565b156113ad57600080fd5b6113b5610aa3565b6113c190611f40612575565b6113ca826112a3565b6113d690612710612575565b10156113f45760405162461bcd60e51b81526004016108fc9061248c565b6113fe8182611ae8565b7f3b6b79a09e9fd230e8591b65c97236bf7df7a604edf733db0658e66b0e6eb2a98160405161142d91906121b9565b60405180910390a150565b600954604080516395d89b4160e01b815290516060926001600160a01b0316916395d89b41916004808301926000929190829003018186803b15801561147d57600080fd5b505afa158015611491573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526114b9919081019061208b565b604051602001610846919061215e565b6001600160a01b031660009081526005602052604090206001015490565b600a541590565b6001600160a01b031660009081526006602052604090205460ff161590565b3360008181526001602090815260408083206001600160a01b0387168452909152812054909161086d918590610b0d908690612594565b6009546001600160a01b0316331461155b57600080fd5b6115658484611cb0565b50505050565b60006115778383611d51565b9392505050565b624f1a0081565b60066020526000908152604090205460ff1681565b6009546040516323b872dd60e01b81526001600160a01b03909116906323b872dd906115ce903390309086906004016121cd565b602060405180830381600087803b1580156115e857600080fd5b505af11580156115fc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116209190612037565b61162957600080fd5b6116338282611cb0565b5050565b600b546001600160a01b031681565b60056020526000908152604090208054600182015460028301546003909301546001600160a01b039283169391921684565b600d8054611685906125d7565b80601f01602080910402602001604051908101604052809291908181526020018280546116b1906125d7565b80156116fe5780601f106116d3576101008083540402835291602001916116fe565b820191906000526020600020905b8154815290600101906020018083116116e157829003601f168201915b505050505081565b61170e6114e7565b61171757600080fd5b600c5460405163eb57ed7b60e01b81526000918291829163eb57ed7b913491611754918a9133918b918b91624f1a00906276a70090600401612288565b6020604051808303818588803b15801561176d57600080fd5b505af1158015611781573d6000803e3d6000fd5b50505050506040513d601f19601f820116820180604052508101906117a69190611ed8565b90506117b0611ad7565b1561181857600b546040516306a169ed60e01b81526001600160a01b03909116906306a169ed906117e59084906004016121b9565b600060405180830381600087803b1580156117ff57600080fd5b505af1158015611813573d6000803e3d6000fd5b505050505b600b80546001600160a01b0319166001600160a01b039290921691909117905550505050565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6118716114e7565b1561187b57600080fd5b6118883382600a54611d81565b50565b6001600160a01b031660009081526005602052604090206002015490565b600081565b600b546001600160a01b031633146118c557600080fd5b6118d9826118d2846112a3565b6001611d81565b6116338183611ae8565b6001600160a01b0380841660008181526001602090815260408083209487168084529490915290819020849055517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92590610f93908590612526565b6001600160a01b03821661195157600080fd5b61195c838383611e24565b6001600160a01b03831660009081526020819052604081208054839290611984908490612594565b90915550506001600160a01b038216600090815260208190526040812080548392906119b190849061253d565b92505081905550816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610f939190612526565b611a0782600083611e24565b8060026000828254611a199190612594565b90915550506001600160a01b03821660009081526020819052604081208054839290611a46908490612594565b90915550506040516000906001600160a01b038416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90611a89908590612526565b60405180910390a35050565b60006001600160a01b038216301415611ab057506001610ac5565b6007546001600160a01b0383811691161415611acf5750600854610ac5565b506000610ac5565b600b546001600160a01b0316151590565b611af06114e7565b611af957600080fd5b6009546040516370a0823160e01b81526001600160a01b039091169063a9059cbb90839083906370a0823190611b339030906004016121b9565b60206040518083038186803b158015611b4b57600080fd5b505afa158015611b5f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611b839190612146565b6040518363ffffffff1660e01b8152600401611ba09291906121f1565b602060405180830381600087803b158015611bba57600080fd5b505af1158015611bce573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611bf29190612037565b611bfb57600080fd5b600980546001600160a01b0319166001600160a01b038416179055611633611c21610aa3565b6009546040516370a0823160e01b81526001600160a01b03909116906370a0823190611c519030906004016121b9565b60206040518083038186803b158015611c6957600080fd5b505afa158015611c7d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611ca19190612146565b611cab9190612555565b611e9c565b6001600160a01b038216611cc357600080fd5b611ccf60008383611e24565b8060026000828254611ce1919061253d565b90915550506001600160a01b03821660009081526020819052604081208054839290611d0e90849061253d565b90915550506040516001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90611a89908590612526565b6000611d5d8383611eaf565b611d795760405162461bcd60e51b81526004016108fc90612368565b61086d611168565b611d8b83836119fb565b6009546001600160a01b031663a9059cbb84611da78486612575565b6040518363ffffffff1660e01b8152600401611dc49291906121f1565b602060405180830381600087803b158015611dde57600080fd5b505af1158015611df2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e169190612037565b611e1f57600080fd5b505050565b611e2c611ad7565b15611e1f57600b5460405163e1a1810f60e01b81526001600160a01b039091169063e1a1810f90611e65908690869086906004016121cd565b600060405180830381600087803b158015611e7f57600080fd5b505af1158015611e93573d6000803e3d6000fd5b50505050505050565b6001811015611eaa57600080fd5b600a55565b600061086d33848461193e565b600060208284031215611ecd578081fd5b813561157781612638565b600060208284031215611ee9578081fd5b815161157781612638565b60008060408385031215611f06578081fd5b8235611f1181612638565b91506020830135611f2181612638565b809150509250929050565b600080600060608486031215611f40578081fd5b8335611f4b81612638565b92506020840135611f5b81612638565b929592945050506040919091013590565b60008060408385031215611f7e578182fd5b8235611f8981612638565b946020939093013593505050565b60008060008060608587031215611fac578081fd5b8435611fb781612638565b935060208501359250604085013567ffffffffffffffff80821115611fda578283fd5b818701915087601f830112611fed578283fd5b813581811115611ffb578384fd5b88602082850101111561200c578384fd5b95989497505060200194505050565b60006020828403121561202c578081fd5b81356115778161264d565b600060208284031215612048578081fd5b81516115778161264d565b600080600060608486031215612067578283fd5b8335925060208401359150604084013561208081612638565b809150509250925092565b60006020828403121561209c578081fd5b815167ffffffffffffffff808211156120b3578283fd5b818401915084601f8301126120c6578283fd5b8151818111156120d8576120d8612622565b604051601f8201601f1916810160200183811182821017156120fc576120fc612622565b604052818152838201602001871015612113578485fd5b6121248260208301602087016125ab565b9695505050505050565b60006020828403121561213f578081fd5b5035919050565b600060208284031215612157578081fd5b5051919050565b6000601160fa1b8252825161217a8160018501602087016125ab565b9190910160010192915050565b6000690223930b3b3b0b13632960b51b825282516121ac81600a8501602087016125ab565b91909101600a0192915050565b6001600160a01b0391909116815260200190565b6001600160a01b039384168152919092166020820152604081019190915260600190565b6001600160a01b03929092168252602082015260400190565b6001600160a01b0385168152602081018490526060604082018190528101829052600082846080840137818301608090810191909152601f909201601f191601019392505050565b6001600160a01b03948516815260208101939093526040830191909152909116606082015260800190565b901515815260200190565b9687526001600160a01b0395861660208801526040870194909452919093166060850152608084019290925260a083019190915260c082015260e00190565b60006020825282518060208401526122e68160408501602087016125ab565b601f01601f19169190910160400192915050565b6020808252601f908201527f4f6e6c7920636c61696d616e742063616e207265736f6c766520636c61696d00604082015260600190565b60208082526019908201527f436c61696d20706572696f64206e6f74206f7665722079657400000000000000604082015260600190565b6020808252600f908201526e151c985b9cd9995c8819985a5b1959608a1b604082015260600190565b602080825260169082015275155b9cdd5c1c1bdc9d19590818dbdb1b185d195c985b60521b604082015260600190565b6020808252600e908201526d139bc818db185a5b48199bdd5b9960921b604082015260600190565b6020808252601a908201527f436f6c6c61746572616c207472616e73666572206661696c6564000000000000604082015260600190565b6020808252818101527f436c61696d732064697361626c656420666f7220746869732061646472657373604082015260600190565b60208082526017908201527f4164647265737320616c726561647920636c61696d6564000000000000000000604082015260600190565b602080825260129082015271145d5bdc9d5b481b9bdd081c995858da195960721b604082015260600190565b6020808252601f908201527f436c61696d6564206164647265737320686f6c6473206e6f2073686172657300604082015260600190565b60208082526018908201527f596f752063616e6e6f742064656c65746520636c61696d730000000000000000604082015260600190565b90815260200190565b60ff91909116815260200190565b600082198211156125505761255061260c565b500190565b60008261257057634e487b7160e01b81526012600452602481fd5b500490565b600081600019048311821515161561258f5761258f61260c565b500290565b6000828210156125a6576125a661260c565b500390565b60005b838110156125c65781810151838201526020016125ae565b838111156115655750506000910152565b6002810460018216806125eb57607f821691505b6020821081141561138e57634e487b7160e01b600052602260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b038116811461188857600080fd5b801515811461188857600080fdfea2646970667358221220d70e035bd6bac64514f4b3031ab4453c2df0f2ec379b0ee87f147ddb478930fa64736f6c63430008000033",
    "deployedBytecode": "60806040526004361061027d5760003560e01c806370a082311161014f578063b1610d7e116100c1578063dcc7d4ad1161007a578063dcc7d4ad1461070d578063dd62ed3e14610720578063de0e9a3e14610740578063eb470ebf14610760578063f466307514610780578063fcb79a7e146107955761027d565b8063b1610d7e1461065e578063b40e80d114610673578063bf376c7a14610693578063c028df06146106b3578063c6788bdd146106c8578063d5025625146106f85761027d565b80639b56d6c9116101135780639b56d6c9146105a95780639e4b5745146105c9578063a3ec1883146105de578063a457c2d7146105fe578063a4c0ed361461061e578063a9059cbb1461063e5761027d565b806370a082311461052a57806377e071ad1461054a5780637dc2cd981461056a5780638fd3ab801461057f57806395d89b41146105945761027d565b80632a0a4ed5116101f35780634000aea0116101ac5780634000aea01461048b57806342966c68146104ab57806350e70d48146104cb57806360918117146104e05780636427ed97146104f55780636b03ed5f146105155761027d565b80632a0a4ed5146103df578063313ce567146103f457806332a7ae951461041657806332bc320b14610436578063395093511461044b5780633bcc45ba1461046b5761027d565b80630cd865ec116102455780630cd865ec146103335780631703a0181461035557806318160ddd1461036a5780631e3b9de51461037f57806323b872dd1461039f57806326773ddd146103bf5761027d565b806306fdde03146102825780630832e470146102ad578063095ea7b3146102cf5780630c43cd88146102fc5780630c6f0e5d14610311575b600080fd5b34801561028e57600080fd5b506102976107b5565b6040516102a491906122c7565b60405180910390f35b3480156102b957600080fd5b506102c261085a565b6040516102a49190612526565b3480156102db57600080fd5b506102ef6102ea366004611f6c565b610860565b6040516102a4919061227d565b34801561030857600080fd5b506102c2610876565b34801561031d57600080fd5b5061032661087d565b6040516102a491906121b9565b34801561033f57600080fd5b5061035361034e366004611ebc565b61088c565b005b34801561036157600080fd5b506102c2610a9d565b34801561037657600080fd5b506102c2610aa3565b34801561038b57600080fd5b5061032661039a366004611ebc565b610aa9565b3480156103ab57600080fd5b506102ef6103ba366004611f2c565b610aca565b3480156103cb57600080fd5b506103536103da366004611ef4565b610b1c565b3480156103eb57600080fd5b50610326610d3a565b34801561040057600080fd5b50610409610dbc565b6040516102a4919061252f565b34801561042257600080fd5b50610353610431366004611ebc565b610dc5565b34801561044257600080fd5b50610353610fa0565b34801561045757600080fd5b506102ef610466366004611f6c565b610fc6565b34801561047757600080fd5b50610326610486366004611ebc565b610ffd565b34801561049757600080fd5b506102ef6104a6366004611f97565b61101e565b3480156104b757600080fd5b506103536104c636600461212e565b6110a1565b3480156104d757600080fd5b50610326611134565b3480156104ec57600080fd5b506102c2611143565b34801561050157600080fd5b5061035361051036600461201b565b611149565b34801561052157600080fd5b50610353611168565b34801561053657600080fd5b506102c2610545366004611ebc565b6112a3565b34801561055657600080fd5b506102c2610565366004611ebc565b6112be565b34801561057657600080fd5b506102c2611394565b34801561058b57600080fd5b5061035361139a565b3480156105a057600080fd5b50610297611438565b3480156105b557600080fd5b506102c26105c4366004611ebc565b6114c9565b3480156105d557600080fd5b506102ef6114e7565b3480156105ea57600080fd5b506102ef6105f9366004611ebc565b6114ee565b34801561060a57600080fd5b506102ef610619366004611f6c565b61150d565b34801561062a57600080fd5b50610353610639366004611f97565b611544565b34801561064a57600080fd5b506102ef610659366004611f6c565b61156b565b34801561066a57600080fd5b506102c261157e565b34801561067f57600080fd5b506102ef61068e366004611ebc565b611585565b34801561069f57600080fd5b506103536106ae366004611f6c565b61159a565b3480156106bf57600080fd5b50610326611637565b3480156106d457600080fd5b506106e86106e3366004611ebc565b611646565b6040516102a49493929190612252565b34801561070457600080fd5b50610297611678565b61035361071b366004612053565b611706565b34801561072c57600080fd5b506102c261073b366004611ef4565b61183e565b34801561074c57600080fd5b5061035361075b36600461212e565b611869565b34801561076c57600080fd5b506102c261077b366004611ebc565b61188b565b34801561078c57600080fd5b506103266118a9565b3480156107a157600080fd5b506103536107b0366004611ef4565b6118ae565b600954604080516306fdde0360e01b815290516060926001600160a01b0316916306fdde03916004808301926000929190829003018186803b1580156107fa57600080fd5b505afa15801561080e573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610836919081019061208b565b6040516020016108469190612187565b604051602081830303815290604052905090565b600a5481565b600061086d3384846118e3565b50600192915050565b6276a70081565b6007546001600160a01b031681565b6001600160a01b03808216600090815260056020908152604091829020825160808101845281548516815260018201549281018390526002820154938101939093526003015490921660608201819052909190816109055760405162461bcd60e51b81526004016108fc906123c1565b60405180910390fd5b82516001600160a01b0316331461092e5760405162461bcd60e51b81526004016108fc906122fa565b426004548460400151610941919061253d565b111561095f5760405162461bcd60e51b81526004016108fc90612331565b82516001600160a01b0380861660009081526005602052604080822080546001600160a01b0319908116825560018201849055600282019390935560030180549092169091555163a9059cbb60e01b81529083169063a9059cbb906109ca90849087906004016121f1565b602060405180830381600087803b1580156109e457600080fd5b505af11580156109f8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a1c9190612037565b610a385760405162461bcd60e51b81526004016108fc906123e9565b610a4b8582610a46886112a3565b61193e565b806001600160a01b0316856001600160a01b03167f52a5c2b28bc6eb9712d0ced43463103b486b13ccc9cda499fd3b2d7b6a74a8ee85604051610a8e9190612526565b60405180910390a35050505050565b600c5481565b60025490565b6001600160a01b03808216600090815260056020526040902054165b919050565b6000610ad784848461193e565b6001600160a01b038416600090815260016020908152604080832033808552925290912054610b12918691610b0d908690612594565b6118e3565b5060019392505050565b610b25816114ee565b610b415760405162461bcd60e51b81526004016108fc90612420565b6000610b4c836112be565b905060008111610b6e5760405162461bcd60e51b81526004016108fc90612391565b336000610b7a846112a3565b90506000610b888483612575565b90508582610ba85760405162461bcd60e51b81526004016108fc906124b8565b6001600160a01b03861660009081526005602052604090206001015415610be15760405162461bcd60e51b81526004016108fc90612455565b6040516323b872dd60e01b81526001600160a01b038216906323b872dd90610c11908790309087906004016121cd565b602060405180830381600087803b158015610c2b57600080fd5b505af1158015610c3f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c639190612037565b610c7f5760405162461bcd60e51b81526004016108fc906123e9565b604080516080810182526001600160a01b038087168083526020808401878152428587019081528d8516606087019081528d86166000818152600590955293889020965187549087166001600160a01b0319918216178855925160018801559051600287015551600390950180549590941694169390931790915591517f1982ca8958fc8a8176cb52be509260f4bc5af7ce04e1533711793f1c56dd535990610d29908790612526565b60405180910390a350505050505050565b60095460408051632a0a4ed560e01b815290516000926001600160a01b031691632a0a4ed5916004808301926020929190829003018186803b158015610d7f57600080fd5b505afa158015610d93573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610db79190611ed8565b905090565b60035460ff1681565b610dcd610d3a565b6001600160a01b0316336001600160a01b031614610dfd5760405162461bcd60e51b81526004016108fc906124ef565b6001600160a01b038082166000908152600560209081526040918290208251608081018452815485168152600182015492810183905260028201549381019390935260030154909216606082018190529091610e6b5760405162461bcd60e51b81526004016108fc906123c1565b6001600160a01b03808416600090815260056020908152604080832080546001600160a01b031990811682556001820185905560028201949094556003018054909316909255845190850151915163a9059cbb60e01b81529284169263a9059cbb92610eda92916004016121f1565b602060405180830381600087803b158015610ef457600080fd5b505af1158015610f08573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f2c9190612037565b610f485760405162461bcd60e51b81526004016108fc906123e9565b81600001516001600160a01b0316836001600160a01b03167fbb036e629a9f4c0897ee5d48440dfdb36f7e772117723a2ed603a6514244c2d58460200151604051610f939190612526565b60405180910390a3505050565b600b546001600160a01b0316331415610fc457600b80546001600160a01b03191690555b565b3360008181526001602090815260408083206001600160a01b0387168452909152812054909161086d918590610b0d90869061253d565b6001600160a01b039081166000908152600560205260409020600301541690565b60008061102b868661156b565b9050801561109857604051635260769b60e11b81526001600160a01b0387169063a4c0ed369061106590339089908990899060040161220a565b600060405180830381600087803b15801561107f57600080fd5b505af1158015611093573d6000803e3d6000fd5b505050505b95945050505050565b6110ab33826119fb565b60006110b56114e7565b6110c157600a546110c4565b60015b6009549091506001600160a01b03166342966c686110e28385612575565b6040518263ffffffff1660e01b81526004016110fe9190612526565b600060405180830381600087803b15801561111857600080fd5b505af115801561112c573d6000803e3d6000fd5b505050505050565b6009546001600160a01b031681565b60085481565b336000908152600660205260409020805460ff19169115919091179055565b3360009081526005602052604090206001015415610fc4573360008181526005602052604080822060018101805460038301805484546001600160a01b0319908116865593879055600290940195909555908216909355905163a9059cbb60e01b815291926001600160a01b0390911691829163a9059cbb916111f0919086906004016121f1565b602060405180830381600087803b15801561120a57600080fd5b505af115801561121e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112429190612037565b61125e5760405162461bcd60e51b81526004016108fc906123e9565b336001600160a01b03167f203627483d943880619f4b7e0cca21dbefd6204b4d85b124eb99540e17ba86dd836040516112979190612526565b60405180910390a25050565b6001600160a01b031660009081526020819052604090205490565b6000806112ca83611a95565b905080156112d9579050610ac5565b6009546001600160a01b03848116911614156112f9575050600a54610ac5565b600a546009546040516377e071ad60e01b81526001600160a01b03909116906377e071ad9061132c9087906004016121b9565b60206040518083038186803b15801561134457600080fd5b505afa158015611358573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061137c9190612146565b6113869190612575565b915050610ac5565b50919050565b60045481565b336113a3611ad7565b156113ad57600080fd5b6113b5610aa3565b6113c190611f40612575565b6113ca826112a3565b6113d690612710612575565b10156113f45760405162461bcd60e51b81526004016108fc9061248c565b6113fe8182611ae8565b7f3b6b79a09e9fd230e8591b65c97236bf7df7a604edf733db0658e66b0e6eb2a98160405161142d91906121b9565b60405180910390a150565b600954604080516395d89b4160e01b815290516060926001600160a01b0316916395d89b41916004808301926000929190829003018186803b15801561147d57600080fd5b505afa158015611491573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526114b9919081019061208b565b604051602001610846919061215e565b6001600160a01b031660009081526005602052604090206001015490565b600a541590565b6001600160a01b031660009081526006602052604090205460ff161590565b3360008181526001602090815260408083206001600160a01b0387168452909152812054909161086d918590610b0d908690612594565b6009546001600160a01b0316331461155b57600080fd5b6115658484611cb0565b50505050565b60006115778383611d51565b9392505050565b624f1a0081565b60066020526000908152604090205460ff1681565b6009546040516323b872dd60e01b81526001600160a01b03909116906323b872dd906115ce903390309086906004016121cd565b602060405180830381600087803b1580156115e857600080fd5b505af11580156115fc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116209190612037565b61162957600080fd5b6116338282611cb0565b5050565b600b546001600160a01b031681565b60056020526000908152604090208054600182015460028301546003909301546001600160a01b039283169391921684565b600d8054611685906125d7565b80601f01602080910402602001604051908101604052809291908181526020018280546116b1906125d7565b80156116fe5780601f106116d3576101008083540402835291602001916116fe565b820191906000526020600020905b8154815290600101906020018083116116e157829003601f168201915b505050505081565b61170e6114e7565b61171757600080fd5b600c5460405163eb57ed7b60e01b81526000918291829163eb57ed7b913491611754918a9133918b918b91624f1a00906276a70090600401612288565b6020604051808303818588803b15801561176d57600080fd5b505af1158015611781573d6000803e3d6000fd5b50505050506040513d601f19601f820116820180604052508101906117a69190611ed8565b90506117b0611ad7565b1561181857600b546040516306a169ed60e01b81526001600160a01b03909116906306a169ed906117e59084906004016121b9565b600060405180830381600087803b1580156117ff57600080fd5b505af1158015611813573d6000803e3d6000fd5b505050505b600b80546001600160a01b0319166001600160a01b039290921691909117905550505050565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6118716114e7565b1561187b57600080fd5b6118883382600a54611d81565b50565b6001600160a01b031660009081526005602052604090206002015490565b600081565b600b546001600160a01b031633146118c557600080fd5b6118d9826118d2846112a3565b6001611d81565b6116338183611ae8565b6001600160a01b0380841660008181526001602090815260408083209487168084529490915290819020849055517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92590610f93908590612526565b6001600160a01b03821661195157600080fd5b61195c838383611e24565b6001600160a01b03831660009081526020819052604081208054839290611984908490612594565b90915550506001600160a01b038216600090815260208190526040812080548392906119b190849061253d565b92505081905550816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610f939190612526565b611a0782600083611e24565b8060026000828254611a199190612594565b90915550506001600160a01b03821660009081526020819052604081208054839290611a46908490612594565b90915550506040516000906001600160a01b038416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90611a89908590612526565b60405180910390a35050565b60006001600160a01b038216301415611ab057506001610ac5565b6007546001600160a01b0383811691161415611acf5750600854610ac5565b506000610ac5565b600b546001600160a01b0316151590565b611af06114e7565b611af957600080fd5b6009546040516370a0823160e01b81526001600160a01b039091169063a9059cbb90839083906370a0823190611b339030906004016121b9565b60206040518083038186803b158015611b4b57600080fd5b505afa158015611b5f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611b839190612146565b6040518363ffffffff1660e01b8152600401611ba09291906121f1565b602060405180830381600087803b158015611bba57600080fd5b505af1158015611bce573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611bf29190612037565b611bfb57600080fd5b600980546001600160a01b0319166001600160a01b038416179055611633611c21610aa3565b6009546040516370a0823160e01b81526001600160a01b03909116906370a0823190611c519030906004016121b9565b60206040518083038186803b158015611c6957600080fd5b505afa158015611c7d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611ca19190612146565b611cab9190612555565b611e9c565b6001600160a01b038216611cc357600080fd5b611ccf60008383611e24565b8060026000828254611ce1919061253d565b90915550506001600160a01b03821660009081526020819052604081208054839290611d0e90849061253d565b90915550506040516001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90611a89908590612526565b6000611d5d8383611eaf565b611d795760405162461bcd60e51b81526004016108fc90612368565b61086d611168565b611d8b83836119fb565b6009546001600160a01b031663a9059cbb84611da78486612575565b6040518363ffffffff1660e01b8152600401611dc49291906121f1565b602060405180830381600087803b158015611dde57600080fd5b505af1158015611df2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e169190612037565b611e1f57600080fd5b505050565b611e2c611ad7565b15611e1f57600b5460405163e1a1810f60e01b81526001600160a01b039091169063e1a1810f90611e65908690869086906004016121cd565b600060405180830381600087803b158015611e7f57600080fd5b505af1158015611e93573d6000803e3d6000fd5b50505050505050565b6001811015611eaa57600080fd5b600a55565b600061086d33848461193e565b600060208284031215611ecd578081fd5b813561157781612638565b600060208284031215611ee9578081fd5b815161157781612638565b60008060408385031215611f06578081fd5b8235611f1181612638565b91506020830135611f2181612638565b809150509250929050565b600080600060608486031215611f40578081fd5b8335611f4b81612638565b92506020840135611f5b81612638565b929592945050506040919091013590565b60008060408385031215611f7e578182fd5b8235611f8981612638565b946020939093013593505050565b60008060008060608587031215611fac578081fd5b8435611fb781612638565b935060208501359250604085013567ffffffffffffffff80821115611fda578283fd5b818701915087601f830112611fed578283fd5b813581811115611ffb578384fd5b88602082850101111561200c578384fd5b95989497505060200194505050565b60006020828403121561202c578081fd5b81356115778161264d565b600060208284031215612048578081fd5b81516115778161264d565b600080600060608486031215612067578283fd5b8335925060208401359150604084013561208081612638565b809150509250925092565b60006020828403121561209c578081fd5b815167ffffffffffffffff808211156120b3578283fd5b818401915084601f8301126120c6578283fd5b8151818111156120d8576120d8612622565b604051601f8201601f1916810160200183811182821017156120fc576120fc612622565b604052818152838201602001871015612113578485fd5b6121248260208301602087016125ab565b9695505050505050565b60006020828403121561213f578081fd5b5035919050565b600060208284031215612157578081fd5b5051919050565b6000601160fa1b8252825161217a8160018501602087016125ab565b9190910160010192915050565b6000690223930b3b3b0b13632960b51b825282516121ac81600a8501602087016125ab565b91909101600a0192915050565b6001600160a01b0391909116815260200190565b6001600160a01b039384168152919092166020820152604081019190915260600190565b6001600160a01b03929092168252602082015260400190565b6001600160a01b0385168152602081018490526060604082018190528101829052600082846080840137818301608090810191909152601f909201601f191601019392505050565b6001600160a01b03948516815260208101939093526040830191909152909116606082015260800190565b901515815260200190565b9687526001600160a01b0395861660208801526040870194909452919093166060850152608084019290925260a083019190915260c082015260e00190565b60006020825282518060208401526122e68160408501602087016125ab565b601f01601f19169190910160400192915050565b6020808252601f908201527f4f6e6c7920636c61696d616e742063616e207265736f6c766520636c61696d00604082015260600190565b60208082526019908201527f436c61696d20706572696f64206e6f74206f7665722079657400000000000000604082015260600190565b6020808252600f908201526e151c985b9cd9995c8819985a5b1959608a1b604082015260600190565b602080825260169082015275155b9cdd5c1c1bdc9d19590818dbdb1b185d195c985b60521b604082015260600190565b6020808252600e908201526d139bc818db185a5b48199bdd5b9960921b604082015260600190565b6020808252601a908201527f436f6c6c61746572616c207472616e73666572206661696c6564000000000000604082015260600190565b6020808252818101527f436c61696d732064697361626c656420666f7220746869732061646472657373604082015260600190565b60208082526017908201527f4164647265737320616c726561647920636c61696d6564000000000000000000604082015260600190565b602080825260129082015271145d5bdc9d5b481b9bdd081c995858da195960721b604082015260600190565b6020808252601f908201527f436c61696d6564206164647265737320686f6c6473206e6f2073686172657300604082015260600190565b60208082526018908201527f596f752063616e6e6f742064656c65746520636c61696d730000000000000000604082015260600190565b90815260200190565b60ff91909116815260200190565b600082198211156125505761255061260c565b500190565b60008261257057634e487b7160e01b81526012600452602481fd5b500490565b600081600019048311821515161561258f5761258f61260c565b500290565b6000828210156125a6576125a661260c565b500390565b60005b838110156125c65781810151838201526020016125ae565b838111156115655750506000910152565b6002810460018216806125eb57607f821691505b6020821081141561138e57634e487b7160e01b600052602260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b038116811461188857600080fd5b801515811461188857600080fdfea2646970667358221220d70e035bd6bac64514f4b3031ab4453c2df0f2ec379b0ee87f147ddb478930fa64736f6c63430008000033",
    "sourceMap": "3013:1526:0:-:0;;;3041:8:3;3012:37;;2753:1:2;2713:41;;3227:343:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1896:8:1;:20;;-1:-1:-1;;1896:20:1;;;3099:7:2::1;:30:::0;;-1:-1:-1;;;;;;3099:30:2::1;-1:-1:-1::0;;;;;3099:30:2;::::1;::::0;;::::1;::::0;;;3140:6:::1;:16:::0;;;3356:48:0::1;::::0;-1:-1:-1;;;3356:48:0;;:41:::1;::::0;:48:::1;::::0;-1:-1:-1;;3356:48:0::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;3415:14:0;;::::1;::::0;-1:-1:-1;3415:5:0::1;::::0;-1:-1:-1;3415:14:0::1;::::0;::::1;::::0;::::1;:::i;:::-;;3227:343:::0;;;3013:1526;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3013:1526:0;;;-1:-1:-1;3013:1526:0;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:179:6;95:13;;-1:-1:-1;;;;;137:31:6;;127:42;;117:2;;183:1;180;173:12;117:2;76:117;;;:::o;198:1257::-;;;;365:2;353:9;344:7;340:23;336:32;333:2;;;386:6;378;371:22;333:2;418:16;;-1:-1:-1;;;;;483:14:6;;;480:2;;;515:6;507;500:22;480:2;558:6;547:9;543:22;533:32;;603:7;596:4;592:2;588:13;584:27;574:2;;630:6;622;615:22;574:2;664;658:9;686:2;682;679:10;676:2;;;692:18;;:::i;:::-;741:2;735:9;763:4;833:2;814:13;;-1:-1:-1;;810:27:6;798:40;;794:49;;858:18;;;878:22;;;855:46;852:2;;;904:18;;:::i;:::-;940:2;933:22;964:18;;;1001:11;;;997:20;;994:33;-1:-1:-1;991:2:6;;;1045:6;1037;1030:22;991:2;1072:6;1063:15;;1087:129;1101:2;1098:1;1095:9;1087:129;;;1189:10;;;1185:19;;1179:26;1158:14;;;1154:23;;1147:59;1112:10;;;;1087:129;;;1234:2;1231:1;1228:9;1225:2;;;1293:6;1288:2;1283;1275:6;1271:15;1267:24;1260:40;1225:2;1329:6;1319:16;;1354:51;1401:2;1390:9;1386:18;1354:51;:::i;:::-;1344:61;;;;;;;1445:2;1434:9;1430:18;1424:25;1414:35;;323:1132;;;;;:::o;1460:187::-;1625:14;;1618:22;1600:41;;1588:2;1573:18;;1555:92::o;1652:380::-;1737:1;1727:12;;1784:1;1774:12;;;1795:2;;1849:4;1841:6;1837:17;1827:27;;1795:2;1902;1894:6;1891:14;1871:18;1868:38;1865:2;;;1948:10;1943:3;1939:20;1936:1;1929:31;1983:4;1980:1;1973:15;2011:4;2008:1;2001:15;1865:2;;1707:325;;;:::o;2037:127::-;2098:10;2093:3;2089:20;2086:1;2079:31;2129:4;2126:1;2119:15;2153:4;2150:1;2143:15;2069:95;3013:1526:0;;;;;;",
    "deployedSourceMap": "3013:1526:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3172:140:2;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2713:41;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;3010:157:1:-;;;;;;;;;;-1:-1:-1;3010:157:1;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;2394:49:2:-;;;;;;;;;;;;;:::i;3388:38:3:-;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;10711:741::-;;;;;;;;;;-1:-1:-1;10711:741:3;;;;;:::i;:::-;;:::i;:::-;;2912:21:2;;;;;;;;;;;;;:::i;1989:100:1:-;;;;;;;;;;;;;:::i;9091:126:3:-;;;;;;;;;;-1:-1:-1;9091:126:3;;;;;:::i;:::-;;:::i;3638:262:1:-;;;;;;;;;;-1:-1:-1;3638:262:1;;;;;:::i;:::-;;:::i;8063:1020:3:-;;;;;;;;;;-1:-1:-1;8063:1020:3;;;;;:::i;:::-;;:::i;3738:140:0:-;;;;;;;;;;;;;:::i;1817:30:1:-;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;11593:514:3:-;;;;;;;;;;-1:-1:-1;11593:514:3;;;;;:::i;:::-;;:::i;6460:139:2:-;;;;;;;;;;;;;:::i;4309:203:1:-;;;;;;;;;;-1:-1:-1;4309:203:1;;;;;:::i;:::-;;:::i;9363:136:3:-;;;;;;;;;;-1:-1:-1;9363:136:3;;;;;:::i;:::-;;:::i;6143:303:1:-;;;;;;;;;;-1:-1:-1;6143:303:1;;;;;:::i;:::-;;:::i;5561:209:2:-;;;;;;;;;;-1:-1:-1;5561:209:2;;;;;:::i;:::-;;:::i;2530:21::-;;;;;;;;;;;;;:::i;3433:35:3:-;;;;;;;;;;;;;:::i;5559:103::-;;;;;;;;;;-1:-1:-1;5559:103:3;;;;;:::i;:::-;;:::i;10098:427::-;;;;;;;;;;;;;:::i;2152:119:1:-;;;;;;;;;;-1:-1:-1;2152:119:1;;;;;:::i;:::-;;:::i;3886:648:0:-;;;;;;;;;;-1:-1:-1;3886:648:0;;;;;:::i;:::-;;:::i;3012:37:3:-;;;;;;;;;;;;;:::i;7030:366:2:-;;;;;;;;;;;;;:::i;3320:135::-;;;;;;;;;;;;;:::i;9225:130:3:-;;;;;;;;;;-1:-1:-1;9225:130:3;;;;;:::i;:::-;;:::i;4282:101:2:-;;;;;;;;;;;;;:::i;5844:121:3:-;;;;;;;;;;-1:-1:-1;5844:121:3;;;;;:::i;:::-;;:::i;5015:213:1:-;;;;;;;;;;-1:-1:-1;5015:213:1;;;;;:::i;:::-;;:::i;3463:175:2:-;;;;;;;;;;-1:-1:-1;3463:175:2;;;;;:::i;:::-;;:::i;3578:152:0:-;;;;;;;;;;-1:-1:-1;3578:152:0;;;;;:::i;:::-;;:::i;2319:47:2:-;;;;;;;;;;;;;:::i;3207:48:3:-;;;;;;;;;;-1:-1:-1;3207:48:3;;;;;:::i;:::-;;:::i;3760:178:2:-;;;;;;;;;;-1:-1:-1;3760:178:2;;;;;:::i;:::-;;:::i;2884:19::-;;;;;;;;;;;;;:::i;3082:39:3:-;;;;;;;;;;-1:-1:-1;3082:39:3;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;:::i;3083:19:0:-;;;;;;;;;;;;;:::i;5778:469:2:-;;;;;;:::i;:::-;;:::i;2720:143:1:-;;;;;;;;;;-1:-1:-1;2720:143:1;;;;;:::i;:::-;;:::i;4717:140:2:-;;;;;;;;;;-1:-1:-1;4717:140:2;;;;;:::i;:::-;;:::i;9507:128:3:-;;;;;;;;;;-1:-1:-1;9507:128:3;;;;;:::i;:::-;;:::i;2469:52:2:-;;;;;;;;;;;;;:::i;6255:197::-;;;;;;;;;;-1:-1:-1;6255:197:2;;;;;:::i;:::-;;:::i;3172:140::-;3288:7;;:14;;;-1:-1:-1;;;3288:14:2;;;;3218:13;;-1:-1:-1;;;;;3288:7:2;;:12;;:14;;;;;:7;;:14;;;;;;;:7;:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3288:14:2;;;;;;;;;;;;:::i;:::-;3257:46;;;;;;;;:::i;:::-;;;;;;;;;;;;;3243:61;;3172:140;:::o;2713:41::-;;;;:::o;3010:157:1:-;3084:4;3101:36;3110:10;3122:7;3131:5;3101:8;:36::i;:::-;-1:-1:-1;3155:4:1;3010:157;;;;:::o;2394:49:2:-;2436:7;2394:49;:::o;3388:38:3:-;;;-1:-1:-1;;;;;3388:38:3;;:::o;10711:741::-;-1:-1:-1;;;;;10788:19:3;;;10767:18;10788:19;;;:6;:19;;;;;;;;;10767:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10929:15;10921:42;;;;-1:-1:-1;;;10921:42:3;;;;;;;:::i;:::-;;;;;;;;;10982:14;;-1:-1:-1;;;;;10982:28:3;11000:10;10982:28;10974:72;;;;-1:-1:-1;;;10974:72:3;;;;;;;:::i;:::-;11098:15;11083:11;;11065:5;:15;;;:29;;;;:::i;:::-;:48;;11057:86;;;;-1:-1:-1;;;11057:86:3;;;;;;;:::i;:::-;11173:14;;-1:-1:-1;;;;;11205:19:3;;;11154:16;11205:19;;;:6;:19;;;;;;11198:26;;-1:-1:-1;;;;;;11198:26:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;11243:39;-1:-1:-1;;;11243:39:3;;:17;;;;;;:39;;11173:14;;11271:10;;11243:39;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;11235:78;;;;-1:-1:-1;;;11235:78:3;;;;;;;:::i;:::-;11324:56;11334:11;11347:8;11357:22;11367:11;11357:9;:22::i;:::-;11324:9;:56::i;:::-;11423:8;-1:-1:-1;;;;;11396:48:3;11410:11;-1:-1:-1;;;;;11396:48:3;;11433:10;11396:48;;;;;;:::i;:::-;;;;;;;;10711:741;;;;;:::o;2912:21:2:-;;;;:::o;1989:100:1:-;2069:12;;1989:100;:::o;9091:126:3:-;-1:-1:-1;;;;;9181:19:3;;;9154:7;9181:19;;;:6;:19;;;;;:28;;9091:126;;;;:::o;3638:262:1:-;3736:4;3753:36;3763:6;3771:9;3782:6;3753:9;:36::i;:::-;-1:-1:-1;;;;;3829:19:1;;;;;;:11;:19;;;;;;;;3817:10;3829:31;;;;;;;;;3800:70;;3809:6;;3829:40;;3863:6;;3829:40;:::i;:::-;3800:8;:70::i;:::-;-1:-1:-1;3888:4:1;3638:262;;;;;:::o;8063:1020:3:-;8155:30;8173:11;8155:17;:30::i;:::-;8147:75;;;;-1:-1:-1;;;8147:75:3;;;;;;;:::i;:::-;8233:22;8258:33;8276:14;8258:17;:33::i;:::-;8233:58;;8327:1;8310:14;:18;8302:53;;;;-1:-1:-1;;;8302:53:3;;;;;;;:::i;:::-;8385:10;8366:16;8424:22;8434:11;8424:9;:22::i;:::-;8406:40;-1:-1:-1;8457:18:3;8478:24;8488:14;8406:40;8478:24;:::i;:::-;8457:45;-1:-1:-1;8538:14:3;8572:11;8564:55;;;;-1:-1:-1;;;8564:55:3;;;;;;;:::i;:::-;-1:-1:-1;;;;;8638:19:3;;;;;;:6;:19;;;;;:30;;;:35;8630:71;;;;-1:-1:-1;;;8630:71:3;;;;;;;:::i;:::-;8720:58;;-1:-1:-1;;;8720:58:3;;-1:-1:-1;;;;;8720:21:3;;;;;:58;;8742:8;;8760:4;;8767:10;;8720:58;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8712:97;;;;-1:-1:-1;;;8712:97:3;;;;;;;:::i;:::-;8844:172;;;;;;;;-1:-1:-1;;;;;8844:172:3;;;;;;;;;;;;;8946:15;8844:172;;;;;;;;;;;;;;;8822:19;;;-1:-1:-1;8822:19:3;;;:6;:19;;;;;;;:194;;;;;;;-1:-1:-1;;;;;;8822:194:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9034:41;;;;;;9067:7;;9034:41;:::i;:::-;;;;;;;;8063:1020;;;;;;;:::o;3738:140:0:-;3843:7;;3822:48;;;-1:-1:-1;;;3822:48:0;;;;3795:7;;-1:-1:-1;;;;;3843:7:0;;3822:46;;:48;;;;;;;;;;;;;;3843:7;3822:48;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3815:55;;3738:140;:::o;1817:30:1:-;;;;;;:::o;11593:514:3:-;11675:17;:15;:17::i;:::-;-1:-1:-1;;;;;11661:31:3;:10;-1:-1:-1;;;;;11661:31:3;;11653:68;;;;-1:-1:-1;;;11653:68:3;;;;;;;:::i;:::-;-1:-1:-1;;;;;11753:19:3;;;11732:18;11753:19;;;:6;:19;;;;;;;;;11732:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11838:48;;;;-1:-1:-1;;;11838:48:3;;;;;;;:::i;:::-;-1:-1:-1;;;;;11904:19:3;;;;;;;:6;:19;;;;;;;;11897:26;;-1:-1:-1;;;;;;11897:26:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;11960:14;;11976:16;;;;11942:51;;-1:-1:-1;;;11942:51:3;;:17;;;;;;:51;;11960:14;11942:51;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;11934:90;;;;-1:-1:-1;;;11934:90:3;;;;;;;:::i;:::-;12066:5;:14;;;-1:-1:-1;;;;;12040:59:3;12053:11;-1:-1:-1;;;;;12040:59:3;;12082:5;:16;;;12040:59;;;;;;:::i;:::-;;;;;;;;11593:514;;;:::o;6460:139:2:-;6532:5;;-1:-1:-1;;;;;6532:5:2;6510:10;:28;6506:86;;;6554:5;:26;;-1:-1:-1;;;;;;6554:26:2;;;6506:86;6460:139::o;4309:203:1:-;4415:10;4389:4;4436:23;;;:11;:23;;;;;;;;-1:-1:-1;;;;;4436:32:1;;;;;;;;;;4389:4;;4406:76;;4427:7;;4436:45;;4471:10;;4436:45;:::i;9363:136:3:-;-1:-1:-1;;;;;9459:19:3;;;9432:7;9459:19;;;:6;:19;;;;;:32;;;;;9363:136::o;6143:303:1:-;6237:4;6254:12;6269:27;6278:9;6289:6;6269:8;:27::i;:::-;6254:42;;6311:7;6307:107;;;6334:68;;-1:-1:-1;;;6334:68:1;;-1:-1:-1;;;;;6334:42:1;;;;;:68;;6377:10;;6389:6;;6397:4;;;;6334:68;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6307:107;6431:7;6143:303;-1:-1:-1;;;;;6143:303:1:o;5561:209:2:-;5609:25;5615:10;5627:6;5609:5;:25::i;:::-;5645:14;5662:11;:9;:11::i;:::-;:40;;5680:22;;5662:40;;;5676:1;5662:40;5731:7;;5645:57;;-1:-1:-1;;;;;;5731:7:2;5713:32;5746:15;5645:57;5746:6;:15;:::i;:::-;5713:49;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5561:209;;:::o;2530:21::-;;;-1:-1:-1;;;;;2530:21:2;;:::o;3433:35:3:-;;;;:::o;5559:103::-;5632:10;5615:28;;;;:16;:28;;;;;:39;;-1:-1:-1;;5615:39:3;5646:8;;5615:39;;;;;;5559:103::o;10098:427::-;10149:10;10142:18;;;;:6;:18;;;;;:29;;;:34;10138:380;;10221:10;10193:18;10214;;;:6;:18;;;;;;:29;;;;;10283:31;;;;;10330:25;;-1:-1:-1;;;;;;10330:25:3;;;;;;;;;-1:-1:-1;10330:25:3;;;;;;;;;;;;;10378:41;;-1:-1:-1;;;10378:41:3;;10214:29;;-1:-1:-1;;;;;10283:31:3;;;;;;10378:17;;:41;;10221:10;10214:29;;10378:41;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;10370:80;;;;-1:-1:-1;;;10370:80:3;;;;;;;:::i;:::-;10483:10;-1:-1:-1;;;;;10470:36:3;;10495:10;10470:36;;;;;;:::i;:::-;;;;;;;;10138:380;;10098:427::o;2152:119:1:-;-1:-1:-1;;;;;2245:18:1;2218:7;2245:18;;;;;;;;;;;;2152:119::o;3886:648:0:-;3967:7;3987:12;4002:39;4026:14;4002:23;:39::i;:::-;3987:54;-1:-1:-1;4056:8:0;;4052:475;;4088:4;-1:-1:-1;4081:11:0;;4052:475;4140:7;;-1:-1:-1;;;;;4114:34:0;;;4140:7;;4114:34;4110:417;;;-1:-1:-1;;4172:22:0;;4165:29;;4110:417;4493:22;;4447:7;;4426:64;;-1:-1:-1;;;4426:64:0;;-1:-1:-1;;;;;4447:7:0;;;;4426:48;;:64;;4475:14;;4426:64;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:89;;;;:::i;:::-;4419:96;;;;;4110:417;3886:648;;;;:::o;3012:37:3:-;;;;:::o;7030:366:2:-;7087:10;7117:13;:11;:13::i;:::-;7116:14;7108:23;;;;;;7253:13;:11;:13::i;:::-;:20;;7269:4;7253:20;:::i;:::-;7221;7231:9;7221;:20::i;:::-;:28;;7244:5;7221:28;:::i;:::-;:52;;7213:83;;;;-1:-1:-1;;;7213:83:2;;;;;;;:::i;:::-;7307:36;7322:9;7333;7307:14;:36::i;:::-;7359:29;7378:9;7359:29;;;;;;:::i;:::-;;;;;;;;7030:366;:::o;3320:135::-;3429:7;;:16;;;-1:-1:-1;;;3429:16:2;;;;3368:13;;-1:-1:-1;;;;;3429:7:2;;:14;;:16;;;;;:7;;:16;;;;;;;:7;:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3429:16:2;;;;;;;;;;;;:::i;:::-;3407:39;;;;;;;;:::i;9225:130:3:-;-1:-1:-1;;;;;9317:19:3;9290:7;9317:19;;;:6;:19;;;;;:30;;;;9225:130::o;4282:101:2:-;4348:22;;:27;4282:101;:::o;5844:121:3:-;-1:-1:-1;;;;;5933:24:3;5908:4;5933:24;;;:16;:24;;;;;;;;5932:25;;5844:121::o;5015:213:1:-;5126:10;5100:4;5147:23;;;:11;:23;;;;;;;;-1:-1:-1;;;;;5147:32:1;;;;;;;;;;5100:4;;5117:81;;5138:7;;5147:50;;5182:15;;5147:50;:::i;3463:175:2:-;3591:7;;-1:-1:-1;;;;;3591:7:2;3569:10;:30;3561:39;;;;;;3611:19;3617:4;3623:6;3611:5;:19::i;:::-;3463:175;;;;:::o;3578:152:0:-;3673:4;3697:25;3712:2;3716:5;3697:14;:25::i;:::-;3690:32;3578:152;-1:-1:-1;;;3578:152:0:o;2319:47:2:-;2359:7;2319:47;:::o;3207:48:3:-;;;;;;;;;;;;;;;:::o;3760:178:2:-;3837:7;;:55;;-1:-1:-1;;;3837:55:2;;-1:-1:-1;;;;;3837:7:2;;;;:20;;:55;;3858:10;;3878:4;;3885:6;;3837:55;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3829:64;;;;;;3904:26;3910:11;3923:6;3904:5;:26::i;:::-;3760:178;;:::o;2884:19::-;;;-1:-1:-1;;;;;2884:19:2;;:::o;3082:39:3:-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3082:39:3;;;;;;;;:::o;3083:19:0:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;5778:469:2:-;5897:11;:9;:11::i;:::-;5889:20;;;;;;6078:6;;6002:115;;-1:-1:-1;;;6002:115:2;;5920:21;;;;;;6002:14;;6024:9;;6002:115;;6035:4;;6041:10;;6053:13;;6068:8;;2359:7;;2436;;6002:115;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5983:134;;6140:13;:11;:13::i;:::-;6136:69;;;6170:5;;:23;;-1:-1:-1;;;6170:23:2;;-1:-1:-1;;;;;6170:5:2;;;;:13;;:23;;6184:8;;6170:23;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6136:69;6215:5;:24;;-1:-1:-1;;;;;;6215:24:2;-1:-1:-1;;;;;6215:24:2;;;;;;;;;;-1:-1:-1;;;;5778:469:2:o;2720:143:1:-;-1:-1:-1;;;;;2828:18:1;;;2801:7;2828:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;2720:143::o;4717:140:2:-;4776:11;:9;:11::i;:::-;4775:12;4767:21;;;;;;4799:50;4806:10;4818:6;4826:22;;4799:6;:50::i;:::-;4717:140;:::o;9507:128:3:-;-1:-1:-1;;;;;9598:19:3;9571:7;9598:19;;;:6;:19;;;;;:29;;;;9507:128::o;2469:52:2:-;2517:3;2469:52;:::o;6255:197::-;6350:5;;-1:-1:-1;;;;;6350:5:2;6328:10;:28;6320:37;;;;;;6368:34;6375:5;6382:16;6392:5;6382:9;:16::i;:::-;6400:1;6368:6;:34::i;:::-;6413:31;6428:8;6438:5;6413:14;:31::i;8073:175:1:-;-1:-1:-1;;;;;8158:18:1;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;;:35;;;8209:31;;;;;8188:5;;8209:31;:::i;5718:330::-;-1:-1:-1;;;;;5824:23:1;;5816:32;;;;;;5861:47;5882:6;5890:9;5901:6;5861:20;:47::i;:::-;-1:-1:-1;;;;;5921:17:1;;:9;:17;;;;;;;;;;:27;;5942:6;;5921:9;:27;;5942:6;;5921:27;:::i;:::-;;;;-1:-1:-1;;;;;;;5959:20:1;;:9;:20;;;;;;;;;;:30;;5983:6;;5959:9;:30;;5983:6;;5959:30;:::i;:::-;;;;;;;;6022:9;-1:-1:-1;;;;;6005:35:1;6014:6;-1:-1:-1;;;;;6005:35:1;;6033:6;6005:35;;;;;;:::i;7373:260::-;7449:49;7470:7;7487:1;7491:6;7449:20;:49::i;:::-;7527:6;7511:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;7544:18:1;;:9;:18;;;;;;;;;;:28;;7566:6;;7544:9;:28;;7566:6;;7544:28;:::i;:::-;;;;-1:-1:-1;;7588:37:1;;7614:1;;-1:-1:-1;;;;;7588:37:1;;;;;;;7618:6;;7588:37;:::i;:::-;;;;;;;;7373:260;;:::o;3806:327:3:-;3886:7;-1:-1:-1;;;;;3910:31:3;;3936:4;3910:31;3906:220;;;-1:-1:-1;3965:1:3;3958:8;;3906:220;4006:23;;-1:-1:-1;;;;;3988:41:3;;;4006:23;;3988:41;3984:142;;;-1:-1:-1;4053:20:3;;4046:27;;3984:142;-1:-1:-1;4113:1:3;4106:8;;7601:106:2;7679:5;;-1:-1:-1;;;;;7679:5:2;7671:28;;7601:106;:::o;6607:415::-;6710:11;:9;:11::i;:::-;6702:20;;;;;;6789:7;;6829:32;;-1:-1:-1;;;6829:32:2;;-1:-1:-1;;;;;6789:7:2;;;;:16;;6806:21;;6789:7;;6829:17;;:32;;6855:4;;6829:32;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6789:73;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6781:82;;;;;;6915:7;:28;;-1:-1:-1;;;;;;6915:28:2;-1:-1:-1;;;;;6915:28:2;;;;;6954:60;7000:13;:11;:13::i;:::-;6965:7;;:32;;-1:-1:-1;;;6965:32:2;;-1:-1:-1;;;;;6965:7:2;;;;:17;;:32;;6991:4;;6965:32;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:48;;;;:::i;:::-;6954:10;:60::i;6727:313:1:-;-1:-1:-1;;;;;6813:23:1;;6805:32;;;;;;6850:51;6879:1;6883:9;6894:6;6850:20;:51::i;:::-;6930:6;6914:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;6947:20:1;;:9;:20;;;;;;;;;;:30;;6971:6;;6947:9;:30;;6971:6;;6947:30;:::i;:::-;;;;-1:-1:-1;;6993:39:1;;-1:-1:-1;;;;;6993:39:1;;;7010:1;;6993:39;;;;7025:6;;6993:39;:::i;9643:217:3:-;9729:4;9754:33;9769:9;9780:6;9754:14;:33::i;:::-;9746:61;;;;-1:-1:-1;;;9746:61:3;;;;;;;:::i;:::-;9818:12;:10;:12::i;4869:171:2:-;4952:20;4958:5;4965:6;4952:5;:20::i;:::-;4991:7;;-1:-1:-1;;;;;4991:7:2;:16;5008:5;5015:15;5024:6;5015;:15;:::i;:::-;4991:40;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4983:49;;;;;;4869:171;;;:::o;7404:189::-;7509:13;:11;:13::i;:::-;7505:81;;;7539:5;;:35;;-1:-1:-1;;;7539:35:2;;-1:-1:-1;;;;;7539:5:2;;;;:17;;:35;;7557:4;;7563:2;;7567:6;;7539:35;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7404:189;;;:::o;4487:126::-;4561:1;4551:6;:11;;4543:20;;;;;;4574:22;:31;4487:126::o;2484:173:1:-;2570:4;2587:40;2597:10;2609:9;2620:6;2587:9;:40::i;14:259:6:-;;126:2;114:9;105:7;101:23;97:32;94:2;;;147:6;139;132:22;94:2;191:9;178:23;210:33;237:5;210:33;:::i;278:263::-;;401:2;389:9;380:7;376:23;372:32;369:2;;;422:6;414;407:22;369:2;459:9;453:16;478:33;505:5;478:33;:::i;546:402::-;;;675:2;663:9;654:7;650:23;646:32;643:2;;;696:6;688;681:22;643:2;740:9;727:23;759:33;786:5;759:33;:::i;:::-;811:5;-1:-1:-1;868:2:6;853:18;;840:32;881:35;840:32;881:35;:::i;:::-;935:7;925:17;;;633:315;;;;;:::o;953:470::-;;;;1099:2;1087:9;1078:7;1074:23;1070:32;1067:2;;;1120:6;1112;1105:22;1067:2;1164:9;1151:23;1183:33;1210:5;1183:33;:::i;:::-;1235:5;-1:-1:-1;1292:2:6;1277:18;;1264:32;1305:35;1264:32;1305:35;:::i;:::-;1057:366;;1359:7;;-1:-1:-1;;;1413:2:6;1398:18;;;;1385:32;;1057:366::o;1428:327::-;;;1557:2;1545:9;1536:7;1532:23;1528:32;1525:2;;;1578:6;1570;1563:22;1525:2;1622:9;1609:23;1641:33;1668:5;1641:33;:::i;:::-;1693:5;1745:2;1730:18;;;;1717:32;;-1:-1:-1;;;1515:240:6:o;1760:846::-;;;;;1925:2;1913:9;1904:7;1900:23;1896:32;1893:2;;;1946:6;1938;1931:22;1893:2;1990:9;1977:23;2009:33;2036:5;2009:33;:::i;:::-;2061:5;-1:-1:-1;2113:2:6;2098:18;;2085:32;;-1:-1:-1;2168:2:6;2153:18;;2140:32;2191:18;2221:14;;;2218:2;;;2253:6;2245;2238:22;2218:2;2296:6;2285:9;2281:22;2271:32;;2341:7;2334:4;2330:2;2326:13;2322:27;2312:2;;2368:6;2360;2353:22;2312:2;2413;2400:16;2439:2;2431:6;2428:14;2425:2;;;2460:6;2452;2445:22;2425:2;2510:7;2505:2;2496:6;2492:2;2488:15;2484:24;2481:37;2478:2;;;2536:6;2528;2521:22;2478:2;1883:723;;;;-1:-1:-1;;2572:2:6;2564:11;;-1:-1:-1;;;1883:723:6:o;2611:253::-;;2720:2;2708:9;2699:7;2695:23;2691:32;2688:2;;;2741:6;2733;2726:22;2688:2;2785:9;2772:23;2804:30;2828:5;2804:30;:::i;2869:257::-;;2989:2;2977:9;2968:7;2964:23;2960:32;2957:2;;;3010:6;3002;2995:22;2957:2;3047:9;3041:16;3066:30;3090:5;3066:30;:::i;3131:395::-;;;;3277:2;3265:9;3256:7;3252:23;3248:32;3245:2;;;3298:6;3290;3283:22;3245:2;3339:9;3326:23;3316:33;;3396:2;3385:9;3381:18;3368:32;3358:42;;3450:2;3439:9;3435:18;3422:32;3463:33;3490:5;3463:33;:::i;:::-;3515:5;3505:15;;;3235:291;;;;;:::o;3531:894::-;;3664:2;3652:9;3643:7;3639:23;3635:32;3632:2;;;3685:6;3677;3670:22;3632:2;3723:9;3717:16;3752:18;3793:2;3785:6;3782:14;3779:2;;;3814:6;3806;3799:22;3779:2;3857:6;3846:9;3842:22;3832:32;;3902:7;3895:4;3891:2;3887:13;3883:27;3873:2;;3929:6;3921;3914:22;3873:2;3963;3957:9;3985:2;3981;3978:10;3975:2;;;3991:18;;:::i;:::-;4040:2;4034:9;4109:2;4090:13;;-1:-1:-1;;4086:27:6;4074:40;;4116:2;4070:49;4134:18;;;4154:22;;;4131:46;4128:2;;;4180:18;;:::i;:::-;4216:2;4209:22;4240:18;;;4277:11;;;4290:2;4273:20;4270:33;-1:-1:-1;4267:2:6;;;4321:6;4313;4306:22;4267:2;4339:55;4391:2;4386;4378:6;4374:15;4369:2;4365;4361:11;4339:55;:::i;:::-;4413:6;3622:803;-1:-1:-1;;;;;;3622:803:6:o;4430:190::-;;4542:2;4530:9;4521:7;4517:23;4513:32;4510:2;;;4563:6;4555;4548:22;4510:2;-1:-1:-1;4591:23:6;;4500:120;-1:-1:-1;4500:120:6:o;4625:194::-;;4748:2;4736:9;4727:7;4723:23;4719:32;4716:2;;;4769:6;4761;4754:22;4716:2;-1:-1:-1;4797:16:6;;4706:113;-1:-1:-1;4706:113:6:o;4824:418::-;;-1:-1:-1;;;5081:3:6;5074:16;5119:6;5113:13;5135:61;5189:6;5185:1;5180:3;5176:11;5169:4;5161:6;5157:17;5135:61;:::i;:::-;5216:16;;;;5234:1;5212:24;;5064:178;-1:-1:-1;;5064:178:6:o;5247:429::-;;-1:-1:-1;;;5504:3:6;5497:25;5551:6;5545:13;5567:62;5622:6;5617:2;5612:3;5608:12;5601:4;5593:6;5589:17;5567:62;:::i;:::-;5649:16;;;;5667:2;5645:25;;5487:189;-1:-1:-1;;5487:189:6:o;5681:203::-;-1:-1:-1;;;;;5845:32:6;;;;5827:51;;5815:2;5800:18;;5782:102::o;5889:375::-;-1:-1:-1;;;;;6147:15:6;;;6129:34;;6199:15;;;;6194:2;6179:18;;6172:43;6246:2;6231:18;;6224:34;;;;6079:2;6064:18;;6046:218::o;6269:274::-;-1:-1:-1;;;;;6461:32:6;;;;6443:51;;6525:2;6510:18;;6503:34;6431:2;6416:18;;6398:145::o;6548:562::-;-1:-1:-1;;;;;6761:32:6;;6743:51;;6825:2;6810:18;;6803:34;;;6873:2;6868;6853:18;;6846:30;;;6892:18;;6885:34;;;6548:562;6912:6;6962;6956:3;6941:19;;6928:49;6997:22;;;7021:3;6993:32;;;6986:46;;;;7093:2;7072:15;;;-1:-1:-1;;7068:29:6;7053:45;7049:55;;6733:377;-1:-1:-1;;;6733:377:6:o;7115:447::-;-1:-1:-1;;;;;7402:15:6;;;7384:34;;7449:2;7434:18;;7427:34;;;;7492:2;7477:18;;7470:34;;;;7540:15;;;7535:2;7520:18;;7513:43;7333:3;7318:19;;7300:262::o;7567:187::-;7732:14;;7725:22;7707:41;;7695:2;7680:18;;7662:92::o;7759:663::-;8074:25;;;-1:-1:-1;;;;;8173:15:6;;;8168:2;8153:18;;8146:43;8220:2;8205:18;;8198:34;;;;8268:15;;;;8263:2;8248:18;;8241:43;8315:3;8300:19;;8293:35;;;;8126:3;8344:19;;8337:35;;;;8403:3;8388:19;;8381:35;8061:3;8046:19;;8028:394::o;8873:383::-;;9022:2;9011:9;9004:21;9054:6;9048:13;9097:6;9092:2;9081:9;9077:18;9070:34;9113:66;9172:6;9167:2;9156:9;9152:18;9147:2;9139:6;9135:15;9113:66;:::i;:::-;9240:2;9219:15;-1:-1:-1;;9215:29:6;9200:45;;;;9247:2;9196:54;;8994:262;-1:-1:-1;;8994:262:6:o;9261:355::-;9463:2;9445:21;;;9502:2;9482:18;;;9475:30;9541:33;9536:2;9521:18;;9514:61;9607:2;9592:18;;9435:181::o;9621:349::-;9823:2;9805:21;;;9862:2;9842:18;;;9835:30;9901:27;9896:2;9881:18;;9874:55;9961:2;9946:18;;9795:175::o;9975:339::-;10177:2;10159:21;;;10216:2;10196:18;;;10189:30;-1:-1:-1;;;10250:2:6;10235:18;;10228:45;10305:2;10290:18;;10149:165::o;10319:346::-;10521:2;10503:21;;;10560:2;10540:18;;;10533:30;-1:-1:-1;;;10594:2:6;10579:18;;10572:52;10656:2;10641:18;;10493:172::o;10670:338::-;10872:2;10854:21;;;10911:2;10891:18;;;10884:30;-1:-1:-1;;;10945:2:6;10930:18;;10923:44;10999:2;10984:18;;10844:164::o;11013:350::-;11215:2;11197:21;;;11254:2;11234:18;;;11227:30;11293:28;11288:2;11273:18;;11266:56;11354:2;11339:18;;11187:176::o;11368:356::-;11570:2;11552:21;;;11589:18;;;11582:30;11648:34;11643:2;11628:18;;11621:62;11715:2;11700:18;;11542:182::o;11729:347::-;11931:2;11913:21;;;11970:2;11950:18;;;11943:30;12009:25;12004:2;11989:18;;11982:53;12067:2;12052:18;;11903:173::o;12081:342::-;12283:2;12265:21;;;12322:2;12302:18;;;12295:30;-1:-1:-1;;;12356:2:6;12341:18;;12334:48;12414:2;12399:18;;12255:168::o;12428:355::-;12630:2;12612:21;;;12669:2;12649:18;;;12642:30;12708:33;12703:2;12688:18;;12681:61;12774:2;12759:18;;12602:181::o;12788:348::-;12990:2;12972:21;;;13029:2;13009:18;;;13002:30;13068:26;13063:2;13048:18;;13041:54;13127:2;13112:18;;12962:174::o;13141:177::-;13287:25;;;13275:2;13260:18;;13242:76::o;13323:184::-;13495:4;13483:17;;;;13465:36;;13453:2;13438:18;;13420:87::o;13512:128::-;;13583:1;13579:6;13576:1;13573:13;13570:2;;;13589:18;;:::i;:::-;-1:-1:-1;13625:9:6;;13560:80::o;13645:217::-;;13711:1;13701:2;;-1:-1:-1;;;13736:31:6;;13790:4;13787:1;13780:15;13818:4;13743:1;13808:15;13701:2;-1:-1:-1;13847:9:6;;13691:171::o;13867:168::-;;13973:1;13969;13965:6;13961:14;13958:1;13955:21;13950:1;13943:9;13936:17;13932:45;13929:2;;;13980:18;;:::i;:::-;-1:-1:-1;14020:9:6;;13919:116::o;14040:125::-;;14108:1;14105;14102:8;14099:2;;;14113:18;;:::i;:::-;-1:-1:-1;14150:9:6;;14089:76::o;14170:258::-;14242:1;14252:113;14266:6;14263:1;14260:13;14252:113;;;14342:11;;;14336:18;14323:11;;;14316:39;14288:2;14281:10;14252:113;;;14383:6;14380:1;14377:13;14374:2;;;-1:-1:-1;;14418:1:6;14400:16;;14393:27;14223:205::o;14433:380::-;14518:1;14508:12;;14565:1;14555:12;;;14576:2;;14630:4;14622:6;14618:17;14608:27;;14576:2;14683;14675:6;14672:14;14652:18;14649:38;14646:2;;;14729:10;14724:3;14720:20;14717:1;14710:31;14764:4;14761:1;14754:15;14792:4;14789:1;14782:15;14818:127;14879:10;14874:3;14870:20;14867:1;14860:31;14910:4;14907:1;14900:15;14934:4;14931:1;14924:15;14950:127;15011:10;15006:3;15002:20;14999:1;14992:31;15042:4;15039:1;15032:15;15066:4;15063:1;15056:15;15082:133;-1:-1:-1;;;;;15159:31:6;;15149:42;;15139:2;;15205:1;15202;15195:12;15220:120;15308:5;15301:13;15294:21;15287:5;15284:32;15274:2;;15330:1;15327;15320:12",
    "sourcePath": "c:/Users/luziu/Documents/aktionariat/contracts/src/DraggableShares.sol",
    "compiler": {
        "name": "solc",
        "version": "0.8.0+commit.c7dfd78e"
    },
    "ast": {
        "absolutePath": "c:/Users/luziu/Documents/aktionariat/contracts/src/DraggableShares.sol",
        "exportedSymbols": {
            "DraggableShares": [
                118
            ],
            "ERC20": [
                539
            ],
            "ERC20Draggable": [
                1023
            ],
            "ERC20Recoverable": [
                1653
            ],
            "IBurnable": [
                1029
            ],
            "IERC20": [
                1746
            ],
            "IERC677Receiver": [
                1758
            ],
            "IOffer": [
                1044
            ],
            "IOfferFactory": [
                1064
            ],
            "IRecoverable": [
                136
            ]
        },
        "id": 137,
        "license": "LicenseRef-Aktionariat",
        "nodeType": "SourceUnit",
        "nodes": [
            {
                "id": 1,
                "literals": [
                    "solidity",
                    ">=",
                    "0.8"
                ],
                "nodeType": "PragmaDirective",
                "src": "1336:22:0"
            },
            {
                "absolutePath": "c:/Users/luziu/Documents/aktionariat/contracts/src/ERC20Recoverable.sol",
                "file": "./ERC20Recoverable.sol",
                "id": 2,
                "nodeType": "ImportDirective",
                "scope": 137,
                "sourceUnit": 1654,
                "src": "1362:32:0",
                "symbolAliases": [],
                "unitAlias": ""
            },
            {
                "absolutePath": "c:/Users/luziu/Documents/aktionariat/contracts/src/ERC20Draggable.sol",
                "file": "./ERC20Draggable.sol",
                "id": 3,
                "nodeType": "ImportDirective",
                "scope": 137,
                "sourceUnit": 1065,
                "src": "1396:30:0",
                "symbolAliases": [],
                "unitAlias": ""
            },
            {
                "abstract": false,
                "baseContracts": [
                    {
                        "baseName": {
                            "id": 5,
                            "name": "ERC20Recoverable",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 1653,
                            "src": "3041:16:0"
                        },
                        "id": 6,
                        "nodeType": "InheritanceSpecifier",
                        "src": "3041:16:0"
                    },
                    {
                        "baseName": {
                            "id": 7,
                            "name": "ERC20Draggable",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 1023,
                            "src": "3059:14:0"
                        },
                        "id": 8,
                        "nodeType": "InheritanceSpecifier",
                        "src": "3059:14:0"
                    }
                ],
                "contractDependencies": [
                    539,
                    1023,
                    1653,
                    1746,
                    1758
                ],
                "contractKind": "contract",
                "documentation": {
                    "id": 4,
                    "nodeType": "StructuredDocumentation",
                    "src": "1430:1579:0",
                    "text": " @title Draggable CompanyName AG Shares\n @author Luzius Meisser, luzius@meissereconomics.com\n This is an ERC-20 token representing shares of CompanyName AG that are bound to\n a shareholder agreement that can be found at the URL defined in the constant 'terms'.\n The shareholder agreement is partially enforced through this smart contract. The agreement\n is designed to facilitate a complete acquisition of the firm even if a minority of shareholders\n disagree with the acquisition, to protect the interest of the minority shareholders by requiring\n the acquirer to offer the same conditions to everyone when acquiring the company, and to\n facilitate an update of the shareholder agreement even if a minority of the shareholders that\n are bound to this agreement disagree. The name \"draggable\" stems from the convention of calling\n the right to drag a minority along with a sale of the company \"drag-along\" rights. The name is\n chosen to ensure that token holders are aware that they are bound to such an agreement.\n The percentage of token holders that must agree with an update of the terms is defined by the\n constant UPDATE_QUORUM. The percentage of yes-votes that is needed to successfully complete an\n acquisition is defined in the constant ACQUISITION_QUORUM. Note that the update quorum is based\n on the total number of tokens in circulation. In contrast, the acquisition quorum is based on the\n number of votes cast during the voting period, not taking into account those who did not bother\n to vote."
                },
                "fullyImplemented": true,
                "id": 118,
                "linearizedBaseContracts": [
                    118,
                    1023,
                    1758,
                    1653,
                    539,
                    1746
                ],
                "name": "DraggableShares",
                "nodeType": "ContractDefinition",
                "nodes": [
                    {
                        "constant": false,
                        "functionSelector": "d5025625",
                        "id": 10,
                        "mutability": "mutable",
                        "name": "terms",
                        "nodeType": "VariableDeclaration",
                        "scope": 118,
                        "src": "3083:19:0",
                        "stateVariable": true,
                        "storageLocation": "default",
                        "typeDescriptions": {
                            "typeIdentifier": "t_string_storage",
                            "typeString": "string"
                        },
                        "typeName": {
                            "id": 9,
                            "name": "string",
                            "nodeType": "ElementaryTypeName",
                            "src": "3083:6:0",
                            "typeDescriptions": {
                                "typeIdentifier": "t_string_storage_ptr",
                                "typeString": "string"
                            }
                        },
                        "visibility": "public"
                    },
                    {
                        "body": {
                            "id": 35,
                            "nodeType": "Block",
                            "src": "3345:225:0",
                            "statements": [
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "hexValue": "66616c7365",
                                                "id": 28,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "bool",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "3398:5:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                },
                                                "value": "false"
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            ],
                                            "expression": {
                                                "arguments": [
                                                    {
                                                        "id": 25,
                                                        "name": "wrappedToken",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 15,
                                                        "src": "3369:12:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        }
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        }
                                                    ],
                                                    "id": 24,
                                                    "name": "IRecoverable",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 136,
                                                    "src": "3356:12:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_type$_t_contract$_IRecoverable_$136_$",
                                                        "typeString": "type(contract IRecoverable)"
                                                    }
                                                },
                                                "id": 26,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "typeConversion",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "3356:26:0",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_contract$_IRecoverable_$136",
                                                    "typeString": "contract IRecoverable"
                                                }
                                            },
                                            "id": 27,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "setRecoverable",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 123,
                                            "src": "3356:41:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_external_nonpayable$_t_bool_$returns$__$",
                                                "typeString": "function (bool) external"
                                            }
                                        },
                                        "id": 29,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "3356:48:0",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 30,
                                    "nodeType": "ExpressionStatement",
                                    "src": "3356:48:0"
                                },
                                {
                                    "expression": {
                                        "id": 33,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftHandSide": {
                                            "id": 31,
                                            "name": "terms",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 10,
                                            "src": "3415:5:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_string_storage",
                                                "typeString": "string storage ref"
                                            }
                                        },
                                        "nodeType": "Assignment",
                                        "operator": "=",
                                        "rightHandSide": {
                                            "id": 32,
                                            "name": "_terms",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 13,
                                            "src": "3423:6:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_string_memory_ptr",
                                                "typeString": "string memory"
                                            }
                                        },
                                        "src": "3415:14:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_string_storage",
                                            "typeString": "string storage ref"
                                        }
                                    },
                                    "id": 34,
                                    "nodeType": "ExpressionStatement",
                                    "src": "3415:14:0"
                                }
                            ]
                        },
                        "documentation": {
                            "id": 11,
                            "nodeType": "StructuredDocumentation",
                            "src": "3111:110:0",
                            "text": " Designed to be used with the Crypto Franc as currency token. See also parent constructor."
                        },
                        "id": 36,
                        "implemented": true,
                        "kind": "constructor",
                        "modifiers": [
                            {
                                "arguments": [
                                    {
                                        "id": 20,
                                        "name": "wrappedToken",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 15,
                                        "src": "3323:12:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    {
                                        "id": 21,
                                        "name": "quorum",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 17,
                                        "src": "3337:6:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    }
                                ],
                                "id": 22,
                                "modifierName": {
                                    "id": 19,
                                    "name": "ERC20Draggable",
                                    "nodeType": "IdentifierPath",
                                    "referencedDeclaration": 1023,
                                    "src": "3308:14:0"
                                },
                                "nodeType": "ModifierInvocation",
                                "src": "3308:36:0"
                            }
                        ],
                        "name": "",
                        "nodeType": "FunctionDefinition",
                        "parameters": {
                            "id": 18,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 13,
                                    "mutability": "mutable",
                                    "name": "_terms",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 36,
                                    "src": "3239:20:0",
                                    "stateVariable": false,
                                    "storageLocation": "memory",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_string_memory_ptr",
                                        "typeString": "string"
                                    },
                                    "typeName": {
                                        "id": 12,
                                        "name": "string",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "3239:6:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_string_storage_ptr",
                                            "typeString": "string"
                                        }
                                    },
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 15,
                                    "mutability": "mutable",
                                    "name": "wrappedToken",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 36,
                                    "src": "3261:20:0",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                    },
                                    "typeName": {
                                        "id": 14,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "3261:7:0",
                                        "stateMutability": "nonpayable",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 17,
                                    "mutability": "mutable",
                                    "name": "quorum",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 36,
                                    "src": "3283:14:0",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                    },
                                    "typeName": {
                                        "id": 16,
                                        "name": "uint256",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "3283:7:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "3238:60:0"
                        },
                        "returnParameters": {
                            "id": 23,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "3345:0:0"
                        },
                        "scope": 118,
                        "src": "3227:343:0",
                        "stateMutability": "nonpayable",
                        "virtual": false,
                        "visibility": "public"
                    },
                    {
                        "baseFunctions": [
                            213,
                            1447
                        ],
                        "body": {
                            "id": 54,
                            "nodeType": "Block",
                            "src": "3679:51:0",
                            "statements": [
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "id": 50,
                                                "name": "to",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 38,
                                                "src": "3712:2:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            {
                                                "id": 51,
                                                "name": "value",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 40,
                                                "src": "3716:5:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                },
                                                {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            ],
                                            "expression": {
                                                "id": 48,
                                                "name": "super",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 4294967271,
                                                "src": "3697:5:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_type$_t_super$_DraggableShares_$118_$",
                                                    "typeString": "type(contract super DraggableShares)"
                                                }
                                            },
                                            "id": 49,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "transfer",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 1447,
                                            "src": "3697:14:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                                "typeString": "function (address,uint256) returns (bool)"
                                            }
                                        },
                                        "id": 52,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "3697:25:0",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                        }
                                    },
                                    "functionReturnParameters": 47,
                                    "id": 53,
                                    "nodeType": "Return",
                                    "src": "3690:32:0"
                                }
                            ]
                        },
                        "functionSelector": "a9059cbb",
                        "id": 55,
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [],
                        "name": "transfer",
                        "nodeType": "FunctionDefinition",
                        "overrides": {
                            "id": 44,
                            "nodeType": "OverrideSpecifier",
                            "overrides": [
                                {
                                    "id": 42,
                                    "name": "ERC20Recoverable",
                                    "nodeType": "IdentifierPath",
                                    "referencedDeclaration": 1653,
                                    "src": "3632:16:0"
                                },
                                {
                                    "id": 43,
                                    "name": "ERC20",
                                    "nodeType": "IdentifierPath",
                                    "referencedDeclaration": 539,
                                    "src": "3650:5:0"
                                }
                            ],
                            "src": "3623:33:0"
                        },
                        "parameters": {
                            "id": 41,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 38,
                                    "mutability": "mutable",
                                    "name": "to",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 55,
                                    "src": "3596:10:0",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                    },
                                    "typeName": {
                                        "id": 37,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "3596:7:0",
                                        "stateMutability": "nonpayable",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 40,
                                    "mutability": "mutable",
                                    "name": "value",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 55,
                                    "src": "3608:13:0",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                    },
                                    "typeName": {
                                        "id": 39,
                                        "name": "uint256",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "3608:7:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "3595:27:0"
                        },
                        "returnParameters": {
                            "id": 47,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 46,
                                    "mutability": "mutable",
                                    "name": "",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 55,
                                    "src": "3673:4:0",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                    },
                                    "typeName": {
                                        "id": 45,
                                        "name": "bool",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "3673:4:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "3672:6:0"
                        },
                        "scope": 118,
                        "src": "3578:152:0",
                        "stateMutability": "nonpayable",
                        "virtual": false,
                        "visibility": "public"
                    },
                    {
                        "baseFunctions": [
                            1172
                        ],
                        "body": {
                            "id": 70,
                            "nodeType": "Block",
                            "src": "3804:74:0",
                            "statements": [
                                {
                                    "expression": {
                                        "arguments": [],
                                        "expression": {
                                            "argumentTypes": [],
                                            "expression": {
                                                "arguments": [
                                                    {
                                                        "arguments": [
                                                            {
                                                                "id": 64,
                                                                "name": "wrapped",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [],
                                                                "referencedDeclaration": 563,
                                                                "src": "3843:7:0",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_contract$_IERC20_$1746",
                                                                    "typeString": "contract IERC20"
                                                                }
                                                            }
                                                        ],
                                                        "expression": {
                                                            "argumentTypes": [
                                                                {
                                                                    "typeIdentifier": "t_contract$_IERC20_$1746",
                                                                    "typeString": "contract IERC20"
                                                                }
                                                            ],
                                                            "id": 63,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": true,
                                                            "lValueRequested": false,
                                                            "nodeType": "ElementaryTypeNameExpression",
                                                            "src": "3835:7:0",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_type$_t_address_$",
                                                                "typeString": "type(address)"
                                                            },
                                                            "typeName": {
                                                                "id": 62,
                                                                "name": "address",
                                                                "nodeType": "ElementaryTypeName",
                                                                "src": "3835:7:0",
                                                                "typeDescriptions": {}
                                                            }
                                                        },
                                                        "id": 65,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "kind": "typeConversion",
                                                        "lValueRequested": false,
                                                        "names": [],
                                                        "nodeType": "FunctionCall",
                                                        "src": "3835:16:0",
                                                        "tryCall": false,
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        }
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        }
                                                    ],
                                                    "id": 61,
                                                    "name": "IRecoverable",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 136,
                                                    "src": "3822:12:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_type$_t_contract$_IRecoverable_$136_$",
                                                        "typeString": "type(contract IRecoverable)"
                                                    }
                                                },
                                                "id": 66,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "typeConversion",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "3822:30:0",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_contract$_IRecoverable_$136",
                                                    "typeString": "contract IRecoverable"
                                                }
                                            },
                                            "id": 67,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "getClaimDeleter",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 135,
                                            "src": "3822:46:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                                                "typeString": "function () view external returns (address)"
                                            }
                                        },
                                        "id": 68,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "3822:48:0",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "functionReturnParameters": 60,
                                    "id": 69,
                                    "nodeType": "Return",
                                    "src": "3815:55:0"
                                }
                            ]
                        },
                        "functionSelector": "2a0a4ed5",
                        "id": 71,
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [],
                        "name": "getClaimDeleter",
                        "nodeType": "FunctionDefinition",
                        "overrides": {
                            "id": 57,
                            "nodeType": "OverrideSpecifier",
                            "overrides": [],
                            "src": "3777:8:0"
                        },
                        "parameters": {
                            "id": 56,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "3762:2:0"
                        },
                        "returnParameters": {
                            "id": 60,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 59,
                                    "mutability": "mutable",
                                    "name": "",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 71,
                                    "src": "3795:7:0",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                    },
                                    "typeName": {
                                        "id": 58,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "3795:7:0",
                                        "stateMutability": "nonpayable",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "3794:9:0"
                        },
                        "scope": 118,
                        "src": "3738:140:0",
                        "stateMutability": "view",
                        "virtual": false,
                        "visibility": "public"
                    },
                    {
                        "baseFunctions": [
                            1125
                        ],
                        "body": {
                            "id": 116,
                            "nodeType": "Block",
                            "src": "3976:558:0",
                            "statements": [
                                {
                                    "assignments": [
                                        80
                                    ],
                                    "declarations": [
                                        {
                                            "constant": false,
                                            "id": 80,
                                            "mutability": "mutable",
                                            "name": "rate",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 116,
                                            "src": "3987:12:0",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            },
                                            "typeName": {
                                                "id": 79,
                                                "name": "uint256",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "3987:7:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "id": 85,
                                    "initialValue": {
                                        "arguments": [
                                            {
                                                "id": 83,
                                                "name": "collateralType",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 73,
                                                "src": "4026:14:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            ],
                                            "expression": {
                                                "id": 81,
                                                "name": "super",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 4294967271,
                                                "src": "4002:5:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_type$_t_super$_DraggableShares_$118_$",
                                                    "typeString": "type(contract super DraggableShares)"
                                                }
                                            },
                                            "id": 82,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "getCollateralRate",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 1125,
                                            "src": "4002:23:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                                                "typeString": "function (address) view returns (uint256)"
                                            }
                                        },
                                        "id": 84,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "4002:39:0",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "nodeType": "VariableDeclarationStatement",
                                    "src": "3987:54:0"
                                },
                                {
                                    "condition": {
                                        "commonType": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        },
                                        "id": 88,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                            "id": 86,
                                            "name": "rate",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 80,
                                            "src": "4056:4:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": ">",
                                        "rightExpression": {
                                            "hexValue": "30",
                                            "id": 87,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "number",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "4063:1:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_rational_0_by_1",
                                                "typeString": "int_const 0"
                                            },
                                            "value": "0"
                                        },
                                        "src": "4056:8:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                        }
                                    },
                                    "falseBody": {
                                        "condition": {
                                            "commonType": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            },
                                            "id": 97,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "leftExpression": {
                                                "id": 92,
                                                "name": "collateralType",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 73,
                                                "src": "4114:14:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            "nodeType": "BinaryOperation",
                                            "operator": "==",
                                            "rightExpression": {
                                                "arguments": [
                                                    {
                                                        "id": 95,
                                                        "name": "wrapped",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 563,
                                                        "src": "4140:7:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_contract$_IERC20_$1746",
                                                            "typeString": "contract IERC20"
                                                        }
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_contract$_IERC20_$1746",
                                                            "typeString": "contract IERC20"
                                                        }
                                                    ],
                                                    "id": 94,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "lValueRequested": false,
                                                    "nodeType": "ElementaryTypeNameExpression",
                                                    "src": "4132:7:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_type$_t_address_$",
                                                        "typeString": "type(address)"
                                                    },
                                                    "typeName": {
                                                        "id": 93,
                                                        "name": "address",
                                                        "nodeType": "ElementaryTypeName",
                                                        "src": "4132:7:0",
                                                        "typeDescriptions": {}
                                                    }
                                                },
                                                "id": 96,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "typeConversion",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "4132:16:0",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            "src": "4114:34:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_bool",
                                                "typeString": "bool"
                                            }
                                        },
                                        "falseBody": {
                                            "id": 113,
                                            "nodeType": "Block",
                                            "src": "4212:315:0",
                                            "statements": [
                                                {
                                                    "expression": {
                                                        "commonType": {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        },
                                                        "id": 111,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "leftExpression": {
                                                            "arguments": [
                                                                {
                                                                    "id": 108,
                                                                    "name": "collateralType",
                                                                    "nodeType": "Identifier",
                                                                    "overloadedDeclarations": [],
                                                                    "referencedDeclaration": 73,
                                                                    "src": "4475:14:0",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_address",
                                                                        "typeString": "address"
                                                                    }
                                                                }
                                                            ],
                                                            "expression": {
                                                                "argumentTypes": [
                                                                    {
                                                                        "typeIdentifier": "t_address",
                                                                        "typeString": "address"
                                                                    }
                                                                ],
                                                                "expression": {
                                                                    "arguments": [
                                                                        {
                                                                            "arguments": [
                                                                                {
                                                                                    "id": 104,
                                                                                    "name": "wrapped",
                                                                                    "nodeType": "Identifier",
                                                                                    "overloadedDeclarations": [],
                                                                                    "referencedDeclaration": 563,
                                                                                    "src": "4447:7:0",
                                                                                    "typeDescriptions": {
                                                                                        "typeIdentifier": "t_contract$_IERC20_$1746",
                                                                                        "typeString": "contract IERC20"
                                                                                    }
                                                                                }
                                                                            ],
                                                                            "expression": {
                                                                                "argumentTypes": [
                                                                                    {
                                                                                        "typeIdentifier": "t_contract$_IERC20_$1746",
                                                                                        "typeString": "contract IERC20"
                                                                                    }
                                                                                ],
                                                                                "id": 103,
                                                                                "isConstant": false,
                                                                                "isLValue": false,
                                                                                "isPure": true,
                                                                                "lValueRequested": false,
                                                                                "nodeType": "ElementaryTypeNameExpression",
                                                                                "src": "4439:7:0",
                                                                                "typeDescriptions": {
                                                                                    "typeIdentifier": "t_type$_t_address_$",
                                                                                    "typeString": "type(address)"
                                                                                },
                                                                                "typeName": {
                                                                                    "id": 102,
                                                                                    "name": "address",
                                                                                    "nodeType": "ElementaryTypeName",
                                                                                    "src": "4439:7:0",
                                                                                    "typeDescriptions": {}
                                                                                }
                                                                            },
                                                                            "id": 105,
                                                                            "isConstant": false,
                                                                            "isLValue": false,
                                                                            "isPure": false,
                                                                            "kind": "typeConversion",
                                                                            "lValueRequested": false,
                                                                            "names": [],
                                                                            "nodeType": "FunctionCall",
                                                                            "src": "4439:16:0",
                                                                            "tryCall": false,
                                                                            "typeDescriptions": {
                                                                                "typeIdentifier": "t_address",
                                                                                "typeString": "address"
                                                                            }
                                                                        }
                                                                    ],
                                                                    "expression": {
                                                                        "argumentTypes": [
                                                                            {
                                                                                "typeIdentifier": "t_address",
                                                                                "typeString": "address"
                                                                            }
                                                                        ],
                                                                        "id": 101,
                                                                        "name": "IRecoverable",
                                                                        "nodeType": "Identifier",
                                                                        "overloadedDeclarations": [],
                                                                        "referencedDeclaration": 136,
                                                                        "src": "4426:12:0",
                                                                        "typeDescriptions": {
                                                                            "typeIdentifier": "t_type$_t_contract$_IRecoverable_$136_$",
                                                                            "typeString": "type(contract IRecoverable)"
                                                                        }
                                                                    },
                                                                    "id": 106,
                                                                    "isConstant": false,
                                                                    "isLValue": false,
                                                                    "isPure": false,
                                                                    "kind": "typeConversion",
                                                                    "lValueRequested": false,
                                                                    "names": [],
                                                                    "nodeType": "FunctionCall",
                                                                    "src": "4426:30:0",
                                                                    "tryCall": false,
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_contract$_IRecoverable_$136",
                                                                        "typeString": "contract IRecoverable"
                                                                    }
                                                                },
                                                                "id": 107,
                                                                "isConstant": false,
                                                                "isLValue": false,
                                                                "isPure": false,
                                                                "lValueRequested": false,
                                                                "memberName": "getCollateralRate",
                                                                "nodeType": "MemberAccess",
                                                                "referencedDeclaration": 130,
                                                                "src": "4426:48:0",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                                                    "typeString": "function (address) view external returns (uint256)"
                                                                }
                                                            },
                                                            "id": 109,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": false,
                                                            "kind": "functionCall",
                                                            "lValueRequested": false,
                                                            "names": [],
                                                            "nodeType": "FunctionCall",
                                                            "src": "4426:64:0",
                                                            "tryCall": false,
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_uint256",
                                                                "typeString": "uint256"
                                                            }
                                                        },
                                                        "nodeType": "BinaryOperation",
                                                        "operator": "*",
                                                        "rightExpression": {
                                                            "id": 110,
                                                            "name": "unwrapConversionFactor",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 566,
                                                            "src": "4493:22:0",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_uint256",
                                                                "typeString": "uint256"
                                                            }
                                                        },
                                                        "src": "4426:89:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        }
                                                    },
                                                    "functionReturnParameters": 78,
                                                    "id": 112,
                                                    "nodeType": "Return",
                                                    "src": "4419:96:0"
                                                }
                                            ]
                                        },
                                        "id": 114,
                                        "nodeType": "IfStatement",
                                        "src": "4110:417:0",
                                        "trueBody": {
                                            "id": 100,
                                            "nodeType": "Block",
                                            "src": "4150:56:0",
                                            "statements": [
                                                {
                                                    "expression": {
                                                        "id": 98,
                                                        "name": "unwrapConversionFactor",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 566,
                                                        "src": "4172:22:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        }
                                                    },
                                                    "functionReturnParameters": 78,
                                                    "id": 99,
                                                    "nodeType": "Return",
                                                    "src": "4165:29:0"
                                                }
                                            ]
                                        }
                                    },
                                    "id": 115,
                                    "nodeType": "IfStatement",
                                    "src": "4052:475:0",
                                    "trueBody": {
                                        "id": 91,
                                        "nodeType": "Block",
                                        "src": "4066:38:0",
                                        "statements": [
                                            {
                                                "expression": {
                                                    "id": 89,
                                                    "name": "rate",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 80,
                                                    "src": "4088:4:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    }
                                                },
                                                "functionReturnParameters": 78,
                                                "id": 90,
                                                "nodeType": "Return",
                                                "src": "4081:11:0"
                                            }
                                        ]
                                    }
                                }
                            ]
                        },
                        "functionSelector": "77e071ad",
                        "id": 117,
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [],
                        "name": "getCollateralRate",
                        "nodeType": "FunctionDefinition",
                        "overrides": {
                            "id": 75,
                            "nodeType": "OverrideSpecifier",
                            "overrides": [],
                            "src": "3949:8:0"
                        },
                        "parameters": {
                            "id": 74,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 73,
                                    "mutability": "mutable",
                                    "name": "collateralType",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 117,
                                    "src": "3913:22:0",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                    },
                                    "typeName": {
                                        "id": 72,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "3913:7:0",
                                        "stateMutability": "nonpayable",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "3912:24:0"
                        },
                        "returnParameters": {
                            "id": 78,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 77,
                                    "mutability": "mutable",
                                    "name": "",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 117,
                                    "src": "3967:7:0",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                    },
                                    "typeName": {
                                        "id": 76,
                                        "name": "uint256",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "3967:7:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "3966:9:0"
                        },
                        "scope": 118,
                        "src": "3886:648:0",
                        "stateMutability": "view",
                        "virtual": false,
                        "visibility": "public"
                    }
                ],
                "scope": 137,
                "src": "3013:1526:0"
            },
            {
                "abstract": true,
                "baseContracts": [],
                "contractDependencies": [],
                "contractKind": "contract",
                "fullyImplemented": false,
                "id": 136,
                "linearizedBaseContracts": [
                    136
                ],
                "name": "IRecoverable",
                "nodeType": "ContractDefinition",
                "nodes": [
                    {
                        "functionSelector": "6427ed97",
                        "id": 123,
                        "implemented": false,
                        "kind": "function",
                        "modifiers": [],
                        "name": "setRecoverable",
                        "nodeType": "FunctionDefinition",
                        "parameters": {
                            "id": 121,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 120,
                                    "mutability": "mutable",
                                    "name": "",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 123,
                                    "src": "4605:4:0",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                    },
                                    "typeName": {
                                        "id": 119,
                                        "name": "bool",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "4605:4:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "4604:6:0"
                        },
                        "returnParameters": {
                            "id": 122,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "4625:0:0"
                        },
                        "scope": 136,
                        "src": "4581:45:0",
                        "stateMutability": "nonpayable",
                        "virtual": true,
                        "visibility": "public"
                    },
                    {
                        "functionSelector": "77e071ad",
                        "id": 130,
                        "implemented": false,
                        "kind": "function",
                        "modifiers": [],
                        "name": "getCollateralRate",
                        "nodeType": "FunctionDefinition",
                        "parameters": {
                            "id": 126,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 125,
                                    "mutability": "mutable",
                                    "name": "",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 130,
                                    "src": "4659:7:0",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                    },
                                    "typeName": {
                                        "id": 124,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "4659:7:0",
                                        "stateMutability": "nonpayable",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "4658:9:0"
                        },
                        "returnParameters": {
                            "id": 129,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 128,
                                    "mutability": "mutable",
                                    "name": "",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 130,
                                    "src": "4697:7:0",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                    },
                                    "typeName": {
                                        "id": 127,
                                        "name": "uint256",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "4697:7:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "4696:9:0"
                        },
                        "scope": 136,
                        "src": "4632:74:0",
                        "stateMutability": "view",
                        "virtual": true,
                        "visibility": "public"
                    },
                    {
                        "functionSelector": "2a0a4ed5",
                        "id": 135,
                        "implemented": false,
                        "kind": "function",
                        "modifiers": [],
                        "name": "getClaimDeleter",
                        "nodeType": "FunctionDefinition",
                        "parameters": {
                            "id": 131,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "4736:2:0"
                        },
                        "returnParameters": {
                            "id": 134,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 133,
                                    "mutability": "mutable",
                                    "name": "",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 135,
                                    "src": "4768:7:0",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                    },
                                    "typeName": {
                                        "id": 132,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "4768:7:0",
                                        "stateMutability": "nonpayable",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "4767:9:0"
                        },
                        "scope": 136,
                        "src": "4712:65:0",
                        "stateMutability": "view",
                        "virtual": true,
                        "visibility": "public"
                    }
                ],
                "scope": 137,
                "src": "4543:237:0"
            }
        ],
        "src": "1336:3446:0"
    },
    "functionHashes": {
        "OFFER_FACTORY()": "f4663075",
        "VALIDITY_PERIOD()": "0c43cd88",
        "VOTING_PERIOD()": "b1610d7e",
        "allowance(address,address)": "dd62ed3e",
        "approve(address,uint256)": "095ea7b3",
        "balanceOf(address)": "70a08231",
        "burn(uint256)": "42966c68",
        "claimPeriod()": "7dc2cd98",
        "claims(address)": "c6788bdd",
        "clearClaim()": "6b03ed5f",
        "customCollateralAddress()": "0c6f0e5d",
        "customCollateralRate()": "60918117",
        "decimals()": "313ce567",
        "declareLost(address,address)": "26773ddd",
        "decreaseAllowance(address,uint256)": "a457c2d7",
        "deleteClaim(address)": "32a7ae95",
        "drag(address,address)": "fcb79a7e",
        "getClaimDeleter()": "2a0a4ed5",
        "getClaimant(address)": "1e3b9de5",
        "getCollateral(address)": "9b56d6c9",
        "getCollateralRate(address)": "77e071ad",
        "getCollateralType(address)": "3bcc45ba",
        "getTimeStamp(address)": "eb470ebf",
        "increaseAllowance(address,uint256)": "39509351",
        "isBinding()": "9e4b5745",
        "isRecoveryEnabled(address)": "a3ec1883",
        "makeAcquisitionOffer(bytes32,uint256,address)": "dcc7d4ad",
        "migrate()": "8fd3ab80",
        "name()": "06fdde03",
        "notifyOfferEnded()": "32bc320b",
        "offer()": "c028df06",
        "onTokenTransfer(address,uint256,bytes)": "a4c0ed36",
        "quorum()": "1703a018",
        "recover(address)": "0cd865ec",
        "recoveryDisabled(address)": "b40e80d1",
        "setRecoverable(bool)": "6427ed97",
        "symbol()": "95d89b41",
        "terms()": "d5025625",
        "totalSupply()": "18160ddd",
        "transfer(address,uint256)": "a9059cbb",
        "transferAndCall(address,uint256,bytes)": "4000aea0",
        "transferFrom(address,address,uint256)": "23b872dd",
        "unwrap(uint256)": "de0e9a3e",
        "unwrapConversionFactor()": "0832e470",
        "wrap(address,uint256)": "bf376c7a",
        "wrapped()": "50e70d48"
    },
    "gasEstimates": {
        "creation": {
            "codeDepositCost": "1974600",
            "executionCost": "infinite",
            "totalCost": "infinite"
        },
        "external": {
            "OFFER_FACTORY()": "384",
            "VALIDITY_PERIOD()": "341",
            "VOTING_PERIOD()": "273",
            "allowance(address,address)": "infinite",
            "approve(address,uint256)": "22571",
            "balanceOf(address)": "1313",
            "burn(uint256)": "infinite",
            "claimPeriod()": "1118",
            "claims(address)": "3950",
            "clearClaim()": "infinite",
            "customCollateralAddress()": "1205",
            "customCollateralRate()": "1139",
            "decimals()": "1114",
            "declareLost(address,address)": "infinite",
            "decreaseAllowance(address,uint256)": "23626",
            "deleteClaim(address)": "infinite",
            "drag(address,address)": "infinite",
            "getClaimDeleter()": "infinite",
            "getClaimant(address)": "1415",
            "getCollateral(address)": "1315",
            "getCollateralRate(address)": "infinite",
            "getCollateralType(address)": "1459",
            "getTimeStamp(address)": "1380",
            "increaseAllowance(address,uint256)": "23652",
            "isBinding()": "1104",
            "isRecoveryEnabled(address)": "1368",
            "makeAcquisitionOffer(bytes32,uint256,address)": "infinite",
            "migrate()": "infinite",
            "name()": "infinite",
            "notifyOfferEnded()": "21929",
            "offer()": "1181",
            "onTokenTransfer(address,uint256,bytes)": "infinite",
            "quorum()": "1096",
            "recover(address)": "infinite",
            "recoveryDisabled(address)": "1325",
            "setRecoverable(bool)": "21321",
            "symbol()": "infinite",
            "terms()": "infinite",
            "totalSupply()": "1118",
            "transfer(address,uint256)": "infinite",
            "transferAndCall(address,uint256,bytes)": "infinite",
            "transferFrom(address,address,uint256)": "infinite",
            "unwrap(uint256)": "infinite",
            "unwrapConversionFactor()": "1097",
            "wrap(address,uint256)": "infinite",
            "wrapped()": "1159"
        }
    }
}