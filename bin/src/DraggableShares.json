{
    "contractName": "DraggableShares",
    "abi": [
        {
            "inputs": [
                {
                    "internalType": "string",
                    "name": "_terms",
                    "type": "string"
                },
                {
                    "internalType": "address",
                    "name": "offerFactory",
                    "type": "address"
                },
                {
                    "internalType": "address",
                    "name": "wrappedToken",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "quorum",
                    "type": "uint256"
                }
            ],
            "stateMutability": "nonpayable",
            "type": "constructor"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "owner",
                    "type": "address"
                },
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "spender",
                    "type": "address"
                },
                {
                    "indexed": false,
                    "internalType": "uint256",
                    "name": "value",
                    "type": "uint256"
                }
            ],
            "name": "Approval",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "lostAddress",
                    "type": "address"
                },
                {
                    "indexed": false,
                    "internalType": "uint256",
                    "name": "collateral",
                    "type": "uint256"
                }
            ],
            "name": "ClaimCleared",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "lostAddress",
                    "type": "address"
                },
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "claimant",
                    "type": "address"
                },
                {
                    "indexed": false,
                    "internalType": "uint256",
                    "name": "collateral",
                    "type": "uint256"
                }
            ],
            "name": "ClaimDeleted",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "lostAddress",
                    "type": "address"
                },
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "claimant",
                    "type": "address"
                },
                {
                    "indexed": false,
                    "internalType": "uint256",
                    "name": "balance",
                    "type": "uint256"
                }
            ],
            "name": "ClaimMade",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": false,
                    "internalType": "uint256",
                    "name": "newClaimPeriodInDays",
                    "type": "uint256"
                }
            ],
            "name": "ClaimPeriodChanged",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "lostAddress",
                    "type": "address"
                },
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "claimant",
                    "type": "address"
                },
                {
                    "indexed": false,
                    "internalType": "uint256",
                    "name": "collateral",
                    "type": "uint256"
                }
            ],
            "name": "ClaimResolved",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": false,
                    "internalType": "address",
                    "name": "newCustomCollateralAddress",
                    "type": "address"
                },
                {
                    "indexed": false,
                    "internalType": "uint256",
                    "name": "newCustomCollareralRate",
                    "type": "uint256"
                }
            ],
            "name": "CustomClaimCollateralChanged",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": false,
                    "internalType": "address",
                    "name": "newContractAddress",
                    "type": "address"
                }
            ],
            "name": "MigrationSucceeded",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "from",
                    "type": "address"
                },
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "to",
                    "type": "address"
                },
                {
                    "indexed": false,
                    "internalType": "uint256",
                    "name": "value",
                    "type": "uint256"
                }
            ],
            "name": "Transfer",
            "type": "event"
        },
        {
            "inputs": [],
            "name": "VOTING_PERIOD",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "owner",
                    "type": "address"
                },
                {
                    "internalType": "address",
                    "name": "spender",
                    "type": "address"
                }
            ],
            "name": "allowance",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "spender",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "value",
                    "type": "uint256"
                }
            ],
            "name": "approve",
            "outputs": [
                {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool"
                }
            ],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "account",
                    "type": "address"
                }
            ],
            "name": "balanceOf",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "uint256",
                    "name": "amount",
                    "type": "uint256"
                }
            ],
            "name": "burn",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "claimPeriod",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address"
                }
            ],
            "name": "claims",
            "outputs": [
                {
                    "internalType": "address",
                    "name": "claimant",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "collateral",
                    "type": "uint256"
                },
                {
                    "internalType": "uint256",
                    "name": "timestamp",
                    "type": "uint256"
                },
                {
                    "internalType": "address",
                    "name": "currencyUsed",
                    "type": "address"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "clearClaim",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "customCollateralAddress",
            "outputs": [
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "customCollateralRate",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "decimals",
            "outputs": [
                {
                    "internalType": "uint8",
                    "name": "",
                    "type": "uint8"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "collateralType",
                    "type": "address"
                },
                {
                    "internalType": "address",
                    "name": "lostAddress",
                    "type": "address"
                }
            ],
            "name": "declareLost",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "spender",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "subtractedValue",
                    "type": "uint256"
                }
            ],
            "name": "decreaseAllowance",
            "outputs": [
                {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool"
                }
            ],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "lostAddress",
                    "type": "address"
                }
            ],
            "name": "deleteClaim",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "buyer",
                    "type": "address"
                },
                {
                    "internalType": "address",
                    "name": "currency",
                    "type": "address"
                }
            ],
            "name": "drag",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "factory",
            "outputs": [
                {
                    "internalType": "contract IOfferFactory",
                    "name": "",
                    "type": "address"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "getClaimDeleter",
            "outputs": [
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "lostAddress",
                    "type": "address"
                }
            ],
            "name": "getClaimant",
            "outputs": [
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "lostAddress",
                    "type": "address"
                }
            ],
            "name": "getCollateral",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "collateralType",
                    "type": "address"
                }
            ],
            "name": "getCollateralRate",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "lostAddress",
                    "type": "address"
                }
            ],
            "name": "getCollateralType",
            "outputs": [
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "lostAddress",
                    "type": "address"
                }
            ],
            "name": "getTimeStamp",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "spender",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "addedValue",
                    "type": "uint256"
                }
            ],
            "name": "increaseAllowance",
            "outputs": [
                {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool"
                }
            ],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "isBinding",
            "outputs": [
                {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "target",
                    "type": "address"
                }
            ],
            "name": "isRecoveryEnabled",
            "outputs": [
                {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "bytes32",
                    "name": "salt",
                    "type": "bytes32"
                },
                {
                    "internalType": "uint256",
                    "name": "pricePerShare",
                    "type": "uint256"
                },
                {
                    "internalType": "address",
                    "name": "currency",
                    "type": "address"
                }
            ],
            "name": "makeAcquisitionOffer",
            "outputs": [],
            "stateMutability": "payable",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "migrate",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "name",
            "outputs": [
                {
                    "internalType": "string",
                    "name": "",
                    "type": "string"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "notifyOfferEnded",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "offer",
            "outputs": [
                {
                    "internalType": "contract IOffer",
                    "name": "",
                    "type": "address"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "from",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "amount",
                    "type": "uint256"
                },
                {
                    "internalType": "bytes",
                    "name": "",
                    "type": "bytes"
                }
            ],
            "name": "onTokenTransfer",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "quorum",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "lostAddress",
                    "type": "address"
                }
            ],
            "name": "recover",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address"
                }
            ],
            "name": "recoveryDisabled",
            "outputs": [
                {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "bool",
                    "name": "enabled",
                    "type": "bool"
                }
            ],
            "name": "setRecoverable",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "symbol",
            "outputs": [
                {
                    "internalType": "string",
                    "name": "",
                    "type": "string"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "terms",
            "outputs": [
                {
                    "internalType": "string",
                    "name": "",
                    "type": "string"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "totalSupply",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "to",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "value",
                    "type": "uint256"
                }
            ],
            "name": "transfer",
            "outputs": [
                {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool"
                }
            ],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "recipient",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "amount",
                    "type": "uint256"
                },
                {
                    "internalType": "bytes",
                    "name": "data",
                    "type": "bytes"
                }
            ],
            "name": "transferAndCall",
            "outputs": [
                {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool"
                }
            ],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "sender",
                    "type": "address"
                },
                {
                    "internalType": "address",
                    "name": "recipient",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "amount",
                    "type": "uint256"
                }
            ],
            "name": "transferFrom",
            "outputs": [
                {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool"
                }
            ],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "uint256",
                    "name": "amount",
                    "type": "uint256"
                }
            ],
            "name": "unwrap",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "unwrapConversionFactor",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "shareholder",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "amount",
                    "type": "uint256"
                }
            ],
            "name": "wrap",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "wrapped",
            "outputs": [
                {
                    "internalType": "contract IERC20",
                    "name": "",
                    "type": "address"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        }
    ],
    "metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_terms\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"offerFactory\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"wrappedToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"quorum\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"lostAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"collateral\",\"type\":\"uint256\"}],\"name\":\"ClaimCleared\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"lostAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"claimant\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"collateral\",\"type\":\"uint256\"}],\"name\":\"ClaimDeleted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"lostAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"claimant\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"name\":\"ClaimMade\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newClaimPeriodInDays\",\"type\":\"uint256\"}],\"name\":\"ClaimPeriodChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"lostAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"claimant\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"collateral\",\"type\":\"uint256\"}],\"name\":\"ClaimResolved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newCustomCollateralAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newCustomCollareralRate\",\"type\":\"uint256\"}],\"name\":\"CustomClaimCollateralChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newContractAddress\",\"type\":\"address\"}],\"name\":\"MigrationSucceeded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"VOTING_PERIOD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimPeriod\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"claims\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"claimant\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"collateral\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"currencyUsed\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"clearClaim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"customCollateralAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"customCollateralRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"collateralType\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"lostAddress\",\"type\":\"address\"}],\"name\":\"declareLost\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"lostAddress\",\"type\":\"address\"}],\"name\":\"deleteClaim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"}],\"name\":\"drag\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"contract IOfferFactory\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getClaimDeleter\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"lostAddress\",\"type\":\"address\"}],\"name\":\"getClaimant\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"lostAddress\",\"type\":\"address\"}],\"name\":\"getCollateral\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"collateralType\",\"type\":\"address\"}],\"name\":\"getCollateralRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"lostAddress\",\"type\":\"address\"}],\"name\":\"getCollateralType\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"lostAddress\",\"type\":\"address\"}],\"name\":\"getTimeStamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isBinding\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"isRecoveryEnabled\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"pricePerShare\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"}],\"name\":\"makeAcquisitionOffer\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"notifyOfferEnded\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"offer\",\"outputs\":[{\"internalType\":\"contract IOffer\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onTokenTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"quorum\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"lostAddress\",\"type\":\"address\"}],\"name\":\"recover\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"recoveryDisabled\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"enabled\",\"type\":\"bool\"}],\"name\":\"setRecoverable\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"terms\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"unwrap\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unwrapConversionFactor\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"shareholder\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"wrap\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"wrapped\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Luzius Meisser, luzius@meissereconomics.com This is an ERC-20 token representing shares of CompanyName AG that are bound to a shareholder agreement that can be found at the URL defined in the constant 'terms'. The shareholder agreement is partially enforced through this smart contract. The agreement is designed to facilitate a complete acquisition of the firm even if a minority of shareholders disagree with the acquisition, to protect the interest of the minority shareholders by requiring the acquirer to offer the same conditions to everyone when acquiring the company, and to facilitate an update of the shareholder agreement even if a minority of the shareholders that are bound to this agreement disagree. The name \\\"draggable\\\" stems from the convention of calling the right to drag a minority along with a sale of the company \\\"drag-along\\\" rights. The name is chosen to ensure that token holders are aware that they are bound to such an agreement. The percentage of token holders that must agree with an update of the terms is defined by the constant UPDATE_QUORUM. The percentage of yes-votes that is needed to successfully complete an acquisition is defined in the constant ACQUISITION_QUORUM. Note that the update quorum is based on the total number of tokens in circulation. In contrast, the acquisition quorum is based on the number of votes cast during the voting period, not taking into account those who did not bother to vote.\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See `IERC20.allowance`.\"},\"approve(address,uint256)\":{\"details\":\"See `IERC20.approve`. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See `IERC20.balanceOf`.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to `approve` that can be used as a mitigation for problems described in `IERC20.approve`. Emits an `Approval` event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to `approve` that can be used as a mitigation for problems described in `IERC20.approve`. Emits an `Approval` event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"totalSupply()\":{\"details\":\"See `IERC20.totalSupply`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See `IERC20.transferFrom`. Emits an `Approval` event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of `ERC20`; Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `value`. - the caller must have allowance for `sender`'s tokens of at least `amount`.\"}},\"title\":\"Draggable CompanyName AG Shares\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"burn(uint256)\":{\"notice\":\"Burns both the token itself as well as the wrapped token! If you want to get out of the shareholder agreement, use unwrap after it has been deactivated by a majority vote or acquisition. Burning only works if wrapped token supports burning. Also, the exact meaning of this operation might depend on the circumstances. Burning and reussing the wrapped token does not free the sender from the legal obligations of the shareholder agreement.\"},\"clearClaim()\":{\"notice\":\"Clears a claim after the key has been found again and assigns the collateral to the \\\"lost\\\" address. This is the price an adverse claimer pays for filing a false claim and makes it risky to do so.\"},\"constructor\":{\"notice\":\"Designed to be used with the Crypto Franc as currency token. See also parent constructor.\"},\"declareLost(address,address)\":{\"notice\":\"Anyone can declare that the private key to a certain address was lost by calling declareLost providing a deposit/collateral. There are three possibilities of what can happen with the claim: 1) The claim period expires and the claimant can get the deposit and the shares back by calling recover 2) The \\\"lost\\\" private key is used at any time to call clearClaim. In that case, the claim is deleted and    the deposit sent to the shareholder (the owner of the private key). It is recommended to call recover    whenever someone transfers funds to let claims be resolved automatically when the \\\"lost\\\" private key is    used again. 3) The owner deletes the claim and assigns the deposit to the claimant. This is intended to be used to resolve    disputes. Generally, using this function implies that you have to trust the issuer of the tokens to handle    the situation well. As a rule of thumb, the contract owner should assume the owner of the lost address to be the    rightful owner of the deposit. It is highly recommended that the owner observes the claims made and informs the owners of the claimed addresses whenever a claim is made for their address (this of course is only possible if they are known to the owner, e.g. through a shareholder register). To prevent frontrunning attacks, a claim can only be made if the information revealed when calling \\\"declareLost\\\" was previously commited using the \\\"prepareClaim\\\" function.\"},\"deleteClaim(address)\":{\"notice\":\"This function is to be executed by the claim deleter only in case a dispute needs to be resolved manually.\"},\"getCollateralRate(address)\":{\"notice\":\"Returns the collateral rate for the given collateral type and 0 if that type of collateral is not accepted. By default, only the token itself is accepted at a rate of 1:1. Subclasses should override this method if they want to add additional types of collateral.\"},\"isBinding()\":{\"notice\":\"Indicates that the token holders are bound to the token terms and that: - Conversions back to the wrapped token (unwrap) are not allowed - The drag-along can be performed by making an according offer - They can be migrated to a new version of this contract in accordance with the terms\"},\"isRecoveryEnabled(address)\":{\"notice\":\"Some users might want to disable claims for their address completely. For example if they use a deep cold storage solution or paper wallet.\"},\"recover(address)\":{\"notice\":\"After the claim period has passed, the claimant can call this function to send the tokens on the lost address as well as the collateral to himself.\"},\"unwrap(uint256)\":{\"notice\":\"Decrease the number of drag-along tokens. The user gets back their shares in return \"},\"wrap(address,uint256)\":{\"notice\":\"Increases the number of drag-along tokens. Requires minter to deposit an equal amount of share tokens \"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"c:/Users/luziu/Documents/aktionariat/contracts/src/DraggableShares.sol\":\"DraggableShares\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"c:/Users/luziu/Documents/aktionariat/contracts/src/DraggableShares.sol\":{\"keccak256\":\"0xa3917089ff108dbb48f690e2f86e8c7672fc4d0becc79ecdae792e33adc893d7\",\"license\":\"LicenseRef-Aktionariat\",\"urls\":[\"bzz-raw://c9fd06c4a2a7e2a5703880d9ba5cdcd6bd779c1e8ea1c4af7ab51f3eec27bdf3\",\"dweb:/ipfs/QmVxv8jwyGeLESmEHmAqE2rs3C4xoiZYjwjsG2KMHPH966\"]},\"c:/Users/luziu/Documents/aktionariat/contracts/src/ERC20.sol\":{\"keccak256\":\"0x7589205fed6098c2c1f39106f2d87ddcab37301d5f3f9ef0852340e39c058247\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://652fbfb982c5ef52e9e6addc8d24a1a7b6e0a817c04c78e65c74f80f5fa408ba\",\"dweb:/ipfs/QmPxsUqFZRo4wTnURhLsPALxsJ8JCvcfFuZ3hxPwT1wRiK\"]},\"c:/Users/luziu/Documents/aktionariat/contracts/src/ERC20Draggable.sol\":{\"keccak256\":\"0x47ff6755a5918e8c2c875754f71ce3294336b53559209f97c821dc75603c8102\",\"license\":\"LicenseRef-Aktionariat\",\"urls\":[\"bzz-raw://166d0fdda363ee930b8d3df02a210aec599a996b0195df2c167d324179b2e468\",\"dweb:/ipfs/QmbabcU3h5jJN8b1yLFmnmDu6k58bwEYeFXxwquzPMSMtn\"]},\"c:/Users/luziu/Documents/aktionariat/contracts/src/ERC20Recoverable.sol\":{\"keccak256\":\"0x0a386ed93c20d20f9249e62fe92bdcc90dda77ed6b0d465e04e2399cf533f795\",\"license\":\"LicenseRef-Aktionariat\",\"urls\":[\"bzz-raw://87cdadcbd7eaf9315dc257c0c20099b4de116dc3b28aa3a358fe8e7a096cb315\",\"dweb:/ipfs/QmYfCc9Sfg2xahwyBf37ekTMnoMDteB1GqS53QnpPidz3g\"]},\"c:/Users/luziu/Documents/aktionariat/contracts/src/IERC20.sol\":{\"keccak256\":\"0xdd9ef23be041b279c4815ae1483703e0532d8839865b8081e12955a52d4e148f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2eef9ae3fc010bd8012716c89852c245aacf07474f3a52b84280f9f7958210fe\",\"dweb:/ipfs/QmSsjJBfgFw8PzaBTaZwCLzHkqM6pfS6NDrrFysNkCbS2M\"]},\"c:/Users/luziu/Documents/aktionariat/contracts/src/IERC677Receiver.sol\":{\"keccak256\":\"0xa1be3ece738b7e5231cbdb0f5d95e33015f917f8b9326083960deeee34b78752\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f13ac395559850cbf6ca4a35fc04c8b3ebbff238895ad228f47041d6520c96d6\",\"dweb:/ipfs/QmaEXT6Zxoz6jYQEMv4PDVuxt7LUick6Y3ebhuxRooJamK\"]}},\"version\":1}",
    "bytecode": "608060405262ed4e006004556000600b553480156200001d57600080fd5b5060405162002991380380620029918339810160408190526200004091620001b8565b6003805460ff19169055600a80546001600160a01b038086166001600160a01b031992831617909255600980549285169290911682179055600d829055604051636427ed9760e01b8152636427ed9790620000a190600090600401620002b6565b600060405180830381600087803b158015620000bc57600080fd5b505af1158015620000d1573d6000803e3d6000fd5b50508551620000ea9250600e91506020870190620000f5565b505050505062000314565b8280546200010390620002c1565b90600052602060002090601f01602090048101928262000127576000855562000172565b82601f106200014257805160ff191683800117855562000172565b8280016001018555821562000172579182015b828111156200017257825182559160200191906001019062000155565b506200018092915062000184565b5090565b5b8082111562000180576000815560010162000185565b80516001600160a01b0381168114620001b357600080fd5b919050565b60008060008060808587031215620001ce578384fd5b84516001600160401b0380821115620001e5578586fd5b818701915087601f830112620001f9578586fd5b8151818111156200020e576200020e620002fe565b6040516020601f8301601f1916820181018481118382101715620002365762000236620002fe565b60405282825284830181018b10156200024d578889fd5b8893505b8284101562000270578484018101518285018201529283019262000251565b828411156200028157888184840101525b81985062000291818b016200019b565b97505050505050620002a6604086016200019b565b6060959095015193969295505050565b901515815260200190565b600281046001821680620002d657607f821691505b60208210811415620002f857634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fd5b61266d80620003246000396000f3fe6080604052600436106102725760003560e01c806370a082311161014f578063b1610d7e116100c1578063d50256251161007a578063d5025625146106ed578063dcc7d4ad14610702578063dd62ed3e14610715578063de0e9a3e14610735578063eb470ebf14610755578063fcb79a7e1461077557610272565b8063b1610d7e1461063e578063b40e80d114610653578063bf376c7a14610673578063c028df0614610693578063c45a0155146106a8578063c6788bdd146106bd57610272565b80639b56d6c9116101135780639b56d6c9146105895780639e4b5745146105a9578063a3ec1883146105be578063a457c2d7146105de578063a4c0ed36146105fe578063a9059cbb1461061e57610272565b806370a082311461050a57806377e071ad1461052a5780637dc2cd981461054a5780638fd3ab801461055f57806395d89b411461057457610272565b8063313ce567116101e85780634000aea0116101ac5780634000aea01461046b57806342966c681461048b57806350e70d48146104ab57806360918117146104c05780636427ed97146104d55780636b03ed5f146104f557610272565b8063313ce567146103d457806332a7ae95146103f657806332bc320b14610416578063395093511461042b5780633bcc45ba1461044b57610272565b80631703a0181161023a5780631703a0181461033557806318160ddd1461034a5780631e3b9de51461035f57806323b872dd1461037f57806326773ddd1461039f5780632a0a4ed5146103bf57610272565b806306fdde03146102775780630832e470146102a2578063095ea7b3146102c45780630c6f0e5d146102f15780630cd865ec14610313575b600080fd5b34801561028357600080fd5b5061028c610795565b60405161029991906122a3565b60405180910390f35b3480156102ae57600080fd5b506102b761083a565b6040516102999190612502565b3480156102d057600080fd5b506102e46102df366004611f52565b610840565b6040516102999190612263565b3480156102fd57600080fd5b50610306610856565b604051610299919061219f565b34801561031f57600080fd5b5061033361032e366004611ea2565b610865565b005b34801561034157600080fd5b506102b7610a76565b34801561035657600080fd5b506102b7610a7c565b34801561036b57600080fd5b5061030661037a366004611ea2565b610a82565b34801561038b57600080fd5b506102e461039a366004611f12565b610aa3565b3480156103ab57600080fd5b506103336103ba366004611eda565b610af5565b3480156103cb57600080fd5b50610306610d13565b3480156103e057600080fd5b506103e9610d95565b604051610299919061250b565b34801561040257600080fd5b50610333610411366004611ea2565b610d9e565b34801561042257600080fd5b50610333610f79565b34801561043757600080fd5b506102e4610446366004611f52565b610f9f565b34801561045757600080fd5b50610306610466366004611ea2565b610fd6565b34801561047757600080fd5b506102e4610486366004611f7d565b610ff7565b34801561049757600080fd5b506103336104a6366004612114565b61107a565b3480156104b757600080fd5b5061030661110d565b3480156104cc57600080fd5b506102b761111c565b3480156104e157600080fd5b506103336104f0366004612001565b611122565b34801561050157600080fd5b50610333611141565b34801561051657600080fd5b506102b7610525366004611ea2565b61127c565b34801561053657600080fd5b506102b7610545366004611ea2565b611297565b34801561055657600080fd5b506102b761136d565b34801561056b57600080fd5b50610333611373565b34801561058057600080fd5b5061028c611411565b34801561059557600080fd5b506102b76105a4366004611ea2565b6114a2565b3480156105b557600080fd5b506102e46114c0565b3480156105ca57600080fd5b506102e46105d9366004611ea2565b6114c7565b3480156105ea57600080fd5b506102e46105f9366004611f52565b6114e6565b34801561060a57600080fd5b50610333610619366004611f7d565b61151d565b34801561062a57600080fd5b506102e4610639366004611f52565b611544565b34801561064a57600080fd5b506102b7611557565b34801561065f57600080fd5b506102e461066e366004611ea2565b61155e565b34801561067f57600080fd5b5061033361068e366004611f52565b611573565b34801561069f57600080fd5b50610306611610565b3480156106b457600080fd5b5061030661161f565b3480156106c957600080fd5b506106dd6106d8366004611ea2565b61162e565b6040516102999493929190612238565b3480156106f957600080fd5b5061028c611660565b610333610710366004612039565b6116ee565b34801561072157600080fd5b506102b7610730366004611eda565b611829565b34801561074157600080fd5b50610333610750366004612114565b611854565b34801561076157600080fd5b506102b7610770366004611ea2565b611876565b34801561078157600080fd5b50610333610790366004611eda565b611894565b600954604080516306fdde0360e01b815290516060926001600160a01b0316916306fdde03916004808301926000929190829003018186803b1580156107da57600080fd5b505afa1580156107ee573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526108169190810190612071565b604051602001610826919061216d565b604051602081830303815290604052905090565b600b5481565b600061084d3384846118c9565b50600192915050565b6007546001600160a01b031681565b6001600160a01b03808216600090815260056020908152604091829020825160808101845281548516815260018201549281018390526002820154938101939093526003015490921660608201819052909190816108de5760405162461bcd60e51b81526004016108d59061239d565b60405180910390fd5b82516001600160a01b031633146109075760405162461bcd60e51b81526004016108d5906122d6565b42600454846040015161091a9190612519565b11156109385760405162461bcd60e51b81526004016108d59061230d565b82516001600160a01b0380861660009081526005602052604080822080546001600160a01b0319908116825560018201849055600282019390935560030180549092169091555163a9059cbb60e01b81529083169063a9059cbb906109a390849087906004016121d7565b602060405180830381600087803b1580156109bd57600080fd5b505af11580156109d1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109f5919061201d565b610a115760405162461bcd60e51b81526004016108d5906123c5565b610a248582610a1f8861127c565b611924565b806001600160a01b0316856001600160a01b03167f52a5c2b28bc6eb9712d0ced43463103b486b13ccc9cda499fd3b2d7b6a74a8ee85604051610a679190612502565b60405180910390a35050505050565b600d5481565b60025490565b6001600160a01b03808216600090815260056020526040902054165b919050565b6000610ab0848484611924565b6001600160a01b038416600090815260016020908152604080832033808552925290912054610aeb918691610ae6908690612570565b6118c9565b5060019392505050565b610afe816114c7565b610b1a5760405162461bcd60e51b81526004016108d5906123fc565b6000610b2583611297565b905060008111610b475760405162461bcd60e51b81526004016108d59061236d565b336000610b538461127c565b90506000610b618483612551565b90508582610b815760405162461bcd60e51b81526004016108d590612494565b6001600160a01b03861660009081526005602052604090206001015415610bba5760405162461bcd60e51b81526004016108d590612431565b6040516323b872dd60e01b81526001600160a01b038216906323b872dd90610bea908790309087906004016121b3565b602060405180830381600087803b158015610c0457600080fd5b505af1158015610c18573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c3c919061201d565b610c585760405162461bcd60e51b81526004016108d5906123c5565b604080516080810182526001600160a01b038087168083526020808401878152428587019081528d8516606087019081528d86166000818152600590955293889020965187549087166001600160a01b0319918216178855925160018801559051600287015551600390950180549590941694169390931790915591517f1982ca8958fc8a8176cb52be509260f4bc5af7ce04e1533711793f1c56dd535990610d02908790612502565b60405180910390a350505050505050565b60095460408051632a0a4ed560e01b815290516000926001600160a01b031691632a0a4ed5916004808301926020929190829003018186803b158015610d5857600080fd5b505afa158015610d6c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d909190611ebe565b905090565b60035460ff1681565b610da6610d13565b6001600160a01b0316336001600160a01b031614610dd65760405162461bcd60e51b81526004016108d5906124cb565b6001600160a01b038082166000908152600560209081526040918290208251608081018452815485168152600182015492810183905260028201549381019390935260030154909216606082018190529091610e445760405162461bcd60e51b81526004016108d59061239d565b6001600160a01b03808416600090815260056020908152604080832080546001600160a01b031990811682556001820185905560028201949094556003018054909316909255845190850151915163a9059cbb60e01b81529284169263a9059cbb92610eb392916004016121d7565b602060405180830381600087803b158015610ecd57600080fd5b505af1158015610ee1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f05919061201d565b610f215760405162461bcd60e51b81526004016108d5906123c5565b81600001516001600160a01b0316836001600160a01b03167fbb036e629a9f4c0897ee5d48440dfdb36f7e772117723a2ed603a6514244c2d58460200151604051610f6c9190612502565b60405180910390a3505050565b600c546001600160a01b0316331415610f9d57600c80546001600160a01b03191690555b565b3360008181526001602090815260408083206001600160a01b0387168452909152812054909161084d918590610ae6908690612519565b6001600160a01b039081166000908152600560205260409020600301541690565b6000806110048686611544565b9050801561107157604051635260769b60e11b81526001600160a01b0387169063a4c0ed369061103e9033908990899089906004016121f0565b600060405180830381600087803b15801561105857600080fd5b505af115801561106c573d6000803e3d6000fd5b505050505b95945050505050565b61108433826119e1565b600061108e6114c0565b61109a57600b5461109d565b60015b6009549091506001600160a01b03166342966c686110bb8385612551565b6040518263ffffffff1660e01b81526004016110d79190612502565b600060405180830381600087803b1580156110f157600080fd5b505af1158015611105573d6000803e3d6000fd5b505050505050565b6009546001600160a01b031681565b60085481565b336000908152600660205260409020805460ff19169115919091179055565b3360009081526005602052604090206001015415610f9d573360008181526005602052604080822060018101805460038301805484546001600160a01b0319908116865593879055600290940195909555908216909355905163a9059cbb60e01b815291926001600160a01b0390911691829163a9059cbb916111c9919086906004016121d7565b602060405180830381600087803b1580156111e357600080fd5b505af11580156111f7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061121b919061201d565b6112375760405162461bcd60e51b81526004016108d5906123c5565b336001600160a01b03167f203627483d943880619f4b7e0cca21dbefd6204b4d85b124eb99540e17ba86dd836040516112709190612502565b60405180910390a25050565b6001600160a01b031660009081526020819052604090205490565b6000806112a383611a7b565b905080156112b2579050610a9e565b6009546001600160a01b03848116911614156112d2575050600b54610a9e565b600b546009546040516377e071ad60e01b81526001600160a01b03909116906377e071ad9061130590879060040161219f565b60206040518083038186803b15801561131d57600080fd5b505afa158015611331573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611355919061212c565b61135f9190612551565b915050610a9e565b50919050565b60045481565b3361137c611abd565b1561138657600080fd5b61138e610a7c565b61139a90611f40612551565b6113a38261127c565b6113af90612710612551565b10156113cd5760405162461bcd60e51b81526004016108d590612468565b6113d78182611ace565b7f3b6b79a09e9fd230e8591b65c97236bf7df7a604edf733db0658e66b0e6eb2a981604051611406919061219f565b60405180910390a150565b600954604080516395d89b4160e01b815290516060926001600160a01b0316916395d89b41916004808301926000929190829003018186803b15801561145657600080fd5b505afa15801561146a573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526114929190810190612071565b6040516020016108269190612144565b6001600160a01b031660009081526005602052604090206001015490565b600b541590565b6001600160a01b031660009081526006602052604090205460ff161590565b3360008181526001602090815260408083206001600160a01b0387168452909152812054909161084d918590610ae6908690612570565b6009546001600160a01b0316331461153457600080fd5b61153e8484611c96565b50505050565b60006115508383611d37565b9392505050565b624f1a0081565b60066020526000908152604090205460ff1681565b6009546040516323b872dd60e01b81526001600160a01b03909116906323b872dd906115a7903390309086906004016121b3565b602060405180830381600087803b1580156115c157600080fd5b505af11580156115d5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115f9919061201d565b61160257600080fd5b61160c8282611c96565b5050565b600c546001600160a01b031681565b600a546001600160a01b031681565b60056020526000908152604090208054600182015460028301546003909301546001600160a01b039283169391921684565b600e805461166d906125b3565b80601f0160208091040260200160405190810160405280929190818152602001828054611699906125b3565b80156116e65780601f106116bb576101008083540402835291602001916116e6565b820191906000526020600020905b8154815290600101906020018083116116c957829003601f168201915b505050505081565b6116f66114c0565b6116ff57600080fd5b600a54600d54604051634dc5e43160e01b81526000926001600160a01b031691634dc5e43191349161174091899133918a918a91624f1a009060040161226e565b6020604051808303818588803b15801561175957600080fd5b505af115801561176d573d6000803e3d6000fd5b50505050506040513d601f19601f820116820180604052508101906117929190611ebe565b905061179c611abd565b1561180457600c546040516306a169ed60e01b81526001600160a01b03909116906306a169ed906117d190849060040161219f565b600060405180830381600087803b1580156117eb57600080fd5b505af11580156117ff573d6000803e3d6000fd5b505050505b600c80546001600160a01b0319166001600160a01b0392909216919091179055505050565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b61185c6114c0565b1561186657600080fd5b6118733382600b54611d67565b50565b6001600160a01b031660009081526005602052604090206002015490565b600c546001600160a01b031633146118ab57600080fd5b6118bf826118b88461127c565b6001611d67565b61160c8183611ace565b6001600160a01b0380841660008181526001602090815260408083209487168084529490915290819020849055517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92590610f6c908590612502565b6001600160a01b03821661193757600080fd5b611942838383611e0a565b6001600160a01b0383166000908152602081905260408120805483929061196a908490612570565b90915550506001600160a01b03821660009081526020819052604081208054839290611997908490612519565b92505081905550816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610f6c9190612502565b6119ed82600083611e0a565b80600260008282546119ff9190612570565b90915550506001600160a01b03821660009081526020819052604081208054839290611a2c908490612570565b90915550506040516000906001600160a01b038416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90611a6f908590612502565b60405180910390a35050565b60006001600160a01b038216301415611a9657506001610a9e565b6007546001600160a01b0383811691161415611ab55750600854610a9e565b506000610a9e565b600c546001600160a01b0316151590565b611ad66114c0565b611adf57600080fd5b6009546040516370a0823160e01b81526001600160a01b039091169063a9059cbb90839083906370a0823190611b1990309060040161219f565b60206040518083038186803b158015611b3157600080fd5b505afa158015611b45573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611b69919061212c565b6040518363ffffffff1660e01b8152600401611b869291906121d7565b602060405180830381600087803b158015611ba057600080fd5b505af1158015611bb4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611bd8919061201d565b611be157600080fd5b600980546001600160a01b0319166001600160a01b03841617905561160c611c07610a7c565b6009546040516370a0823160e01b81526001600160a01b03909116906370a0823190611c3790309060040161219f565b60206040518083038186803b158015611c4f57600080fd5b505afa158015611c63573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611c87919061212c565b611c919190612531565b611e82565b6001600160a01b038216611ca957600080fd5b611cb560008383611e0a565b8060026000828254611cc79190612519565b90915550506001600160a01b03821660009081526020819052604081208054839290611cf4908490612519565b90915550506040516001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90611a6f908590612502565b6000611d438383611e95565b611d5f5760405162461bcd60e51b81526004016108d590612344565b61084d611141565b611d7183836119e1565b6009546001600160a01b031663a9059cbb84611d8d8486612551565b6040518363ffffffff1660e01b8152600401611daa9291906121d7565b602060405180830381600087803b158015611dc457600080fd5b505af1158015611dd8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611dfc919061201d565b611e0557600080fd5b505050565b611e12611abd565b15611e0557600c5460405163e1a1810f60e01b81526001600160a01b039091169063e1a1810f90611e4b908690869086906004016121b3565b600060405180830381600087803b158015611e6557600080fd5b505af1158015611e79573d6000803e3d6000fd5b50505050505050565b6001811015611e9057600080fd5b600b55565b600061084d338484611924565b600060208284031215611eb3578081fd5b813561155081612614565b600060208284031215611ecf578081fd5b815161155081612614565b60008060408385031215611eec578081fd5b8235611ef781612614565b91506020830135611f0781612614565b809150509250929050565b600080600060608486031215611f26578081fd5b8335611f3181612614565b92506020840135611f4181612614565b929592945050506040919091013590565b60008060408385031215611f64578182fd5b8235611f6f81612614565b946020939093013593505050565b60008060008060608587031215611f92578081fd5b8435611f9d81612614565b935060208501359250604085013567ffffffffffffffff80821115611fc0578283fd5b818701915087601f830112611fd3578283fd5b813581811115611fe1578384fd5b886020828501011115611ff2578384fd5b95989497505060200194505050565b600060208284031215612012578081fd5b813561155081612629565b60006020828403121561202e578081fd5b815161155081612629565b60008060006060848603121561204d578283fd5b8335925060208401359150604084013561206681612614565b809150509250925092565b600060208284031215612082578081fd5b815167ffffffffffffffff80821115612099578283fd5b818401915084601f8301126120ac578283fd5b8151818111156120be576120be6125fe565b604051601f8201601f1916810160200183811182821017156120e2576120e26125fe565b6040528181528382016020018710156120f9578485fd5b61210a826020830160208701612587565b9695505050505050565b600060208284031215612125578081fd5b5035919050565b60006020828403121561213d578081fd5b5051919050565b6000601160fa1b82528251612160816001850160208701612587565b9190910160010192915050565b6000690223930b3b3b0b13632960b51b8252825161219281600a850160208701612587565b91909101600a0192915050565b6001600160a01b0391909116815260200190565b6001600160a01b039384168152919092166020820152604081019190915260600190565b6001600160a01b03929092168252602082015260400190565b6001600160a01b0385168152602081018490526060604082018190528101829052600082846080840137818301608090810191909152601f909201601f191601019392505050565b6001600160a01b03948516815260208101939093526040830191909152909116606082015260800190565b901515815260200190565b9586526001600160a01b039485166020870152604086019390935292166060840152608083019190915260a082015260c00190565b60006020825282518060208401526122c2816040850160208701612587565b601f01601f19169190910160400192915050565b6020808252601f908201527f4f6e6c7920636c61696d616e742063616e207265736f6c766520636c61696d00604082015260600190565b60208082526019908201527f436c61696d20706572696f64206e6f74206f7665722079657400000000000000604082015260600190565b6020808252600f908201526e151c985b9cd9995c8819985a5b1959608a1b604082015260600190565b602080825260169082015275155b9cdd5c1c1bdc9d19590818dbdb1b185d195c985b60521b604082015260600190565b6020808252600e908201526d139bc818db185a5b48199bdd5b9960921b604082015260600190565b6020808252601a908201527f436f6c6c61746572616c207472616e73666572206661696c6564000000000000604082015260600190565b6020808252818101527f436c61696d732064697361626c656420666f7220746869732061646472657373604082015260600190565b60208082526017908201527f4164647265737320616c726561647920636c61696d6564000000000000000000604082015260600190565b602080825260129082015271145d5bdc9d5b481b9bdd081c995858da195960721b604082015260600190565b6020808252601f908201527f436c61696d6564206164647265737320686f6c6473206e6f2073686172657300604082015260600190565b60208082526018908201527f596f752063616e6e6f742064656c65746520636c61696d730000000000000000604082015260600190565b90815260200190565b60ff91909116815260200190565b6000821982111561252c5761252c6125e8565b500190565b60008261254c57634e487b7160e01b81526012600452602481fd5b500490565b600081600019048311821515161561256b5761256b6125e8565b500290565b600082821015612582576125826125e8565b500390565b60005b838110156125a257818101518382015260200161258a565b8381111561153e5750506000910152565b6002810460018216806125c757607f821691505b6020821081141561136757634e487b7160e01b600052602260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b038116811461187357600080fd5b801515811461187357600080fdfea26469706673582212205ef623ce82324a97dccf726857b7d39f72e7b1c82cab59f868d1187b57db6a4564736f6c63430008000033",
    "deployedBytecode": "6080604052600436106102725760003560e01c806370a082311161014f578063b1610d7e116100c1578063d50256251161007a578063d5025625146106ed578063dcc7d4ad14610702578063dd62ed3e14610715578063de0e9a3e14610735578063eb470ebf14610755578063fcb79a7e1461077557610272565b8063b1610d7e1461063e578063b40e80d114610653578063bf376c7a14610673578063c028df0614610693578063c45a0155146106a8578063c6788bdd146106bd57610272565b80639b56d6c9116101135780639b56d6c9146105895780639e4b5745146105a9578063a3ec1883146105be578063a457c2d7146105de578063a4c0ed36146105fe578063a9059cbb1461061e57610272565b806370a082311461050a57806377e071ad1461052a5780637dc2cd981461054a5780638fd3ab801461055f57806395d89b411461057457610272565b8063313ce567116101e85780634000aea0116101ac5780634000aea01461046b57806342966c681461048b57806350e70d48146104ab57806360918117146104c05780636427ed97146104d55780636b03ed5f146104f557610272565b8063313ce567146103d457806332a7ae95146103f657806332bc320b14610416578063395093511461042b5780633bcc45ba1461044b57610272565b80631703a0181161023a5780631703a0181461033557806318160ddd1461034a5780631e3b9de51461035f57806323b872dd1461037f57806326773ddd1461039f5780632a0a4ed5146103bf57610272565b806306fdde03146102775780630832e470146102a2578063095ea7b3146102c45780630c6f0e5d146102f15780630cd865ec14610313575b600080fd5b34801561028357600080fd5b5061028c610795565b60405161029991906122a3565b60405180910390f35b3480156102ae57600080fd5b506102b761083a565b6040516102999190612502565b3480156102d057600080fd5b506102e46102df366004611f52565b610840565b6040516102999190612263565b3480156102fd57600080fd5b50610306610856565b604051610299919061219f565b34801561031f57600080fd5b5061033361032e366004611ea2565b610865565b005b34801561034157600080fd5b506102b7610a76565b34801561035657600080fd5b506102b7610a7c565b34801561036b57600080fd5b5061030661037a366004611ea2565b610a82565b34801561038b57600080fd5b506102e461039a366004611f12565b610aa3565b3480156103ab57600080fd5b506103336103ba366004611eda565b610af5565b3480156103cb57600080fd5b50610306610d13565b3480156103e057600080fd5b506103e9610d95565b604051610299919061250b565b34801561040257600080fd5b50610333610411366004611ea2565b610d9e565b34801561042257600080fd5b50610333610f79565b34801561043757600080fd5b506102e4610446366004611f52565b610f9f565b34801561045757600080fd5b50610306610466366004611ea2565b610fd6565b34801561047757600080fd5b506102e4610486366004611f7d565b610ff7565b34801561049757600080fd5b506103336104a6366004612114565b61107a565b3480156104b757600080fd5b5061030661110d565b3480156104cc57600080fd5b506102b761111c565b3480156104e157600080fd5b506103336104f0366004612001565b611122565b34801561050157600080fd5b50610333611141565b34801561051657600080fd5b506102b7610525366004611ea2565b61127c565b34801561053657600080fd5b506102b7610545366004611ea2565b611297565b34801561055657600080fd5b506102b761136d565b34801561056b57600080fd5b50610333611373565b34801561058057600080fd5b5061028c611411565b34801561059557600080fd5b506102b76105a4366004611ea2565b6114a2565b3480156105b557600080fd5b506102e46114c0565b3480156105ca57600080fd5b506102e46105d9366004611ea2565b6114c7565b3480156105ea57600080fd5b506102e46105f9366004611f52565b6114e6565b34801561060a57600080fd5b50610333610619366004611f7d565b61151d565b34801561062a57600080fd5b506102e4610639366004611f52565b611544565b34801561064a57600080fd5b506102b7611557565b34801561065f57600080fd5b506102e461066e366004611ea2565b61155e565b34801561067f57600080fd5b5061033361068e366004611f52565b611573565b34801561069f57600080fd5b50610306611610565b3480156106b457600080fd5b5061030661161f565b3480156106c957600080fd5b506106dd6106d8366004611ea2565b61162e565b6040516102999493929190612238565b3480156106f957600080fd5b5061028c611660565b610333610710366004612039565b6116ee565b34801561072157600080fd5b506102b7610730366004611eda565b611829565b34801561074157600080fd5b50610333610750366004612114565b611854565b34801561076157600080fd5b506102b7610770366004611ea2565b611876565b34801561078157600080fd5b50610333610790366004611eda565b611894565b600954604080516306fdde0360e01b815290516060926001600160a01b0316916306fdde03916004808301926000929190829003018186803b1580156107da57600080fd5b505afa1580156107ee573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526108169190810190612071565b604051602001610826919061216d565b604051602081830303815290604052905090565b600b5481565b600061084d3384846118c9565b50600192915050565b6007546001600160a01b031681565b6001600160a01b03808216600090815260056020908152604091829020825160808101845281548516815260018201549281018390526002820154938101939093526003015490921660608201819052909190816108de5760405162461bcd60e51b81526004016108d59061239d565b60405180910390fd5b82516001600160a01b031633146109075760405162461bcd60e51b81526004016108d5906122d6565b42600454846040015161091a9190612519565b11156109385760405162461bcd60e51b81526004016108d59061230d565b82516001600160a01b0380861660009081526005602052604080822080546001600160a01b0319908116825560018201849055600282019390935560030180549092169091555163a9059cbb60e01b81529083169063a9059cbb906109a390849087906004016121d7565b602060405180830381600087803b1580156109bd57600080fd5b505af11580156109d1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109f5919061201d565b610a115760405162461bcd60e51b81526004016108d5906123c5565b610a248582610a1f8861127c565b611924565b806001600160a01b0316856001600160a01b03167f52a5c2b28bc6eb9712d0ced43463103b486b13ccc9cda499fd3b2d7b6a74a8ee85604051610a679190612502565b60405180910390a35050505050565b600d5481565b60025490565b6001600160a01b03808216600090815260056020526040902054165b919050565b6000610ab0848484611924565b6001600160a01b038416600090815260016020908152604080832033808552925290912054610aeb918691610ae6908690612570565b6118c9565b5060019392505050565b610afe816114c7565b610b1a5760405162461bcd60e51b81526004016108d5906123fc565b6000610b2583611297565b905060008111610b475760405162461bcd60e51b81526004016108d59061236d565b336000610b538461127c565b90506000610b618483612551565b90508582610b815760405162461bcd60e51b81526004016108d590612494565b6001600160a01b03861660009081526005602052604090206001015415610bba5760405162461bcd60e51b81526004016108d590612431565b6040516323b872dd60e01b81526001600160a01b038216906323b872dd90610bea908790309087906004016121b3565b602060405180830381600087803b158015610c0457600080fd5b505af1158015610c18573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c3c919061201d565b610c585760405162461bcd60e51b81526004016108d5906123c5565b604080516080810182526001600160a01b038087168083526020808401878152428587019081528d8516606087019081528d86166000818152600590955293889020965187549087166001600160a01b0319918216178855925160018801559051600287015551600390950180549590941694169390931790915591517f1982ca8958fc8a8176cb52be509260f4bc5af7ce04e1533711793f1c56dd535990610d02908790612502565b60405180910390a350505050505050565b60095460408051632a0a4ed560e01b815290516000926001600160a01b031691632a0a4ed5916004808301926020929190829003018186803b158015610d5857600080fd5b505afa158015610d6c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d909190611ebe565b905090565b60035460ff1681565b610da6610d13565b6001600160a01b0316336001600160a01b031614610dd65760405162461bcd60e51b81526004016108d5906124cb565b6001600160a01b038082166000908152600560209081526040918290208251608081018452815485168152600182015492810183905260028201549381019390935260030154909216606082018190529091610e445760405162461bcd60e51b81526004016108d59061239d565b6001600160a01b03808416600090815260056020908152604080832080546001600160a01b031990811682556001820185905560028201949094556003018054909316909255845190850151915163a9059cbb60e01b81529284169263a9059cbb92610eb392916004016121d7565b602060405180830381600087803b158015610ecd57600080fd5b505af1158015610ee1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f05919061201d565b610f215760405162461bcd60e51b81526004016108d5906123c5565b81600001516001600160a01b0316836001600160a01b03167fbb036e629a9f4c0897ee5d48440dfdb36f7e772117723a2ed603a6514244c2d58460200151604051610f6c9190612502565b60405180910390a3505050565b600c546001600160a01b0316331415610f9d57600c80546001600160a01b03191690555b565b3360008181526001602090815260408083206001600160a01b0387168452909152812054909161084d918590610ae6908690612519565b6001600160a01b039081166000908152600560205260409020600301541690565b6000806110048686611544565b9050801561107157604051635260769b60e11b81526001600160a01b0387169063a4c0ed369061103e9033908990899089906004016121f0565b600060405180830381600087803b15801561105857600080fd5b505af115801561106c573d6000803e3d6000fd5b505050505b95945050505050565b61108433826119e1565b600061108e6114c0565b61109a57600b5461109d565b60015b6009549091506001600160a01b03166342966c686110bb8385612551565b6040518263ffffffff1660e01b81526004016110d79190612502565b600060405180830381600087803b1580156110f157600080fd5b505af1158015611105573d6000803e3d6000fd5b505050505050565b6009546001600160a01b031681565b60085481565b336000908152600660205260409020805460ff19169115919091179055565b3360009081526005602052604090206001015415610f9d573360008181526005602052604080822060018101805460038301805484546001600160a01b0319908116865593879055600290940195909555908216909355905163a9059cbb60e01b815291926001600160a01b0390911691829163a9059cbb916111c9919086906004016121d7565b602060405180830381600087803b1580156111e357600080fd5b505af11580156111f7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061121b919061201d565b6112375760405162461bcd60e51b81526004016108d5906123c5565b336001600160a01b03167f203627483d943880619f4b7e0cca21dbefd6204b4d85b124eb99540e17ba86dd836040516112709190612502565b60405180910390a25050565b6001600160a01b031660009081526020819052604090205490565b6000806112a383611a7b565b905080156112b2579050610a9e565b6009546001600160a01b03848116911614156112d2575050600b54610a9e565b600b546009546040516377e071ad60e01b81526001600160a01b03909116906377e071ad9061130590879060040161219f565b60206040518083038186803b15801561131d57600080fd5b505afa158015611331573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611355919061212c565b61135f9190612551565b915050610a9e565b50919050565b60045481565b3361137c611abd565b1561138657600080fd5b61138e610a7c565b61139a90611f40612551565b6113a38261127c565b6113af90612710612551565b10156113cd5760405162461bcd60e51b81526004016108d590612468565b6113d78182611ace565b7f3b6b79a09e9fd230e8591b65c97236bf7df7a604edf733db0658e66b0e6eb2a981604051611406919061219f565b60405180910390a150565b600954604080516395d89b4160e01b815290516060926001600160a01b0316916395d89b41916004808301926000929190829003018186803b15801561145657600080fd5b505afa15801561146a573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526114929190810190612071565b6040516020016108269190612144565b6001600160a01b031660009081526005602052604090206001015490565b600b541590565b6001600160a01b031660009081526006602052604090205460ff161590565b3360008181526001602090815260408083206001600160a01b0387168452909152812054909161084d918590610ae6908690612570565b6009546001600160a01b0316331461153457600080fd5b61153e8484611c96565b50505050565b60006115508383611d37565b9392505050565b624f1a0081565b60066020526000908152604090205460ff1681565b6009546040516323b872dd60e01b81526001600160a01b03909116906323b872dd906115a7903390309086906004016121b3565b602060405180830381600087803b1580156115c157600080fd5b505af11580156115d5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115f9919061201d565b61160257600080fd5b61160c8282611c96565b5050565b600c546001600160a01b031681565b600a546001600160a01b031681565b60056020526000908152604090208054600182015460028301546003909301546001600160a01b039283169391921684565b600e805461166d906125b3565b80601f0160208091040260200160405190810160405280929190818152602001828054611699906125b3565b80156116e65780601f106116bb576101008083540402835291602001916116e6565b820191906000526020600020905b8154815290600101906020018083116116c957829003601f168201915b505050505081565b6116f66114c0565b6116ff57600080fd5b600a54600d54604051634dc5e43160e01b81526000926001600160a01b031691634dc5e43191349161174091899133918a918a91624f1a009060040161226e565b6020604051808303818588803b15801561175957600080fd5b505af115801561176d573d6000803e3d6000fd5b50505050506040513d601f19601f820116820180604052508101906117929190611ebe565b905061179c611abd565b1561180457600c546040516306a169ed60e01b81526001600160a01b03909116906306a169ed906117d190849060040161219f565b600060405180830381600087803b1580156117eb57600080fd5b505af11580156117ff573d6000803e3d6000fd5b505050505b600c80546001600160a01b0319166001600160a01b0392909216919091179055505050565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b61185c6114c0565b1561186657600080fd5b6118733382600b54611d67565b50565b6001600160a01b031660009081526005602052604090206002015490565b600c546001600160a01b031633146118ab57600080fd5b6118bf826118b88461127c565b6001611d67565b61160c8183611ace565b6001600160a01b0380841660008181526001602090815260408083209487168084529490915290819020849055517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92590610f6c908590612502565b6001600160a01b03821661193757600080fd5b611942838383611e0a565b6001600160a01b0383166000908152602081905260408120805483929061196a908490612570565b90915550506001600160a01b03821660009081526020819052604081208054839290611997908490612519565b92505081905550816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610f6c9190612502565b6119ed82600083611e0a565b80600260008282546119ff9190612570565b90915550506001600160a01b03821660009081526020819052604081208054839290611a2c908490612570565b90915550506040516000906001600160a01b038416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90611a6f908590612502565b60405180910390a35050565b60006001600160a01b038216301415611a9657506001610a9e565b6007546001600160a01b0383811691161415611ab55750600854610a9e565b506000610a9e565b600c546001600160a01b0316151590565b611ad66114c0565b611adf57600080fd5b6009546040516370a0823160e01b81526001600160a01b039091169063a9059cbb90839083906370a0823190611b1990309060040161219f565b60206040518083038186803b158015611b3157600080fd5b505afa158015611b45573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611b69919061212c565b6040518363ffffffff1660e01b8152600401611b869291906121d7565b602060405180830381600087803b158015611ba057600080fd5b505af1158015611bb4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611bd8919061201d565b611be157600080fd5b600980546001600160a01b0319166001600160a01b03841617905561160c611c07610a7c565b6009546040516370a0823160e01b81526001600160a01b03909116906370a0823190611c3790309060040161219f565b60206040518083038186803b158015611c4f57600080fd5b505afa158015611c63573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611c87919061212c565b611c919190612531565b611e82565b6001600160a01b038216611ca957600080fd5b611cb560008383611e0a565b8060026000828254611cc79190612519565b90915550506001600160a01b03821660009081526020819052604081208054839290611cf4908490612519565b90915550506040516001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90611a6f908590612502565b6000611d438383611e95565b611d5f5760405162461bcd60e51b81526004016108d590612344565b61084d611141565b611d7183836119e1565b6009546001600160a01b031663a9059cbb84611d8d8486612551565b6040518363ffffffff1660e01b8152600401611daa9291906121d7565b602060405180830381600087803b158015611dc457600080fd5b505af1158015611dd8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611dfc919061201d565b611e0557600080fd5b505050565b611e12611abd565b15611e0557600c5460405163e1a1810f60e01b81526001600160a01b039091169063e1a1810f90611e4b908690869086906004016121b3565b600060405180830381600087803b158015611e6557600080fd5b505af1158015611e79573d6000803e3d6000fd5b50505050505050565b6001811015611e9057600080fd5b600b55565b600061084d338484611924565b600060208284031215611eb3578081fd5b813561155081612614565b600060208284031215611ecf578081fd5b815161155081612614565b60008060408385031215611eec578081fd5b8235611ef781612614565b91506020830135611f0781612614565b809150509250929050565b600080600060608486031215611f26578081fd5b8335611f3181612614565b92506020840135611f4181612614565b929592945050506040919091013590565b60008060408385031215611f64578182fd5b8235611f6f81612614565b946020939093013593505050565b60008060008060608587031215611f92578081fd5b8435611f9d81612614565b935060208501359250604085013567ffffffffffffffff80821115611fc0578283fd5b818701915087601f830112611fd3578283fd5b813581811115611fe1578384fd5b886020828501011115611ff2578384fd5b95989497505060200194505050565b600060208284031215612012578081fd5b813561155081612629565b60006020828403121561202e578081fd5b815161155081612629565b60008060006060848603121561204d578283fd5b8335925060208401359150604084013561206681612614565b809150509250925092565b600060208284031215612082578081fd5b815167ffffffffffffffff80821115612099578283fd5b818401915084601f8301126120ac578283fd5b8151818111156120be576120be6125fe565b604051601f8201601f1916810160200183811182821017156120e2576120e26125fe565b6040528181528382016020018710156120f9578485fd5b61210a826020830160208701612587565b9695505050505050565b600060208284031215612125578081fd5b5035919050565b60006020828403121561213d578081fd5b5051919050565b6000601160fa1b82528251612160816001850160208701612587565b9190910160010192915050565b6000690223930b3b3b0b13632960b51b8252825161219281600a850160208701612587565b91909101600a0192915050565b6001600160a01b0391909116815260200190565b6001600160a01b039384168152919092166020820152604081019190915260600190565b6001600160a01b03929092168252602082015260400190565b6001600160a01b0385168152602081018490526060604082018190528101829052600082846080840137818301608090810191909152601f909201601f191601019392505050565b6001600160a01b03948516815260208101939093526040830191909152909116606082015260800190565b901515815260200190565b9586526001600160a01b039485166020870152604086019390935292166060840152608083019190915260a082015260c00190565b60006020825282518060208401526122c2816040850160208701612587565b601f01601f19169190910160400192915050565b6020808252601f908201527f4f6e6c7920636c61696d616e742063616e207265736f6c766520636c61696d00604082015260600190565b60208082526019908201527f436c61696d20706572696f64206e6f74206f7665722079657400000000000000604082015260600190565b6020808252600f908201526e151c985b9cd9995c8819985a5b1959608a1b604082015260600190565b602080825260169082015275155b9cdd5c1c1bdc9d19590818dbdb1b185d195c985b60521b604082015260600190565b6020808252600e908201526d139bc818db185a5b48199bdd5b9960921b604082015260600190565b6020808252601a908201527f436f6c6c61746572616c207472616e73666572206661696c6564000000000000604082015260600190565b6020808252818101527f436c61696d732064697361626c656420666f7220746869732061646472657373604082015260600190565b60208082526017908201527f4164647265737320616c726561647920636c61696d6564000000000000000000604082015260600190565b602080825260129082015271145d5bdc9d5b481b9bdd081c995858da195960721b604082015260600190565b6020808252601f908201527f436c61696d6564206164647265737320686f6c6473206e6f2073686172657300604082015260600190565b60208082526018908201527f596f752063616e6e6f742064656c65746520636c61696d730000000000000000604082015260600190565b90815260200190565b60ff91909116815260200190565b6000821982111561252c5761252c6125e8565b500190565b60008261254c57634e487b7160e01b81526012600452602481fd5b500490565b600081600019048311821515161561256b5761256b6125e8565b500290565b600082821015612582576125826125e8565b500390565b60005b838110156125a257818101518382015260200161258a565b8381111561153e5750506000910152565b6002810460018216806125c757607f821691505b6020821081141561136757634e487b7160e01b600052602260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b038116811461187357600080fd5b801515811461187357600080fdfea26469706673582212205ef623ce82324a97dccf726857b7d39f72e7b1c82cab59f868d1187b57db6a4564736f6c63430008000033",
    "sourceMap": "3013:1562:0:-:0;;;3041:8:3;3012:37;;2660:1:2;2620:41;;3227:379:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1896:8:1;:20;;-1:-1:-1;;1896:20:1;;;3037:7:2::1;:37:::0;;-1:-1:-1;;;;;3037:37:2;;::::1;-1:-1:-1::0;;;;;;3037:37:2;;::::1;;::::0;;;3085:7:::1;:30:::0;;;;::::1;::::0;;;::::1;::::0;::::1;::::0;;3126:6:::1;:16:::0;;;3392:48:0::1;::::0;-1:-1:-1;;;3392:48:0;;:41:::1;::::0;:48:::1;::::0;3023:1:2;;3392:48:0::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;3451:14:0;;::::1;::::0;-1:-1:-1;3451:5:0::1;::::0;-1:-1:-1;3451:14:0::1;::::0;::::1;::::0;::::1;:::i;:::-;;3227:379:::0;;;;3013:1562;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3013:1562:0;;;-1:-1:-1;3013:1562:0;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:179:6;95:13;;-1:-1:-1;;;;;137:31:6;;127:42;;117:2;;183:1;180;173:12;117:2;76:117;;;:::o;198:1345::-;;;;;382:3;370:9;361:7;357:23;353:33;350:2;;;404:6;396;389:22;350:2;436:16;;-1:-1:-1;;;;;501:14:6;;;498:2;;;533:6;525;518:22;498:2;576:6;565:9;561:22;551:32;;621:7;614:4;610:2;606:13;602:27;592:2;;648:6;640;633:22;592:2;682;676:9;704:2;700;697:10;694:2;;;710:18;;:::i;:::-;759:2;753:9;781:4;851:2;832:13;;-1:-1:-1;;828:27:6;816:40;;812:49;;876:18;;;896:22;;;873:46;870:2;;;922:18;;:::i;:::-;958:2;951:22;982:18;;;1019:11;;;1015:20;;1012:33;-1:-1:-1;1009:2:6;;;1063:6;1055;1048:22;1009:2;1090:6;1081:15;;1105:129;1119:2;1116:1;1113:9;1105:129;;;1207:10;;;1203:19;;1197:26;1176:14;;;1172:23;;1165:59;1130:10;;;;1105:129;;;1252:2;1249:1;1246:9;1243:2;;;1311:6;1306:2;1301;1293:6;1289:15;1285:24;1278:40;1243:2;1347:6;1337:16;;1372:51;1419:2;1408:9;1404:18;1372:51;:::i;:::-;1362:61;;;;;;;1442:51;1489:2;1478:9;1474:18;1442:51;:::i;:::-;1533:2;1518:18;;;;1512:25;340:1203;;;;-1:-1:-1;;;340:1203:6:o;1548:187::-;1713:14;;1706:22;1688:41;;1676:2;1661:18;;1643:92::o;1740:380::-;1825:1;1815:12;;1872:1;1862:12;;;1883:2;;1937:4;1929:6;1925:17;1915:27;;1883:2;1990;1982:6;1979:14;1959:18;1956:38;1953:2;;;2036:10;2031:3;2027:20;2024:1;2017:31;2071:4;2068:1;2061:15;2099:4;2096:1;2089:15;1953:2;;1795:325;;;:::o;2125:127::-;2186:10;2181:3;2177:20;2174:1;2167:31;2217:4;2214:1;2207:15;2241:4;2238:1;2231:15;2157:95;3013:1562:0;;;;;;",
    "deployedSourceMap": "3013:1562:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3158:140:2;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2620:41;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;3010:157:1:-;;;;;;;;;;-1:-1:-1;3010:157:1;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;3388:38:3:-;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;10711:741::-;;;;;;;;;;-1:-1:-1;10711:741:3;;;;;:::i;:::-;;:::i;:::-;;2819:21:2;;;;;;;;;;;;;:::i;1989:100:1:-;;;;;;;;;;;;;:::i;9091:126:3:-;;;;;;;;;;-1:-1:-1;9091:126:3;;;;;:::i;:::-;;:::i;3638:262:1:-;;;;;;;;;;-1:-1:-1;3638:262:1;;;;;:::i;:::-;;:::i;8063:1020:3:-;;;;;;;;;;-1:-1:-1;8063:1020:3;;;;;:::i;:::-;;:::i;3774:140:0:-;;;;;;;;;;;;;:::i;1817:30:1:-;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;11593:514:3:-;;;;;;;;;;-1:-1:-1;11593:514:3;;;;;:::i;:::-;;:::i;6366:139:2:-;;;;;;;;;;;;;:::i;4309:203:1:-;;;;;;;;;;-1:-1:-1;4309:203:1;;;;;:::i;:::-;;:::i;9363:136:3:-;;;;;;;;;;-1:-1:-1;9363:136:3;;;;;:::i;:::-;;:::i;6143:303:1:-;;;;;;;;;;-1:-1:-1;6143:303:1;;;;;:::i;:::-;;:::i;5547:209:2:-;;;;;;;;;;-1:-1:-1;5547:209:2;;;;;:::i;:::-;;:::i;2396:21::-;;;;;;;;;;;;;:::i;3433:35:3:-;;;;;;;;;;;;;:::i;5559:103::-;;;;;;;;;;-1:-1:-1;5559:103:3;;;;;:::i;:::-;;:::i;10098:427::-;;;;;;;;;;;;;:::i;2152:119:1:-;;;;;;;;;;-1:-1:-1;2152:119:1;;;;;:::i;:::-;;:::i;3922:648:0:-;;;;;;;;;;-1:-1:-1;3922:648:0;;;;;:::i;:::-;;:::i;3012:37:3:-;;;;;;;;;;;;;:::i;6936:366:2:-;;;;;;;;;;;;;:::i;3306:135::-;;;;;;;;;;;;;:::i;9225:130:3:-;;;;;;;;;;-1:-1:-1;9225:130:3;;;;;:::i;:::-;;:::i;4268:101:2:-;;;;;;;;;;;;;:::i;5844:121:3:-;;;;;;;;;;-1:-1:-1;5844:121:3;;;;;:::i;:::-;;:::i;5015:213:1:-;;;;;;;;;;-1:-1:-1;5015:213:1;;;;;:::i;:::-;;:::i;3449:175:2:-;;;;;;;;;;-1:-1:-1;3449:175:2;;;;;:::i;:::-;;:::i;3614:152:0:-;;;;;;;;;;-1:-1:-1;3614:152:0;;;;;:::i;:::-;;:::i;2319:47:2:-;;;;;;;;;;;;;:::i;3207:48:3:-;;;;;;;;;;-1:-1:-1;3207:48:3;;;;;:::i;:::-;;:::i;3746:178:2:-;;;;;;;;;;-1:-1:-1;3746:178:2;;;;;:::i;:::-;;:::i;2791:19::-;;;;;;;;;;;;;:::i;2477:28::-;;;;;;;;;;;;;:::i;3082:39:3:-;;;;;;;;;;-1:-1:-1;3082:39:3;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;:::i;3083:19:0:-;;;;;;;;;;;;;:::i;5764:389:2:-;;;;;;:::i;:::-;;:::i;2720:143:1:-;;;;;;;;;;-1:-1:-1;2720:143:1;;;;;:::i;:::-;;:::i;4703:140:2:-;;;;;;;;;;-1:-1:-1;4703:140:2;;;;;:::i;:::-;;:::i;9507:128:3:-;;;;;;;;;;-1:-1:-1;9507:128:3;;;;;:::i;:::-;;:::i;6161:197:2:-;;;;;;;;;;-1:-1:-1;6161:197:2;;;;;:::i;:::-;;:::i;3158:140::-;3274:7;;:14;;;-1:-1:-1;;;3274:14:2;;;;3204:13;;-1:-1:-1;;;;;3274:7:2;;:12;;:14;;;;;:7;;:14;;;;;;;:7;:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3274:14:2;;;;;;;;;;;;:::i;:::-;3243:46;;;;;;;;:::i;:::-;;;;;;;;;;;;;3229:61;;3158:140;:::o;2620:41::-;;;;:::o;3010:157:1:-;3084:4;3101:36;3110:10;3122:7;3131:5;3101:8;:36::i;:::-;-1:-1:-1;3155:4:1;3010:157;;;;:::o;3388:38:3:-;;;-1:-1:-1;;;;;3388:38:3;;:::o;10711:741::-;-1:-1:-1;;;;;10788:19:3;;;10767:18;10788:19;;;:6;:19;;;;;;;;;10767:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10929:15;10921:42;;;;-1:-1:-1;;;10921:42:3;;;;;;;:::i;:::-;;;;;;;;;10982:14;;-1:-1:-1;;;;;10982:28:3;11000:10;10982:28;10974:72;;;;-1:-1:-1;;;10974:72:3;;;;;;;:::i;:::-;11098:15;11083:11;;11065:5;:15;;;:29;;;;:::i;:::-;:48;;11057:86;;;;-1:-1:-1;;;11057:86:3;;;;;;;:::i;:::-;11173:14;;-1:-1:-1;;;;;11205:19:3;;;11154:16;11205:19;;;:6;:19;;;;;;11198:26;;-1:-1:-1;;;;;;11198:26:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;11243:39;-1:-1:-1;;;11243:39:3;;:17;;;;;;:39;;11173:14;;11271:10;;11243:39;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;11235:78;;;;-1:-1:-1;;;11235:78:3;;;;;;;:::i;:::-;11324:56;11334:11;11347:8;11357:22;11367:11;11357:9;:22::i;:::-;11324:9;:56::i;:::-;11423:8;-1:-1:-1;;;;;11396:48:3;11410:11;-1:-1:-1;;;;;11396:48:3;;11433:10;11396:48;;;;;;:::i;:::-;;;;;;;;10711:741;;;;;:::o;2819:21:2:-;;;;:::o;1989:100:1:-;2069:12;;1989:100;:::o;9091:126:3:-;-1:-1:-1;;;;;9181:19:3;;;9154:7;9181:19;;;:6;:19;;;;;:28;;9091:126;;;;:::o;3638:262:1:-;3736:4;3753:36;3763:6;3771:9;3782:6;3753:9;:36::i;:::-;-1:-1:-1;;;;;3829:19:1;;;;;;:11;:19;;;;;;;;3817:10;3829:31;;;;;;;;;3800:70;;3809:6;;3829:40;;3863:6;;3829:40;:::i;:::-;3800:8;:70::i;:::-;-1:-1:-1;3888:4:1;3638:262;;;;;:::o;8063:1020:3:-;8155:30;8173:11;8155:17;:30::i;:::-;8147:75;;;;-1:-1:-1;;;8147:75:3;;;;;;;:::i;:::-;8233:22;8258:33;8276:14;8258:17;:33::i;:::-;8233:58;;8327:1;8310:14;:18;8302:53;;;;-1:-1:-1;;;8302:53:3;;;;;;;:::i;:::-;8385:10;8366:16;8424:22;8434:11;8424:9;:22::i;:::-;8406:40;-1:-1:-1;8457:18:3;8478:24;8488:14;8406:40;8478:24;:::i;:::-;8457:45;-1:-1:-1;8538:14:3;8572:11;8564:55;;;;-1:-1:-1;;;8564:55:3;;;;;;;:::i;:::-;-1:-1:-1;;;;;8638:19:3;;;;;;:6;:19;;;;;:30;;;:35;8630:71;;;;-1:-1:-1;;;8630:71:3;;;;;;;:::i;:::-;8720:58;;-1:-1:-1;;;8720:58:3;;-1:-1:-1;;;;;8720:21:3;;;;;:58;;8742:8;;8760:4;;8767:10;;8720:58;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8712:97;;;;-1:-1:-1;;;8712:97:3;;;;;;;:::i;:::-;8844:172;;;;;;;;-1:-1:-1;;;;;8844:172:3;;;;;;;;;;;;;8946:15;8844:172;;;;;;;;;;;;;;;8822:19;;;-1:-1:-1;8822:19:3;;;:6;:19;;;;;;;:194;;;;;;;-1:-1:-1;;;;;;8822:194:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9034:41;;;;;;9067:7;;9034:41;:::i;:::-;;;;;;;;8063:1020;;;;;;;:::o;3774:140:0:-;3879:7;;3858:48;;;-1:-1:-1;;;3858:48:0;;;;3831:7;;-1:-1:-1;;;;;3879:7:0;;3858:46;;:48;;;;;;;;;;;;;;3879:7;3858:48;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3851:55;;3774:140;:::o;1817:30:1:-;;;;;;:::o;11593:514:3:-;11675:17;:15;:17::i;:::-;-1:-1:-1;;;;;11661:31:3;:10;-1:-1:-1;;;;;11661:31:3;;11653:68;;;;-1:-1:-1;;;11653:68:3;;;;;;;:::i;:::-;-1:-1:-1;;;;;11753:19:3;;;11732:18;11753:19;;;:6;:19;;;;;;;;;11732:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11838:48;;;;-1:-1:-1;;;11838:48:3;;;;;;;:::i;:::-;-1:-1:-1;;;;;11904:19:3;;;;;;;:6;:19;;;;;;;;11897:26;;-1:-1:-1;;;;;;11897:26:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;11960:14;;11976:16;;;;11942:51;;-1:-1:-1;;;11942:51:3;;:17;;;;;;:51;;11960:14;11942:51;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;11934:90;;;;-1:-1:-1;;;11934:90:3;;;;;;;:::i;:::-;12066:5;:14;;;-1:-1:-1;;;;;12040:59:3;12053:11;-1:-1:-1;;;;;12040:59:3;;12082:5;:16;;;12040:59;;;;;;:::i;:::-;;;;;;;;11593:514;;;:::o;6366:139:2:-;6438:5;;-1:-1:-1;;;;;6438:5:2;6416:10;:28;6412:86;;;6460:5;:26;;-1:-1:-1;;;;;;6460:26:2;;;6412:86;6366:139::o;4309:203:1:-;4415:10;4389:4;4436:23;;;:11;:23;;;;;;;;-1:-1:-1;;;;;4436:32:1;;;;;;;;;;4389:4;;4406:76;;4427:7;;4436:45;;4471:10;;4436:45;:::i;9363:136:3:-;-1:-1:-1;;;;;9459:19:3;;;9432:7;9459:19;;;:6;:19;;;;;:32;;;;;9363:136::o;6143:303:1:-;6237:4;6254:12;6269:27;6278:9;6289:6;6269:8;:27::i;:::-;6254:42;;6311:7;6307:107;;;6334:68;;-1:-1:-1;;;6334:68:1;;-1:-1:-1;;;;;6334:42:1;;;;;:68;;6377:10;;6389:6;;6397:4;;;;6334:68;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6307:107;6431:7;6143:303;-1:-1:-1;;;;;6143:303:1:o;5547:209:2:-;5595:25;5601:10;5613:6;5595:5;:25::i;:::-;5631:14;5648:11;:9;:11::i;:::-;:40;;5666:22;;5648:40;;;5662:1;5648:40;5717:7;;5631:57;;-1:-1:-1;;;;;;5717:7:2;5699:32;5732:15;5631:57;5732:6;:15;:::i;:::-;5699:49;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5547:209;;:::o;2396:21::-;;;-1:-1:-1;;;;;2396:21:2;;:::o;3433:35:3:-;;;;:::o;5559:103::-;5632:10;5615:28;;;;:16;:28;;;;;:39;;-1:-1:-1;;5615:39:3;5646:8;;5615:39;;;;;;5559:103::o;10098:427::-;10149:10;10142:18;;;;:6;:18;;;;;:29;;;:34;10138:380;;10221:10;10193:18;10214;;;:6;:18;;;;;;:29;;;;;10283:31;;;;;10330:25;;-1:-1:-1;;;;;;10330:25:3;;;;;;;;;-1:-1:-1;10330:25:3;;;;;;;;;;;;;10378:41;;-1:-1:-1;;;10378:41:3;;10214:29;;-1:-1:-1;;;;;10283:31:3;;;;;;10378:17;;:41;;10221:10;10214:29;;10378:41;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;10370:80;;;;-1:-1:-1;;;10370:80:3;;;;;;;:::i;:::-;10483:10;-1:-1:-1;;;;;10470:36:3;;10495:10;10470:36;;;;;;:::i;:::-;;;;;;;;10138:380;;10098:427::o;2152:119:1:-;-1:-1:-1;;;;;2245:18:1;2218:7;2245:18;;;;;;;;;;;;2152:119::o;3922:648:0:-;4003:7;4023:12;4038:39;4062:14;4038:23;:39::i;:::-;4023:54;-1:-1:-1;4092:8:0;;4088:475;;4124:4;-1:-1:-1;4117:11:0;;4088:475;4176:7;;-1:-1:-1;;;;;4150:34:0;;;4176:7;;4150:34;4146:417;;;-1:-1:-1;;4208:22:0;;4201:29;;4146:417;4529:22;;4483:7;;4462:64;;-1:-1:-1;;;4462:64:0;;-1:-1:-1;;;;;4483:7:0;;;;4462:48;;:64;;4511:14;;4462:64;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:89;;;;:::i;:::-;4455:96;;;;;4146:417;3922:648;;;;:::o;3012:37:3:-;;;;:::o;6936:366:2:-;6993:10;7023:13;:11;:13::i;:::-;7022:14;7014:23;;;;;;7159:13;:11;:13::i;:::-;:20;;7175:4;7159:20;:::i;:::-;7127;7137:9;7127;:20::i;:::-;:28;;7150:5;7127:28;:::i;:::-;:52;;7119:83;;;;-1:-1:-1;;;7119:83:2;;;;;;;:::i;:::-;7213:36;7228:9;7239;7213:14;:36::i;:::-;7265:29;7284:9;7265:29;;;;;;:::i;:::-;;;;;;;;6936:366;:::o;3306:135::-;3415:7;;:16;;;-1:-1:-1;;;3415:16:2;;;;3354:13;;-1:-1:-1;;;;;3415:7:2;;:14;;:16;;;;;:7;;:16;;;;;;;:7;:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3415:16:2;;;;;;;;;;;;:::i;:::-;3393:39;;;;;;;;:::i;9225:130:3:-;-1:-1:-1;;;;;9317:19:3;9290:7;9317:19;;;:6;:19;;;;;:30;;;;9225:130::o;4268:101:2:-;4334:22;;:27;4268:101;:::o;5844:121:3:-;-1:-1:-1;;;;;5933:24:3;5908:4;5933:24;;;:16;:24;;;;;;;;5932:25;;5844:121::o;5015:213:1:-;5126:10;5100:4;5147:23;;;:11;:23;;;;;;;;-1:-1:-1;;;;;5147:32:1;;;;;;;;;;5100:4;;5117:81;;5138:7;;5147:50;;5182:15;;5147:50;:::i;3449:175:2:-;3577:7;;-1:-1:-1;;;;;3577:7:2;3555:10;:30;3547:39;;;;;;3597:19;3603:4;3609:6;3597:5;:19::i;:::-;3449:175;;;;:::o;3614:152:0:-;3709:4;3733:25;3748:2;3752:5;3733:14;:25::i;:::-;3726:32;3614:152;-1:-1:-1;;;3614:152:0:o;2319:47:2:-;2359:7;2319:47;:::o;3207:48:3:-;;;;;;;;;;;;;;;:::o;3746:178:2:-;3823:7;;:55;;-1:-1:-1;;;3823:55:2;;-1:-1:-1;;;;;3823:7:2;;;;:20;;:55;;3844:10;;3864:4;;3871:6;;3823:55;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3815:64;;;;;;3890:26;3896:11;3909:6;3890:5;:26::i;:::-;3746:178;;:::o;2791:19::-;;;-1:-1:-1;;;;;2791:19:2;;:::o;2477:28::-;;;-1:-1:-1;;;;;2477:28:2;;:::o;3082:39:3:-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3082:39:3;;;;;;;;:::o;3083:19:0:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;5764:389:2:-;5883:11;:9;:11::i;:::-;5875:20;;;;;;5925:7;;6001:6;;5925:98;;-1:-1:-1;;;5925:98:2;;5906:16;;-1:-1:-1;;;;;5925:7:2;;:14;;5947:9;;5925:98;;5958:4;;5964:10;;5976:13;;5991:8;;2359:7;;5925:98;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5906:117;;6046:13;:11;:13::i;:::-;6042:69;;;6076:5;;:23;;-1:-1:-1;;;6076:23:2;;-1:-1:-1;;;;;6076:5:2;;;;:13;;:23;;6090:8;;6076:23;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6042:69;6121:5;:24;;-1:-1:-1;;;;;;6121:24:2;-1:-1:-1;;;;;6121:24:2;;;;;;;;;;-1:-1:-1;;;5764:389:2:o;2720:143:1:-;-1:-1:-1;;;;;2828:18:1;;;2801:7;2828:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;2720:143::o;4703:140:2:-;4762:11;:9;:11::i;:::-;4761:12;4753:21;;;;;;4785:50;4792:10;4804:6;4812:22;;4785:6;:50::i;:::-;4703:140;:::o;9507:128:3:-;-1:-1:-1;;;;;9598:19:3;9571:7;9598:19;;;:6;:19;;;;;:29;;;;9507:128::o;6161:197:2:-;6256:5;;-1:-1:-1;;;;;6256:5:2;6234:10;:28;6226:37;;;;;;6274:34;6281:5;6288:16;6298:5;6288:9;:16::i;:::-;6306:1;6274:6;:34::i;:::-;6319:31;6334:8;6344:5;6319:14;:31::i;8073:175:1:-;-1:-1:-1;;;;;8158:18:1;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;;:35;;;8209:31;;;;;8188:5;;8209:31;:::i;5718:330::-;-1:-1:-1;;;;;5824:23:1;;5816:32;;;;;;5861:47;5882:6;5890:9;5901:6;5861:20;:47::i;:::-;-1:-1:-1;;;;;5921:17:1;;:9;:17;;;;;;;;;;:27;;5942:6;;5921:9;:27;;5942:6;;5921:27;:::i;:::-;;;;-1:-1:-1;;;;;;;5959:20:1;;:9;:20;;;;;;;;;;:30;;5983:6;;5959:9;:30;;5983:6;;5959:30;:::i;:::-;;;;;;;;6022:9;-1:-1:-1;;;;;6005:35:1;6014:6;-1:-1:-1;;;;;6005:35:1;;6033:6;6005:35;;;;;;:::i;7373:260::-;7449:49;7470:7;7487:1;7491:6;7449:20;:49::i;:::-;7527:6;7511:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;7544:18:1;;:9;:18;;;;;;;;;;:28;;7566:6;;7544:9;:28;;7566:6;;7544:28;:::i;:::-;;;;-1:-1:-1;;7588:37:1;;7614:1;;-1:-1:-1;;;;;7588:37:1;;;;;;;7618:6;;7588:37;:::i;:::-;;;;;;;;7373:260;;:::o;3806:327:3:-;3886:7;-1:-1:-1;;;;;3910:31:3;;3936:4;3910:31;3906:220;;;-1:-1:-1;3965:1:3;3958:8;;3906:220;4006:23;;-1:-1:-1;;;;;3988:41:3;;;4006:23;;3988:41;3984:142;;;-1:-1:-1;4053:20:3;;4046:27;;3984:142;-1:-1:-1;4113:1:3;4106:8;;7507:106:2;7585:5;;-1:-1:-1;;;;;7585:5:2;7577:28;;7507:106;:::o;6513:415::-;6616:11;:9;:11::i;:::-;6608:20;;;;;;6695:7;;6735:32;;-1:-1:-1;;;6735:32:2;;-1:-1:-1;;;;;6695:7:2;;;;:16;;6712:21;;6695:7;;6735:17;;:32;;6761:4;;6735:32;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6695:73;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6687:82;;;;;;6821:7;:28;;-1:-1:-1;;;;;;6821:28:2;-1:-1:-1;;;;;6821:28:2;;;;;6860:60;6906:13;:11;:13::i;:::-;6871:7;;:32;;-1:-1:-1;;;6871:32:2;;-1:-1:-1;;;;;6871:7:2;;;;:17;;:32;;6897:4;;6871:32;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:48;;;;:::i;:::-;6860:10;:60::i;6727:313:1:-;-1:-1:-1;;;;;6813:23:1;;6805:32;;;;;;6850:51;6879:1;6883:9;6894:6;6850:20;:51::i;:::-;6930:6;6914:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;6947:20:1;;:9;:20;;;;;;;;;;:30;;6971:6;;6947:9;:30;;6971:6;;6947:30;:::i;:::-;;;;-1:-1:-1;;6993:39:1;;-1:-1:-1;;;;;6993:39:1;;;7010:1;;6993:39;;;;7025:6;;6993:39;:::i;9643:217:3:-;9729:4;9754:33;9769:9;9780:6;9754:14;:33::i;:::-;9746:61;;;;-1:-1:-1;;;9746:61:3;;;;;;;:::i;:::-;9818:12;:10;:12::i;4855:171:2:-;4938:20;4944:5;4951:6;4938:5;:20::i;:::-;4977:7;;-1:-1:-1;;;;;4977:7:2;:16;4994:5;5001:15;5010:6;5001;:15;:::i;:::-;4977:40;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4969:49;;;;;;4855:171;;;:::o;7310:189::-;7415:13;:11;:13::i;:::-;7411:81;;;7445:5;;:35;;-1:-1:-1;;;7445:35:2;;-1:-1:-1;;;;;7445:5:2;;;;:17;;:35;;7463:4;;7469:2;;7473:6;;7445:35;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7310:189;;;:::o;4473:126::-;4547:1;4537:6;:11;;4529:20;;;;;;4560:22;:31;4473:126::o;2484:173:1:-;2570:4;2587:40;2597:10;2609:9;2620:6;2587:9;:40::i;14:259:6:-;;126:2;114:9;105:7;101:23;97:32;94:2;;;147:6;139;132:22;94:2;191:9;178:23;210:33;237:5;210:33;:::i;278:263::-;;401:2;389:9;380:7;376:23;372:32;369:2;;;422:6;414;407:22;369:2;459:9;453:16;478:33;505:5;478:33;:::i;546:402::-;;;675:2;663:9;654:7;650:23;646:32;643:2;;;696:6;688;681:22;643:2;740:9;727:23;759:33;786:5;759:33;:::i;:::-;811:5;-1:-1:-1;868:2:6;853:18;;840:32;881:35;840:32;881:35;:::i;:::-;935:7;925:17;;;633:315;;;;;:::o;953:470::-;;;;1099:2;1087:9;1078:7;1074:23;1070:32;1067:2;;;1120:6;1112;1105:22;1067:2;1164:9;1151:23;1183:33;1210:5;1183:33;:::i;:::-;1235:5;-1:-1:-1;1292:2:6;1277:18;;1264:32;1305:35;1264:32;1305:35;:::i;:::-;1057:366;;1359:7;;-1:-1:-1;;;1413:2:6;1398:18;;;;1385:32;;1057:366::o;1428:327::-;;;1557:2;1545:9;1536:7;1532:23;1528:32;1525:2;;;1578:6;1570;1563:22;1525:2;1622:9;1609:23;1641:33;1668:5;1641:33;:::i;:::-;1693:5;1745:2;1730:18;;;;1717:32;;-1:-1:-1;;;1515:240:6:o;1760:846::-;;;;;1925:2;1913:9;1904:7;1900:23;1896:32;1893:2;;;1946:6;1938;1931:22;1893:2;1990:9;1977:23;2009:33;2036:5;2009:33;:::i;:::-;2061:5;-1:-1:-1;2113:2:6;2098:18;;2085:32;;-1:-1:-1;2168:2:6;2153:18;;2140:32;2191:18;2221:14;;;2218:2;;;2253:6;2245;2238:22;2218:2;2296:6;2285:9;2281:22;2271:32;;2341:7;2334:4;2330:2;2326:13;2322:27;2312:2;;2368:6;2360;2353:22;2312:2;2413;2400:16;2439:2;2431:6;2428:14;2425:2;;;2460:6;2452;2445:22;2425:2;2510:7;2505:2;2496:6;2492:2;2488:15;2484:24;2481:37;2478:2;;;2536:6;2528;2521:22;2478:2;1883:723;;;;-1:-1:-1;;2572:2:6;2564:11;;-1:-1:-1;;;1883:723:6:o;2611:253::-;;2720:2;2708:9;2699:7;2695:23;2691:32;2688:2;;;2741:6;2733;2726:22;2688:2;2785:9;2772:23;2804:30;2828:5;2804:30;:::i;2869:257::-;;2989:2;2977:9;2968:7;2964:23;2960:32;2957:2;;;3010:6;3002;2995:22;2957:2;3047:9;3041:16;3066:30;3090:5;3066:30;:::i;3131:395::-;;;;3277:2;3265:9;3256:7;3252:23;3248:32;3245:2;;;3298:6;3290;3283:22;3245:2;3339:9;3326:23;3316:33;;3396:2;3385:9;3381:18;3368:32;3358:42;;3450:2;3439:9;3435:18;3422:32;3463:33;3490:5;3463:33;:::i;:::-;3515:5;3505:15;;;3235:291;;;;;:::o;3531:894::-;;3664:2;3652:9;3643:7;3639:23;3635:32;3632:2;;;3685:6;3677;3670:22;3632:2;3723:9;3717:16;3752:18;3793:2;3785:6;3782:14;3779:2;;;3814:6;3806;3799:22;3779:2;3857:6;3846:9;3842:22;3832:32;;3902:7;3895:4;3891:2;3887:13;3883:27;3873:2;;3929:6;3921;3914:22;3873:2;3963;3957:9;3985:2;3981;3978:10;3975:2;;;3991:18;;:::i;:::-;4040:2;4034:9;4109:2;4090:13;;-1:-1:-1;;4086:27:6;4074:40;;4116:2;4070:49;4134:18;;;4154:22;;;4131:46;4128:2;;;4180:18;;:::i;:::-;4216:2;4209:22;4240:18;;;4277:11;;;4290:2;4273:20;4270:33;-1:-1:-1;4267:2:6;;;4321:6;4313;4306:22;4267:2;4339:55;4391:2;4386;4378:6;4374:15;4369:2;4365;4361:11;4339:55;:::i;:::-;4413:6;3622:803;-1:-1:-1;;;;;;3622:803:6:o;4430:190::-;;4542:2;4530:9;4521:7;4517:23;4513:32;4510:2;;;4563:6;4555;4548:22;4510:2;-1:-1:-1;4591:23:6;;4500:120;-1:-1:-1;4500:120:6:o;4625:194::-;;4748:2;4736:9;4727:7;4723:23;4719:32;4716:2;;;4769:6;4761;4754:22;4716:2;-1:-1:-1;4797:16:6;;4706:113;-1:-1:-1;4706:113:6:o;4824:418::-;;-1:-1:-1;;;5081:3:6;5074:16;5119:6;5113:13;5135:61;5189:6;5185:1;5180:3;5176:11;5169:4;5161:6;5157:17;5135:61;:::i;:::-;5216:16;;;;5234:1;5212:24;;5064:178;-1:-1:-1;;5064:178:6:o;5247:429::-;;-1:-1:-1;;;5504:3:6;5497:25;5551:6;5545:13;5567:62;5622:6;5617:2;5612:3;5608:12;5601:4;5593:6;5589:17;5567:62;:::i;:::-;5649:16;;;;5667:2;5645:25;;5487:189;-1:-1:-1;;5487:189:6:o;5681:203::-;-1:-1:-1;;;;;5845:32:6;;;;5827:51;;5815:2;5800:18;;5782:102::o;5889:375::-;-1:-1:-1;;;;;6147:15:6;;;6129:34;;6199:15;;;;6194:2;6179:18;;6172:43;6246:2;6231:18;;6224:34;;;;6079:2;6064:18;;6046:218::o;6269:274::-;-1:-1:-1;;;;;6461:32:6;;;;6443:51;;6525:2;6510:18;;6503:34;6431:2;6416:18;;6398:145::o;6548:562::-;-1:-1:-1;;;;;6761:32:6;;6743:51;;6825:2;6810:18;;6803:34;;;6873:2;6868;6853:18;;6846:30;;;6892:18;;6885:34;;;6548:562;6912:6;6962;6956:3;6941:19;;6928:49;6997:22;;;7021:3;6993:32;;;6986:46;;;;7093:2;7072:15;;;-1:-1:-1;;7068:29:6;7053:45;7049:55;;6733:377;-1:-1:-1;;;6733:377:6:o;7115:447::-;-1:-1:-1;;;;;7402:15:6;;;7384:34;;7449:2;7434:18;;7427:34;;;;7492:2;7477:18;;7470:34;;;;7540:15;;;7535:2;7520:18;;7513:43;7333:3;7318:19;;7300:262::o;7567:187::-;7732:14;;7725:22;7707:41;;7695:2;7680:18;;7662:92::o;7759:591::-;8046:25;;;-1:-1:-1;;;;;8145:15:6;;;8140:2;8125:18;;8118:43;8192:2;8177:18;;8170:34;;;;8240:15;;8235:2;8220:18;;8213:43;8287:3;8272:19;;8265:35;;;;8098:3;8316:19;;8309:35;8033:3;8018:19;;8000:350::o;9031:383::-;;9180:2;9169:9;9162:21;9212:6;9206:13;9255:6;9250:2;9239:9;9235:18;9228:34;9271:66;9330:6;9325:2;9314:9;9310:18;9305:2;9297:6;9293:15;9271:66;:::i;:::-;9398:2;9377:15;-1:-1:-1;;9373:29:6;9358:45;;;;9405:2;9354:54;;9152:262;-1:-1:-1;;9152:262:6:o;9419:355::-;9621:2;9603:21;;;9660:2;9640:18;;;9633:30;9699:33;9694:2;9679:18;;9672:61;9765:2;9750:18;;9593:181::o;9779:349::-;9981:2;9963:21;;;10020:2;10000:18;;;9993:30;10059:27;10054:2;10039:18;;10032:55;10119:2;10104:18;;9953:175::o;10133:339::-;10335:2;10317:21;;;10374:2;10354:18;;;10347:30;-1:-1:-1;;;10408:2:6;10393:18;;10386:45;10463:2;10448:18;;10307:165::o;10477:346::-;10679:2;10661:21;;;10718:2;10698:18;;;10691:30;-1:-1:-1;;;10752:2:6;10737:18;;10730:52;10814:2;10799:18;;10651:172::o;10828:338::-;11030:2;11012:21;;;11069:2;11049:18;;;11042:30;-1:-1:-1;;;11103:2:6;11088:18;;11081:44;11157:2;11142:18;;11002:164::o;11171:350::-;11373:2;11355:21;;;11412:2;11392:18;;;11385:30;11451:28;11446:2;11431:18;;11424:56;11512:2;11497:18;;11345:176::o;11526:356::-;11728:2;11710:21;;;11747:18;;;11740:30;11806:34;11801:2;11786:18;;11779:62;11873:2;11858:18;;11700:182::o;11887:347::-;12089:2;12071:21;;;12128:2;12108:18;;;12101:30;12167:25;12162:2;12147:18;;12140:53;12225:2;12210:18;;12061:173::o;12239:342::-;12441:2;12423:21;;;12480:2;12460:18;;;12453:30;-1:-1:-1;;;12514:2:6;12499:18;;12492:48;12572:2;12557:18;;12413:168::o;12586:355::-;12788:2;12770:21;;;12827:2;12807:18;;;12800:30;12866:33;12861:2;12846:18;;12839:61;12932:2;12917:18;;12760:181::o;12946:348::-;13148:2;13130:21;;;13187:2;13167:18;;;13160:30;13226:26;13221:2;13206:18;;13199:54;13285:2;13270:18;;13120:174::o;13299:177::-;13445:25;;;13433:2;13418:18;;13400:76::o;13481:184::-;13653:4;13641:17;;;;13623:36;;13611:2;13596:18;;13578:87::o;13670:128::-;;13741:1;13737:6;13734:1;13731:13;13728:2;;;13747:18;;:::i;:::-;-1:-1:-1;13783:9:6;;13718:80::o;13803:217::-;;13869:1;13859:2;;-1:-1:-1;;;13894:31:6;;13948:4;13945:1;13938:15;13976:4;13901:1;13966:15;13859:2;-1:-1:-1;14005:9:6;;13849:171::o;14025:168::-;;14131:1;14127;14123:6;14119:14;14116:1;14113:21;14108:1;14101:9;14094:17;14090:45;14087:2;;;14138:18;;:::i;:::-;-1:-1:-1;14178:9:6;;14077:116::o;14198:125::-;;14266:1;14263;14260:8;14257:2;;;14271:18;;:::i;:::-;-1:-1:-1;14308:9:6;;14247:76::o;14328:258::-;14400:1;14410:113;14424:6;14421:1;14418:13;14410:113;;;14500:11;;;14494:18;14481:11;;;14474:39;14446:2;14439:10;14410:113;;;14541:6;14538:1;14535:13;14532:2;;;-1:-1:-1;;14576:1:6;14558:16;;14551:27;14381:205::o;14591:380::-;14676:1;14666:12;;14723:1;14713:12;;;14734:2;;14788:4;14780:6;14776:17;14766:27;;14734:2;14841;14833:6;14830:14;14810:18;14807:38;14804:2;;;14887:10;14882:3;14878:20;14875:1;14868:31;14922:4;14919:1;14912:15;14950:4;14947:1;14940:15;14976:127;15037:10;15032:3;15028:20;15025:1;15018:31;15068:4;15065:1;15058:15;15092:4;15089:1;15082:15;15108:127;15169:10;15164:3;15160:20;15157:1;15150:31;15200:4;15197:1;15190:15;15224:4;15221:1;15214:15;15240:133;-1:-1:-1;;;;;15317:31:6;;15307:42;;15297:2;;15363:1;15360;15353:12;15378:120;15466:5;15459:13;15452:21;15445:5;15442:32;15432:2;;15488:1;15485;15478:12",
    "sourcePath": "c:/Users/luziu/Documents/aktionariat/contracts/src/DraggableShares.sol",
    "compiler": {
        "name": "solc",
        "version": "0.8.0+commit.c7dfd78e"
    },
    "ast": {
        "absolutePath": "c:/Users/luziu/Documents/aktionariat/contracts/src/DraggableShares.sol",
        "exportedSymbols": {
            "DraggableShares": [
                121
            ],
            "ERC20": [
                542
            ],
            "ERC20Draggable": [
                1020
            ],
            "ERC20Recoverable": [
                1648
            ],
            "IBurnable": [
                1026
            ],
            "IERC20": [
                1741
            ],
            "IERC677Receiver": [
                1753
            ],
            "IOffer": [
                1041
            ],
            "IOfferFactory": [
                1059
            ],
            "IRecoverable": [
                139
            ]
        },
        "id": 140,
        "license": "LicenseRef-Aktionariat",
        "nodeType": "SourceUnit",
        "nodes": [
            {
                "id": 1,
                "literals": [
                    "solidity",
                    ">=",
                    "0.8"
                ],
                "nodeType": "PragmaDirective",
                "src": "1336:22:0"
            },
            {
                "absolutePath": "c:/Users/luziu/Documents/aktionariat/contracts/src/ERC20Recoverable.sol",
                "file": "./ERC20Recoverable.sol",
                "id": 2,
                "nodeType": "ImportDirective",
                "scope": 140,
                "sourceUnit": 1649,
                "src": "1362:32:0",
                "symbolAliases": [],
                "unitAlias": ""
            },
            {
                "absolutePath": "c:/Users/luziu/Documents/aktionariat/contracts/src/ERC20Draggable.sol",
                "file": "./ERC20Draggable.sol",
                "id": 3,
                "nodeType": "ImportDirective",
                "scope": 140,
                "sourceUnit": 1060,
                "src": "1396:30:0",
                "symbolAliases": [],
                "unitAlias": ""
            },
            {
                "abstract": false,
                "baseContracts": [
                    {
                        "baseName": {
                            "id": 5,
                            "name": "ERC20Recoverable",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 1648,
                            "src": "3041:16:0"
                        },
                        "id": 6,
                        "nodeType": "InheritanceSpecifier",
                        "src": "3041:16:0"
                    },
                    {
                        "baseName": {
                            "id": 7,
                            "name": "ERC20Draggable",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 1020,
                            "src": "3059:14:0"
                        },
                        "id": 8,
                        "nodeType": "InheritanceSpecifier",
                        "src": "3059:14:0"
                    }
                ],
                "contractDependencies": [
                    542,
                    1020,
                    1648,
                    1741,
                    1753
                ],
                "contractKind": "contract",
                "documentation": {
                    "id": 4,
                    "nodeType": "StructuredDocumentation",
                    "src": "1430:1579:0",
                    "text": " @title Draggable CompanyName AG Shares\n @author Luzius Meisser, luzius@meissereconomics.com\n This is an ERC-20 token representing shares of CompanyName AG that are bound to\n a shareholder agreement that can be found at the URL defined in the constant 'terms'.\n The shareholder agreement is partially enforced through this smart contract. The agreement\n is designed to facilitate a complete acquisition of the firm even if a minority of shareholders\n disagree with the acquisition, to protect the interest of the minority shareholders by requiring\n the acquirer to offer the same conditions to everyone when acquiring the company, and to\n facilitate an update of the shareholder agreement even if a minority of the shareholders that\n are bound to this agreement disagree. The name \"draggable\" stems from the convention of calling\n the right to drag a minority along with a sale of the company \"drag-along\" rights. The name is\n chosen to ensure that token holders are aware that they are bound to such an agreement.\n The percentage of token holders that must agree with an update of the terms is defined by the\n constant UPDATE_QUORUM. The percentage of yes-votes that is needed to successfully complete an\n acquisition is defined in the constant ACQUISITION_QUORUM. Note that the update quorum is based\n on the total number of tokens in circulation. In contrast, the acquisition quorum is based on the\n number of votes cast during the voting period, not taking into account those who did not bother\n to vote."
                },
                "fullyImplemented": true,
                "id": 121,
                "linearizedBaseContracts": [
                    121,
                    1020,
                    1753,
                    1648,
                    542,
                    1741
                ],
                "name": "DraggableShares",
                "nodeType": "ContractDefinition",
                "nodes": [
                    {
                        "constant": false,
                        "functionSelector": "d5025625",
                        "id": 10,
                        "mutability": "mutable",
                        "name": "terms",
                        "nodeType": "VariableDeclaration",
                        "scope": 121,
                        "src": "3083:19:0",
                        "stateVariable": true,
                        "storageLocation": "default",
                        "typeDescriptions": {
                            "typeIdentifier": "t_string_storage",
                            "typeString": "string"
                        },
                        "typeName": {
                            "id": 9,
                            "name": "string",
                            "nodeType": "ElementaryTypeName",
                            "src": "3083:6:0",
                            "typeDescriptions": {
                                "typeIdentifier": "t_string_storage_ptr",
                                "typeString": "string"
                            }
                        },
                        "visibility": "public"
                    },
                    {
                        "body": {
                            "id": 38,
                            "nodeType": "Block",
                            "src": "3381:225:0",
                            "statements": [
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "hexValue": "66616c7365",
                                                "id": 31,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "bool",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "3434:5:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                },
                                                "value": "false"
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            ],
                                            "expression": {
                                                "arguments": [
                                                    {
                                                        "id": 28,
                                                        "name": "wrappedToken",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 17,
                                                        "src": "3405:12:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        }
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        }
                                                    ],
                                                    "id": 27,
                                                    "name": "IRecoverable",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 139,
                                                    "src": "3392:12:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_type$_t_contract$_IRecoverable_$139_$",
                                                        "typeString": "type(contract IRecoverable)"
                                                    }
                                                },
                                                "id": 29,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "typeConversion",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "3392:26:0",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_contract$_IRecoverable_$139",
                                                    "typeString": "contract IRecoverable"
                                                }
                                            },
                                            "id": 30,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "setRecoverable",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 126,
                                            "src": "3392:41:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_external_nonpayable$_t_bool_$returns$__$",
                                                "typeString": "function (bool) external"
                                            }
                                        },
                                        "id": 32,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "3392:48:0",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 33,
                                    "nodeType": "ExpressionStatement",
                                    "src": "3392:48:0"
                                },
                                {
                                    "expression": {
                                        "id": 36,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftHandSide": {
                                            "id": 34,
                                            "name": "terms",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 10,
                                            "src": "3451:5:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_string_storage",
                                                "typeString": "string storage ref"
                                            }
                                        },
                                        "nodeType": "Assignment",
                                        "operator": "=",
                                        "rightHandSide": {
                                            "id": 35,
                                            "name": "_terms",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 13,
                                            "src": "3459:6:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_string_memory_ptr",
                                                "typeString": "string memory"
                                            }
                                        },
                                        "src": "3451:14:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_string_storage",
                                            "typeString": "string storage ref"
                                        }
                                    },
                                    "id": 37,
                                    "nodeType": "ExpressionStatement",
                                    "src": "3451:14:0"
                                }
                            ]
                        },
                        "documentation": {
                            "id": 11,
                            "nodeType": "StructuredDocumentation",
                            "src": "3111:110:0",
                            "text": " Designed to be used with the Crypto Franc as currency token. See also parent constructor."
                        },
                        "id": 39,
                        "implemented": true,
                        "kind": "constructor",
                        "modifiers": [
                            {
                                "arguments": [
                                    {
                                        "id": 22,
                                        "name": "offerFactory",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 15,
                                        "src": "3345:12:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    {
                                        "id": 23,
                                        "name": "wrappedToken",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 17,
                                        "src": "3359:12:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    {
                                        "id": 24,
                                        "name": "quorum",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 19,
                                        "src": "3373:6:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    }
                                ],
                                "id": 25,
                                "modifierName": {
                                    "id": 21,
                                    "name": "ERC20Draggable",
                                    "nodeType": "IdentifierPath",
                                    "referencedDeclaration": 1020,
                                    "src": "3330:14:0"
                                },
                                "nodeType": "ModifierInvocation",
                                "src": "3330:50:0"
                            }
                        ],
                        "name": "",
                        "nodeType": "FunctionDefinition",
                        "parameters": {
                            "id": 20,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 13,
                                    "mutability": "mutable",
                                    "name": "_terms",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 39,
                                    "src": "3239:20:0",
                                    "stateVariable": false,
                                    "storageLocation": "memory",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_string_memory_ptr",
                                        "typeString": "string"
                                    },
                                    "typeName": {
                                        "id": 12,
                                        "name": "string",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "3239:6:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_string_storage_ptr",
                                            "typeString": "string"
                                        }
                                    },
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 15,
                                    "mutability": "mutable",
                                    "name": "offerFactory",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 39,
                                    "src": "3261:20:0",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                    },
                                    "typeName": {
                                        "id": 14,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "3261:7:0",
                                        "stateMutability": "nonpayable",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 17,
                                    "mutability": "mutable",
                                    "name": "wrappedToken",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 39,
                                    "src": "3283:20:0",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                    },
                                    "typeName": {
                                        "id": 16,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "3283:7:0",
                                        "stateMutability": "nonpayable",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 19,
                                    "mutability": "mutable",
                                    "name": "quorum",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 39,
                                    "src": "3305:14:0",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                    },
                                    "typeName": {
                                        "id": 18,
                                        "name": "uint256",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "3305:7:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "3238:82:0"
                        },
                        "returnParameters": {
                            "id": 26,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "3381:0:0"
                        },
                        "scope": 121,
                        "src": "3227:379:0",
                        "stateMutability": "nonpayable",
                        "virtual": false,
                        "visibility": "public"
                    },
                    {
                        "baseFunctions": [
                            216,
                            1442
                        ],
                        "body": {
                            "id": 57,
                            "nodeType": "Block",
                            "src": "3715:51:0",
                            "statements": [
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "id": 53,
                                                "name": "to",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 41,
                                                "src": "3748:2:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            {
                                                "id": 54,
                                                "name": "value",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 43,
                                                "src": "3752:5:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                },
                                                {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            ],
                                            "expression": {
                                                "id": 51,
                                                "name": "super",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 4294967271,
                                                "src": "3733:5:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_type$_t_super$_DraggableShares_$121_$",
                                                    "typeString": "type(contract super DraggableShares)"
                                                }
                                            },
                                            "id": 52,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "transfer",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 1442,
                                            "src": "3733:14:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                                "typeString": "function (address,uint256) returns (bool)"
                                            }
                                        },
                                        "id": 55,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "3733:25:0",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                        }
                                    },
                                    "functionReturnParameters": 50,
                                    "id": 56,
                                    "nodeType": "Return",
                                    "src": "3726:32:0"
                                }
                            ]
                        },
                        "functionSelector": "a9059cbb",
                        "id": 58,
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [],
                        "name": "transfer",
                        "nodeType": "FunctionDefinition",
                        "overrides": {
                            "id": 47,
                            "nodeType": "OverrideSpecifier",
                            "overrides": [
                                {
                                    "id": 45,
                                    "name": "ERC20Recoverable",
                                    "nodeType": "IdentifierPath",
                                    "referencedDeclaration": 1648,
                                    "src": "3668:16:0"
                                },
                                {
                                    "id": 46,
                                    "name": "ERC20",
                                    "nodeType": "IdentifierPath",
                                    "referencedDeclaration": 542,
                                    "src": "3686:5:0"
                                }
                            ],
                            "src": "3659:33:0"
                        },
                        "parameters": {
                            "id": 44,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 41,
                                    "mutability": "mutable",
                                    "name": "to",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 58,
                                    "src": "3632:10:0",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                    },
                                    "typeName": {
                                        "id": 40,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "3632:7:0",
                                        "stateMutability": "nonpayable",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 43,
                                    "mutability": "mutable",
                                    "name": "value",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 58,
                                    "src": "3644:13:0",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                    },
                                    "typeName": {
                                        "id": 42,
                                        "name": "uint256",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "3644:7:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "3631:27:0"
                        },
                        "returnParameters": {
                            "id": 50,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 49,
                                    "mutability": "mutable",
                                    "name": "",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 58,
                                    "src": "3709:4:0",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                    },
                                    "typeName": {
                                        "id": 48,
                                        "name": "bool",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "3709:4:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "3708:6:0"
                        },
                        "scope": 121,
                        "src": "3614:152:0",
                        "stateMutability": "nonpayable",
                        "virtual": false,
                        "visibility": "public"
                    },
                    {
                        "baseFunctions": [
                            1167
                        ],
                        "body": {
                            "id": 73,
                            "nodeType": "Block",
                            "src": "3840:74:0",
                            "statements": [
                                {
                                    "expression": {
                                        "arguments": [],
                                        "expression": {
                                            "argumentTypes": [],
                                            "expression": {
                                                "arguments": [
                                                    {
                                                        "arguments": [
                                                            {
                                                                "id": 67,
                                                                "name": "wrapped",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [],
                                                                "referencedDeclaration": 557,
                                                                "src": "3879:7:0",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_contract$_IERC20_$1741",
                                                                    "typeString": "contract IERC20"
                                                                }
                                                            }
                                                        ],
                                                        "expression": {
                                                            "argumentTypes": [
                                                                {
                                                                    "typeIdentifier": "t_contract$_IERC20_$1741",
                                                                    "typeString": "contract IERC20"
                                                                }
                                                            ],
                                                            "id": 66,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": true,
                                                            "lValueRequested": false,
                                                            "nodeType": "ElementaryTypeNameExpression",
                                                            "src": "3871:7:0",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_type$_t_address_$",
                                                                "typeString": "type(address)"
                                                            },
                                                            "typeName": {
                                                                "id": 65,
                                                                "name": "address",
                                                                "nodeType": "ElementaryTypeName",
                                                                "src": "3871:7:0",
                                                                "typeDescriptions": {}
                                                            }
                                                        },
                                                        "id": 68,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "kind": "typeConversion",
                                                        "lValueRequested": false,
                                                        "names": [],
                                                        "nodeType": "FunctionCall",
                                                        "src": "3871:16:0",
                                                        "tryCall": false,
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        }
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        }
                                                    ],
                                                    "id": 64,
                                                    "name": "IRecoverable",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 139,
                                                    "src": "3858:12:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_type$_t_contract$_IRecoverable_$139_$",
                                                        "typeString": "type(contract IRecoverable)"
                                                    }
                                                },
                                                "id": 69,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "typeConversion",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "3858:30:0",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_contract$_IRecoverable_$139",
                                                    "typeString": "contract IRecoverable"
                                                }
                                            },
                                            "id": 70,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "getClaimDeleter",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 138,
                                            "src": "3858:46:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                                                "typeString": "function () view external returns (address)"
                                            }
                                        },
                                        "id": 71,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "3858:48:0",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "functionReturnParameters": 63,
                                    "id": 72,
                                    "nodeType": "Return",
                                    "src": "3851:55:0"
                                }
                            ]
                        },
                        "functionSelector": "2a0a4ed5",
                        "id": 74,
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [],
                        "name": "getClaimDeleter",
                        "nodeType": "FunctionDefinition",
                        "overrides": {
                            "id": 60,
                            "nodeType": "OverrideSpecifier",
                            "overrides": [],
                            "src": "3813:8:0"
                        },
                        "parameters": {
                            "id": 59,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "3798:2:0"
                        },
                        "returnParameters": {
                            "id": 63,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 62,
                                    "mutability": "mutable",
                                    "name": "",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 74,
                                    "src": "3831:7:0",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                    },
                                    "typeName": {
                                        "id": 61,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "3831:7:0",
                                        "stateMutability": "nonpayable",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "3830:9:0"
                        },
                        "scope": 121,
                        "src": "3774:140:0",
                        "stateMutability": "view",
                        "virtual": false,
                        "visibility": "public"
                    },
                    {
                        "baseFunctions": [
                            1120
                        ],
                        "body": {
                            "id": 119,
                            "nodeType": "Block",
                            "src": "4012:558:0",
                            "statements": [
                                {
                                    "assignments": [
                                        83
                                    ],
                                    "declarations": [
                                        {
                                            "constant": false,
                                            "id": 83,
                                            "mutability": "mutable",
                                            "name": "rate",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 119,
                                            "src": "4023:12:0",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            },
                                            "typeName": {
                                                "id": 82,
                                                "name": "uint256",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "4023:7:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "id": 88,
                                    "initialValue": {
                                        "arguments": [
                                            {
                                                "id": 86,
                                                "name": "collateralType",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 76,
                                                "src": "4062:14:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            ],
                                            "expression": {
                                                "id": 84,
                                                "name": "super",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 4294967271,
                                                "src": "4038:5:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_type$_t_super$_DraggableShares_$121_$",
                                                    "typeString": "type(contract super DraggableShares)"
                                                }
                                            },
                                            "id": 85,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "getCollateralRate",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 1120,
                                            "src": "4038:23:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                                                "typeString": "function (address) view returns (uint256)"
                                            }
                                        },
                                        "id": 87,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "4038:39:0",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "nodeType": "VariableDeclarationStatement",
                                    "src": "4023:54:0"
                                },
                                {
                                    "condition": {
                                        "commonType": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        },
                                        "id": 91,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                            "id": 89,
                                            "name": "rate",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 83,
                                            "src": "4092:4:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": ">",
                                        "rightExpression": {
                                            "hexValue": "30",
                                            "id": 90,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "number",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "4099:1:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_rational_0_by_1",
                                                "typeString": "int_const 0"
                                            },
                                            "value": "0"
                                        },
                                        "src": "4092:8:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                        }
                                    },
                                    "falseBody": {
                                        "condition": {
                                            "commonType": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            },
                                            "id": 100,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "leftExpression": {
                                                "id": 95,
                                                "name": "collateralType",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 76,
                                                "src": "4150:14:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            "nodeType": "BinaryOperation",
                                            "operator": "==",
                                            "rightExpression": {
                                                "arguments": [
                                                    {
                                                        "id": 98,
                                                        "name": "wrapped",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 557,
                                                        "src": "4176:7:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_contract$_IERC20_$1741",
                                                            "typeString": "contract IERC20"
                                                        }
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_contract$_IERC20_$1741",
                                                            "typeString": "contract IERC20"
                                                        }
                                                    ],
                                                    "id": 97,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "lValueRequested": false,
                                                    "nodeType": "ElementaryTypeNameExpression",
                                                    "src": "4168:7:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_type$_t_address_$",
                                                        "typeString": "type(address)"
                                                    },
                                                    "typeName": {
                                                        "id": 96,
                                                        "name": "address",
                                                        "nodeType": "ElementaryTypeName",
                                                        "src": "4168:7:0",
                                                        "typeDescriptions": {}
                                                    }
                                                },
                                                "id": 99,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "typeConversion",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "4168:16:0",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            "src": "4150:34:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_bool",
                                                "typeString": "bool"
                                            }
                                        },
                                        "falseBody": {
                                            "id": 116,
                                            "nodeType": "Block",
                                            "src": "4248:315:0",
                                            "statements": [
                                                {
                                                    "expression": {
                                                        "commonType": {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        },
                                                        "id": 114,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "leftExpression": {
                                                            "arguments": [
                                                                {
                                                                    "id": 111,
                                                                    "name": "collateralType",
                                                                    "nodeType": "Identifier",
                                                                    "overloadedDeclarations": [],
                                                                    "referencedDeclaration": 76,
                                                                    "src": "4511:14:0",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_address",
                                                                        "typeString": "address"
                                                                    }
                                                                }
                                                            ],
                                                            "expression": {
                                                                "argumentTypes": [
                                                                    {
                                                                        "typeIdentifier": "t_address",
                                                                        "typeString": "address"
                                                                    }
                                                                ],
                                                                "expression": {
                                                                    "arguments": [
                                                                        {
                                                                            "arguments": [
                                                                                {
                                                                                    "id": 107,
                                                                                    "name": "wrapped",
                                                                                    "nodeType": "Identifier",
                                                                                    "overloadedDeclarations": [],
                                                                                    "referencedDeclaration": 557,
                                                                                    "src": "4483:7:0",
                                                                                    "typeDescriptions": {
                                                                                        "typeIdentifier": "t_contract$_IERC20_$1741",
                                                                                        "typeString": "contract IERC20"
                                                                                    }
                                                                                }
                                                                            ],
                                                                            "expression": {
                                                                                "argumentTypes": [
                                                                                    {
                                                                                        "typeIdentifier": "t_contract$_IERC20_$1741",
                                                                                        "typeString": "contract IERC20"
                                                                                    }
                                                                                ],
                                                                                "id": 106,
                                                                                "isConstant": false,
                                                                                "isLValue": false,
                                                                                "isPure": true,
                                                                                "lValueRequested": false,
                                                                                "nodeType": "ElementaryTypeNameExpression",
                                                                                "src": "4475:7:0",
                                                                                "typeDescriptions": {
                                                                                    "typeIdentifier": "t_type$_t_address_$",
                                                                                    "typeString": "type(address)"
                                                                                },
                                                                                "typeName": {
                                                                                    "id": 105,
                                                                                    "name": "address",
                                                                                    "nodeType": "ElementaryTypeName",
                                                                                    "src": "4475:7:0",
                                                                                    "typeDescriptions": {}
                                                                                }
                                                                            },
                                                                            "id": 108,
                                                                            "isConstant": false,
                                                                            "isLValue": false,
                                                                            "isPure": false,
                                                                            "kind": "typeConversion",
                                                                            "lValueRequested": false,
                                                                            "names": [],
                                                                            "nodeType": "FunctionCall",
                                                                            "src": "4475:16:0",
                                                                            "tryCall": false,
                                                                            "typeDescriptions": {
                                                                                "typeIdentifier": "t_address",
                                                                                "typeString": "address"
                                                                            }
                                                                        }
                                                                    ],
                                                                    "expression": {
                                                                        "argumentTypes": [
                                                                            {
                                                                                "typeIdentifier": "t_address",
                                                                                "typeString": "address"
                                                                            }
                                                                        ],
                                                                        "id": 104,
                                                                        "name": "IRecoverable",
                                                                        "nodeType": "Identifier",
                                                                        "overloadedDeclarations": [],
                                                                        "referencedDeclaration": 139,
                                                                        "src": "4462:12:0",
                                                                        "typeDescriptions": {
                                                                            "typeIdentifier": "t_type$_t_contract$_IRecoverable_$139_$",
                                                                            "typeString": "type(contract IRecoverable)"
                                                                        }
                                                                    },
                                                                    "id": 109,
                                                                    "isConstant": false,
                                                                    "isLValue": false,
                                                                    "isPure": false,
                                                                    "kind": "typeConversion",
                                                                    "lValueRequested": false,
                                                                    "names": [],
                                                                    "nodeType": "FunctionCall",
                                                                    "src": "4462:30:0",
                                                                    "tryCall": false,
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_contract$_IRecoverable_$139",
                                                                        "typeString": "contract IRecoverable"
                                                                    }
                                                                },
                                                                "id": 110,
                                                                "isConstant": false,
                                                                "isLValue": false,
                                                                "isPure": false,
                                                                "lValueRequested": false,
                                                                "memberName": "getCollateralRate",
                                                                "nodeType": "MemberAccess",
                                                                "referencedDeclaration": 133,
                                                                "src": "4462:48:0",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                                                    "typeString": "function (address) view external returns (uint256)"
                                                                }
                                                            },
                                                            "id": 112,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": false,
                                                            "kind": "functionCall",
                                                            "lValueRequested": false,
                                                            "names": [],
                                                            "nodeType": "FunctionCall",
                                                            "src": "4462:64:0",
                                                            "tryCall": false,
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_uint256",
                                                                "typeString": "uint256"
                                                            }
                                                        },
                                                        "nodeType": "BinaryOperation",
                                                        "operator": "*",
                                                        "rightExpression": {
                                                            "id": 113,
                                                            "name": "unwrapConversionFactor",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 563,
                                                            "src": "4529:22:0",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_uint256",
                                                                "typeString": "uint256"
                                                            }
                                                        },
                                                        "src": "4462:89:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        }
                                                    },
                                                    "functionReturnParameters": 81,
                                                    "id": 115,
                                                    "nodeType": "Return",
                                                    "src": "4455:96:0"
                                                }
                                            ]
                                        },
                                        "id": 117,
                                        "nodeType": "IfStatement",
                                        "src": "4146:417:0",
                                        "trueBody": {
                                            "id": 103,
                                            "nodeType": "Block",
                                            "src": "4186:56:0",
                                            "statements": [
                                                {
                                                    "expression": {
                                                        "id": 101,
                                                        "name": "unwrapConversionFactor",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 563,
                                                        "src": "4208:22:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        }
                                                    },
                                                    "functionReturnParameters": 81,
                                                    "id": 102,
                                                    "nodeType": "Return",
                                                    "src": "4201:29:0"
                                                }
                                            ]
                                        }
                                    },
                                    "id": 118,
                                    "nodeType": "IfStatement",
                                    "src": "4088:475:0",
                                    "trueBody": {
                                        "id": 94,
                                        "nodeType": "Block",
                                        "src": "4102:38:0",
                                        "statements": [
                                            {
                                                "expression": {
                                                    "id": 92,
                                                    "name": "rate",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 83,
                                                    "src": "4124:4:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    }
                                                },
                                                "functionReturnParameters": 81,
                                                "id": 93,
                                                "nodeType": "Return",
                                                "src": "4117:11:0"
                                            }
                                        ]
                                    }
                                }
                            ]
                        },
                        "functionSelector": "77e071ad",
                        "id": 120,
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [],
                        "name": "getCollateralRate",
                        "nodeType": "FunctionDefinition",
                        "overrides": {
                            "id": 78,
                            "nodeType": "OverrideSpecifier",
                            "overrides": [],
                            "src": "3985:8:0"
                        },
                        "parameters": {
                            "id": 77,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 76,
                                    "mutability": "mutable",
                                    "name": "collateralType",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 120,
                                    "src": "3949:22:0",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                    },
                                    "typeName": {
                                        "id": 75,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "3949:7:0",
                                        "stateMutability": "nonpayable",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "3948:24:0"
                        },
                        "returnParameters": {
                            "id": 81,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 80,
                                    "mutability": "mutable",
                                    "name": "",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 120,
                                    "src": "4003:7:0",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                    },
                                    "typeName": {
                                        "id": 79,
                                        "name": "uint256",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "4003:7:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "4002:9:0"
                        },
                        "scope": 121,
                        "src": "3922:648:0",
                        "stateMutability": "view",
                        "virtual": false,
                        "visibility": "public"
                    }
                ],
                "scope": 140,
                "src": "3013:1562:0"
            },
            {
                "abstract": true,
                "baseContracts": [],
                "contractDependencies": [],
                "contractKind": "contract",
                "fullyImplemented": false,
                "id": 139,
                "linearizedBaseContracts": [
                    139
                ],
                "name": "IRecoverable",
                "nodeType": "ContractDefinition",
                "nodes": [
                    {
                        "functionSelector": "6427ed97",
                        "id": 126,
                        "implemented": false,
                        "kind": "function",
                        "modifiers": [],
                        "name": "setRecoverable",
                        "nodeType": "FunctionDefinition",
                        "parameters": {
                            "id": 124,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 123,
                                    "mutability": "mutable",
                                    "name": "",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 126,
                                    "src": "4641:4:0",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                    },
                                    "typeName": {
                                        "id": 122,
                                        "name": "bool",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "4641:4:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "4640:6:0"
                        },
                        "returnParameters": {
                            "id": 125,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "4661:0:0"
                        },
                        "scope": 139,
                        "src": "4617:45:0",
                        "stateMutability": "nonpayable",
                        "virtual": true,
                        "visibility": "public"
                    },
                    {
                        "functionSelector": "77e071ad",
                        "id": 133,
                        "implemented": false,
                        "kind": "function",
                        "modifiers": [],
                        "name": "getCollateralRate",
                        "nodeType": "FunctionDefinition",
                        "parameters": {
                            "id": 129,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 128,
                                    "mutability": "mutable",
                                    "name": "",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 133,
                                    "src": "4695:7:0",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                    },
                                    "typeName": {
                                        "id": 127,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "4695:7:0",
                                        "stateMutability": "nonpayable",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "4694:9:0"
                        },
                        "returnParameters": {
                            "id": 132,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 131,
                                    "mutability": "mutable",
                                    "name": "",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 133,
                                    "src": "4733:7:0",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                    },
                                    "typeName": {
                                        "id": 130,
                                        "name": "uint256",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "4733:7:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "4732:9:0"
                        },
                        "scope": 139,
                        "src": "4668:74:0",
                        "stateMutability": "view",
                        "virtual": true,
                        "visibility": "public"
                    },
                    {
                        "functionSelector": "2a0a4ed5",
                        "id": 138,
                        "implemented": false,
                        "kind": "function",
                        "modifiers": [],
                        "name": "getClaimDeleter",
                        "nodeType": "FunctionDefinition",
                        "parameters": {
                            "id": 134,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "4772:2:0"
                        },
                        "returnParameters": {
                            "id": 137,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 136,
                                    "mutability": "mutable",
                                    "name": "",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 138,
                                    "src": "4804:7:0",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                    },
                                    "typeName": {
                                        "id": 135,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "4804:7:0",
                                        "stateMutability": "nonpayable",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "4803:9:0"
                        },
                        "scope": 139,
                        "src": "4748:65:0",
                        "stateMutability": "view",
                        "virtual": true,
                        "visibility": "public"
                    }
                ],
                "scope": 140,
                "src": "4579:237:0"
            }
        ],
        "src": "1336:3482:0"
    },
    "functionHashes": {
        "VOTING_PERIOD()": "b1610d7e",
        "allowance(address,address)": "dd62ed3e",
        "approve(address,uint256)": "095ea7b3",
        "balanceOf(address)": "70a08231",
        "burn(uint256)": "42966c68",
        "claimPeriod()": "7dc2cd98",
        "claims(address)": "c6788bdd",
        "clearClaim()": "6b03ed5f",
        "customCollateralAddress()": "0c6f0e5d",
        "customCollateralRate()": "60918117",
        "decimals()": "313ce567",
        "declareLost(address,address)": "26773ddd",
        "decreaseAllowance(address,uint256)": "a457c2d7",
        "deleteClaim(address)": "32a7ae95",
        "drag(address,address)": "fcb79a7e",
        "factory()": "c45a0155",
        "getClaimDeleter()": "2a0a4ed5",
        "getClaimant(address)": "1e3b9de5",
        "getCollateral(address)": "9b56d6c9",
        "getCollateralRate(address)": "77e071ad",
        "getCollateralType(address)": "3bcc45ba",
        "getTimeStamp(address)": "eb470ebf",
        "increaseAllowance(address,uint256)": "39509351",
        "isBinding()": "9e4b5745",
        "isRecoveryEnabled(address)": "a3ec1883",
        "makeAcquisitionOffer(bytes32,uint256,address)": "dcc7d4ad",
        "migrate()": "8fd3ab80",
        "name()": "06fdde03",
        "notifyOfferEnded()": "32bc320b",
        "offer()": "c028df06",
        "onTokenTransfer(address,uint256,bytes)": "a4c0ed36",
        "quorum()": "1703a018",
        "recover(address)": "0cd865ec",
        "recoveryDisabled(address)": "b40e80d1",
        "setRecoverable(bool)": "6427ed97",
        "symbol()": "95d89b41",
        "terms()": "d5025625",
        "totalSupply()": "18160ddd",
        "transfer(address,uint256)": "a9059cbb",
        "transferAndCall(address,uint256,bytes)": "4000aea0",
        "transferFrom(address,address,uint256)": "23b872dd",
        "unwrap(uint256)": "de0e9a3e",
        "unwrapConversionFactor()": "0832e470",
        "wrap(address,uint256)": "bf376c7a",
        "wrapped()": "50e70d48"
    },
    "gasEstimates": {
        "creation": {
            "codeDepositCost": "1967400",
            "executionCost": "infinite",
            "totalCost": "infinite"
        },
        "external": {
            "VOTING_PERIOD()": "273",
            "allowance(address,address)": "infinite",
            "approve(address,uint256)": "22571",
            "balanceOf(address)": "1313",
            "burn(uint256)": "infinite",
            "claimPeriod()": "1118",
            "claims(address)": "3972",
            "clearClaim()": "infinite",
            "customCollateralAddress()": "1183",
            "customCollateralRate()": "1139",
            "decimals()": "1092",
            "declareLost(address,address)": "infinite",
            "decreaseAllowance(address,uint256)": "23626",
            "deleteClaim(address)": "infinite",
            "drag(address,address)": "infinite",
            "factory()": "1203",
            "getClaimDeleter()": "infinite",
            "getClaimant(address)": "1393",
            "getCollateral(address)": "1315",
            "getCollateralRate(address)": "infinite",
            "getCollateralType(address)": "1437",
            "getTimeStamp(address)": "1402",
            "increaseAllowance(address,uint256)": "23630",
            "isBinding()": "1104",
            "isRecoveryEnabled(address)": "1368",
            "makeAcquisitionOffer(bytes32,uint256,address)": "infinite",
            "migrate()": "infinite",
            "name()": "infinite",
            "notifyOfferEnded()": "21907",
            "offer()": "1181",
            "onTokenTransfer(address,uint256,bytes)": "infinite",
            "quorum()": "1074",
            "recover(address)": "infinite",
            "recoveryDisabled(address)": "1325",
            "setRecoverable(bool)": "21321",
            "symbol()": "infinite",
            "terms()": "infinite",
            "totalSupply()": "1096",
            "transfer(address,uint256)": "infinite",
            "transferAndCall(address,uint256,bytes)": "infinite",
            "transferFrom(address,address,uint256)": "infinite",
            "unwrap(uint256)": "infinite",
            "unwrapConversionFactor()": "1097",
            "wrap(address,uint256)": "infinite",
            "wrapped()": "1159"
        }
    }
}