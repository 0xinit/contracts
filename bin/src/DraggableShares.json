{
    "contractName": "DraggableShares",
    "abi": [
        {
            "inputs": [
                {
                    "internalType": "string",
                    "name": "_terms",
                    "type": "string"
                },
                {
                    "internalType": "address",
                    "name": "wrappedToken",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "quorumBps",
                    "type": "uint256"
                },
                {
                    "internalType": "uint256",
                    "name": "votePeriodSeconds",
                    "type": "uint256"
                }
            ],
            "stateMutability": "nonpayable",
            "type": "constructor"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "owner",
                    "type": "address"
                },
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "spender",
                    "type": "address"
                },
                {
                    "indexed": false,
                    "internalType": "uint256",
                    "name": "value",
                    "type": "uint256"
                }
            ],
            "name": "Approval",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "lostAddress",
                    "type": "address"
                },
                {
                    "indexed": false,
                    "internalType": "uint256",
                    "name": "collateral",
                    "type": "uint256"
                }
            ],
            "name": "ClaimCleared",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "lostAddress",
                    "type": "address"
                },
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "claimant",
                    "type": "address"
                },
                {
                    "indexed": false,
                    "internalType": "uint256",
                    "name": "collateral",
                    "type": "uint256"
                }
            ],
            "name": "ClaimDeleted",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "lostAddress",
                    "type": "address"
                },
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "claimant",
                    "type": "address"
                },
                {
                    "indexed": false,
                    "internalType": "uint256",
                    "name": "balance",
                    "type": "uint256"
                }
            ],
            "name": "ClaimMade",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "lostAddress",
                    "type": "address"
                },
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "claimant",
                    "type": "address"
                },
                {
                    "indexed": false,
                    "internalType": "uint256",
                    "name": "collateral",
                    "type": "uint256"
                }
            ],
            "name": "ClaimResolved",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": false,
                    "internalType": "address",
                    "name": "newCustomCollateralAddress",
                    "type": "address"
                },
                {
                    "indexed": false,
                    "internalType": "uint256",
                    "name": "newCustomCollareralRate",
                    "type": "uint256"
                }
            ],
            "name": "CustomClaimCollateralChanged",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": false,
                    "internalType": "address",
                    "name": "newContractAddress",
                    "type": "address"
                }
            ],
            "name": "MigrationSucceeded",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": false,
                    "internalType": "uint256",
                    "name": "time",
                    "type": "uint256"
                }
            ],
            "name": "TimeStamp",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "from",
                    "type": "address"
                },
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "to",
                    "type": "address"
                },
                {
                    "indexed": false,
                    "internalType": "uint256",
                    "name": "value",
                    "type": "uint256"
                }
            ],
            "name": "Transfer",
            "type": "event"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "owner",
                    "type": "address"
                },
                {
                    "internalType": "address",
                    "name": "spender",
                    "type": "address"
                }
            ],
            "name": "allowance",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "spender",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "value",
                    "type": "uint256"
                }
            ],
            "name": "approve",
            "outputs": [
                {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool"
                }
            ],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "account",
                    "type": "address"
                }
            ],
            "name": "balanceOf",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "uint256",
                    "name": "amount",
                    "type": "uint256"
                }
            ],
            "name": "burn",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "claimPeriod",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address"
                }
            ],
            "name": "claims",
            "outputs": [
                {
                    "internalType": "address",
                    "name": "claimant",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "collateral",
                    "type": "uint256"
                },
                {
                    "internalType": "uint256",
                    "name": "timestamp",
                    "type": "uint256"
                },
                {
                    "internalType": "address",
                    "name": "currencyUsed",
                    "type": "address"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "clearClaim",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "customCollateralAddress",
            "outputs": [
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "customCollateralRate",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "decimals",
            "outputs": [
                {
                    "internalType": "uint8",
                    "name": "",
                    "type": "uint8"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "collateralType",
                    "type": "address"
                },
                {
                    "internalType": "address",
                    "name": "lostAddress",
                    "type": "address"
                }
            ],
            "name": "declareLost",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "lostAddress",
                    "type": "address"
                }
            ],
            "name": "deleteClaim",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "disableRecovery",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "buyer",
                    "type": "address"
                },
                {
                    "internalType": "address",
                    "name": "currency",
                    "type": "address"
                }
            ],
            "name": "drag",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "factory",
            "outputs": [
                {
                    "internalType": "contract IOfferFactory",
                    "name": "",
                    "type": "address"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "getClaimDeleter",
            "outputs": [
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "lostAddress",
                    "type": "address"
                }
            ],
            "name": "getClaimant",
            "outputs": [
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "lostAddress",
                    "type": "address"
                }
            ],
            "name": "getCollateral",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "collateralType",
                    "type": "address"
                }
            ],
            "name": "getCollateralRate",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "lostAddress",
                    "type": "address"
                }
            ],
            "name": "getCollateralType",
            "outputs": [
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "lostAddress",
                    "type": "address"
                }
            ],
            "name": "getTimeStamp",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "isBinding",
            "outputs": [
                {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "target",
                    "type": "address"
                }
            ],
            "name": "isRecoveryEnabled",
            "outputs": [
                {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "bytes32",
                    "name": "salt",
                    "type": "bytes32"
                },
                {
                    "internalType": "uint256",
                    "name": "pricePerShare",
                    "type": "uint256"
                },
                {
                    "internalType": "address",
                    "name": "currency",
                    "type": "address"
                }
            ],
            "name": "makeAcquisitionOffer",
            "outputs": [],
            "stateMutability": "payable",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "migrate",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "name",
            "outputs": [
                {
                    "internalType": "string",
                    "name": "",
                    "type": "string"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "notifyOfferEnded",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "offer",
            "outputs": [
                {
                    "internalType": "contract IOffer",
                    "name": "",
                    "type": "address"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "from",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "amount",
                    "type": "uint256"
                },
                {
                    "internalType": "bytes",
                    "name": "",
                    "type": "bytes"
                }
            ],
            "name": "onTokenTransfer",
            "outputs": [
                {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool"
                }
            ],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "quorum",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "lostAddress",
                    "type": "address"
                }
            ],
            "name": "recover",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address"
                }
            ],
            "name": "recoveryDisabled",
            "outputs": [
                {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "bool",
                    "name": "enabled",
                    "type": "bool"
                }
            ],
            "name": "setRecoverable",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "symbol",
            "outputs": [
                {
                    "internalType": "string",
                    "name": "",
                    "type": "string"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "terms",
            "outputs": [
                {
                    "internalType": "string",
                    "name": "",
                    "type": "string"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "totalSupply",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "to",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "value",
                    "type": "uint256"
                }
            ],
            "name": "transfer",
            "outputs": [
                {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool"
                }
            ],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "recipient",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "amount",
                    "type": "uint256"
                },
                {
                    "internalType": "bytes",
                    "name": "data",
                    "type": "bytes"
                }
            ],
            "name": "transferAndCall",
            "outputs": [
                {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool"
                }
            ],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "sender",
                    "type": "address"
                },
                {
                    "internalType": "address",
                    "name": "recipient",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "amount",
                    "type": "uint256"
                }
            ],
            "name": "transferFrom",
            "outputs": [
                {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool"
                }
            ],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "uint256",
                    "name": "amount",
                    "type": "uint256"
                }
            ],
            "name": "unwrap",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "unwrapConversionFactor",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "votePeriod",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "shareholder",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "amount",
                    "type": "uint256"
                }
            ],
            "name": "wrap",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "wrapped",
            "outputs": [
                {
                    "internalType": "contract IERC20",
                    "name": "",
                    "type": "address"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        }
    ],
    "metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_terms\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"wrappedToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"quorumBps\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"votePeriodSeconds\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"lostAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"collateral\",\"type\":\"uint256\"}],\"name\":\"ClaimCleared\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"lostAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"claimant\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"collateral\",\"type\":\"uint256\"}],\"name\":\"ClaimDeleted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"lostAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"claimant\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"name\":\"ClaimMade\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"lostAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"claimant\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"collateral\",\"type\":\"uint256\"}],\"name\":\"ClaimResolved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newCustomCollateralAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newCustomCollareralRate\",\"type\":\"uint256\"}],\"name\":\"CustomClaimCollateralChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newContractAddress\",\"type\":\"address\"}],\"name\":\"MigrationSucceeded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"time\",\"type\":\"uint256\"}],\"name\":\"TimeStamp\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimPeriod\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"claims\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"claimant\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"collateral\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"currencyUsed\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"clearClaim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"customCollateralAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"customCollateralRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"collateralType\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"lostAddress\",\"type\":\"address\"}],\"name\":\"declareLost\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"lostAddress\",\"type\":\"address\"}],\"name\":\"deleteClaim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"disableRecovery\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"}],\"name\":\"drag\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"contract IOfferFactory\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getClaimDeleter\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"lostAddress\",\"type\":\"address\"}],\"name\":\"getClaimant\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"lostAddress\",\"type\":\"address\"}],\"name\":\"getCollateral\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"collateralType\",\"type\":\"address\"}],\"name\":\"getCollateralRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"lostAddress\",\"type\":\"address\"}],\"name\":\"getCollateralType\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"lostAddress\",\"type\":\"address\"}],\"name\":\"getTimeStamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isBinding\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"isRecoveryEnabled\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"pricePerShare\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"}],\"name\":\"makeAcquisitionOffer\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"notifyOfferEnded\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"offer\",\"outputs\":[{\"internalType\":\"contract IOffer\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onTokenTransfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"quorum\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"lostAddress\",\"type\":\"address\"}],\"name\":\"recover\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"recoveryDisabled\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"enabled\",\"type\":\"bool\"}],\"name\":\"setRecoverable\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"terms\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"unwrap\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unwrapConversionFactor\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"votePeriod\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"shareholder\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"wrap\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"wrapped\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Luzius Meisser, luzius@aktionariat.com This is an ERC-20 token representing shares of CompanyName AG that are bound to a shareholder agreement that can be found at the URL defined in the constant 'terms'. The shareholder agreement is partially enforced through this smart contract. The agreement is designed to facilitate a complete acquisition of the firm even if a minority of shareholders disagree with the acquisition, to protect the interest of the minority shareholders by requiring the acquirer to offer the same conditions to everyone when acquiring the company, and to facilitate an update of the shareholder agreement even if a minority of the shareholders that are bound to this agreement disagree. The name \\\"draggable\\\" stems from the convention of calling the right to drag a minority along with a sale of the company \\\"drag-along\\\" rights. The name is chosen to ensure that token holders are aware that they are bound to such an agreement. The percentage of token holders that must agree with an update of the terms is defined by the constant UPDATE_QUORUM. The percentage of yes-votes that is needed to successfully complete an acquisition is defined in the constant ACQUISITION_QUORUM. Note that the update quorum is based on the total number of tokens in circulation. In contrast, the acquisition quorum is based on the number of votes cast during the voting period, not taking into account those who did not bother to vote.\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See `IERC20.allowance`.\"},\"approve(address,uint256)\":{\"details\":\"See `IERC20.approve`. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See `IERC20.balanceOf`.\"},\"totalSupply()\":{\"details\":\"See `IERC20.totalSupply`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See `IERC20.transferFrom`. Emits an `Approval` event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of `ERC20`; Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `value`. - the caller must have allowance for `sender`'s tokens of at least `amount`.\"}},\"title\":\"Draggable CompanyName AG Shares\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"burn(uint256)\":{\"notice\":\"Burns both the token itself as well as the wrapped token! If you want to get out of the shareholder agreement, use unwrap after it has been deactivated by a majority vote or acquisition. Burning only works if wrapped token supports burning. Also, the exact meaning of this operation might depend on the circumstances. Burning and reussing the wrapped token does not free the sender from the legal obligations of the shareholder agreement.\"},\"clearClaim()\":{\"notice\":\"Clears a claim after the key has been found again and assigns the collateral to the \\\"lost\\\" address. This is the price an adverse claimer pays for filing a false claim and makes it risky to do so.\"},\"declareLost(address,address)\":{\"notice\":\"Anyone can declare that the private key to a certain address was lost by calling declareLost providing a deposit/collateral. There are three possibilities of what can happen with the claim: 1) The claim period expires and the claimant can get the deposit and the shares back by calling recover 2) The \\\"lost\\\" private key is used at any time to call clearClaim. In that case, the claim is deleted and    the deposit sent to the shareholder (the owner of the private key). It is recommended to call recover    whenever someone transfers funds to let claims be resolved automatically when the \\\"lost\\\" private key is    used again. 3) The owner deletes the claim and assigns the deposit to the claimant. This is intended to be used to resolve    disputes. Generally, using this function implies that you have to trust the issuer of the tokens to handle    the situation well. As a rule of thumb, the contract owner should assume the owner of the lost address to be the    rightful owner of the deposit. It is highly recommended that the owner observes the claims made and informs the owners of the claimed addresses whenever a claim is made for their address (this of course is only possible if they are known to the owner, e.g. through a shareholder register).\"},\"deleteClaim(address)\":{\"notice\":\"This function is to be executed by the claim deleter only in case a dispute needs to be resolved manually.\"},\"getCollateralRate(address)\":{\"notice\":\"Returns the collateral rate for the given collateral type and 0 if that type of collateral is not accepted. By default, only the token itself is accepted at a rate of 1:1. Subclasses should override this method if they want to add additional types of collateral.\"},\"isBinding()\":{\"notice\":\"Indicates that the token holders are bound to the token terms and that: - Conversions back to the wrapped token (unwrap) are not allowed - The drag-along can be performed by making an according offer - They can be migrated to a new version of this contract in accordance with the terms\"},\"isRecoveryEnabled(address)\":{\"notice\":\"Some users might want to disable claims for their address completely. For example if they use a deep cold storage solution or paper wallet.\"},\"recover(address)\":{\"notice\":\"After the claim period has passed, the claimant can call this function to send the tokens on the lost address as well as the collateral to himself.\"},\"unwrap(uint256)\":{\"notice\":\"Decrease the number of drag-along tokens. The user gets back their shares in return \"},\"wrap(address,uint256)\":{\"notice\":\"Increases the number of drag-along tokens. Requires minter to deposit an equal amount of share tokens \"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"c:/Users/luziu/Documents/aktionariat/contracts/src/DraggableShares.sol\":\"DraggableShares\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"c:/Users/luziu/Documents/aktionariat/contracts/src/DraggableShares.sol\":{\"keccak256\":\"0xbb6cb24f49d1a4000eb97ecea72742dfd297eaabf94fcb0c67aaa36f3f6321b6\",\"license\":\"LicenseRef-Aktionariat\",\"urls\":[\"bzz-raw://68e8aacd76c2b4e84f2327f8305481bf8c859a4332f599111d89f986bbf8b662\",\"dweb:/ipfs/QmQgycPXYMQLMqNuX8a4woxf3E6BMuoQ1V8fu6J22rd83b\"]},\"c:/Users/luziu/Documents/aktionariat/contracts/src/ERC20.sol\":{\"keccak256\":\"0x211bfdf7d30df40656547326c7833be7e2dc36a0f9a4913971f7902045514dca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://eaf34864f3dd9c4cdb2e5b32440bd24ac30c62b057d82d22a82ac6915799bd7b\",\"dweb:/ipfs/QmT7bhEFitKsvBm4p2UdcuEiD7mSjYkHrn6VAWSZHJMjc4\"]},\"c:/Users/luziu/Documents/aktionariat/contracts/src/ERC20Draggable.sol\":{\"keccak256\":\"0x84742b4322e3081a8c1fe8ad671e2e97a85d1f2573693a1469dd1376b894d932\",\"license\":\"LicenseRef-Aktionariat\",\"urls\":[\"bzz-raw://afca327c8e205cc4f748e6fc91d0bcccb80f5e2533c21c126a8ab4194b844057\",\"dweb:/ipfs/QmfFeUWj5HX7B4ukQuLfXYkGeRB7CC1GT3VRVMdvbSw4dz\"]},\"c:/Users/luziu/Documents/aktionariat/contracts/src/ERC20Recoverable.sol\":{\"keccak256\":\"0x60963c20c3754220efd4707a204f582ac6d157a48a5356fc08ea167114cb829e\",\"license\":\"LicenseRef-Aktionariat\",\"urls\":[\"bzz-raw://ce6ed49a1a4adae3cbcf9d1baf3d02650e18b5695a1f4609468d802ee5ef6df3\",\"dweb:/ipfs/QmeqJSW9DTZeN4b6maceENmAKFAyqA3Vt3R5CLdJAo1Dur\"]},\"c:/Users/luziu/Documents/aktionariat/contracts/src/IERC20.sol\":{\"keccak256\":\"0xdd9ef23be041b279c4815ae1483703e0532d8839865b8081e12955a52d4e148f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2eef9ae3fc010bd8012716c89852c245aacf07474f3a52b84280f9f7958210fe\",\"dweb:/ipfs/QmSsjJBfgFw8PzaBTaZwCLzHkqM6pfS6NDrrFysNkCbS2M\"]},\"c:/Users/luziu/Documents/aktionariat/contracts/src/IERC677Receiver.sol\":{\"keccak256\":\"0x04613a7a3e5c67889c1476fca1c9b4c606e3527aa379e1ede01a9dfc7b9ae48d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://53dce0f0d8286dd9a720386b52ac8e9964c2986762aaa13f7d1e303ba400f4f8\",\"dweb:/ipfs/QmY2AocHahfW5JFGi4m5EVqh2JywqH8tHrABe9Y4fC93CL\"]}},\"version\":1}",
    "bytecode": "608060405260006009553480156200001657600080fd5b50604051620029183803806200291883398101604081905262000039916200014b565b6003805460ff19169055600880546001600160a01b0319166001600160a01b038516179055600b829055600c81905583516200007d90600d90602087019062000088565b50505050506200029f565b82805462000096906200024c565b90600052602060002090601f016020900481019282620000ba576000855562000105565b82601f10620000d557805160ff191683800117855562000105565b8280016001018555821562000105579182015b8281111562000105578251825591602001919060010190620000e8565b506200011392915062000117565b5090565b5b8082111562000113576000815560010162000118565b80516001600160a01b03811681146200014657600080fd5b919050565b600080600080608085870312156200016257600080fd5b84516001600160401b03808211156200017a57600080fd5b818701915087601f8301126200018f57600080fd5b815181811115620001a457620001a462000289565b604051601f8201601f19908116603f01168101908382118183101715620001cf57620001cf62000289565b81604052828152602093508a84848701011115620001ec57600080fd5b600091505b82821015620002105784820184015181830185015290830190620001f1565b82821115620002225760008484830101525b9750620002349150508782016200012e565b60408801516060909801519699909850945050505050565b600181811c908216806200026157607f821691505b602082108114156200028357634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fd5b61266980620002af6000396000f3fe6080604052600436106102675760003560e01c806377e071ad11610144578063b40e80d1116100b6578063d50256251161007a578063d5025625146107ff578063dcc7d4ad14610814578063dd62ed3e14610827578063de0e9a3e1461086d578063eb470ebf1461088d578063fcb79a7e146108c657600080fd5b8063b40e80d1146106eb578063bf376c7a1461071b578063c028df061461073b578063c45a01551461075b578063c6788bdd1461078357600080fd5b80639b56d6c9116101085780639b56d6c91461060c5780639e4b574514610645578063a3ec18831461065b578063a4c0ed3614610695578063a7813587146106b5578063a9059cbb146106cb57600080fd5b806377e071ad146105965780637dc2cd98146105b65780638fd3ab80146105cd5780638ff8831b146105e257806395d89b41146105f757600080fd5b8063313ce567116101dd57806342966c68116101a157806342966c68146104bb57806350e70d48146104db57806360918117146104fb5780636427ed97146105115780636b03ed5f1461054b57806370a082311461056057600080fd5b8063313ce567146103fe57806332a7ae951461042a57806332bc320b1461044a5780633bcc45ba1461045f5780634000aea01461049b57600080fd5b80631703a0181161022f5780631703a0181461034557806318160ddd1461035b5780631e3b9de51461037057806323b872dd146103a957806326773ddd146103c95780632a0a4ed5146103e957600080fd5b806306fdde031461026c5780630832e47014610297578063095ea7b3146102bb5780630c6f0e5d146102eb5780630cd865ec14610323575b600080fd5b34801561027857600080fd5b506102816108e6565b60405161028e91906124e0565b60405180910390f35b3480156102a357600080fd5b506102ad60095481565b60405190815260200161028e565b3480156102c757600080fd5b506102db6102d6366004612216565b610a3f565b604051901515815260200161028e565b3480156102f757600080fd5b5060065461030b906001600160a01b031681565b6040516001600160a01b03909116815260200161028e565b34801561032f57600080fd5b5061034361033e366004612162565b610a55565b005b34801561035157600080fd5b506102ad600b5481565b34801561036757600080fd5b506002546102ad565b34801561037c57600080fd5b5061030b61038b366004612162565b6001600160a01b039081166000908152600460205260409020541690565b3480156103b557600080fd5b506102db6103c43660046121d5565b610cc6565b3480156103d557600080fd5b506103436103e436600461219c565b610d22565b3480156103f557600080fd5b5061030b610fd5565b34801561040a57600080fd5b506003546104189060ff1681565b60405160ff909116815260200161028e565b34801561043657600080fd5b50610343610445366004612162565b611057565b34801561045657600080fd5b5061034361126c565b34801561046b57600080fd5b5061030b61047a366004612162565b6001600160a01b039081166000908152600460205260409020600301541690565b3480156104a757600080fd5b506102db6104b6366004612242565b611292565b3480156104c757600080fd5b506103436104d63660046123eb565b611337565b3480156104e757600080fd5b5060085461030b906001600160a01b031681565b34801561050757600080fd5b506102ad60075481565b34801561051d57600080fd5b5061034361052c3660046122cb565b336000908152600560205260409020805460ff19169115919091179055565b34801561055757600080fd5b506103436113ce565b34801561056c57600080fd5b506102ad61057b366004612162565b6001600160a01b031660009081526020819052604090205490565b3480156105a257600080fd5b506102ad6105b1366004612162565b6114ec565b3480156105c257600080fd5b506102ad62ed4e0081565b3480156105d957600080fd5b506103436115bd565b3480156105ee57600080fd5b50610343611697565b34801561060357600080fd5b506102816116f7565b34801561061857600080fd5b506102ad610627366004612162565b6001600160a01b031660009081526004602052604090206001015490565b34801561065157600080fd5b50600954156102db565b34801561066757600080fd5b506102db610676366004612162565b6001600160a01b031660009081526005602052604090205460ff161590565b3480156106a157600080fd5b506102db6106b0366004612242565b611788565b3480156106c157600080fd5b506102ad600c5481565b3480156106d757600080fd5b506102db6106e6366004612216565b6117ac565b3480156106f757600080fd5b506102db610706366004612162565b60056020526000908152604090205460ff1681565b34801561072757600080fd5b50610343610736366004612216565b6117b8565b34801561074757600080fd5b50600a5461030b906001600160a01b031681565b34801561076757600080fd5b5061030b73f9f92751f272f0872e2edb6a280b0990f3e2b8a381565b34801561078f57600080fd5b506107d061079e366004612162565b60046020526000908152604090208054600182015460028301546003909301546001600160a01b039283169391921684565b604080516001600160a01b0395861681526020810194909452830191909152909116606082015260800161028e565b34801561080b57600080fd5b50610281611859565b610343610822366004612305565b6118e7565b34801561083357600080fd5b506102ad61084236600461219c565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b34801561087957600080fd5b506103436108883660046123eb565b611afc565b34801561089957600080fd5b506102ad6108a8366004612162565b6001600160a01b031660009081526004602052604090206002015490565b3480156108d257600080fd5b506103436108e136600461219c565b611b18565b60606108f26009541590565b156109a557600860009054906101000a90046001600160a01b03166001600160a01b03166306fdde036040518163ffffffff1660e01b815260040160006040518083038186803b15801561094557600080fd5b505afa158015610959573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610981919081019061233e565b604051602001610991919061244b565b604051602081830303815290604052905090565b600860009054906101000a90046001600160a01b03166001600160a01b03166306fdde036040518163ffffffff1660e01b815260040160006040518083038186803b1580156109f357600080fd5b505afa158015610a07573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610a2f919081019061233e565b604051602001610991919061241d565b6000610a4c338484611b63565b50600192915050565b6001600160a01b0380821660009081526004602090815260409182902082516080810184528154851681526001820154928101839052600282015493810193909352600301549092166060820181905290919081610ae65760405162461bcd60e51b81526020600482015260096024820152681b9bdd08199bdd5b9960ba1b60448201526064015b60405180910390fd5b82516001600160a01b03163314610b2e5760405162461bcd60e51b815260206004820152600c60248201526b1b9bdd0818db185a5b585b9d60a21b6044820152606401610add565b4262ed4e008460400151610b429190612513565b1115610b7c5760405162461bcd60e51b8152602060048201526009602482015268746f6f206561726c7960b81b6044820152606401610add565b82516001600160a01b03858116600090815260046020819052604080832080546001600160a01b031990811682556001820185905560028201949094556003018054909316909255905163a9059cbb60e01b815282841691810191909152602481018590529083169063a9059cbb90604401602060405180830381600087803b158015610c0857600080fd5b505af1158015610c1c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c4091906122e8565b610c4957600080fd5b610c728582610c6d886001600160a01b031660009081526020819052604090205490565b611bbc565b806001600160a01b0316856001600160a01b03167f52a5c2b28bc6eb9712d0ced43463103b486b13ccc9cda499fd3b2d7b6a74a8ee85604051610cb791815260200190565b60405180910390a35050505050565b6000610cd3848484611bbc565b6001600160a01b0384166000908152600160209081526040808320338452909152902054600160ff1b811015610d1757610d178533610d12868561256c565b611b63565b506001949350505050565b6001600160a01b03811660009081526005602052604090205460ff1615610d765760405162461bcd60e51b8152602060048201526008602482015267191a5cd8589b195960c21b6044820152606401610add565b6000610d81836114ec565b905060008111610dc45760405162461bcd60e51b815260206004820152600e60248201526d1898590818dbdb1b185d195c985b60921b6044820152606401610add565b336000610de6846001600160a01b031660009081526020819052604090205490565b90506000610df4848361254d565b90508582610e2c5760405162461bcd60e51b8152602060048201526005602482015264656d70747960d81b6044820152606401610add565b6001600160a01b03861660009081526004602052604090206001015415610e875760405162461bcd60e51b815260206004820152600f60248201526e185b1c9958591e4818db185a5b5959608a1b6044820152606401610add565b6040516323b872dd60e01b81526001600160a01b038581166004830152306024830152604482018490528216906323b872dd90606401602060405180830381600087803b158015610ed757600080fd5b505af1158015610eeb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f0f91906122e8565b610f1857600080fd5b604080516080810182526001600160a01b038087168083526020808401878152428587019081528d8516606087019081528d86166000818152600490955293889020965187549087166001600160a01b0319918216178855925160018801559051600287015551600390950180549590941694169390931790915591517f1982ca8958fc8a8176cb52be509260f4bc5af7ce04e1533711793f1c56dd535990610fc49087815260200190565b60405180910390a350505050505050565b60085460408051632a0a4ed560e01b815290516000926001600160a01b031691632a0a4ed5916004808301926020929190829003018186803b15801561101a57600080fd5b505afa15801561102e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611052919061217f565b905090565b61105f610fd5565b6001600160a01b0316336001600160a01b0316146110ab5760405162461bcd60e51b81526020600482015260096024820152686e6f2061636365737360b81b6044820152606401610add565b6001600160a01b0380821660009081526004602090815260409182902082516080810184528154851681526001820154928101839052600282015493810193909352600301549092166060820181905290916111355760405162461bcd60e51b81526020600482015260096024820152681b9bdd08199bdd5b9960ba1b6044820152606401610add565b6001600160a01b03808416600090815260046020818152604080842080546001600160a01b031990811682556001820186905560028201959095556003018054909416909355855190860151925163a9059cbb60e01b81529385169363a9059cbb936111b7939091016001600160a01b03929092168252602082015260400190565b602060405180830381600087803b1580156111d157600080fd5b505af11580156111e5573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061120991906122e8565b61121257600080fd5b81600001516001600160a01b0316836001600160a01b03167fbb036e629a9f4c0897ee5d48440dfdb36f7e772117723a2ed603a6514244c2d5846020015160405161125f91815260200190565b60405180910390a3505050565b600a546001600160a01b031633141561129057600a80546001600160a01b03191690555b565b60008061129f86866117ac565b9050801561132e57604051635260769b60e11b81526001600160a01b0387169063a4c0ed36906112d9903390899089908990600401612498565b602060405180830381600087803b1580156112f357600080fd5b505af1158015611307573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061132b91906122e8565b90505b95945050505050565b6113413382611c7b565b600061134d6009541590565b6113595760095461135c565b60015b6008549091506001600160a01b03166342966c6861137a838561254d565b6040518263ffffffff1660e01b815260040161139891815260200190565b600060405180830381600087803b1580156113b257600080fd5b505af11580156113c6573d6000803e3d6000fd5b505050505050565b33600090815260046020526040902060010154156112905733600081815260046020819052604080832060018101805460038301805484546001600160a01b0319908116865593889055600290940196909655908216909455905163a9059cbb60e01b8152918201939093526024810182905290916001600160a01b031690819063a9059cbb90604401602060405180830381600087803b15801561147257600080fd5b505af1158015611486573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114aa91906122e8565b6114b357600080fd5b60405182815233907f203627483d943880619f4b7e0cca21dbefd6204b4d85b124eb99540e17ba86dd9060200160405180910390a25050565b6000806114f883611d11565b905080156115065792915050565b6008546001600160a01b0384811691161415611526575050600954919050565b6009546008546040516377e071ad60e01b81526001600160a01b038681166004830152909116906377e071ad9060240160206040518083038186803b15801561156e57600080fd5b505afa158015611582573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115a69190612404565b6115b0919061254d565b9392505050565b50919050565b336115d2600a546001600160a01b0316151590565b156115dc57600080fd5b611d4c6115e860025490565b6115f2919061254d565b6001600160a01b0382166000908152602081905260409020546116179061271061254d565b101561164e5760405162461bcd60e51b815260206004820152600660248201526571756f72756d60d01b6044820152606401610add565b6116588182611d52565b6040516001600160a01b03821681527f3b6b79a09e9fd230e8591b65c97236bf7df7a604edf733db0658e66b0e6eb2a99060200160405180910390a150565b600854604051636427ed9760e01b8152600060048201526001600160a01b0390911690636427ed9790602401600060405180830381600087803b1580156116dd57600080fd5b505af11580156116f1573d6000803e3d6000fd5b50505050565b600854604080516395d89b4160e01b815290516060926001600160a01b0316916395d89b41916004808301926000929190829003018186803b15801561173c57600080fd5b505afa158015611750573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052611778919081019061233e565b6040516020016109919190612473565b6008546000906001600160a01b031633146117a257600080fd5b610d178585611f17565b60006115b08383611fb8565b6008546040516323b872dd60e01b8152336004820152306024820152604481018390526001600160a01b03909116906323b872dd90606401602060405180830381600087803b15801561180a57600080fd5b505af115801561181e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061184291906122e8565b61184b57600080fd5b6118558282611f17565b5050565b600d8054611866906125af565b80601f0160208091040260200160405190810160405280929190818152602001828054611892906125af565b80156118df5780601f106118b4576101008083540402835291602001916118df565b820191906000526020600020905b8154815290600101906020018083116118c257829003601f168201915b505050505081565b600954156118f457600080fd5b6040514281527fdfbf6547deaf4fa5dd154ec1daf5350032f31d34e4c755104dfbf6049163c0879060200160405180910390a1600b54600c54604051634dc5e43160e01b815260048101869052336024820152604481018590526001600160a01b0384166064820152608481019290925260a482015260009073f9f92751f272f0872e2edb6a280b0990f3e2b8a390634dc5e43190349060c4016020604051808303818588803b1580156119a757600080fd5b505af11580156119bb573d6000803e3d6000fd5b50505050506040513d601f19601f820116820180604052508101906119e0919061217f565b90506119f6600a546001600160a01b0316151590565b15611ad757806001600160a01b0316633f5e3e7f6040518163ffffffff1660e01b8152600401602060405180830381600087803b158015611a3657600080fd5b505af1158015611a4a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a6e91906122e8565b611a7757600080fd5b600a546040516306a169ed60e01b81526001600160a01b038381166004830152909116906306a169ed90602401600060405180830381600087803b158015611abe57600080fd5b505af1158015611ad2573d6000803e3d6000fd5b505050505b600a80546001600160a01b0319166001600160a01b0392909216919091179055505050565b600954611b0857600080fd5b611b153382600954611fd5565b50565b600a546001600160a01b03163314611b2f57600080fd5b611b5982611b52846001600160a01b031660009081526020819052604090205490565b6001611fd5565b6118558183611d52565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910161125f565b6001600160a01b038216611bcf57600080fd5b611bda838383612087565b6001600160a01b03831660009081526020819052604081208054839290611c0290849061256c565b90915550506001600160a01b03821660009081526020819052604081208054839290611c2f908490612513565b92505081905550816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161125f91815260200190565b611c8782600083612087565b8060026000828254611c99919061256c565b90915550506001600160a01b03821660009081526020819052604081208054839290611cc690849061256c565b90915550506040518181526000906001600160a01b038416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906020015b60405180910390a35050565b60006001600160a01b038216301415611d2c57506001919050565b6006546001600160a01b0383811691161415611d4a57505060075490565b506000919050565b60095415611d5f57600080fd5b6008546040516370a0823160e01b81523060048201526001600160a01b039091169063a9059cbb90839083906370a082319060240160206040518083038186803b158015611dac57600080fd5b505afa158015611dc0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611de49190612404565b6040516001600160e01b031960e085901b1681526001600160a01b0390921660048301526024820152604401602060405180830381600087803b158015611e2a57600080fd5b505af1158015611e3e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e6291906122e8565b611e6b57600080fd5b600880546001600160a01b0319166001600160a01b038416179055600254611855906008546040516370a0823160e01b81523060048201526001600160a01b03909116906370a082319060240160206040518083038186803b158015611ed057600080fd5b505afa158015611ee4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611f089190612404565b611f12919061252b565b612092565b6001600160a01b038216611f2a57600080fd5b611f3660008383612087565b8060026000828254611f489190612513565b90915550506001600160a01b03821660009081526020819052604081208054839290611f75908490612513565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90602001611d05565b6000611fc483836120d1565b611fcd57600080fd5b610a4c6113ce565b611fdf8383611c7b565b6008546001600160a01b031663a9059cbb84611ffb848661254d565b6040516001600160e01b031960e085901b1681526001600160a01b0390921660048301526024820152604401602060405180830381600087803b15801561204157600080fd5b505af1158015612055573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061207991906122e8565b61208257600080fd5b505050565b6120828383836120de565b60018110156120cc5760405162461bcd60e51b81526020600482015260066024820152653330b1ba37b960d11b6044820152606401610add565b600955565b6000610a4c338484611bbc565b600a546001600160a01b03161561208257600a5460405163e1a1810f60e01b81526001600160a01b0385811660048301528481166024830152604482018490529091169063e1a1810f90606401600060405180830381600087803b15801561214557600080fd5b505af1158015612159573d6000803e3d6000fd5b50505050505050565b60006020828403121561217457600080fd5b81356115b081612610565b60006020828403121561219157600080fd5b81516115b081612610565b600080604083850312156121af57600080fd5b82356121ba81612610565b915060208301356121ca81612610565b809150509250929050565b6000806000606084860312156121ea57600080fd5b83356121f581612610565b9250602084013561220581612610565b929592945050506040919091013590565b6000806040838503121561222957600080fd5b823561223481612610565b946020939093013593505050565b6000806000806060858703121561225857600080fd5b843561226381612610565b935060208501359250604085013567ffffffffffffffff8082111561228757600080fd5b818701915087601f83011261229b57600080fd5b8135818111156122aa57600080fd5b8860208285010111156122bc57600080fd5b95989497505060200194505050565b6000602082840312156122dd57600080fd5b81356115b081612625565b6000602082840312156122fa57600080fd5b81516115b081612625565b60008060006060848603121561231a57600080fd5b8335925060208401359150604084013561233381612610565b809150509250925092565b60006020828403121561235057600080fd5b815167ffffffffffffffff8082111561236857600080fd5b818401915084601f83011261237c57600080fd5b81518181111561238e5761238e6125fa565b604051601f8201601f19908116603f011681019083821181831017156123b6576123b66125fa565b816040528281528760208487010111156123cf57600080fd5b6123e0836020830160208801612583565b979650505050505050565b6000602082840312156123fd57600080fd5b5035919050565b60006020828403121561241657600080fd5b5051919050565b6000825161242f818460208701612583565b692028577261707065642960b01b920191825250600a01919050565b6000825161245d818460208701612583565b632053484160e01b920191825250600401919050565b60008251612485818460208701612583565b605360f81b920191825250600101919050565b6001600160a01b0385168152602081018490526060604082018190528101829052818360808301376000818301608090810191909152601f909201601f191601019392505050565b60208152600082518060208401526124ff816040850160208701612583565b601f01601f19169190910160400192915050565b60008219821115612526576125266125e4565b500190565b60008261254857634e487b7160e01b600052601260045260246000fd5b500490565b6000816000190483118215151615612567576125676125e4565b500290565b60008282101561257e5761257e6125e4565b500390565b60005b8381101561259e578181015183820152602001612586565b838111156116f15750506000910152565b600181811c908216806125c357607f821691505b602082108114156115b757634e487b7160e01b600052602260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b0381168114611b1557600080fd5b8015158114611b1557600080fdfea26469706673582212208e231b5659b35992a4ec63c3650ed1b0fcd59f99c90d62e1e969736b8d14d97964736f6c63430008070033",
    "deployedBytecode": "6080604052600436106102675760003560e01c806377e071ad11610144578063b40e80d1116100b6578063d50256251161007a578063d5025625146107ff578063dcc7d4ad14610814578063dd62ed3e14610827578063de0e9a3e1461086d578063eb470ebf1461088d578063fcb79a7e146108c657600080fd5b8063b40e80d1146106eb578063bf376c7a1461071b578063c028df061461073b578063c45a01551461075b578063c6788bdd1461078357600080fd5b80639b56d6c9116101085780639b56d6c91461060c5780639e4b574514610645578063a3ec18831461065b578063a4c0ed3614610695578063a7813587146106b5578063a9059cbb146106cb57600080fd5b806377e071ad146105965780637dc2cd98146105b65780638fd3ab80146105cd5780638ff8831b146105e257806395d89b41146105f757600080fd5b8063313ce567116101dd57806342966c68116101a157806342966c68146104bb57806350e70d48146104db57806360918117146104fb5780636427ed97146105115780636b03ed5f1461054b57806370a082311461056057600080fd5b8063313ce567146103fe57806332a7ae951461042a57806332bc320b1461044a5780633bcc45ba1461045f5780634000aea01461049b57600080fd5b80631703a0181161022f5780631703a0181461034557806318160ddd1461035b5780631e3b9de51461037057806323b872dd146103a957806326773ddd146103c95780632a0a4ed5146103e957600080fd5b806306fdde031461026c5780630832e47014610297578063095ea7b3146102bb5780630c6f0e5d146102eb5780630cd865ec14610323575b600080fd5b34801561027857600080fd5b506102816108e6565b60405161028e91906124e0565b60405180910390f35b3480156102a357600080fd5b506102ad60095481565b60405190815260200161028e565b3480156102c757600080fd5b506102db6102d6366004612216565b610a3f565b604051901515815260200161028e565b3480156102f757600080fd5b5060065461030b906001600160a01b031681565b6040516001600160a01b03909116815260200161028e565b34801561032f57600080fd5b5061034361033e366004612162565b610a55565b005b34801561035157600080fd5b506102ad600b5481565b34801561036757600080fd5b506002546102ad565b34801561037c57600080fd5b5061030b61038b366004612162565b6001600160a01b039081166000908152600460205260409020541690565b3480156103b557600080fd5b506102db6103c43660046121d5565b610cc6565b3480156103d557600080fd5b506103436103e436600461219c565b610d22565b3480156103f557600080fd5b5061030b610fd5565b34801561040a57600080fd5b506003546104189060ff1681565b60405160ff909116815260200161028e565b34801561043657600080fd5b50610343610445366004612162565b611057565b34801561045657600080fd5b5061034361126c565b34801561046b57600080fd5b5061030b61047a366004612162565b6001600160a01b039081166000908152600460205260409020600301541690565b3480156104a757600080fd5b506102db6104b6366004612242565b611292565b3480156104c757600080fd5b506103436104d63660046123eb565b611337565b3480156104e757600080fd5b5060085461030b906001600160a01b031681565b34801561050757600080fd5b506102ad60075481565b34801561051d57600080fd5b5061034361052c3660046122cb565b336000908152600560205260409020805460ff19169115919091179055565b34801561055757600080fd5b506103436113ce565b34801561056c57600080fd5b506102ad61057b366004612162565b6001600160a01b031660009081526020819052604090205490565b3480156105a257600080fd5b506102ad6105b1366004612162565b6114ec565b3480156105c257600080fd5b506102ad62ed4e0081565b3480156105d957600080fd5b506103436115bd565b3480156105ee57600080fd5b50610343611697565b34801561060357600080fd5b506102816116f7565b34801561061857600080fd5b506102ad610627366004612162565b6001600160a01b031660009081526004602052604090206001015490565b34801561065157600080fd5b50600954156102db565b34801561066757600080fd5b506102db610676366004612162565b6001600160a01b031660009081526005602052604090205460ff161590565b3480156106a157600080fd5b506102db6106b0366004612242565b611788565b3480156106c157600080fd5b506102ad600c5481565b3480156106d757600080fd5b506102db6106e6366004612216565b6117ac565b3480156106f757600080fd5b506102db610706366004612162565b60056020526000908152604090205460ff1681565b34801561072757600080fd5b50610343610736366004612216565b6117b8565b34801561074757600080fd5b50600a5461030b906001600160a01b031681565b34801561076757600080fd5b5061030b73f9f92751f272f0872e2edb6a280b0990f3e2b8a381565b34801561078f57600080fd5b506107d061079e366004612162565b60046020526000908152604090208054600182015460028301546003909301546001600160a01b039283169391921684565b604080516001600160a01b0395861681526020810194909452830191909152909116606082015260800161028e565b34801561080b57600080fd5b50610281611859565b610343610822366004612305565b6118e7565b34801561083357600080fd5b506102ad61084236600461219c565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b34801561087957600080fd5b506103436108883660046123eb565b611afc565b34801561089957600080fd5b506102ad6108a8366004612162565b6001600160a01b031660009081526004602052604090206002015490565b3480156108d257600080fd5b506103436108e136600461219c565b611b18565b60606108f26009541590565b156109a557600860009054906101000a90046001600160a01b03166001600160a01b03166306fdde036040518163ffffffff1660e01b815260040160006040518083038186803b15801561094557600080fd5b505afa158015610959573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610981919081019061233e565b604051602001610991919061244b565b604051602081830303815290604052905090565b600860009054906101000a90046001600160a01b03166001600160a01b03166306fdde036040518163ffffffff1660e01b815260040160006040518083038186803b1580156109f357600080fd5b505afa158015610a07573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610a2f919081019061233e565b604051602001610991919061241d565b6000610a4c338484611b63565b50600192915050565b6001600160a01b0380821660009081526004602090815260409182902082516080810184528154851681526001820154928101839052600282015493810193909352600301549092166060820181905290919081610ae65760405162461bcd60e51b81526020600482015260096024820152681b9bdd08199bdd5b9960ba1b60448201526064015b60405180910390fd5b82516001600160a01b03163314610b2e5760405162461bcd60e51b815260206004820152600c60248201526b1b9bdd0818db185a5b585b9d60a21b6044820152606401610add565b4262ed4e008460400151610b429190612513565b1115610b7c5760405162461bcd60e51b8152602060048201526009602482015268746f6f206561726c7960b81b6044820152606401610add565b82516001600160a01b03858116600090815260046020819052604080832080546001600160a01b031990811682556001820185905560028201949094556003018054909316909255905163a9059cbb60e01b815282841691810191909152602481018590529083169063a9059cbb90604401602060405180830381600087803b158015610c0857600080fd5b505af1158015610c1c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c4091906122e8565b610c4957600080fd5b610c728582610c6d886001600160a01b031660009081526020819052604090205490565b611bbc565b806001600160a01b0316856001600160a01b03167f52a5c2b28bc6eb9712d0ced43463103b486b13ccc9cda499fd3b2d7b6a74a8ee85604051610cb791815260200190565b60405180910390a35050505050565b6000610cd3848484611bbc565b6001600160a01b0384166000908152600160209081526040808320338452909152902054600160ff1b811015610d1757610d178533610d12868561256c565b611b63565b506001949350505050565b6001600160a01b03811660009081526005602052604090205460ff1615610d765760405162461bcd60e51b8152602060048201526008602482015267191a5cd8589b195960c21b6044820152606401610add565b6000610d81836114ec565b905060008111610dc45760405162461bcd60e51b815260206004820152600e60248201526d1898590818dbdb1b185d195c985b60921b6044820152606401610add565b336000610de6846001600160a01b031660009081526020819052604090205490565b90506000610df4848361254d565b90508582610e2c5760405162461bcd60e51b8152602060048201526005602482015264656d70747960d81b6044820152606401610add565b6001600160a01b03861660009081526004602052604090206001015415610e875760405162461bcd60e51b815260206004820152600f60248201526e185b1c9958591e4818db185a5b5959608a1b6044820152606401610add565b6040516323b872dd60e01b81526001600160a01b038581166004830152306024830152604482018490528216906323b872dd90606401602060405180830381600087803b158015610ed757600080fd5b505af1158015610eeb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f0f91906122e8565b610f1857600080fd5b604080516080810182526001600160a01b038087168083526020808401878152428587019081528d8516606087019081528d86166000818152600490955293889020965187549087166001600160a01b0319918216178855925160018801559051600287015551600390950180549590941694169390931790915591517f1982ca8958fc8a8176cb52be509260f4bc5af7ce04e1533711793f1c56dd535990610fc49087815260200190565b60405180910390a350505050505050565b60085460408051632a0a4ed560e01b815290516000926001600160a01b031691632a0a4ed5916004808301926020929190829003018186803b15801561101a57600080fd5b505afa15801561102e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611052919061217f565b905090565b61105f610fd5565b6001600160a01b0316336001600160a01b0316146110ab5760405162461bcd60e51b81526020600482015260096024820152686e6f2061636365737360b81b6044820152606401610add565b6001600160a01b0380821660009081526004602090815260409182902082516080810184528154851681526001820154928101839052600282015493810193909352600301549092166060820181905290916111355760405162461bcd60e51b81526020600482015260096024820152681b9bdd08199bdd5b9960ba1b6044820152606401610add565b6001600160a01b03808416600090815260046020818152604080842080546001600160a01b031990811682556001820186905560028201959095556003018054909416909355855190860151925163a9059cbb60e01b81529385169363a9059cbb936111b7939091016001600160a01b03929092168252602082015260400190565b602060405180830381600087803b1580156111d157600080fd5b505af11580156111e5573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061120991906122e8565b61121257600080fd5b81600001516001600160a01b0316836001600160a01b03167fbb036e629a9f4c0897ee5d48440dfdb36f7e772117723a2ed603a6514244c2d5846020015160405161125f91815260200190565b60405180910390a3505050565b600a546001600160a01b031633141561129057600a80546001600160a01b03191690555b565b60008061129f86866117ac565b9050801561132e57604051635260769b60e11b81526001600160a01b0387169063a4c0ed36906112d9903390899089908990600401612498565b602060405180830381600087803b1580156112f357600080fd5b505af1158015611307573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061132b91906122e8565b90505b95945050505050565b6113413382611c7b565b600061134d6009541590565b6113595760095461135c565b60015b6008549091506001600160a01b03166342966c6861137a838561254d565b6040518263ffffffff1660e01b815260040161139891815260200190565b600060405180830381600087803b1580156113b257600080fd5b505af11580156113c6573d6000803e3d6000fd5b505050505050565b33600090815260046020526040902060010154156112905733600081815260046020819052604080832060018101805460038301805484546001600160a01b0319908116865593889055600290940196909655908216909455905163a9059cbb60e01b8152918201939093526024810182905290916001600160a01b031690819063a9059cbb90604401602060405180830381600087803b15801561147257600080fd5b505af1158015611486573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114aa91906122e8565b6114b357600080fd5b60405182815233907f203627483d943880619f4b7e0cca21dbefd6204b4d85b124eb99540e17ba86dd9060200160405180910390a25050565b6000806114f883611d11565b905080156115065792915050565b6008546001600160a01b0384811691161415611526575050600954919050565b6009546008546040516377e071ad60e01b81526001600160a01b038681166004830152909116906377e071ad9060240160206040518083038186803b15801561156e57600080fd5b505afa158015611582573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115a69190612404565b6115b0919061254d565b9392505050565b50919050565b336115d2600a546001600160a01b0316151590565b156115dc57600080fd5b611d4c6115e860025490565b6115f2919061254d565b6001600160a01b0382166000908152602081905260409020546116179061271061254d565b101561164e5760405162461bcd60e51b815260206004820152600660248201526571756f72756d60d01b6044820152606401610add565b6116588182611d52565b6040516001600160a01b03821681527f3b6b79a09e9fd230e8591b65c97236bf7df7a604edf733db0658e66b0e6eb2a99060200160405180910390a150565b600854604051636427ed9760e01b8152600060048201526001600160a01b0390911690636427ed9790602401600060405180830381600087803b1580156116dd57600080fd5b505af11580156116f1573d6000803e3d6000fd5b50505050565b600854604080516395d89b4160e01b815290516060926001600160a01b0316916395d89b41916004808301926000929190829003018186803b15801561173c57600080fd5b505afa158015611750573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052611778919081019061233e565b6040516020016109919190612473565b6008546000906001600160a01b031633146117a257600080fd5b610d178585611f17565b60006115b08383611fb8565b6008546040516323b872dd60e01b8152336004820152306024820152604481018390526001600160a01b03909116906323b872dd90606401602060405180830381600087803b15801561180a57600080fd5b505af115801561181e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061184291906122e8565b61184b57600080fd5b6118558282611f17565b5050565b600d8054611866906125af565b80601f0160208091040260200160405190810160405280929190818152602001828054611892906125af565b80156118df5780601f106118b4576101008083540402835291602001916118df565b820191906000526020600020905b8154815290600101906020018083116118c257829003601f168201915b505050505081565b600954156118f457600080fd5b6040514281527fdfbf6547deaf4fa5dd154ec1daf5350032f31d34e4c755104dfbf6049163c0879060200160405180910390a1600b54600c54604051634dc5e43160e01b815260048101869052336024820152604481018590526001600160a01b0384166064820152608481019290925260a482015260009073f9f92751f272f0872e2edb6a280b0990f3e2b8a390634dc5e43190349060c4016020604051808303818588803b1580156119a757600080fd5b505af11580156119bb573d6000803e3d6000fd5b50505050506040513d601f19601f820116820180604052508101906119e0919061217f565b90506119f6600a546001600160a01b0316151590565b15611ad757806001600160a01b0316633f5e3e7f6040518163ffffffff1660e01b8152600401602060405180830381600087803b158015611a3657600080fd5b505af1158015611a4a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a6e91906122e8565b611a7757600080fd5b600a546040516306a169ed60e01b81526001600160a01b038381166004830152909116906306a169ed90602401600060405180830381600087803b158015611abe57600080fd5b505af1158015611ad2573d6000803e3d6000fd5b505050505b600a80546001600160a01b0319166001600160a01b0392909216919091179055505050565b600954611b0857600080fd5b611b153382600954611fd5565b50565b600a546001600160a01b03163314611b2f57600080fd5b611b5982611b52846001600160a01b031660009081526020819052604090205490565b6001611fd5565b6118558183611d52565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910161125f565b6001600160a01b038216611bcf57600080fd5b611bda838383612087565b6001600160a01b03831660009081526020819052604081208054839290611c0290849061256c565b90915550506001600160a01b03821660009081526020819052604081208054839290611c2f908490612513565b92505081905550816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161125f91815260200190565b611c8782600083612087565b8060026000828254611c99919061256c565b90915550506001600160a01b03821660009081526020819052604081208054839290611cc690849061256c565b90915550506040518181526000906001600160a01b038416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906020015b60405180910390a35050565b60006001600160a01b038216301415611d2c57506001919050565b6006546001600160a01b0383811691161415611d4a57505060075490565b506000919050565b60095415611d5f57600080fd5b6008546040516370a0823160e01b81523060048201526001600160a01b039091169063a9059cbb90839083906370a082319060240160206040518083038186803b158015611dac57600080fd5b505afa158015611dc0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611de49190612404565b6040516001600160e01b031960e085901b1681526001600160a01b0390921660048301526024820152604401602060405180830381600087803b158015611e2a57600080fd5b505af1158015611e3e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e6291906122e8565b611e6b57600080fd5b600880546001600160a01b0319166001600160a01b038416179055600254611855906008546040516370a0823160e01b81523060048201526001600160a01b03909116906370a082319060240160206040518083038186803b158015611ed057600080fd5b505afa158015611ee4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611f089190612404565b611f12919061252b565b612092565b6001600160a01b038216611f2a57600080fd5b611f3660008383612087565b8060026000828254611f489190612513565b90915550506001600160a01b03821660009081526020819052604081208054839290611f75908490612513565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90602001611d05565b6000611fc483836120d1565b611fcd57600080fd5b610a4c6113ce565b611fdf8383611c7b565b6008546001600160a01b031663a9059cbb84611ffb848661254d565b6040516001600160e01b031960e085901b1681526001600160a01b0390921660048301526024820152604401602060405180830381600087803b15801561204157600080fd5b505af1158015612055573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061207991906122e8565b61208257600080fd5b505050565b6120828383836120de565b60018110156120cc5760405162461bcd60e51b81526020600482015260066024820152653330b1ba37b960d11b6044820152606401610add565b600955565b6000610a4c338484611bbc565b600a546001600160a01b03161561208257600a5460405163e1a1810f60e01b81526001600160a01b0385811660048301528481166024830152604482018490529091169063e1a1810f90606401600060405180830381600087803b15801561214557600080fd5b505af1158015612159573d6000803e3d6000fd5b50505050505050565b60006020828403121561217457600080fd5b81356115b081612610565b60006020828403121561219157600080fd5b81516115b081612610565b600080604083850312156121af57600080fd5b82356121ba81612610565b915060208301356121ca81612610565b809150509250929050565b6000806000606084860312156121ea57600080fd5b83356121f581612610565b9250602084013561220581612610565b929592945050506040919091013590565b6000806040838503121561222957600080fd5b823561223481612610565b946020939093013593505050565b6000806000806060858703121561225857600080fd5b843561226381612610565b935060208501359250604085013567ffffffffffffffff8082111561228757600080fd5b818701915087601f83011261229b57600080fd5b8135818111156122aa57600080fd5b8860208285010111156122bc57600080fd5b95989497505060200194505050565b6000602082840312156122dd57600080fd5b81356115b081612625565b6000602082840312156122fa57600080fd5b81516115b081612625565b60008060006060848603121561231a57600080fd5b8335925060208401359150604084013561233381612610565b809150509250925092565b60006020828403121561235057600080fd5b815167ffffffffffffffff8082111561236857600080fd5b818401915084601f83011261237c57600080fd5b81518181111561238e5761238e6125fa565b604051601f8201601f19908116603f011681019083821181831017156123b6576123b66125fa565b816040528281528760208487010111156123cf57600080fd5b6123e0836020830160208801612583565b979650505050505050565b6000602082840312156123fd57600080fd5b5035919050565b60006020828403121561241657600080fd5b5051919050565b6000825161242f818460208701612583565b692028577261707065642960b01b920191825250600a01919050565b6000825161245d818460208701612583565b632053484160e01b920191825250600401919050565b60008251612485818460208701612583565b605360f81b920191825250600101919050565b6001600160a01b0385168152602081018490526060604082018190528101829052818360808301376000818301608090810191909152601f909201601f191601019392505050565b60208152600082518060208401526124ff816040850160208701612583565b601f01601f19169190910160400192915050565b60008219821115612526576125266125e4565b500190565b60008261254857634e487b7160e01b600052601260045260246000fd5b500490565b6000816000190483118215151615612567576125676125e4565b500290565b60008282101561257e5761257e6125e4565b500390565b60005b8381101561259e578181015183820152602001612586565b838111156116f15750506000910152565b600181811c908216806125c357607f821691505b602082108114156115b757634e487b7160e01b600052602260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b0381168114611b1557600080fd5b8015158114611b1557600080fdfea26469706673582212208e231b5659b35992a4ec63c3650ed1b0fcd59f99c90d62e1e969736b8d14d97964736f6c63430008070033",
    "sourceMap": "3008:2085:0:-:0;;;2718:1:2;2678:41;;3106:345:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1971:8:1;:20;;-1:-1:-1;;1971:20:1;;;3151:7:2;:30;;-1:-1:-1;;;;;;3151:30:2;-1:-1:-1;;;;;3151:30:2;;;;;3192:6;:16;;;3219:10;:24;;;3296:14:0;;::::2;::::0;:5:::2;::::0;:14:::2;::::0;::::2;::::0;::::2;:::i;:::-;;3106:345:::0;;;;3008:2085;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3008:2085:0;;;-1:-1:-1;3008:2085:0;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:177:6;93:13;;-1:-1:-1;;;;;135:31:6;;125:42;;115:70;;181:1;178;171:12;115:70;14:177;;;:::o;196:1297::-;303:6;311;319;327;380:3;368:9;359:7;355:23;351:33;348:53;;;397:1;394;387:12;348:53;424:16;;-1:-1:-1;;;;;489:14:6;;;486:34;;;516:1;513;506:12;486:34;554:6;543:9;539:22;529:32;;599:7;592:4;588:2;584:13;580:27;570:55;;621:1;618;611:12;570:55;650:2;644:9;672:2;668;665:10;662:36;;;678:18;;:::i;:::-;753:2;747:9;721:2;807:13;;-1:-1:-1;;803:22:6;;;827:2;799:31;795:40;783:53;;;851:18;;;871:22;;;848:46;845:72;;;897:18;;:::i;:::-;937:10;933:2;926:22;972:2;964:6;957:18;994:4;984:14;;1035:7;1030:2;1025;1021;1017:11;1013:20;1010:33;1007:53;;;1056:1;1053;1046:12;1007:53;1078:1;1069:10;;1088:129;1102:2;1099:1;1096:9;1088:129;;;1190:10;;;1186:19;;1180:26;1159:14;;;1155:23;;1148:59;1113:10;;;;1088:129;;;1235:2;1232:1;1229:9;1226:80;;;1294:1;1289:2;1284;1276:6;1272:15;1268:24;1261:35;1226:80;1325:6;-1:-1:-1;1350:49:6;;-1:-1:-1;;1380:18:6;;;1350:49;:::i;:::-;1439:2;1424:18;;1418:25;1483:2;1468:18;;;1462:25;196:1297;;1340:59;;-1:-1:-1;196:1297:6;-1:-1:-1;;;;;196:1297:6:o;1498:380::-;1577:1;1573:12;;;;1620;;;1641:61;;1695:4;1687:6;1683:17;1673:27;;1641:61;1748:2;1740:6;1737:14;1717:18;1714:38;1711:161;;;1794:10;1789:3;1785:20;1782:1;1775:31;1829:4;1826:1;1819:15;1857:4;1854:1;1847:15;1711:161;;1498:380;;;:::o;1883:127::-;1944:10;1939:3;1935:20;1932:1;1925:31;1975:4;1972:1;1965:15;1999:4;1996:1;1989:15;1883:127;3008:2085:0;;;;;;",
    "deployedSourceMap": "3008:2085:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3459:270;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2678:41:2;;;;;;;;;;;;;;;;;;;13244:25:6;;;13232:2;13217:18;2678:41:2;13098:177:6;3085:157:1;;;;;;;;;;-1:-1:-1;3085:157:1;;;;;:::i;:::-;;:::i;:::-;;;8035:14:6;;8028:22;8010:41;;7998:2;7983:18;3085:157:1;7870:187:6;3373:38:3;;;;;;;;;;-1:-1:-1;3373:38:3;;;;-1:-1:-1;;;;;3373:38:3;;;;;;-1:-1:-1;;;;;6151:32:6;;;6133:51;;6121:2;6106:18;3373:38:3;5987:203:6;9826:671:3;;;;;;;;;;-1:-1:-1;9826:671:3;;;;;:::i;:::-;;:::i;:::-;;2877:21:2;;;;;;;;;;;;;;;;2064:100:1;;;;;;;;;;-1:-1:-1;2144:12:1;;2064:100;;8255:126:3;;;;;;;;;;-1:-1:-1;8255:126:3;;;;;:::i;:::-;-1:-1:-1;;;;;8345:19:3;;;8318:7;8345:19;;;:6;:19;;;;;:28;;;8255:126;3713:508:1;;;;;;;;;;-1:-1:-1;3713:508:1;;;;;:::i;:::-;;:::i;7323:924:3:-;;;;;;;;;;-1:-1:-1;7323:924:3;;;;;:::i;:::-;;:::i;4100:140:0:-;;;;;;;;;;;;;:::i;1892:30:1:-;;;;;;;;;;-1:-1:-1;1892:30:1;;;;;;;;;;;13452:4:6;13440:17;;;13422:36;;13410:2;13395:18;1892:30:1;13280:184:6;10638:464:3;;;;;;;;;;-1:-1:-1;10638:464:3;;;;;:::i;:::-;;:::i;6473:139:2:-;;;;;;;;;;;;;:::i;8527:136:3:-;;;;;;;;;;-1:-1:-1;8527:136:3;;;;;:::i;:::-;-1:-1:-1;;;;;8623:19:3;;;8596:7;8623:19;;;:6;:19;;;;;:32;;;;;8527:136;5127:313:1;;;;;;;;;;-1:-1:-1;5127:313:1;;;;;:::i;:::-;;:::i;5522:209:2:-;;;;;;;;;;-1:-1:-1;5522:209:2;;;;;:::i;:::-;;:::i;2328:21::-;;;;;;;;;;-1:-1:-1;2328:21:2;;;;-1:-1:-1;;;;;2328:21:2;;;3418:35:3;;;;;;;;;;;;;;;;5066:103;;;;;;;;;;-1:-1:-1;5066:103:3;;;;;:::i;:::-;5139:10;5122:28;;;;:16;:28;;;;;:39;;-1:-1:-1;;5122:39:3;5153:8;;5122:39;;;;;;5066:103;9243:397;;;;;;;;;;;;;:::i;2227:119:1:-;;;;;;;;;;-1:-1:-1;2227:119:1;;;;;:::i;:::-;-1:-1:-1;;;;;2320:18:1;2293:7;2320:18;;;;;;;;;;;;2227:119;4248:648:0;;;;;;;;;;-1:-1:-1;4248:648:0;;;;;:::i;:::-;;:::i;3012:46:3:-;;;;;;;;;;;;3050:8;3012:46;;7043:366:2;;;;;;;;;;;;;:::i;3259:110::-;;;;;;;;;;;;;:::i;3737:187:0:-;;;;;;;;;;;;;:::i;8389:130:3:-;;;;;;;;;;-1:-1:-1;8389:130:3;;;;;:::i;:::-;-1:-1:-1;;;;;8481:19:3;8454:7;8481:19;;;:6;:19;;;;;:30;;;;8389:130;4233:101:2;;;;;;;;;;-1:-1:-1;4299:22:2;;:27;4233:101;;5351:121:3;;;;;;;;;;-1:-1:-1;5351:121:3;;;;;:::i;:::-;-1:-1:-1;;;;;5440:24:3;5415:4;5440:24;;;:16;:24;;;;;;;;5439:25;;5351:121;3377:212:2;;;;;;;;;;-1:-1:-1;3377:212:2;;;;;:::i;:::-;;:::i;2928:25::-;;;;;;;;;;;;;;;;3932:160:0;;;;;;;;;;-1:-1:-1;3932:160:0;;;;;:::i;:::-;;:::i;3192:48:3:-;;;;;;;;;;-1:-1:-1;3192:48:3;;;;;:::i;:::-;;;;;;;;;;;;;;;;3711:178:2;;;;;;;;;;-1:-1:-1;3711:178:2;;;;;:::i;:::-;;:::i;2849:19::-;;;;;;;;;;-1:-1:-1;2849:19:2;;;;-1:-1:-1;;;;;2849:19:2;;;2409:97;;;;;;;;;;;;2463:42;2409:97;;3067:39:3;;;;;;;;;;-1:-1:-1;3067:39:3;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3067:39:3;;;;;;;;;;;;;-1:-1:-1;;;;;7705:15:6;;;7687:34;;7752:2;7737:18;;7730:34;;;;7780:18;;7773:34;;;;7843:15;;;7838:2;7823:18;;7816:43;7636:3;7621:19;3067:39:3;7418:447:6;3078:19:0;;;;;;;;;;;;;:::i;5785:475:2:-;;;;;;:::i;:::-;;:::i;2795:143:1:-;;;;;;;;;;-1:-1:-1;2795:143:1;;;;;:::i;:::-;-1:-1:-1;;;;;2903:18:1;;;2876:7;2903:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;2795:143;4678:140:2;;;;;;;;;;-1:-1:-1;4678:140:2;;;;;:::i;:::-;;:::i;8671:128:3:-;;;;;;;;;;-1:-1:-1;8671:128:3;;;;;:::i;:::-;-1:-1:-1;;;;;8762:19:3;8735:7;8762:19;;;:6;:19;;;;;:29;;;;8671:128;6268:197:2;;;;;;;;;;-1:-1:-1;6268:197:2;;;;;:::i;:::-;;:::i;3459:270:0:-;3505:13;3534:11;4299:22:2;;:27;;4233:101;3534:11:0;3530:192;;;3592:7;;;;;;;;;-1:-1:-1;;;;;3592:7:0;-1:-1:-1;;;;;3592:12:0;;:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3592:14:0;;;;;;;;;;;;:::i;:::-;3575:40;;;;;;;;:::i;:::-;;;;;;;;;;;;;3561:55;;3459:270;:::o;3530:192::-;3680:7;;;;;;;;;-1:-1:-1;;;;;3680:7:0;-1:-1:-1;;;;;3680:12:0;;:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3680:14:0;;;;;;;;;;;;:::i;:::-;3663:46;;;;;;;;:::i;3085:157:1:-;3159:4;3176:36;3185:10;3197:7;3206:5;3176:8;:36::i;:::-;-1:-1:-1;3230:4:1;3085:157;;;;:::o;9826:671:3:-;-1:-1:-1;;;;;9903:19:3;;;9882:18;9903:19;;;:6;:19;;;;;;;;;9882:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10044:15;10036:37;;;;-1:-1:-1;;;10036:37:3;;12626:2:6;10036:37:3;;;12608:21:6;12665:1;12645:18;;;12638:29;-1:-1:-1;;;12683:18:6;;;12676:39;12732:18;;10036:37:3;;;;;;;;;10092:14;;-1:-1:-1;;;;;10092:28:3;10110:10;10092:28;10084:53;;;;-1:-1:-1;;;10084:53:3;;10936:2:6;10084:53:3;;;10918:21:6;10975:2;10955:18;;;10948:30;-1:-1:-1;;;10994:18:6;;;10987:42;11046:18;;10084:53:3;10734:336:6;10084:53:3;10189:15;3050:8;10156:5;:15;;;:29;;;;:::i;:::-;:48;;10148:70;;;;-1:-1:-1;;;10148:70:3;;12963:2:6;10148:70:3;;;12945:21:6;13002:1;12982:18;;;12975:29;-1:-1:-1;;;13020:18:6;;;13013:39;13069:18;;10148:70:3;12761:332:6;10148:70:3;10248:14;;-1:-1:-1;;;;;10280:19:3;;;10229:16;10280:19;;;:6;:19;;;;;;;;10273:26;;-1:-1:-1;;;;;;10273:26:3;;;;;-1:-1:-1;10273:26:3;;;;;;;;;;;;;;;;;;;;;;10318:39;;-1:-1:-1;;;10318:39:3;;6767:32:6;;;10318:39:3;;;6749:51:6;;;;6816:18;;;6809:34;;;10318:17:3;;;;;;6722:18:6;;10318:39:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;10310:48;;;;;;10369:56;10379:11;10392:8;10402:22;10412:11;-1:-1:-1;;;;;2320:18:1;2293:7;2320:18;;;;;;;;;;;;2227:119;10402:22:3;10369:9;:56::i;:::-;10468:8;-1:-1:-1;;;;;10441:48:3;10455:11;-1:-1:-1;;;;;10441:48:3;;10478:10;10441:48;;;;13244:25:6;;13232:2;13217:18;;13098:177;10441:48:3;;;;;;;;9871:626;;;;9826:671;:::o;3713:508:1:-;3811:4;3828:36;3838:6;3846:9;3857:6;3828:9;:36::i;:::-;-1:-1:-1;;;;;3902:19:1;;3875:24;3902:19;;;:11;:19;;;;;;;;3922:10;3902:31;;;;;;;;-1:-1:-1;;;3948:29:1;;3944:248;;;4125:55;4134:6;4142:10;4154:25;4173:6;4154:16;:25;:::i;:::-;4125:8;:55::i;:::-;-1:-1:-1;4209:4:1;;3713:508;-1:-1:-1;;;;3713:508:1:o;7323:924:3:-;-1:-1:-1;;;;;5440:24:3;;5415:4;5440:24;;;:16;:24;;;;;;;;5439:25;7407:51;;;;-1:-1:-1;;;7407:51:3;;11277:2:6;7407:51:3;;;11259:21:6;11316:1;11296:18;;;11289:29;-1:-1:-1;;;11334:18:6;;;11327:38;11382:18;;7407:51:3;11075:331:6;7407:51:3;7469:22;7494:33;7512:14;7494:17;:33::i;:::-;7469:58;;7563:1;7546:14;:18;7538:45;;;;-1:-1:-1;;;7538:45:3;;11946:2:6;7538:45:3;;;11928:21:6;11985:2;11965:18;;;11958:30;-1:-1:-1;;;12004:18:6;;;11997:44;12058:18;;7538:45:3;11744:338:6;7538:45:3;7613:10;7594:16;7652:22;7662:11;-1:-1:-1;;;;;2320:18:1;2293:7;2320:18;;;;;;;;;;;;2227:119;7652:22:3;7634:40;-1:-1:-1;7685:18:3;7706:24;7716:14;7634:40;7706:24;:::i;:::-;7685:45;-1:-1:-1;7766:14:3;7800:11;7792:29;;;;-1:-1:-1;;;7792:29:3;;11613:2:6;7792:29:3;;;11595:21:6;11652:1;11632:18;;;11625:29;-1:-1:-1;;;11670:18:6;;;11663:35;11715:18;;7792:29:3;11411:328:6;7792:29:3;-1:-1:-1;;;;;7840:19:3;;;;;;:6;:19;;;;;:30;;;:35;7832:63;;;;-1:-1:-1;;;7832:63:3;;10592:2:6;7832:63:3;;;10574:21:6;10631:2;10611:18;;;10604:30;-1:-1:-1;;;10650:18:6;;;10643:45;10705:18;;7832:63:3;10390:339:6;7832:63:3;7914:58;;-1:-1:-1;;;7914:58:3;;-1:-1:-1;;;;;6453:15:6;;;7914:58:3;;;6435:34:6;7954:4:3;6485:18:6;;;6478:43;6537:18;;;6530:34;;;7914:21:3;;;;;6370:18:6;;7914:58:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7906:67;;;;;;8008:172;;;;;;;;-1:-1:-1;;;;;8008:172:3;;;;;;;;;;;;;8110:15;8008:172;;;;;;;;;;;;;;;7986:19;;;-1:-1:-1;7986:19:3;;;:6;:19;;;;;;;:194;;;;;;;-1:-1:-1;;;;;;7986:194:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8198:41;;;;;;8231:7;13244:25:6;;13232:2;13217:18;;13098:177;8198:41:3;;;;;;;;7396:851;;;;;7323:924;;:::o;4100:140:0:-;4205:7;;4184:48;;;-1:-1:-1;;;4184:48:0;;;;4157:7;;-1:-1:-1;;;;;4205:7:0;;4184:46;;:48;;;;;;;;;;;;;;4205:7;4184:48;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4177:55;;4100:140;:::o;10638:464:3:-;10720:17;:15;:17::i;:::-;-1:-1:-1;;;;;10706:31:3;:10;-1:-1:-1;;;;;10706:31:3;;10698:53;;;;-1:-1:-1;;;10698:53:3;;12289:2:6;10698:53:3;;;12271:21:6;12328:1;12308:18;;;12301:29;-1:-1:-1;;;12346:18:6;;;12339:39;12395:18;;10698:53:3;12087:332:6;10698:53:3;-1:-1:-1;;;;;10783:19:3;;;10762:18;10783:19;;;:6;:19;;;;;;;;;10762:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10868:43;;;;-1:-1:-1;;;10868:43:3;;12626:2:6;10868:43:3;;;12608:21:6;12665:1;12645:18;;;12638:29;-1:-1:-1;;;12683:18:6;;;12676:39;12732:18;;10868:43:3;12424:332:6;10868:43:3;-1:-1:-1;;;;;10929:19:3;;;;;;;:6;:19;;;;;;;;10922:26;;-1:-1:-1;;;;;;10922:26:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;10985:14;;11001:16;;;;10967:51;;-1:-1:-1;;;10967:51:3;;:17;;;;;;:51;;11001:16;;10967:51;-1:-1:-1;;;;;6767:32:6;;;;6749:51;;6831:2;6816:18;;6809:34;6737:2;6722:18;;6575:274;10967:51:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;10959:60;;;;;;11061:5;:14;;;-1:-1:-1;;;;;11035:59:3;11048:11;-1:-1:-1;;;;;11035:59:3;;11077:5;:16;;;11035:59;;;;13244:25:6;;13232:2;13217:18;;13098:177;11035:59:3;;;;;;;;10687:415;;10638:464;:::o;6473:139:2:-;6545:5;;-1:-1:-1;;;;;6545:5:2;6523:10;:28;6519:86;;;6567:5;:26;;-1:-1:-1;;;;;;6567:26:2;;;6519:86;6473:139::o;5127:313:1:-;5221:4;5238:12;5253:27;5262:9;5273:6;5253:8;:27::i;:::-;5238:42;;5295:7;5291:117;;;5328:68;;-1:-1:-1;;;5328:68:1;;-1:-1:-1;;;;;5328:42:1;;;;;:68;;5371:10;;5383:6;;5391:4;;;;5328:68;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5318:78;;5291:117;5425:7;5127:313;-1:-1:-1;;;;;5127:313:1:o;5522:209:2:-;5570:25;5576:10;5588:6;5570:5;:25::i;:::-;5606:14;5623:11;4299:22;;:27;;4233:101;5623:11;:40;;5641:22;;5623:40;;;5637:1;5623:40;5692:7;;5606:57;;-1:-1:-1;;;;;;5692:7:2;5674:32;5707:15;5606:57;5707:6;:15;:::i;:::-;5674:49;;;;;;;;;;;;;13244:25:6;;13232:2;13217:18;;13098:177;5674:49:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5559:172;5522:209;:::o;9243:397:3:-;9294:10;9287:18;;;;:6;:18;;;;;:29;;;:34;9283:350;;9366:10;9338:18;9359;;;:6;:18;;;;;;;;:29;;;;;9428:31;;;;;9475:25;;-1:-1:-1;;;;;;9475:25:3;;;;;;;;;-1:-1:-1;9475:25:3;;;;;;;;;;;;;9523:41;;-1:-1:-1;;;9523:41:3;;;;;6749:51:6;;;;6816:18;;;6809:34;;;9359:29:3;;-1:-1:-1;;;;;9428:31:3;;;;9523:17;;6722:18:6;;9523:41:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9515:50;;;;;;9585:36;;13244:25:6;;;9598:10:3;;9585:36;;13232:2:6;13217:18;9585:36:3;;;;;;;9323:310;;9243:397::o;4248:648:0:-;4329:7;4349:12;4364:39;4388:14;4364:23;:39::i;:::-;4349:54;-1:-1:-1;4418:8:0;;4414:475;;4450:4;4248:648;-1:-1:-1;;4248:648:0:o;4414:475::-;4502:7;;-1:-1:-1;;;;;4476:34:0;;;4502:7;;4476:34;4472:417;;;-1:-1:-1;;4534:22:0;;;4248:648;-1:-1:-1;4248:648:0:o;4472:417::-;4855:22;;4809:7;;4788:64;;-1:-1:-1;;;4788:64:0;;-1:-1:-1;;;;;6151:32:6;;;4788:64:0;;;6133:51:6;4809:7:0;;;;4788:48;;6106:18:6;;4788:64:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:89;;;;:::i;:::-;4781:96;4248:648;-1:-1:-1;;;4248:648:0:o;4472:417::-;4338:558;4248:648;;;:::o;7043:366:2:-;7100:10;7130:13;7755:5;;-1:-1:-1;;;;;7755:5:2;7747:28;;;7677:106;7130:13;7129:14;7121:23;;;;;;2559:4;7266:13;2144:12:1;;;2064:100;7266:13:2;:32;;;;:::i;:::-;-1:-1:-1;;;;;2320:18:1;;2293:7;2320:18;;;;;;;;;;;7234:28:2;;7257:5;7234:28;:::i;:::-;:64;;7226:83;;;;-1:-1:-1;;;7226:83:2;;10258:2:6;7226:83:2;;;10240:21:6;10297:1;10277:18;;;10270:29;-1:-1:-1;;;10315:18:6;;;10308:36;10361:18;;7226:83:2;10056:329:6;7226:83:2;7320:36;7335:9;7346;7320:14;:36::i;:::-;7372:29;;-1:-1:-1;;;;;6151:32:6;;6133:51;;7372:29:2;;6121:2:6;6106:18;7372:29:2;;;;;;;7069:340;7043:366::o;3259:110::-;3330:7;;3304:57;;-1:-1:-1;;;3304:57:2;;3330:7;3304:57;;;8010:41:6;-1:-1:-1;;;;;3330:7:2;;;;3304:50;;7983:18:6;;3304:57:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3259:110::o;3737:187:0:-;3893:7;;:16;;;-1:-1:-1;;;3893:16:0;;;;3785:13;;-1:-1:-1;;;;;3893:7:0;;:14;;:16;;;;;:7;;:16;;;;;;;:7;:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3893:16:0;;;;;;;;;;;;:::i;:::-;3876:39;;;;;;;;:::i;3377:212:2:-;3520:7;;3473:4;;-1:-1:-1;;;;;3520:7:2;3498:10;:30;3490:39;;;;;;3540:19;3546:4;3552:6;3540:5;:19::i;3932:160:0:-;4035:4;4059:25;4074:2;4078:5;4059:14;:25::i;3711:178:2:-;3788:7;;:55;;-1:-1:-1;;;3788:55:2;;3809:10;3788:55;;;6435:34:6;3829:4:2;6485:18:6;;;6478:43;6537:18;;;6530:34;;;-1:-1:-1;;;;;3788:7:2;;;;:20;;6370:18:6;;3788:55:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3780:64;;;;;;3855:26;3861:11;3874:6;3855:5;:26::i;:::-;3711:178;;:::o;3078:19:0:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;5785:475:2:-;4299:22;;:27;5896:20;;;;;;5932:26;;5942:15;13244:25:6;;5932:26:2;;13232:2:6;13217:18;5932:26:2;;;;;;;6064:6;;6072:10;;5988:95;;-1:-1:-1;;;5988:95:2;;;;;8349:25:6;;;6027:10:2;8428:18:6;;;8421:43;8480:18;;;8473:34;;;-1:-1:-1;;;;;8543:15:6;;8523:18;;;8516:43;8575:19;;;8568:35;;;;8619:19;;;8612:35;5969:16:2;;2463:42;;5988:14;;6010:9;;8321:19:6;;5988:95:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5969:114;;6098:13;7755:5;;-1:-1:-1;;;;;7755:5:2;7747:28;;;7677:106;6098:13;6094:124;;;6143:8;-1:-1:-1;;;;;6136:29:2;;:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6128:40;;;;;;6183:5;;:23;;-1:-1:-1;;;6183:23:2;;-1:-1:-1;;;;;6151:32:6;;;6183:23:2;;;6133:51:6;6183:5:2;;;;:13;;6106:18:6;;6183:23:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6094:124;6228:5;:24;;-1:-1:-1;;;;;;6228:24:2;-1:-1:-1;;;;;6228:24:2;;;;;;;;;;-1:-1:-1;;;5785:475:2:o;4678:140::-;4299:22;;4728:21;;;;;;4760:50;4767:10;4779:6;4787:22;;4760:6;:50::i;:::-;4678:140;:::o;6268:197::-;6363:5;;-1:-1:-1;;;;;6363:5:2;6341:10;:28;6333:37;;;;;;6381:34;6388:5;6395:16;6405:5;-1:-1:-1;;;;;2320:18:1;2293:7;2320:18;;;;;;;;;;;;2227:119;6395:16:2;6413:1;6381:6;:34::i;:::-;6426:31;6441:8;6451:5;6426:14;:31::i;7067:175:1:-;-1:-1:-1;;;;;7152:18:1;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:35;;;7203:31;;13244:25:6;;;7203:31:1;;13217:18:6;7203:31:1;13098:177:6;4711:330:1;-1:-1:-1;;;;;4817:23:1;;4809:32;;;;;;4854:47;4875:6;4883:9;4894:6;4854:20;:47::i;:::-;-1:-1:-1;;;;;4914:17:1;;:9;:17;;;;;;;;;;:27;;4935:6;;4914:9;:27;;4935:6;;4914:27;:::i;:::-;;;;-1:-1:-1;;;;;;;4952:20:1;;:9;:20;;;;;;;;;;:30;;4976:6;;4952:9;:30;;4976:6;;4952:30;:::i;:::-;;;;;;;;5015:9;-1:-1:-1;;;;;4998:35:1;5007:6;-1:-1:-1;;;;;4998:35:1;;5026:6;4998:35;;;;13244:25:6;;13232:2;13217:18;;13098:177;6367:260:1;6443:49;6464:7;6481:1;6485:6;6443:20;:49::i;:::-;6521:6;6505:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;6538:18:1;;:9;:18;;;;;;;;;;:28;;6560:6;;6538:9;:28;;6560:6;;6538:28;:::i;:::-;;;;-1:-1:-1;;6582:37:1;;13244:25:6;;;6608:1:1;;-1:-1:-1;;;;;6582:37:1;;;;;13232:2:6;13217:18;6582:37:1;;;;;;;;6367:260;;:::o;3791:327:3:-;3871:7;-1:-1:-1;;;;;3895:31:3;;3921:4;3895:31;3891:220;;;-1:-1:-1;3950:1:3;;3791:327;-1:-1:-1;3791:327:3:o;3891:220::-;3991:23;;-1:-1:-1;;;;;3973:41:3;;;3991:23;;3973:41;3969:142;;;-1:-1:-1;;4038:20:3;;;3791:327::o;3969:142::-;-1:-1:-1;4098:1:3;;3791:327;-1:-1:-1;3791:327:3:o;6620:415:2:-;4299:22;;:27;6715:20;;;;;;6802:7;;6842:32;;-1:-1:-1;;;6842:32:2;;6868:4;6842:32;;;6133:51:6;-1:-1:-1;;;;;6802:7:2;;;;:16;;6819:21;;6802:7;;6842:17;;6106:18:6;;6842:32:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6802:73;;-1:-1:-1;;;;;;6802:73:2;;;;;;;-1:-1:-1;;;;;6767:32:6;;;6802:73:2;;;6749:51:6;6816:18;;;6809:34;6722:18;;6802:73:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6794:82;;;;;;6928:7;:28;;-1:-1:-1;;;;;;6928:28:2;-1:-1:-1;;;;;6928:28:2;;;;;2144:12:1;;6967:60:2;;6978:7;;:32;;-1:-1:-1;;;6978:32:2;;7004:4;6978:32;;;6133:51:6;-1:-1:-1;;;;;6978:7:2;;;;:17;;6106:18:6;;6978:32:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:48;;;;:::i;:::-;6967:10;:60::i;5721:313:1:-;-1:-1:-1;;;;;5807:23:1;;5799:32;;;;;;5844:51;5873:1;5877:9;5888:6;5844:20;:51::i;:::-;5924:6;5908:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;5941:20:1;;:9;:20;;;;;;;;;;:30;;5965:6;;5941:9;:30;;5965:6;;5941:30;:::i;:::-;;;;-1:-1:-1;;5987:39:1;;13244:25:6;;;-1:-1:-1;;;;;5987:39:1;;;6004:1;;5987:39;;13232:2:6;13217:18;5987:39:1;13098:177:6;8807:198:3;8893:4;8918:33;8933:9;8944:6;8918:14;:33::i;:::-;8910:42;;;;;;8963:12;:10;:12::i;4830:171:2:-;4913:20;4919:5;4926:6;4913:5;:20::i;:::-;4952:7;;-1:-1:-1;;;;;4952:7:2;:16;4969:5;4976:15;4985:6;4976;:15;:::i;:::-;4952:40;;-1:-1:-1;;;;;;4952:40:2;;;;;;;-1:-1:-1;;;;;6767:32:6;;;4952:40:2;;;6749:51:6;6816:18;;;6809:34;6722:18;;4952:40:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4944:49;;;;;;4830:171;;;:::o;4904:184:0:-;5036:44;5063:4;5069:2;5073:6;5036:26;:44::i;4438:136:2:-;4512:1;4502:6;:11;;4494:30;;;;-1:-1:-1;;;4494:30:2;;9924:2:6;4494:30:2;;;9906:21:6;9963:1;9943:18;;;9936:29;-1:-1:-1;;;9981:18:6;;;9974:36;10027:18;;4494:30:2;9722:329:6;4494:30:2;4535:22;:31;4438:136::o;2559:173:1:-;2645:4;2662:40;2672:10;2684:9;2695:6;2662:9;:40::i;7417:252:2:-;7755:5;;-1:-1:-1;;;;;7755:5:2;7747:28;7526:81;;7560:5;;:35;;-1:-1:-1;;;7560:35:2;;-1:-1:-1;;;;;6453:15:6;;;7560:35:2;;;6435:34:6;6505:15;;;6485:18;;;6478:43;6537:18;;;6530:34;;;7560:5:2;;;;:17;;6370:18:6;;7560:35:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4830:171;;;:::o;14:247:6:-;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;181:9;168:23;200:31;225:5;200:31;:::i;266:251::-;336:6;389:2;377:9;368:7;364:23;360:32;357:52;;;405:1;402;395:12;357:52;437:9;431:16;456:31;481:5;456:31;:::i;522:388::-;590:6;598;651:2;639:9;630:7;626:23;622:32;619:52;;;667:1;664;657:12;619:52;706:9;693:23;725:31;750:5;725:31;:::i;:::-;775:5;-1:-1:-1;832:2:6;817:18;;804:32;845:33;804:32;845:33;:::i;:::-;897:7;887:17;;;522:388;;;;;:::o;915:456::-;992:6;1000;1008;1061:2;1049:9;1040:7;1036:23;1032:32;1029:52;;;1077:1;1074;1067:12;1029:52;1116:9;1103:23;1135:31;1160:5;1135:31;:::i;:::-;1185:5;-1:-1:-1;1242:2:6;1227:18;;1214:32;1255:33;1214:32;1255:33;:::i;:::-;915:456;;1307:7;;-1:-1:-1;;;1361:2:6;1346:18;;;;1333:32;;915:456::o;1376:315::-;1444:6;1452;1505:2;1493:9;1484:7;1480:23;1476:32;1473:52;;;1521:1;1518;1511:12;1473:52;1560:9;1547:23;1579:31;1604:5;1579:31;:::i;:::-;1629:5;1681:2;1666:18;;;;1653:32;;-1:-1:-1;;;1376:315:6:o;1696:794::-;1784:6;1792;1800;1808;1861:2;1849:9;1840:7;1836:23;1832:32;1829:52;;;1877:1;1874;1867:12;1829:52;1916:9;1903:23;1935:31;1960:5;1935:31;:::i;:::-;1985:5;-1:-1:-1;2037:2:6;2022:18;;2009:32;;-1:-1:-1;2092:2:6;2077:18;;2064:32;2115:18;2145:14;;;2142:34;;;2172:1;2169;2162:12;2142:34;2210:6;2199:9;2195:22;2185:32;;2255:7;2248:4;2244:2;2240:13;2236:27;2226:55;;2277:1;2274;2267:12;2226:55;2317:2;2304:16;2343:2;2335:6;2332:14;2329:34;;;2359:1;2356;2349:12;2329:34;2404:7;2399:2;2390:6;2386:2;2382:15;2378:24;2375:37;2372:57;;;2425:1;2422;2415:12;2372:57;1696:794;;;;-1:-1:-1;;2456:2:6;2448:11;;-1:-1:-1;;;1696:794:6:o;2495:241::-;2551:6;2604:2;2592:9;2583:7;2579:23;2575:32;2572:52;;;2620:1;2617;2610:12;2572:52;2659:9;2646:23;2678:28;2700:5;2678:28;:::i;2741:245::-;2808:6;2861:2;2849:9;2840:7;2836:23;2832:32;2829:52;;;2877:1;2874;2867:12;2829:52;2909:9;2903:16;2928:28;2950:5;2928:28;:::i;2991:383::-;3068:6;3076;3084;3137:2;3125:9;3116:7;3112:23;3108:32;3105:52;;;3153:1;3150;3143:12;3105:52;3189:9;3176:23;3166:33;;3246:2;3235:9;3231:18;3218:32;3208:42;;3300:2;3289:9;3285:18;3272:32;3313:31;3338:5;3313:31;:::i;:::-;3363:5;3353:15;;;2991:383;;;;;:::o;3379:884::-;3459:6;3512:2;3500:9;3491:7;3487:23;3483:32;3480:52;;;3528:1;3525;3518:12;3480:52;3561:9;3555:16;3590:18;3631:2;3623:6;3620:14;3617:34;;;3647:1;3644;3637:12;3617:34;3685:6;3674:9;3670:22;3660:32;;3730:7;3723:4;3719:2;3715:13;3711:27;3701:55;;3752:1;3749;3742:12;3701:55;3781:2;3775:9;3803:2;3799;3796:10;3793:36;;;3809:18;;:::i;:::-;3884:2;3878:9;3852:2;3938:13;;-1:-1:-1;;3934:22:6;;;3958:2;3930:31;3926:40;3914:53;;;3982:18;;;4002:22;;;3979:46;3976:72;;;4028:18;;:::i;:::-;4068:10;4064:2;4057:22;4103:2;4095:6;4088:18;4143:7;4138:2;4133;4129;4125:11;4121:20;4118:33;4115:53;;;4164:1;4161;4154:12;4115:53;4177:55;4229:2;4224;4216:6;4212:15;4207:2;4203;4199:11;4177:55;:::i;:::-;4251:6;3379:884;-1:-1:-1;;;;;;;3379:884:6:o;4268:180::-;4327:6;4380:2;4368:9;4359:7;4355:23;4351:32;4348:52;;;4396:1;4393;4386:12;4348:52;-1:-1:-1;4419:23:6;;4268:180;-1:-1:-1;4268:180:6:o;4453:184::-;4523:6;4576:2;4564:9;4555:7;4551:23;4547:32;4544:52;;;4592:1;4589;4582:12;4544:52;-1:-1:-1;4615:16:6;;4453:184;-1:-1:-1;4453:184:6:o;4642:449::-;4874:3;4912:6;4906:13;4928:53;4974:6;4969:3;4962:4;4954:6;4950:17;4928:53;:::i;:::-;-1:-1:-1;;;5003:16:6;;5028:27;;;-1:-1:-1;5082:2:6;5071:14;;4642:449;-1:-1:-1;4642:449:6:o;5096:442::-;5328:3;5366:6;5360:13;5382:53;5428:6;5423:3;5416:4;5408:6;5404:17;5382:53;:::i;:::-;-1:-1:-1;;;5457:16:6;;5482:21;;;-1:-1:-1;5530:1:6;5519:13;;5096:442;-1:-1:-1;5096:442:6:o;5543:439::-;5775:3;5813:6;5807:13;5829:53;5875:6;5870:3;5863:4;5855:6;5851:17;5829:53;:::i;:::-;-1:-1:-1;;;5904:16:6;;5929:18;;;-1:-1:-1;5974:1:6;5963:13;;5543:439;-1:-1:-1;5543:439:6:o;6854:559::-;-1:-1:-1;;;;;7067:32:6;;7049:51;;7131:2;7116:18;;7109:34;;;7179:2;7174;7159:18;;7152:30;;;7198:18;;7191:34;;;7218:6;7268;7262:3;7247:19;;7234:49;7333:1;7303:22;;;7327:3;7299:32;;;7292:43;;;;7396:2;7375:15;;;-1:-1:-1;;7371:29:6;7356:45;7352:55;;6854:559;-1:-1:-1;;;6854:559:6:o;9334:383::-;9483:2;9472:9;9465:21;9446:4;9515:6;9509:13;9558:6;9553:2;9542:9;9538:18;9531:34;9574:66;9633:6;9628:2;9617:9;9613:18;9608:2;9600:6;9596:15;9574:66;:::i;:::-;9701:2;9680:15;-1:-1:-1;;9676:29:6;9661:45;;;;9708:2;9657:54;;9334:383;-1:-1:-1;;9334:383:6:o;13469:128::-;13509:3;13540:1;13536:6;13533:1;13530:13;13527:39;;;13546:18;;:::i;:::-;-1:-1:-1;13582:9:6;;13469:128::o;13602:217::-;13642:1;13668;13658:132;;13712:10;13707:3;13703:20;13700:1;13693:31;13747:4;13744:1;13737:15;13775:4;13772:1;13765:15;13658:132;-1:-1:-1;13804:9:6;;13602:217::o;13824:168::-;13864:7;13930:1;13926;13922:6;13918:14;13915:1;13912:21;13907:1;13900:9;13893:17;13889:45;13886:71;;;13937:18;;:::i;:::-;-1:-1:-1;13977:9:6;;13824:168::o;13997:125::-;14037:4;14065:1;14062;14059:8;14056:34;;;14070:18;;:::i;:::-;-1:-1:-1;14107:9:6;;13997:125::o;14127:258::-;14199:1;14209:113;14223:6;14220:1;14217:13;14209:113;;;14299:11;;;14293:18;14280:11;;;14273:39;14245:2;14238:10;14209:113;;;14340:6;14337:1;14334:13;14331:48;;;-1:-1:-1;;14375:1:6;14357:16;;14350:27;14127:258::o;14390:380::-;14469:1;14465:12;;;;14512;;;14533:61;;14587:4;14579:6;14575:17;14565:27;;14533:61;14640:2;14632:6;14629:14;14609:18;14606:38;14603:161;;;14686:10;14681:3;14677:20;14674:1;14667:31;14721:4;14718:1;14711:15;14749:4;14746:1;14739:15;14775:127;14836:10;14831:3;14827:20;14824:1;14817:31;14867:4;14864:1;14857:15;14891:4;14888:1;14881:15;14907:127;14968:10;14963:3;14959:20;14956:1;14949:31;14999:4;14996:1;14989:15;15023:4;15020:1;15013:15;15039:131;-1:-1:-1;;;;;15114:31:6;;15104:42;;15094:70;;15160:1;15157;15150:12;15175:118;15261:5;15254:13;15247:21;15240:5;15237:32;15227:60;;15283:1;15280;15273:12",
    "sourcePath": "c:/Users/luziu/Documents/aktionariat/contracts/src/DraggableShares.sol",
    "compiler": {
        "name": "solc",
        "version": "0.8.7+commit.e28d00a7"
    },
    "ast": {
        "absolutePath": "c:/Users/luziu/Documents/aktionariat/contracts/src/DraggableShares.sol",
        "exportedSymbols": {
            "DraggableShares": [
                189
            ],
            "ERC20": [
                566
            ],
            "ERC20Draggable": [
                1052
            ],
            "ERC20Recoverable": [
                1653
            ],
            "IBurnable": [
                1064
            ],
            "IERC20": [
                1746
            ],
            "IERC677Receiver": [
                1760
            ],
            "IOffer": [
                1084
            ],
            "IOfferFactory": [
                1102
            ],
            "IRecoverable": [
                202
            ],
            "IRecoveryDisabler": [
                1058
            ]
        },
        "id": 203,
        "license": "LicenseRef-Aktionariat",
        "nodeType": "SourceUnit",
        "nodes": [
            {
                "id": 1,
                "literals": [
                    "solidity",
                    ">=",
                    "0.8"
                ],
                "nodeType": "PragmaDirective",
                "src": "1336:22:0"
            },
            {
                "absolutePath": "c:/Users/luziu/Documents/aktionariat/contracts/src/ERC20Recoverable.sol",
                "file": "./ERC20Recoverable.sol",
                "id": 2,
                "nameLocation": "-1:-1:-1",
                "nodeType": "ImportDirective",
                "scope": 203,
                "sourceUnit": 1654,
                "src": "1362:32:0",
                "symbolAliases": [],
                "unitAlias": ""
            },
            {
                "absolutePath": "c:/Users/luziu/Documents/aktionariat/contracts/src/ERC20Draggable.sol",
                "file": "./ERC20Draggable.sol",
                "id": 3,
                "nameLocation": "-1:-1:-1",
                "nodeType": "ImportDirective",
                "scope": 203,
                "sourceUnit": 1103,
                "src": "1396:30:0",
                "symbolAliases": [],
                "unitAlias": ""
            },
            {
                "abstract": false,
                "baseContracts": [
                    {
                        "baseName": {
                            "id": 5,
                            "name": "ERC20Recoverable",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 1653,
                            "src": "3036:16:0"
                        },
                        "id": 6,
                        "nodeType": "InheritanceSpecifier",
                        "src": "3036:16:0"
                    },
                    {
                        "baseName": {
                            "id": 7,
                            "name": "ERC20Draggable",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 1052,
                            "src": "3054:14:0"
                        },
                        "id": 8,
                        "nodeType": "InheritanceSpecifier",
                        "src": "3054:14:0"
                    }
                ],
                "contractDependencies": [],
                "contractKind": "contract",
                "documentation": {
                    "id": 4,
                    "nodeType": "StructuredDocumentation",
                    "src": "1430:1574:0",
                    "text": " @title Draggable CompanyName AG Shares\n @author Luzius Meisser, luzius@aktionariat.com\n This is an ERC-20 token representing shares of CompanyName AG that are bound to\n a shareholder agreement that can be found at the URL defined in the constant 'terms'.\n The shareholder agreement is partially enforced through this smart contract. The agreement\n is designed to facilitate a complete acquisition of the firm even if a minority of shareholders\n disagree with the acquisition, to protect the interest of the minority shareholders by requiring\n the acquirer to offer the same conditions to everyone when acquiring the company, and to\n facilitate an update of the shareholder agreement even if a minority of the shareholders that\n are bound to this agreement disagree. The name \"draggable\" stems from the convention of calling\n the right to drag a minority along with a sale of the company \"drag-along\" rights. The name is\n chosen to ensure that token holders are aware that they are bound to such an agreement.\n The percentage of token holders that must agree with an update of the terms is defined by the\n constant UPDATE_QUORUM. The percentage of yes-votes that is needed to successfully complete an\n acquisition is defined in the constant ACQUISITION_QUORUM. Note that the update quorum is based\n on the total number of tokens in circulation. In contrast, the acquisition quorum is based on the\n number of votes cast during the voting period, not taking into account those who did not bother\n to vote."
                },
                "fullyImplemented": true,
                "id": 189,
                "linearizedBaseContracts": [
                    189,
                    1052,
                    1760,
                    1653,
                    566,
                    1746
                ],
                "name": "DraggableShares",
                "nameLocation": "3017:15:0",
                "nodeType": "ContractDefinition",
                "nodes": [
                    {
                        "constant": false,
                        "functionSelector": "d5025625",
                        "id": 10,
                        "mutability": "mutable",
                        "name": "terms",
                        "nameLocation": "3092:5:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 189,
                        "src": "3078:19:0",
                        "stateVariable": true,
                        "storageLocation": "default",
                        "typeDescriptions": {
                            "typeIdentifier": "t_string_storage",
                            "typeString": "string"
                        },
                        "typeName": {
                            "id": 9,
                            "name": "string",
                            "nodeType": "ElementaryTypeName",
                            "src": "3078:6:0",
                            "typeDescriptions": {
                                "typeIdentifier": "t_string_storage_ptr",
                                "typeString": "string"
                            }
                        },
                        "visibility": "public"
                    },
                    {
                        "body": {
                            "id": 33,
                            "nodeType": "Block",
                            "src": "3285:166:0",
                            "statements": [
                                {
                                    "expression": {
                                        "id": 31,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftHandSide": {
                                            "id": 29,
                                            "name": "terms",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 10,
                                            "src": "3296:5:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_string_storage",
                                                "typeString": "string storage ref"
                                            }
                                        },
                                        "nodeType": "Assignment",
                                        "operator": "=",
                                        "rightHandSide": {
                                            "id": 30,
                                            "name": "_terms",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 12,
                                            "src": "3304:6:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_string_memory_ptr",
                                                "typeString": "string memory"
                                            }
                                        },
                                        "src": "3296:14:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_string_storage",
                                            "typeString": "string storage ref"
                                        }
                                    },
                                    "id": 32,
                                    "nodeType": "ExpressionStatement",
                                    "src": "3296:14:0"
                                }
                            ]
                        },
                        "id": 34,
                        "implemented": true,
                        "kind": "constructor",
                        "modifiers": [
                            {
                                "arguments": [
                                    {
                                        "id": 21,
                                        "name": "wrappedToken",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 14,
                                        "src": "3232:12:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    {
                                        "id": 22,
                                        "name": "quorumBps",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 16,
                                        "src": "3246:9:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    {
                                        "id": 23,
                                        "name": "votePeriodSeconds",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 18,
                                        "src": "3257:17:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    }
                                ],
                                "id": 24,
                                "kind": "baseConstructorSpecifier",
                                "modifierName": {
                                    "id": 20,
                                    "name": "ERC20Draggable",
                                    "nodeType": "IdentifierPath",
                                    "referencedDeclaration": 1052,
                                    "src": "3217:14:0"
                                },
                                "nodeType": "ModifierInvocation",
                                "src": "3217:58:0"
                            },
                            {
                                "arguments": [
                                    {
                                        "hexValue": "30",
                                        "id": 26,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "3282:1:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_rational_0_by_1",
                                            "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                    }
                                ],
                                "id": 27,
                                "kind": "baseConstructorSpecifier",
                                "modifierName": {
                                    "id": 25,
                                    "name": "ERC20",
                                    "nodeType": "IdentifierPath",
                                    "referencedDeclaration": 566,
                                    "src": "3276:5:0"
                                },
                                "nodeType": "ModifierInvocation",
                                "src": "3276:8:0"
                            }
                        ],
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "FunctionDefinition",
                        "parameters": {
                            "id": 19,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 12,
                                    "mutability": "mutable",
                                    "name": "_terms",
                                    "nameLocation": "3132:6:0",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 34,
                                    "src": "3118:20:0",
                                    "stateVariable": false,
                                    "storageLocation": "memory",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_string_memory_ptr",
                                        "typeString": "string"
                                    },
                                    "typeName": {
                                        "id": 11,
                                        "name": "string",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "3118:6:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_string_storage_ptr",
                                            "typeString": "string"
                                        }
                                    },
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 14,
                                    "mutability": "mutable",
                                    "name": "wrappedToken",
                                    "nameLocation": "3148:12:0",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 34,
                                    "src": "3140:20:0",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                    },
                                    "typeName": {
                                        "id": 13,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "3140:7:0",
                                        "stateMutability": "nonpayable",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 16,
                                    "mutability": "mutable",
                                    "name": "quorumBps",
                                    "nameLocation": "3170:9:0",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 34,
                                    "src": "3162:17:0",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                    },
                                    "typeName": {
                                        "id": 15,
                                        "name": "uint256",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "3162:7:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 18,
                                    "mutability": "mutable",
                                    "name": "votePeriodSeconds",
                                    "nameLocation": "3189:17:0",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 34,
                                    "src": "3181:25:0",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                    },
                                    "typeName": {
                                        "id": 17,
                                        "name": "uint256",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "3181:7:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "3117:90:0"
                        },
                        "returnParameters": {
                            "id": 28,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "3285:0:0"
                        },
                        "scope": 189,
                        "src": "3106:345:0",
                        "stateMutability": "nonpayable",
                        "virtual": false,
                        "visibility": "public"
                    },
                    {
                        "baseFunctions": [
                            1661
                        ],
                        "body": {
                            "id": 67,
                            "nodeType": "Block",
                            "src": "3519:210:0",
                            "statements": [
                                {
                                    "condition": {
                                        "arguments": [],
                                        "expression": {
                                            "argumentTypes": [],
                                            "id": 40,
                                            "name": "isBinding",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 707,
                                            "src": "3534:9:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                                                "typeString": "function () view returns (bool)"
                                            }
                                        },
                                        "id": 41,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "3534:11:0",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                        }
                                    },
                                    "falseBody": {
                                        "id": 65,
                                        "nodeType": "Block",
                                        "src": "3634:88:0",
                                        "statements": [
                                            {
                                                "expression": {
                                                    "arguments": [
                                                        {
                                                            "arguments": [
                                                                {
                                                                    "arguments": [],
                                                                    "expression": {
                                                                        "argumentTypes": [],
                                                                        "expression": {
                                                                            "id": 58,
                                                                            "name": "wrapped",
                                                                            "nodeType": "Identifier",
                                                                            "overloadedDeclarations": [],
                                                                            "referencedDeclaration": 578,
                                                                            "src": "3680:7:0",
                                                                            "typeDescriptions": {
                                                                                "typeIdentifier": "t_contract$_IERC20_$1746",
                                                                                "typeString": "contract IERC20"
                                                                            }
                                                                        },
                                                                        "id": 59,
                                                                        "isConstant": false,
                                                                        "isLValue": false,
                                                                        "isPure": false,
                                                                        "lValueRequested": false,
                                                                        "memberName": "name",
                                                                        "nodeType": "MemberAccess",
                                                                        "referencedDeclaration": 1661,
                                                                        "src": "3680:12:0",
                                                                        "typeDescriptions": {
                                                                            "typeIdentifier": "t_function_external_view$__$returns$_t_string_memory_ptr_$",
                                                                            "typeString": "function () view external returns (string memory)"
                                                                        }
                                                                    },
                                                                    "id": 60,
                                                                    "isConstant": false,
                                                                    "isLValue": false,
                                                                    "isPure": false,
                                                                    "kind": "functionCall",
                                                                    "lValueRequested": false,
                                                                    "names": [],
                                                                    "nodeType": "FunctionCall",
                                                                    "src": "3680:14:0",
                                                                    "tryCall": false,
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_string_memory_ptr",
                                                                        "typeString": "string memory"
                                                                    }
                                                                },
                                                                {
                                                                    "hexValue": "20285772617070656429",
                                                                    "id": 61,
                                                                    "isConstant": false,
                                                                    "isLValue": false,
                                                                    "isPure": true,
                                                                    "kind": "string",
                                                                    "lValueRequested": false,
                                                                    "nodeType": "Literal",
                                                                    "src": "3696:12:0",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_stringliteral_00163387342fb3f3305509f0070f97b67724ca153e0dde4b5fba6eb87d508c27",
                                                                        "typeString": "literal_string \" (Wrapped)\""
                                                                    },
                                                                    "value": " (Wrapped)"
                                                                }
                                                            ],
                                                            "expression": {
                                                                "argumentTypes": [
                                                                    {
                                                                        "typeIdentifier": "t_string_memory_ptr",
                                                                        "typeString": "string memory"
                                                                    },
                                                                    {
                                                                        "typeIdentifier": "t_stringliteral_00163387342fb3f3305509f0070f97b67724ca153e0dde4b5fba6eb87d508c27",
                                                                        "typeString": "literal_string \" (Wrapped)\""
                                                                    }
                                                                ],
                                                                "expression": {
                                                                    "id": 56,
                                                                    "name": "abi",
                                                                    "nodeType": "Identifier",
                                                                    "overloadedDeclarations": [],
                                                                    "referencedDeclaration": 4294967295,
                                                                    "src": "3663:3:0",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_magic_abi",
                                                                        "typeString": "abi"
                                                                    }
                                                                },
                                                                "id": 57,
                                                                "isConstant": false,
                                                                "isLValue": false,
                                                                "isPure": true,
                                                                "lValueRequested": false,
                                                                "memberName": "encodePacked",
                                                                "nodeType": "MemberAccess",
                                                                "src": "3663:16:0",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                                                    "typeString": "function () pure returns (bytes memory)"
                                                                }
                                                            },
                                                            "id": 62,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": false,
                                                            "kind": "functionCall",
                                                            "lValueRequested": false,
                                                            "names": [],
                                                            "nodeType": "FunctionCall",
                                                            "src": "3663:46:0",
                                                            "tryCall": false,
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_bytes_memory_ptr",
                                                                "typeString": "bytes memory"
                                                            }
                                                        }
                                                    ],
                                                    "expression": {
                                                        "argumentTypes": [
                                                            {
                                                                "typeIdentifier": "t_bytes_memory_ptr",
                                                                "typeString": "bytes memory"
                                                            }
                                                        ],
                                                        "id": 55,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": true,
                                                        "lValueRequested": false,
                                                        "nodeType": "ElementaryTypeNameExpression",
                                                        "src": "3656:6:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                                                            "typeString": "type(string storage pointer)"
                                                        },
                                                        "typeName": {
                                                            "id": 54,
                                                            "name": "string",
                                                            "nodeType": "ElementaryTypeName",
                                                            "src": "3656:6:0",
                                                            "typeDescriptions": {}
                                                        }
                                                    },
                                                    "id": 63,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "kind": "typeConversion",
                                                    "lValueRequested": false,
                                                    "names": [],
                                                    "nodeType": "FunctionCall",
                                                    "src": "3656:54:0",
                                                    "tryCall": false,
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_string_memory_ptr",
                                                        "typeString": "string memory"
                                                    }
                                                },
                                                "functionReturnParameters": 39,
                                                "id": 64,
                                                "nodeType": "Return",
                                                "src": "3649:61:0"
                                            }
                                        ]
                                    },
                                    "id": 66,
                                    "nodeType": "IfStatement",
                                    "src": "3530:192:0",
                                    "trueBody": {
                                        "id": 53,
                                        "nodeType": "Block",
                                        "src": "3546:82:0",
                                        "statements": [
                                            {
                                                "expression": {
                                                    "arguments": [
                                                        {
                                                            "arguments": [
                                                                {
                                                                    "arguments": [],
                                                                    "expression": {
                                                                        "argumentTypes": [],
                                                                        "expression": {
                                                                            "id": 46,
                                                                            "name": "wrapped",
                                                                            "nodeType": "Identifier",
                                                                            "overloadedDeclarations": [],
                                                                            "referencedDeclaration": 578,
                                                                            "src": "3592:7:0",
                                                                            "typeDescriptions": {
                                                                                "typeIdentifier": "t_contract$_IERC20_$1746",
                                                                                "typeString": "contract IERC20"
                                                                            }
                                                                        },
                                                                        "id": 47,
                                                                        "isConstant": false,
                                                                        "isLValue": false,
                                                                        "isPure": false,
                                                                        "lValueRequested": false,
                                                                        "memberName": "name",
                                                                        "nodeType": "MemberAccess",
                                                                        "referencedDeclaration": 1661,
                                                                        "src": "3592:12:0",
                                                                        "typeDescriptions": {
                                                                            "typeIdentifier": "t_function_external_view$__$returns$_t_string_memory_ptr_$",
                                                                            "typeString": "function () view external returns (string memory)"
                                                                        }
                                                                    },
                                                                    "id": 48,
                                                                    "isConstant": false,
                                                                    "isLValue": false,
                                                                    "isPure": false,
                                                                    "kind": "functionCall",
                                                                    "lValueRequested": false,
                                                                    "names": [],
                                                                    "nodeType": "FunctionCall",
                                                                    "src": "3592:14:0",
                                                                    "tryCall": false,
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_string_memory_ptr",
                                                                        "typeString": "string memory"
                                                                    }
                                                                },
                                                                {
                                                                    "hexValue": "20534841",
                                                                    "id": 49,
                                                                    "isConstant": false,
                                                                    "isLValue": false,
                                                                    "isPure": true,
                                                                    "kind": "string",
                                                                    "lValueRequested": false,
                                                                    "nodeType": "Literal",
                                                                    "src": "3608:6:0",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_stringliteral_6f209a0b4773ef78eda727953ae917d713eaebd0fd26a465e1ec4589e694a40a",
                                                                        "typeString": "literal_string \" SHA\""
                                                                    },
                                                                    "value": " SHA"
                                                                }
                                                            ],
                                                            "expression": {
                                                                "argumentTypes": [
                                                                    {
                                                                        "typeIdentifier": "t_string_memory_ptr",
                                                                        "typeString": "string memory"
                                                                    },
                                                                    {
                                                                        "typeIdentifier": "t_stringliteral_6f209a0b4773ef78eda727953ae917d713eaebd0fd26a465e1ec4589e694a40a",
                                                                        "typeString": "literal_string \" SHA\""
                                                                    }
                                                                ],
                                                                "expression": {
                                                                    "id": 44,
                                                                    "name": "abi",
                                                                    "nodeType": "Identifier",
                                                                    "overloadedDeclarations": [],
                                                                    "referencedDeclaration": 4294967295,
                                                                    "src": "3575:3:0",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_magic_abi",
                                                                        "typeString": "abi"
                                                                    }
                                                                },
                                                                "id": 45,
                                                                "isConstant": false,
                                                                "isLValue": false,
                                                                "isPure": true,
                                                                "lValueRequested": false,
                                                                "memberName": "encodePacked",
                                                                "nodeType": "MemberAccess",
                                                                "src": "3575:16:0",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                                                    "typeString": "function () pure returns (bytes memory)"
                                                                }
                                                            },
                                                            "id": 50,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": false,
                                                            "kind": "functionCall",
                                                            "lValueRequested": false,
                                                            "names": [],
                                                            "nodeType": "FunctionCall",
                                                            "src": "3575:40:0",
                                                            "tryCall": false,
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_bytes_memory_ptr",
                                                                "typeString": "bytes memory"
                                                            }
                                                        }
                                                    ],
                                                    "expression": {
                                                        "argumentTypes": [
                                                            {
                                                                "typeIdentifier": "t_bytes_memory_ptr",
                                                                "typeString": "bytes memory"
                                                            }
                                                        ],
                                                        "id": 43,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": true,
                                                        "lValueRequested": false,
                                                        "nodeType": "ElementaryTypeNameExpression",
                                                        "src": "3568:6:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                                                            "typeString": "type(string storage pointer)"
                                                        },
                                                        "typeName": {
                                                            "id": 42,
                                                            "name": "string",
                                                            "nodeType": "ElementaryTypeName",
                                                            "src": "3568:6:0",
                                                            "typeDescriptions": {}
                                                        }
                                                    },
                                                    "id": 51,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "kind": "typeConversion",
                                                    "lValueRequested": false,
                                                    "names": [],
                                                    "nodeType": "FunctionCall",
                                                    "src": "3568:48:0",
                                                    "tryCall": false,
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_string_memory_ptr",
                                                        "typeString": "string memory"
                                                    }
                                                },
                                                "functionReturnParameters": 39,
                                                "id": 52,
                                                "nodeType": "Return",
                                                "src": "3561:55:0"
                                            }
                                        ]
                                    }
                                }
                            ]
                        },
                        "functionSelector": "06fdde03",
                        "id": 68,
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [],
                        "name": "name",
                        "nameLocation": "3468:4:0",
                        "nodeType": "FunctionDefinition",
                        "overrides": {
                            "id": 36,
                            "nodeType": "OverrideSpecifier",
                            "overrides": [],
                            "src": "3482:8:0"
                        },
                        "parameters": {
                            "id": 35,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "3472:2:0"
                        },
                        "returnParameters": {
                            "id": 39,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 38,
                                    "mutability": "mutable",
                                    "name": "",
                                    "nameLocation": "-1:-1:-1",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 68,
                                    "src": "3505:13:0",
                                    "stateVariable": false,
                                    "storageLocation": "memory",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_string_memory_ptr",
                                        "typeString": "string"
                                    },
                                    "typeName": {
                                        "id": 37,
                                        "name": "string",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "3505:6:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_string_storage_ptr",
                                            "typeString": "string"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "3504:15:0"
                        },
                        "scope": 189,
                        "src": "3459:270:0",
                        "stateMutability": "view",
                        "virtual": false,
                        "visibility": "public"
                    },
                    {
                        "baseFunctions": [
                            1666
                        ],
                        "body": {
                            "id": 85,
                            "nodeType": "Block",
                            "src": "3799:125:0",
                            "statements": [
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "arguments": [
                                                    {
                                                        "arguments": [],
                                                        "expression": {
                                                            "argumentTypes": [],
                                                            "expression": {
                                                                "id": 78,
                                                                "name": "wrapped",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [],
                                                                "referencedDeclaration": 578,
                                                                "src": "3893:7:0",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_contract$_IERC20_$1746",
                                                                    "typeString": "contract IERC20"
                                                                }
                                                            },
                                                            "id": 79,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": false,
                                                            "lValueRequested": false,
                                                            "memberName": "symbol",
                                                            "nodeType": "MemberAccess",
                                                            "referencedDeclaration": 1666,
                                                            "src": "3893:14:0",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_function_external_view$__$returns$_t_string_memory_ptr_$",
                                                                "typeString": "function () view external returns (string memory)"
                                                            }
                                                        },
                                                        "id": 80,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "kind": "functionCall",
                                                        "lValueRequested": false,
                                                        "names": [],
                                                        "nodeType": "FunctionCall",
                                                        "src": "3893:16:0",
                                                        "tryCall": false,
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_string_memory_ptr",
                                                            "typeString": "string memory"
                                                        }
                                                    },
                                                    {
                                                        "hexValue": "53",
                                                        "id": 81,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": true,
                                                        "kind": "string",
                                                        "lValueRequested": false,
                                                        "nodeType": "Literal",
                                                        "src": "3911:3:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_stringliteral_a9463b19d1148abedba3d6925530d4465b271ce2cc61f80b1a0a80fd73eab881",
                                                            "typeString": "literal_string \"S\""
                                                        },
                                                        "value": "S"
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_string_memory_ptr",
                                                            "typeString": "string memory"
                                                        },
                                                        {
                                                            "typeIdentifier": "t_stringliteral_a9463b19d1148abedba3d6925530d4465b271ce2cc61f80b1a0a80fd73eab881",
                                                            "typeString": "literal_string \"S\""
                                                        }
                                                    ],
                                                    "expression": {
                                                        "id": 76,
                                                        "name": "abi",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 4294967295,
                                                        "src": "3876:3:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_magic_abi",
                                                            "typeString": "abi"
                                                        }
                                                    },
                                                    "id": 77,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "lValueRequested": false,
                                                    "memberName": "encodePacked",
                                                    "nodeType": "MemberAccess",
                                                    "src": "3876:16:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                                        "typeString": "function () pure returns (bytes memory)"
                                                    }
                                                },
                                                "id": 82,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "3876:39:0",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bytes_memory_ptr",
                                                    "typeString": "bytes memory"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_bytes_memory_ptr",
                                                    "typeString": "bytes memory"
                                                }
                                            ],
                                            "id": 75,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "lValueRequested": false,
                                            "nodeType": "ElementaryTypeNameExpression",
                                            "src": "3869:6:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                                                "typeString": "type(string storage pointer)"
                                            },
                                            "typeName": {
                                                "id": 74,
                                                "name": "string",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "3869:6:0",
                                                "typeDescriptions": {}
                                            }
                                        },
                                        "id": 83,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "typeConversion",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "3869:47:0",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_string_memory_ptr",
                                            "typeString": "string memory"
                                        }
                                    },
                                    "functionReturnParameters": 73,
                                    "id": 84,
                                    "nodeType": "Return",
                                    "src": "3862:54:0"
                                }
                            ]
                        },
                        "functionSelector": "95d89b41",
                        "id": 86,
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [],
                        "name": "symbol",
                        "nameLocation": "3746:6:0",
                        "nodeType": "FunctionDefinition",
                        "overrides": {
                            "id": 70,
                            "nodeType": "OverrideSpecifier",
                            "overrides": [],
                            "src": "3762:8:0"
                        },
                        "parameters": {
                            "id": 69,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "3752:2:0"
                        },
                        "returnParameters": {
                            "id": 73,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 72,
                                    "mutability": "mutable",
                                    "name": "",
                                    "nameLocation": "-1:-1:-1",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 86,
                                    "src": "3785:13:0",
                                    "stateVariable": false,
                                    "storageLocation": "memory",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_string_memory_ptr",
                                        "typeString": "string"
                                    },
                                    "typeName": {
                                        "id": 71,
                                        "name": "string",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "3785:6:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_string_storage_ptr",
                                            "typeString": "string"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "3784:15:0"
                        },
                        "scope": 189,
                        "src": "3737:187:0",
                        "stateMutability": "view",
                        "virtual": false,
                        "visibility": "public"
                    },
                    {
                        "baseFunctions": [
                            279,
                            1450
                        ],
                        "body": {
                            "id": 104,
                            "nodeType": "Block",
                            "src": "4041:51:0",
                            "statements": [
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "id": 100,
                                                "name": "to",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 88,
                                                "src": "4074:2:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            {
                                                "id": 101,
                                                "name": "value",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 90,
                                                "src": "4078:5:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                },
                                                {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            ],
                                            "expression": {
                                                "id": 98,
                                                "name": "super",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 4294967271,
                                                "src": "4059:5:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_type$_t_super$_DraggableShares_$189_$",
                                                    "typeString": "type(contract super DraggableShares)"
                                                }
                                            },
                                            "id": 99,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "transfer",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 1450,
                                            "src": "4059:14:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                                "typeString": "function (address,uint256) returns (bool)"
                                            }
                                        },
                                        "id": 102,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "4059:25:0",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                        }
                                    },
                                    "functionReturnParameters": 97,
                                    "id": 103,
                                    "nodeType": "Return",
                                    "src": "4052:32:0"
                                }
                            ]
                        },
                        "functionSelector": "a9059cbb",
                        "id": 105,
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [],
                        "name": "transfer",
                        "nameLocation": "3941:8:0",
                        "nodeType": "FunctionDefinition",
                        "overrides": {
                            "id": 94,
                            "nodeType": "OverrideSpecifier",
                            "overrides": [
                                {
                                    "id": 92,
                                    "name": "ERC20Recoverable",
                                    "nodeType": "IdentifierPath",
                                    "referencedDeclaration": 1653,
                                    "src": "3994:16:0"
                                },
                                {
                                    "id": 93,
                                    "name": "ERC20",
                                    "nodeType": "IdentifierPath",
                                    "referencedDeclaration": 566,
                                    "src": "4012:5:0"
                                }
                            ],
                            "src": "3985:33:0"
                        },
                        "parameters": {
                            "id": 91,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 88,
                                    "mutability": "mutable",
                                    "name": "to",
                                    "nameLocation": "3958:2:0",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 105,
                                    "src": "3950:10:0",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                    },
                                    "typeName": {
                                        "id": 87,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "3950:7:0",
                                        "stateMutability": "nonpayable",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 90,
                                    "mutability": "mutable",
                                    "name": "value",
                                    "nameLocation": "3970:5:0",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 105,
                                    "src": "3962:13:0",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                    },
                                    "typeName": {
                                        "id": 89,
                                        "name": "uint256",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "3962:7:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "3949:27:0"
                        },
                        "returnParameters": {
                            "id": 97,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 96,
                                    "mutability": "mutable",
                                    "name": "",
                                    "nameLocation": "-1:-1:-1",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 105,
                                    "src": "4035:4:0",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                    },
                                    "typeName": {
                                        "id": 95,
                                        "name": "bool",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "4035:4:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "4034:6:0"
                        },
                        "scope": 189,
                        "src": "3932:160:0",
                        "stateMutability": "nonpayable",
                        "virtual": true,
                        "visibility": "public"
                    },
                    {
                        "baseFunctions": [
                            1210
                        ],
                        "body": {
                            "id": 120,
                            "nodeType": "Block",
                            "src": "4166:74:0",
                            "statements": [
                                {
                                    "expression": {
                                        "arguments": [],
                                        "expression": {
                                            "argumentTypes": [],
                                            "expression": {
                                                "arguments": [
                                                    {
                                                        "arguments": [
                                                            {
                                                                "id": 114,
                                                                "name": "wrapped",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [],
                                                                "referencedDeclaration": 578,
                                                                "src": "4205:7:0",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_contract$_IERC20_$1746",
                                                                    "typeString": "contract IERC20"
                                                                }
                                                            }
                                                        ],
                                                        "expression": {
                                                            "argumentTypes": [
                                                                {
                                                                    "typeIdentifier": "t_contract$_IERC20_$1746",
                                                                    "typeString": "contract IERC20"
                                                                }
                                                            ],
                                                            "id": 113,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": true,
                                                            "lValueRequested": false,
                                                            "nodeType": "ElementaryTypeNameExpression",
                                                            "src": "4197:7:0",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_type$_t_address_$",
                                                                "typeString": "type(address)"
                                                            },
                                                            "typeName": {
                                                                "id": 112,
                                                                "name": "address",
                                                                "nodeType": "ElementaryTypeName",
                                                                "src": "4197:7:0",
                                                                "typeDescriptions": {}
                                                            }
                                                        },
                                                        "id": 115,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "kind": "typeConversion",
                                                        "lValueRequested": false,
                                                        "names": [],
                                                        "nodeType": "FunctionCall",
                                                        "src": "4197:16:0",
                                                        "tryCall": false,
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        }
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        }
                                                    ],
                                                    "id": 111,
                                                    "name": "IRecoverable",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 202,
                                                    "src": "4184:12:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_type$_t_contract$_IRecoverable_$202_$",
                                                        "typeString": "type(contract IRecoverable)"
                                                    }
                                                },
                                                "id": 116,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "typeConversion",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "4184:30:0",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_contract$_IRecoverable_$202",
                                                    "typeString": "contract IRecoverable"
                                                }
                                            },
                                            "id": 117,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "getClaimDeleter",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 201,
                                            "src": "4184:46:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                                                "typeString": "function () view external returns (address)"
                                            }
                                        },
                                        "id": 118,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "4184:48:0",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "functionReturnParameters": 110,
                                    "id": 119,
                                    "nodeType": "Return",
                                    "src": "4177:55:0"
                                }
                            ]
                        },
                        "functionSelector": "2a0a4ed5",
                        "id": 121,
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [],
                        "name": "getClaimDeleter",
                        "nameLocation": "4109:15:0",
                        "nodeType": "FunctionDefinition",
                        "overrides": {
                            "id": 107,
                            "nodeType": "OverrideSpecifier",
                            "overrides": [],
                            "src": "4139:8:0"
                        },
                        "parameters": {
                            "id": 106,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "4124:2:0"
                        },
                        "returnParameters": {
                            "id": 110,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 109,
                                    "mutability": "mutable",
                                    "name": "",
                                    "nameLocation": "-1:-1:-1",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 121,
                                    "src": "4157:7:0",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                    },
                                    "typeName": {
                                        "id": 108,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "4157:7:0",
                                        "stateMutability": "nonpayable",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "4156:9:0"
                        },
                        "scope": 189,
                        "src": "4100:140:0",
                        "stateMutability": "view",
                        "virtual": false,
                        "visibility": "public"
                    },
                    {
                        "baseFunctions": [
                            1163
                        ],
                        "body": {
                            "id": 166,
                            "nodeType": "Block",
                            "src": "4338:558:0",
                            "statements": [
                                {
                                    "assignments": [
                                        130
                                    ],
                                    "declarations": [
                                        {
                                            "constant": false,
                                            "id": 130,
                                            "mutability": "mutable",
                                            "name": "rate",
                                            "nameLocation": "4357:4:0",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 166,
                                            "src": "4349:12:0",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            },
                                            "typeName": {
                                                "id": 129,
                                                "name": "uint256",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "4349:7:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "id": 135,
                                    "initialValue": {
                                        "arguments": [
                                            {
                                                "id": 133,
                                                "name": "collateralType",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 123,
                                                "src": "4388:14:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            ],
                                            "expression": {
                                                "id": 131,
                                                "name": "super",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 4294967271,
                                                "src": "4364:5:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_type$_t_super$_DraggableShares_$189_$",
                                                    "typeString": "type(contract super DraggableShares)"
                                                }
                                            },
                                            "id": 132,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "getCollateralRate",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 1163,
                                            "src": "4364:23:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                                                "typeString": "function (address) view returns (uint256)"
                                            }
                                        },
                                        "id": 134,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "4364:39:0",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "nodeType": "VariableDeclarationStatement",
                                    "src": "4349:54:0"
                                },
                                {
                                    "condition": {
                                        "commonType": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        },
                                        "id": 138,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                            "id": 136,
                                            "name": "rate",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 130,
                                            "src": "4418:4:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": ">",
                                        "rightExpression": {
                                            "hexValue": "30",
                                            "id": 137,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "number",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "4425:1:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_rational_0_by_1",
                                                "typeString": "int_const 0"
                                            },
                                            "value": "0"
                                        },
                                        "src": "4418:8:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                        }
                                    },
                                    "falseBody": {
                                        "condition": {
                                            "commonType": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            },
                                            "id": 147,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "leftExpression": {
                                                "id": 142,
                                                "name": "collateralType",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 123,
                                                "src": "4476:14:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            "nodeType": "BinaryOperation",
                                            "operator": "==",
                                            "rightExpression": {
                                                "arguments": [
                                                    {
                                                        "id": 145,
                                                        "name": "wrapped",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 578,
                                                        "src": "4502:7:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_contract$_IERC20_$1746",
                                                            "typeString": "contract IERC20"
                                                        }
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_contract$_IERC20_$1746",
                                                            "typeString": "contract IERC20"
                                                        }
                                                    ],
                                                    "id": 144,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "lValueRequested": false,
                                                    "nodeType": "ElementaryTypeNameExpression",
                                                    "src": "4494:7:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_type$_t_address_$",
                                                        "typeString": "type(address)"
                                                    },
                                                    "typeName": {
                                                        "id": 143,
                                                        "name": "address",
                                                        "nodeType": "ElementaryTypeName",
                                                        "src": "4494:7:0",
                                                        "typeDescriptions": {}
                                                    }
                                                },
                                                "id": 146,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "typeConversion",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "4494:16:0",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            "src": "4476:34:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_bool",
                                                "typeString": "bool"
                                            }
                                        },
                                        "falseBody": {
                                            "id": 163,
                                            "nodeType": "Block",
                                            "src": "4574:315:0",
                                            "statements": [
                                                {
                                                    "expression": {
                                                        "commonType": {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        },
                                                        "id": 161,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "leftExpression": {
                                                            "arguments": [
                                                                {
                                                                    "id": 158,
                                                                    "name": "collateralType",
                                                                    "nodeType": "Identifier",
                                                                    "overloadedDeclarations": [],
                                                                    "referencedDeclaration": 123,
                                                                    "src": "4837:14:0",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_address",
                                                                        "typeString": "address"
                                                                    }
                                                                }
                                                            ],
                                                            "expression": {
                                                                "argumentTypes": [
                                                                    {
                                                                        "typeIdentifier": "t_address",
                                                                        "typeString": "address"
                                                                    }
                                                                ],
                                                                "expression": {
                                                                    "arguments": [
                                                                        {
                                                                            "arguments": [
                                                                                {
                                                                                    "id": 154,
                                                                                    "name": "wrapped",
                                                                                    "nodeType": "Identifier",
                                                                                    "overloadedDeclarations": [],
                                                                                    "referencedDeclaration": 578,
                                                                                    "src": "4809:7:0",
                                                                                    "typeDescriptions": {
                                                                                        "typeIdentifier": "t_contract$_IERC20_$1746",
                                                                                        "typeString": "contract IERC20"
                                                                                    }
                                                                                }
                                                                            ],
                                                                            "expression": {
                                                                                "argumentTypes": [
                                                                                    {
                                                                                        "typeIdentifier": "t_contract$_IERC20_$1746",
                                                                                        "typeString": "contract IERC20"
                                                                                    }
                                                                                ],
                                                                                "id": 153,
                                                                                "isConstant": false,
                                                                                "isLValue": false,
                                                                                "isPure": true,
                                                                                "lValueRequested": false,
                                                                                "nodeType": "ElementaryTypeNameExpression",
                                                                                "src": "4801:7:0",
                                                                                "typeDescriptions": {
                                                                                    "typeIdentifier": "t_type$_t_address_$",
                                                                                    "typeString": "type(address)"
                                                                                },
                                                                                "typeName": {
                                                                                    "id": 152,
                                                                                    "name": "address",
                                                                                    "nodeType": "ElementaryTypeName",
                                                                                    "src": "4801:7:0",
                                                                                    "typeDescriptions": {}
                                                                                }
                                                                            },
                                                                            "id": 155,
                                                                            "isConstant": false,
                                                                            "isLValue": false,
                                                                            "isPure": false,
                                                                            "kind": "typeConversion",
                                                                            "lValueRequested": false,
                                                                            "names": [],
                                                                            "nodeType": "FunctionCall",
                                                                            "src": "4801:16:0",
                                                                            "tryCall": false,
                                                                            "typeDescriptions": {
                                                                                "typeIdentifier": "t_address",
                                                                                "typeString": "address"
                                                                            }
                                                                        }
                                                                    ],
                                                                    "expression": {
                                                                        "argumentTypes": [
                                                                            {
                                                                                "typeIdentifier": "t_address",
                                                                                "typeString": "address"
                                                                            }
                                                                        ],
                                                                        "id": 151,
                                                                        "name": "IRecoverable",
                                                                        "nodeType": "Identifier",
                                                                        "overloadedDeclarations": [],
                                                                        "referencedDeclaration": 202,
                                                                        "src": "4788:12:0",
                                                                        "typeDescriptions": {
                                                                            "typeIdentifier": "t_type$_t_contract$_IRecoverable_$202_$",
                                                                            "typeString": "type(contract IRecoverable)"
                                                                        }
                                                                    },
                                                                    "id": 156,
                                                                    "isConstant": false,
                                                                    "isLValue": false,
                                                                    "isPure": false,
                                                                    "kind": "typeConversion",
                                                                    "lValueRequested": false,
                                                                    "names": [],
                                                                    "nodeType": "FunctionCall",
                                                                    "src": "4788:30:0",
                                                                    "tryCall": false,
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_contract$_IRecoverable_$202",
                                                                        "typeString": "contract IRecoverable"
                                                                    }
                                                                },
                                                                "id": 157,
                                                                "isConstant": false,
                                                                "isLValue": false,
                                                                "isPure": false,
                                                                "lValueRequested": false,
                                                                "memberName": "getCollateralRate",
                                                                "nodeType": "MemberAccess",
                                                                "referencedDeclaration": 196,
                                                                "src": "4788:48:0",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                                                    "typeString": "function (address) view external returns (uint256)"
                                                                }
                                                            },
                                                            "id": 159,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": false,
                                                            "kind": "functionCall",
                                                            "lValueRequested": false,
                                                            "names": [],
                                                            "nodeType": "FunctionCall",
                                                            "src": "4788:64:0",
                                                            "tryCall": false,
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_uint256",
                                                                "typeString": "uint256"
                                                            }
                                                        },
                                                        "nodeType": "BinaryOperation",
                                                        "operator": "*",
                                                        "rightExpression": {
                                                            "id": 160,
                                                            "name": "unwrapConversionFactor",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 590,
                                                            "src": "4855:22:0",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_uint256",
                                                                "typeString": "uint256"
                                                            }
                                                        },
                                                        "src": "4788:89:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        }
                                                    },
                                                    "functionReturnParameters": 128,
                                                    "id": 162,
                                                    "nodeType": "Return",
                                                    "src": "4781:96:0"
                                                }
                                            ]
                                        },
                                        "id": 164,
                                        "nodeType": "IfStatement",
                                        "src": "4472:417:0",
                                        "trueBody": {
                                            "id": 150,
                                            "nodeType": "Block",
                                            "src": "4512:56:0",
                                            "statements": [
                                                {
                                                    "expression": {
                                                        "id": 148,
                                                        "name": "unwrapConversionFactor",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 590,
                                                        "src": "4534:22:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        }
                                                    },
                                                    "functionReturnParameters": 128,
                                                    "id": 149,
                                                    "nodeType": "Return",
                                                    "src": "4527:29:0"
                                                }
                                            ]
                                        }
                                    },
                                    "id": 165,
                                    "nodeType": "IfStatement",
                                    "src": "4414:475:0",
                                    "trueBody": {
                                        "id": 141,
                                        "nodeType": "Block",
                                        "src": "4428:38:0",
                                        "statements": [
                                            {
                                                "expression": {
                                                    "id": 139,
                                                    "name": "rate",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 130,
                                                    "src": "4450:4:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    }
                                                },
                                                "functionReturnParameters": 128,
                                                "id": 140,
                                                "nodeType": "Return",
                                                "src": "4443:11:0"
                                            }
                                        ]
                                    }
                                }
                            ]
                        },
                        "functionSelector": "77e071ad",
                        "id": 167,
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [],
                        "name": "getCollateralRate",
                        "nameLocation": "4257:17:0",
                        "nodeType": "FunctionDefinition",
                        "overrides": {
                            "id": 125,
                            "nodeType": "OverrideSpecifier",
                            "overrides": [],
                            "src": "4311:8:0"
                        },
                        "parameters": {
                            "id": 124,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 123,
                                    "mutability": "mutable",
                                    "name": "collateralType",
                                    "nameLocation": "4283:14:0",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 167,
                                    "src": "4275:22:0",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                    },
                                    "typeName": {
                                        "id": 122,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "4275:7:0",
                                        "stateMutability": "nonpayable",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "4274:24:0"
                        },
                        "returnParameters": {
                            "id": 128,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 127,
                                    "mutability": "mutable",
                                    "name": "",
                                    "nameLocation": "-1:-1:-1",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 167,
                                    "src": "4329:7:0",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                    },
                                    "typeName": {
                                        "id": 126,
                                        "name": "uint256",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "4329:7:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "4328:9:0"
                        },
                        "scope": 189,
                        "src": "4248:648:0",
                        "stateMutability": "view",
                        "virtual": false,
                        "visibility": "public"
                    },
                    {
                        "baseFunctions": [
                            565,
                            1035
                        ],
                        "body": {
                            "id": 187,
                            "nodeType": "Block",
                            "src": "5025:63:0",
                            "statements": [
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "id": 182,
                                                "name": "from",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 169,
                                                "src": "5063:4:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            {
                                                "id": 183,
                                                "name": "to",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 171,
                                                "src": "5069:2:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            {
                                                "id": 184,
                                                "name": "amount",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 173,
                                                "src": "5073:6:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                },
                                                {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                },
                                                {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            ],
                                            "expression": {
                                                "id": 179,
                                                "name": "super",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 4294967271,
                                                "src": "5036:5:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_type$_t_super$_DraggableShares_$189_$",
                                                    "typeString": "type(contract super DraggableShares)"
                                                }
                                            },
                                            "id": 181,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "_beforeTokenTransfer",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 1035,
                                            "src": "5036:26:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                                                "typeString": "function (address,address,uint256)"
                                            }
                                        },
                                        "id": 185,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "5036:44:0",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 186,
                                    "nodeType": "ExpressionStatement",
                                    "src": "5036:44:0"
                                }
                            ]
                        },
                        "id": 188,
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [],
                        "name": "_beforeTokenTransfer",
                        "nameLocation": "4913:20:0",
                        "nodeType": "FunctionDefinition",
                        "overrides": {
                            "id": 177,
                            "nodeType": "OverrideSpecifier",
                            "overrides": [
                                {
                                    "id": 175,
                                    "name": "ERC20Draggable",
                                    "nodeType": "IdentifierPath",
                                    "referencedDeclaration": 1052,
                                    "src": "4993:14:0"
                                },
                                {
                                    "id": 176,
                                    "name": "ERC20",
                                    "nodeType": "IdentifierPath",
                                    "referencedDeclaration": 566,
                                    "src": "5009:5:0"
                                }
                            ],
                            "src": "4984:31:0"
                        },
                        "parameters": {
                            "id": 174,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 169,
                                    "mutability": "mutable",
                                    "name": "from",
                                    "nameLocation": "4942:4:0",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 188,
                                    "src": "4934:12:0",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                    },
                                    "typeName": {
                                        "id": 168,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "4934:7:0",
                                        "stateMutability": "nonpayable",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 171,
                                    "mutability": "mutable",
                                    "name": "to",
                                    "nameLocation": "4956:2:0",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 188,
                                    "src": "4948:10:0",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                    },
                                    "typeName": {
                                        "id": 170,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "4948:7:0",
                                        "stateMutability": "nonpayable",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 173,
                                    "mutability": "mutable",
                                    "name": "amount",
                                    "nameLocation": "4968:6:0",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 188,
                                    "src": "4960:14:0",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                    },
                                    "typeName": {
                                        "id": 172,
                                        "name": "uint256",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "4960:7:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "4933:42:0"
                        },
                        "returnParameters": {
                            "id": 178,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "5025:0:0"
                        },
                        "scope": 189,
                        "src": "4904:184:0",
                        "stateMutability": "nonpayable",
                        "virtual": true,
                        "visibility": "internal"
                    }
                ],
                "scope": 203,
                "src": "3008:2085:0",
                "usedErrors": []
            },
            {
                "abstract": true,
                "baseContracts": [],
                "contractDependencies": [],
                "contractKind": "contract",
                "fullyImplemented": false,
                "id": 202,
                "linearizedBaseContracts": [
                    202
                ],
                "name": "IRecoverable",
                "nameLocation": "5115:12:0",
                "nodeType": "ContractDefinition",
                "nodes": [
                    {
                        "functionSelector": "77e071ad",
                        "id": 196,
                        "implemented": false,
                        "kind": "function",
                        "modifiers": [],
                        "name": "getCollateralRate",
                        "nameLocation": "5144:17:0",
                        "nodeType": "FunctionDefinition",
                        "parameters": {
                            "id": 192,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 191,
                                    "mutability": "mutable",
                                    "name": "",
                                    "nameLocation": "-1:-1:-1",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 196,
                                    "src": "5162:7:0",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                    },
                                    "typeName": {
                                        "id": 190,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "5162:7:0",
                                        "stateMutability": "nonpayable",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "5161:9:0"
                        },
                        "returnParameters": {
                            "id": 195,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 194,
                                    "mutability": "mutable",
                                    "name": "",
                                    "nameLocation": "-1:-1:-1",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 196,
                                    "src": "5200:7:0",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                    },
                                    "typeName": {
                                        "id": 193,
                                        "name": "uint256",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "5200:7:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "5199:9:0"
                        },
                        "scope": 202,
                        "src": "5135:74:0",
                        "stateMutability": "view",
                        "virtual": true,
                        "visibility": "public"
                    },
                    {
                        "functionSelector": "2a0a4ed5",
                        "id": 201,
                        "implemented": false,
                        "kind": "function",
                        "modifiers": [],
                        "name": "getClaimDeleter",
                        "nameLocation": "5224:15:0",
                        "nodeType": "FunctionDefinition",
                        "parameters": {
                            "id": 197,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "5239:2:0"
                        },
                        "returnParameters": {
                            "id": 200,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 199,
                                    "mutability": "mutable",
                                    "name": "",
                                    "nameLocation": "-1:-1:-1",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 201,
                                    "src": "5271:7:0",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                    },
                                    "typeName": {
                                        "id": 198,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "5271:7:0",
                                        "stateMutability": "nonpayable",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "5270:9:0"
                        },
                        "scope": 202,
                        "src": "5215:65:0",
                        "stateMutability": "view",
                        "virtual": true,
                        "visibility": "public"
                    }
                ],
                "scope": 203,
                "src": "5097:186:0",
                "usedErrors": []
            }
        ],
        "src": "1336:3949:0"
    },
    "functionHashes": {
        "allowance(address,address)": "dd62ed3e",
        "approve(address,uint256)": "095ea7b3",
        "balanceOf(address)": "70a08231",
        "burn(uint256)": "42966c68",
        "claimPeriod()": "7dc2cd98",
        "claims(address)": "c6788bdd",
        "clearClaim()": "6b03ed5f",
        "customCollateralAddress()": "0c6f0e5d",
        "customCollateralRate()": "60918117",
        "decimals()": "313ce567",
        "declareLost(address,address)": "26773ddd",
        "deleteClaim(address)": "32a7ae95",
        "disableRecovery()": "8ff8831b",
        "drag(address,address)": "fcb79a7e",
        "factory()": "c45a0155",
        "getClaimDeleter()": "2a0a4ed5",
        "getClaimant(address)": "1e3b9de5",
        "getCollateral(address)": "9b56d6c9",
        "getCollateralRate(address)": "77e071ad",
        "getCollateralType(address)": "3bcc45ba",
        "getTimeStamp(address)": "eb470ebf",
        "isBinding()": "9e4b5745",
        "isRecoveryEnabled(address)": "a3ec1883",
        "makeAcquisitionOffer(bytes32,uint256,address)": "dcc7d4ad",
        "migrate()": "8fd3ab80",
        "name()": "06fdde03",
        "notifyOfferEnded()": "32bc320b",
        "offer()": "c028df06",
        "onTokenTransfer(address,uint256,bytes)": "a4c0ed36",
        "quorum()": "1703a018",
        "recover(address)": "0cd865ec",
        "recoveryDisabled(address)": "b40e80d1",
        "setRecoverable(bool)": "6427ed97",
        "symbol()": "95d89b41",
        "terms()": "d5025625",
        "totalSupply()": "18160ddd",
        "transfer(address,uint256)": "a9059cbb",
        "transferAndCall(address,uint256,bytes)": "4000aea0",
        "transferFrom(address,address,uint256)": "23b872dd",
        "unwrap(uint256)": "de0e9a3e",
        "unwrapConversionFactor()": "0832e470",
        "votePeriod()": "a7813587",
        "wrap(address,uint256)": "bf376c7a",
        "wrapped()": "50e70d48"
    },
    "gasEstimates": {
        "creation": {
            "codeDepositCost": "1966600",
            "executionCost": "infinite",
            "totalCost": "infinite"
        },
        "external": {
            "allowance(address,address)": "infinite",
            "approve(address,uint256)": "24623",
            "balanceOf(address)": "2689",
            "burn(uint256)": "infinite",
            "claimPeriod()": "263",
            "claims(address)": "9108",
            "clearClaim()": "infinite",
            "customCollateralAddress()": "2450",
            "customCollateralRate()": "2384",
            "decimals()": "2359",
            "declareLost(address,address)": "infinite",
            "deleteClaim(address)": "infinite",
            "disableRecovery()": "infinite",
            "drag(address,address)": "infinite",
            "factory()": "327",
            "getClaimDeleter()": "infinite",
            "getClaimant(address)": "2651",
            "getCollateral(address)": "2582",
            "getCollateralRate(address)": "infinite",
            "getCollateralType(address)": "2679",
            "getTimeStamp(address)": "2669",
            "isBinding()": "2368",
            "isRecoveryEnabled(address)": "2635",
            "makeAcquisitionOffer(bytes32,uint256,address)": "infinite",
            "migrate()": "infinite",
            "name()": "infinite",
            "notifyOfferEnded()": "26607",
            "offer()": "2426",
            "onTokenTransfer(address,uint256,bytes)": "infinite",
            "quorum()": "2341",
            "recover(address)": "infinite",
            "recoveryDisabled(address)": "2570",
            "setRecoverable(bool)": "24687",
            "symbol()": "infinite",
            "terms()": "infinite",
            "totalSupply()": "2360",
            "transfer(address,uint256)": "infinite",
            "transferAndCall(address,uint256,bytes)": "infinite",
            "transferFrom(address,address,uint256)": "infinite",
            "unwrap(uint256)": "infinite",
            "unwrapConversionFactor()": "2364",
            "votePeriod()": "2428",
            "wrap(address,uint256)": "infinite",
            "wrapped()": "2404"
        },
        "internal": {
            "_beforeTokenTransfer(address,address,uint256)": "infinite"
        }
    }
}