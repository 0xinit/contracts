{
    "contracts": {
        "c:/Users/luziu/Documents/aktionariat/contracts/src/Acquisition.sol": {
            "Acquisition": {
                "abi": [
                    {
                        "inputs": [
                            {
                                "internalType": "address payable",
                                "name": "buyer_",
                                "type": "address"
                            },
                            {
                                "internalType": "address",
                                "name": "currency_",
                                "type": "address"
                            },
                            {
                                "internalType": "uint256",
                                "name": "price_",
                                "type": "uint256"
                            },
                            {
                                "internalType": "uint256",
                                "name": "quorum_",
                                "type": "uint256"
                            }
                        ],
                        "stateMutability": "nonpayable",
                        "type": "constructor"
                    },
                    {
                        "anonymous": false,
                        "inputs": [
                            {
                                "indexed": false,
                                "internalType": "uint256",
                                "name": "newYesVotes",
                                "type": "uint256"
                            },
                            {
                                "indexed": false,
                                "internalType": "uint256",
                                "name": "newNoVotes",
                                "type": "uint256"
                            }
                        ],
                        "name": "VotesChanged",
                        "type": "event"
                    },
                    {
                        "inputs": [],
                        "name": "VALIDITY_PERIOD",
                        "outputs": [
                            {
                                "internalType": "uint256",
                                "name": "",
                                "type": "uint256"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "inputs": [],
                        "name": "VOTING_PERIOD",
                        "outputs": [
                            {
                                "internalType": "uint256",
                                "name": "",
                                "type": "uint256"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "from",
                                "type": "address"
                            },
                            {
                                "internalType": "address",
                                "name": "to",
                                "type": "address"
                            },
                            {
                                "internalType": "uint256",
                                "name": "value",
                                "type": "uint256"
                            }
                        ],
                        "name": "adjustVotes",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "inputs": [],
                        "name": "buyer",
                        "outputs": [
                            {
                                "internalType": "address payable",
                                "name": "",
                                "type": "address"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "inputs": [],
                        "name": "currency",
                        "outputs": [
                            {
                                "internalType": "address",
                                "name": "",
                                "type": "address"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "inputs": [],
                        "name": "hasExpired",
                        "outputs": [
                            {
                                "internalType": "bool",
                                "name": "",
                                "type": "bool"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "voter",
                                "type": "address"
                            }
                        ],
                        "name": "hasVotedNo",
                        "outputs": [
                            {
                                "internalType": "bool",
                                "name": "",
                                "type": "bool"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "voter",
                                "type": "address"
                            }
                        ],
                        "name": "hasVotedYes",
                        "outputs": [
                            {
                                "internalType": "bool",
                                "name": "",
                                "type": "bool"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "inputs": [],
                        "name": "isQuorumReached",
                        "outputs": [
                            {
                                "internalType": "bool",
                                "name": "",
                                "type": "bool"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "inputs": [],
                        "name": "isVotingOpen",
                        "outputs": [
                            {
                                "internalType": "bool",
                                "name": "",
                                "type": "bool"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "uint256",
                                "name": "sharesToAcquire",
                                "type": "uint256"
                            }
                        ],
                        "name": "isWellFunded",
                        "outputs": [
                            {
                                "internalType": "bool",
                                "name": "",
                                "type": "bool"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "inputs": [],
                        "name": "kill",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "inputs": [],
                        "name": "noVotes",
                        "outputs": [
                            {
                                "internalType": "uint256",
                                "name": "",
                                "type": "uint256"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "inputs": [],
                        "name": "price",
                        "outputs": [
                            {
                                "internalType": "uint256",
                                "name": "",
                                "type": "uint256"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "inputs": [],
                        "name": "quorum",
                        "outputs": [
                            {
                                "internalType": "uint256",
                                "name": "",
                                "type": "uint256"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "inputs": [],
                        "name": "quorumHasFailed",
                        "outputs": [
                            {
                                "internalType": "bool",
                                "name": "",
                                "type": "bool"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "inputs": [],
                        "name": "timestamp",
                        "outputs": [
                            {
                                "internalType": "uint256",
                                "name": "",
                                "type": "uint256"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "sender",
                                "type": "address"
                            },
                            {
                                "internalType": "uint256",
                                "name": "votes_",
                                "type": "uint256"
                            }
                        ],
                        "name": "voteNo",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "sender",
                                "type": "address"
                            },
                            {
                                "internalType": "uint256",
                                "name": "votes_",
                                "type": "uint256"
                            }
                        ],
                        "name": "voteYes",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "inputs": [],
                        "name": "yesVotes",
                        "outputs": [
                            {
                                "internalType": "uint256",
                                "name": "",
                                "type": "uint256"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    }
                ],
                "devdoc": {
                    "author": "Benjamin Rickenbacher, b.rickenbacher@intergga.chLuzius Meisser, luzius@meissereconomics.com",
                    "kind": "dev",
                    "methods": {},
                    "title": "Acquisition Attempt",
                    "version": 1
                },
                "evm": {
                    "bytecode": {
                        "linkReferences": {},
                        "object": "608060405234801561001057600080fd5b50604051610be9380380610be98339818101604052608081101561003357600080fd5b50805160208201516040830151606090930151919290918161008c576040805162461bcd60e51b815260206004820152600d60248201526c696e76616c696420707269636560981b604482015290519081900360640190fd5b600180546001600160a01b03199081163317909155600280546001600160a01b03968716908316179055600380549490951693169290921790925560049190915560005542600555610b06806100e36000396000f3fe608060405234801561001057600080fd5b506004361061012c5760003560e01c8063b1610d7e116100ad578063cf42a92711610071578063cf42a927146102b4578063d7be4e29146102bc578063e5a6b10f146102c4578063fa7f1bae146102cc578063fb286c65146102d45761012c565b8063b1610d7e14610249578063b28fa15214610251578063b5b47f421461026e578063b80777ea14610276578063c4814fae1461027e5761012c565b80635ff0cf84116100f45780635ff0cf84146101c35780637150d8ae146101ef5780638f1b4c6f1461021357806390e64d1314610239578063a035b1fe146102415761012c565b80630c43cd88146101315780631703a0181461014b57806341c0e1b514610153578063448ab4c61461015d5780634b91562e14610197575b600080fd5b6101396102dc565b60408051918252519081900360200190f35b6101396102e3565b61015b6102e9565b005b6101836004803603602081101561017357600080fd5b50356001600160a01b0316610343565b604080519115158252519081900360200190f35b61015b600480360360408110156101ad57600080fd5b506001600160a01b038135169060200135610376565b61015b600480360360408110156101d957600080fd5b506001600160a01b038135169060200135610421565b6101f76104c8565b604080516001600160a01b039092168252519081900360200190f35b6101836004803603602081101561022957600080fd5b50356001600160a01b03166104d7565b6101836104e0565b610139610504565b61013961050a565b6101836004803603602081101561026757600080fd5b5035610511565b61013961064e565b610139610654565b61015b6004803603606081101561029457600080fd5b506001600160a01b0381358116916020810135909116906040013561065a565b6101836106f0565b61018361083b565b6101f76108f4565b610183610903565b610139610927565b6276a70081565b60005481565b6001546001600160a01b03163314610335576040805162461bcd60e51b815260206004820152600a6024820152691b9bdd081c185c995b9d60b21b604482015290519081900360640190fd5b6002546001600160a01b0316ff5b600060015b6001600160a01b03831660009081526008602052604090205460ff16600281111561036f57fe5b1492915050565b6001546001600160a01b031633146103c2576040805162461bcd60e51b815260206004820152600a6024820152691b9bdd081c185c995b9d60b21b604482015290519081900360640190fd5b6103ca610903565b610411576040805162461bcd60e51b81526020600482015260136024820152722a3432903b37ba32903430b99032b73232b21760691b604482015290519081900360640190fd5b61041d6002828461092d565b5050565b6001546001600160a01b0316331461046d576040805162461bcd60e51b815260206004820152600a6024820152691b9bdd081c185c995b9d60b21b604482015290519081900360640190fd5b610475610903565b6104bc576040805162461bcd60e51b81526020600482015260136024820152722a3432903b37ba32903430b99032b73232b21760691b604482015290519081900360640190fd5b61041d6001828461092d565b6002546001600160a01b031681565b60006002610348565b6000806104f86005544261097390919063ffffffff16565b6276a700109150505b90565b60045481565b624f1a0081565b600354600254604080516370a0823160e01b81526001600160a01b03928316600482015290516000939290921691839183916370a0823191602480820192602092909190829003018186803b15801561056957600080fd5b505afa15801561057d573d6000803e3d6000fd5b505050506040513d602081101561059357600080fd5b505160025460015460408051636eb1769f60e11b81526001600160a01b0393841660048201529183166024830152519293506000929185169163dd62ed3e91604480820192602092909190829003018186803b1580156105f257600080fd5b505afa158015610606573d6000803e3d6000fd5b505050506040513d602081101561061c57600080fd5b505160045490915060009061063290879061098a565b90508281111580156106445750818111155b9695505050505050565b60065481565b60055481565b6001546001600160a01b031633146106a6576040805162461bcd60e51b815260206004820152600a6024820152691b9bdd081c185c995b9d60b21b604482015290519081900360640190fd5b6106ae610903565b156106eb576001600160a01b0380841660009081526008602052604080822054928516825290205460ff91821691166106e88282856109af565b50505b505050565b60006106fa610903565b1561080f57600054600154604080516318160ddd60e01b81529051610807926001600160a01b0316916318160ddd916004808301926020929190829003018186803b15801561074857600080fd5b505afa15801561075c573d6000803e3d6000fd5b505050506040513d602081101561077257600080fd5b5051600654600154604080516318160ddd60e01b8152905161080193612710936107fb9391926001600160a01b03909116916318160ddd916004808301926020929190829003018186803b1580156107c957600080fd5b505afa1580156107dd573d6000803e3d6000fd5b505050506040513d60208110156107f357600080fd5b505190610973565b9061098a565b90610ab0565b109050610501565b60005461080761082c600654600754610ac390919063ffffffff16565b6007546108019061271061098a565b6000610845610903565b156108d757600054600154604080516318160ddd60e01b815290516108ce926001600160a01b0316916318160ddd916004808301926020929190829003018186803b15801561089357600080fd5b505afa1580156108a7573d6000803e3d6000fd5b505050506040513d60208110156108bd57600080fd5b50516007546108019061271061098a565b10159050610501565b6000546108ce61082c600654600754610ac390919063ffffffff16565b6003546001600160a01b031681565b60008061091b6005544261097390919063ffffffff16565b624f1a00101591505090565b60075481565b6001600160a01b0381166000908152600860205260409020805460ff811691859182919060ff1916600183600281111561096357fe5b02179055506106e88282866109af565b60008282111561097f57fe5b508082035b92915050565b60008261099957506000610984565b50818102818382816109a757fe5b041461098457fe5b8160028111156109bb57fe5b8360028111156109c757fe5b146106eb5760028360028111156109da57fe5b14156109f5576006546109ed9082610973565b600655610a1a565b6001836002811115610a0357fe5b1415610a1a57600754610a169082610973565b6007555b6002826002811115610a2857fe5b1415610a4357600654610a3b9082610ac3565b600655610a68565b6001826002811115610a5157fe5b1415610a6857600754610a649082610ac3565b6007555b7f8fcc50c2c4edd06d51ae66e9e21ed76b32a1766c57f491788e1aa24a1b58c256600754600654604051808381526020018281526020019250505060405180910390a1505050565b6000818381610abb57fe5b049392505050565b8181018281101561098457fefea264697066735822122003198c9707537ce5959b3e8267a2b8a721cc26a72203a7d67ca0a492033fb5a264736f6c63430007010033",
                        "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0xBE9 CODESIZE SUB DUP1 PUSH2 0xBE9 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE PUSH1 0x80 DUP2 LT ISZERO PUSH2 0x33 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 MLOAD PUSH1 0x20 DUP3 ADD MLOAD PUSH1 0x40 DUP4 ADD MLOAD PUSH1 0x60 SWAP1 SWAP4 ADD MLOAD SWAP2 SWAP3 SWAP1 SWAP2 DUP2 PUSH2 0x8C JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x696E76616C6964207072696365 PUSH1 0x98 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND CALLER OR SWAP1 SWAP2 SSTORE PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP7 DUP8 AND SWAP1 DUP4 AND OR SWAP1 SSTORE PUSH1 0x3 DUP1 SLOAD SWAP5 SWAP1 SWAP6 AND SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP3 SSTORE PUSH1 0x4 SWAP2 SWAP1 SWAP2 SSTORE PUSH1 0x0 SSTORE TIMESTAMP PUSH1 0x5 SSTORE PUSH2 0xB06 DUP1 PUSH2 0xE3 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x12C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xB1610D7E GT PUSH2 0xAD JUMPI DUP1 PUSH4 0xCF42A927 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xCF42A927 EQ PUSH2 0x2B4 JUMPI DUP1 PUSH4 0xD7BE4E29 EQ PUSH2 0x2BC JUMPI DUP1 PUSH4 0xE5A6B10F EQ PUSH2 0x2C4 JUMPI DUP1 PUSH4 0xFA7F1BAE EQ PUSH2 0x2CC JUMPI DUP1 PUSH4 0xFB286C65 EQ PUSH2 0x2D4 JUMPI PUSH2 0x12C JUMP JUMPDEST DUP1 PUSH4 0xB1610D7E EQ PUSH2 0x249 JUMPI DUP1 PUSH4 0xB28FA152 EQ PUSH2 0x251 JUMPI DUP1 PUSH4 0xB5B47F42 EQ PUSH2 0x26E JUMPI DUP1 PUSH4 0xB80777EA EQ PUSH2 0x276 JUMPI DUP1 PUSH4 0xC4814FAE EQ PUSH2 0x27E JUMPI PUSH2 0x12C JUMP JUMPDEST DUP1 PUSH4 0x5FF0CF84 GT PUSH2 0xF4 JUMPI DUP1 PUSH4 0x5FF0CF84 EQ PUSH2 0x1C3 JUMPI DUP1 PUSH4 0x7150D8AE EQ PUSH2 0x1EF JUMPI DUP1 PUSH4 0x8F1B4C6F EQ PUSH2 0x213 JUMPI DUP1 PUSH4 0x90E64D13 EQ PUSH2 0x239 JUMPI DUP1 PUSH4 0xA035B1FE EQ PUSH2 0x241 JUMPI PUSH2 0x12C JUMP JUMPDEST DUP1 PUSH4 0xC43CD88 EQ PUSH2 0x131 JUMPI DUP1 PUSH4 0x1703A018 EQ PUSH2 0x14B JUMPI DUP1 PUSH4 0x41C0E1B5 EQ PUSH2 0x153 JUMPI DUP1 PUSH4 0x448AB4C6 EQ PUSH2 0x15D JUMPI DUP1 PUSH4 0x4B91562E EQ PUSH2 0x197 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x139 PUSH2 0x2DC JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x139 PUSH2 0x2E3 JUMP JUMPDEST PUSH2 0x15B PUSH2 0x2E9 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x183 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x173 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x343 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x15B PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x1AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x376 JUMP JUMPDEST PUSH2 0x15B PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x1D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x421 JUMP JUMPDEST PUSH2 0x1F7 PUSH2 0x4C8 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x183 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x229 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x4D7 JUMP JUMPDEST PUSH2 0x183 PUSH2 0x4E0 JUMP JUMPDEST PUSH2 0x139 PUSH2 0x504 JUMP JUMPDEST PUSH2 0x139 PUSH2 0x50A JUMP JUMPDEST PUSH2 0x183 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x267 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x511 JUMP JUMPDEST PUSH2 0x139 PUSH2 0x64E JUMP JUMPDEST PUSH2 0x139 PUSH2 0x654 JUMP JUMPDEST PUSH2 0x15B PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x294 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH2 0x65A JUMP JUMPDEST PUSH2 0x183 PUSH2 0x6F0 JUMP JUMPDEST PUSH2 0x183 PUSH2 0x83B JUMP JUMPDEST PUSH2 0x1F7 PUSH2 0x8F4 JUMP JUMPDEST PUSH2 0x183 PUSH2 0x903 JUMP JUMPDEST PUSH2 0x139 PUSH2 0x927 JUMP JUMPDEST PUSH3 0x76A700 DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x335 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xA PUSH1 0x24 DUP3 ADD MSTORE PUSH10 0x1B9BDD081C185C995B9D PUSH1 0xB2 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SELFDESTRUCT JUMPDEST PUSH1 0x0 PUSH1 0x1 JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x36F JUMPI INVALID JUMPDEST EQ SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x3C2 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xA PUSH1 0x24 DUP3 ADD MSTORE PUSH10 0x1B9BDD081C185C995B9D PUSH1 0xB2 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x3CA PUSH2 0x903 JUMP JUMPDEST PUSH2 0x411 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x2A3432903B37BA32903430B99032B73232B217 PUSH1 0x69 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x41D PUSH1 0x2 DUP3 DUP5 PUSH2 0x92D JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x46D JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xA PUSH1 0x24 DUP3 ADD MSTORE PUSH10 0x1B9BDD081C185C995B9D PUSH1 0xB2 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x475 PUSH2 0x903 JUMP JUMPDEST PUSH2 0x4BC JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x2A3432903B37BA32903430B99032B73232B217 PUSH1 0x69 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x41D PUSH1 0x1 DUP3 DUP5 PUSH2 0x92D JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH2 0x348 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x4F8 PUSH1 0x5 SLOAD TIMESTAMP PUSH2 0x973 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH3 0x76A700 LT SWAP2 POP POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH3 0x4F1A00 DUP2 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x2 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP4 SWAP3 SWAP1 SWAP3 AND SWAP2 DUP4 SWAP2 DUP4 SWAP2 PUSH4 0x70A08231 SWAP2 PUSH1 0x24 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x569 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x57D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x593 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x2 SLOAD PUSH1 0x1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x6EB1769F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP2 DUP4 AND PUSH1 0x24 DUP4 ADD MSTORE MLOAD SWAP3 SWAP4 POP PUSH1 0x0 SWAP3 SWAP2 DUP6 AND SWAP2 PUSH4 0xDD62ED3E SWAP2 PUSH1 0x44 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x5F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x606 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x61C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x4 SLOAD SWAP1 SWAP2 POP PUSH1 0x0 SWAP1 PUSH2 0x632 SWAP1 DUP8 SWAP1 PUSH2 0x98A JUMP JUMPDEST SWAP1 POP DUP3 DUP2 GT ISZERO DUP1 ISZERO PUSH2 0x644 JUMPI POP DUP2 DUP2 GT ISZERO JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x6A6 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xA PUSH1 0x24 DUP3 ADD MSTORE PUSH10 0x1B9BDD081C185C995B9D PUSH1 0xB2 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x6AE PUSH2 0x903 JUMP JUMPDEST ISZERO PUSH2 0x6EB JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SLOAD SWAP3 DUP6 AND DUP3 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF SWAP2 DUP3 AND SWAP2 AND PUSH2 0x6E8 DUP3 DUP3 DUP6 PUSH2 0x9AF JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6FA PUSH2 0x903 JUMP JUMPDEST ISZERO PUSH2 0x80F JUMPI PUSH1 0x0 SLOAD PUSH1 0x1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x18160DDD PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD PUSH2 0x807 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0x18160DDD SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x748 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x75C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x772 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x6 SLOAD PUSH1 0x1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x18160DDD PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD PUSH2 0x801 SWAP4 PUSH2 0x2710 SWAP4 PUSH2 0x7FB SWAP4 SWAP2 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 PUSH4 0x18160DDD SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x7C9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x7DD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x7F3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 PUSH2 0x973 JUMP JUMPDEST SWAP1 PUSH2 0x98A JUMP JUMPDEST SWAP1 PUSH2 0xAB0 JUMP JUMPDEST LT SWAP1 POP PUSH2 0x501 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x807 PUSH2 0x82C PUSH1 0x6 SLOAD PUSH1 0x7 SLOAD PUSH2 0xAC3 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH2 0x801 SWAP1 PUSH2 0x2710 PUSH2 0x98A JUMP JUMPDEST PUSH1 0x0 PUSH2 0x845 PUSH2 0x903 JUMP JUMPDEST ISZERO PUSH2 0x8D7 JUMPI PUSH1 0x0 SLOAD PUSH1 0x1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x18160DDD PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD PUSH2 0x8CE SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0x18160DDD SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x893 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x8A7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x8BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x7 SLOAD PUSH2 0x801 SWAP1 PUSH2 0x2710 PUSH2 0x98A JUMP JUMPDEST LT ISZERO SWAP1 POP PUSH2 0x501 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x8CE PUSH2 0x82C PUSH1 0x6 SLOAD PUSH1 0x7 SLOAD PUSH2 0xAC3 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x91B PUSH1 0x5 SLOAD TIMESTAMP PUSH2 0x973 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH3 0x4F1A00 LT ISZERO SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF DUP2 AND SWAP2 DUP6 SWAP2 DUP3 SWAP2 SWAP1 PUSH1 0xFF NOT AND PUSH1 0x1 DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x963 JUMPI INVALID JUMPDEST MUL OR SWAP1 SSTORE POP PUSH2 0x6E8 DUP3 DUP3 DUP7 PUSH2 0x9AF JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 GT ISZERO PUSH2 0x97F JUMPI INVALID JUMPDEST POP DUP1 DUP3 SUB JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x999 JUMPI POP PUSH1 0x0 PUSH2 0x984 JUMP JUMPDEST POP DUP2 DUP2 MUL DUP2 DUP4 DUP3 DUP2 PUSH2 0x9A7 JUMPI INVALID JUMPDEST DIV EQ PUSH2 0x984 JUMPI INVALID JUMPDEST DUP2 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x9BB JUMPI INVALID JUMPDEST DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x9C7 JUMPI INVALID JUMPDEST EQ PUSH2 0x6EB JUMPI PUSH1 0x2 DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x9DA JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0x9F5 JUMPI PUSH1 0x6 SLOAD PUSH2 0x9ED SWAP1 DUP3 PUSH2 0x973 JUMP JUMPDEST PUSH1 0x6 SSTORE PUSH2 0xA1A JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xA03 JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0xA1A JUMPI PUSH1 0x7 SLOAD PUSH2 0xA16 SWAP1 DUP3 PUSH2 0x973 JUMP JUMPDEST PUSH1 0x7 SSTORE JUMPDEST PUSH1 0x2 DUP3 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xA28 JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0xA43 JUMPI PUSH1 0x6 SLOAD PUSH2 0xA3B SWAP1 DUP3 PUSH2 0xAC3 JUMP JUMPDEST PUSH1 0x6 SSTORE PUSH2 0xA68 JUMP JUMPDEST PUSH1 0x1 DUP3 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xA51 JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0xA68 JUMPI PUSH1 0x7 SLOAD PUSH2 0xA64 SWAP1 DUP3 PUSH2 0xAC3 JUMP JUMPDEST PUSH1 0x7 SSTORE JUMPDEST PUSH32 0x8FCC50C2C4EDD06D51AE66E9E21ED76B32A1766C57F491788E1AA24A1B58C256 PUSH1 0x7 SLOAD PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 DUP2 PUSH2 0xABB JUMPI INVALID JUMPDEST DIV SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP2 DUP2 ADD DUP3 DUP2 LT ISZERO PUSH2 0x984 JUMPI INVALID INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SUB NOT DUP13 SWAP8 SMOD MSTORE8 PUSH29 0xE5959B3E8267A2B8A721CC26A72203A7D67CA0A492033FB5A264736F6C PUSH4 0x43000701 STOP CALLER ",
                        "sourceMap": "1579:5068:0:-:0;;;2781:320;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2781:320:0;;;;;;;;;;;;;;;;;;;2889:10;2881:36;;;;;-1:-1:-1;;;2881:36:0;;;;;;;;;;;;-1:-1:-1;;;2881:36:0;;;;;;;;;;;;;;;2928:6;:19;;2937:10;-1:-1:-1;;;;;;2928:19:0;;;;;;;2958:5;:14;;;;-1:-1:-1;;;;;2958:14:0;;;;;;2983:8;:20;;;;;;;;;;;;;;;;3014:5;:14;;;;-1:-1:-1;3039:16:0;;;3078:15;3066:9;:27;-1:-1:-1;;;;1579:5068:0;;;;"
                    },
                    "deployedBytecode": {
                        "immutableReferences": {},
                        "linkReferences": {},
                        "object": "608060405234801561001057600080fd5b506004361061012c5760003560e01c8063b1610d7e116100ad578063cf42a92711610071578063cf42a927146102b4578063d7be4e29146102bc578063e5a6b10f146102c4578063fa7f1bae146102cc578063fb286c65146102d45761012c565b8063b1610d7e14610249578063b28fa15214610251578063b5b47f421461026e578063b80777ea14610276578063c4814fae1461027e5761012c565b80635ff0cf84116100f45780635ff0cf84146101c35780637150d8ae146101ef5780638f1b4c6f1461021357806390e64d1314610239578063a035b1fe146102415761012c565b80630c43cd88146101315780631703a0181461014b57806341c0e1b514610153578063448ab4c61461015d5780634b91562e14610197575b600080fd5b6101396102dc565b60408051918252519081900360200190f35b6101396102e3565b61015b6102e9565b005b6101836004803603602081101561017357600080fd5b50356001600160a01b0316610343565b604080519115158252519081900360200190f35b61015b600480360360408110156101ad57600080fd5b506001600160a01b038135169060200135610376565b61015b600480360360408110156101d957600080fd5b506001600160a01b038135169060200135610421565b6101f76104c8565b604080516001600160a01b039092168252519081900360200190f35b6101836004803603602081101561022957600080fd5b50356001600160a01b03166104d7565b6101836104e0565b610139610504565b61013961050a565b6101836004803603602081101561026757600080fd5b5035610511565b61013961064e565b610139610654565b61015b6004803603606081101561029457600080fd5b506001600160a01b0381358116916020810135909116906040013561065a565b6101836106f0565b61018361083b565b6101f76108f4565b610183610903565b610139610927565b6276a70081565b60005481565b6001546001600160a01b03163314610335576040805162461bcd60e51b815260206004820152600a6024820152691b9bdd081c185c995b9d60b21b604482015290519081900360640190fd5b6002546001600160a01b0316ff5b600060015b6001600160a01b03831660009081526008602052604090205460ff16600281111561036f57fe5b1492915050565b6001546001600160a01b031633146103c2576040805162461bcd60e51b815260206004820152600a6024820152691b9bdd081c185c995b9d60b21b604482015290519081900360640190fd5b6103ca610903565b610411576040805162461bcd60e51b81526020600482015260136024820152722a3432903b37ba32903430b99032b73232b21760691b604482015290519081900360640190fd5b61041d6002828461092d565b5050565b6001546001600160a01b0316331461046d576040805162461bcd60e51b815260206004820152600a6024820152691b9bdd081c185c995b9d60b21b604482015290519081900360640190fd5b610475610903565b6104bc576040805162461bcd60e51b81526020600482015260136024820152722a3432903b37ba32903430b99032b73232b21760691b604482015290519081900360640190fd5b61041d6001828461092d565b6002546001600160a01b031681565b60006002610348565b6000806104f86005544261097390919063ffffffff16565b6276a700109150505b90565b60045481565b624f1a0081565b600354600254604080516370a0823160e01b81526001600160a01b03928316600482015290516000939290921691839183916370a0823191602480820192602092909190829003018186803b15801561056957600080fd5b505afa15801561057d573d6000803e3d6000fd5b505050506040513d602081101561059357600080fd5b505160025460015460408051636eb1769f60e11b81526001600160a01b0393841660048201529183166024830152519293506000929185169163dd62ed3e91604480820192602092909190829003018186803b1580156105f257600080fd5b505afa158015610606573d6000803e3d6000fd5b505050506040513d602081101561061c57600080fd5b505160045490915060009061063290879061098a565b90508281111580156106445750818111155b9695505050505050565b60065481565b60055481565b6001546001600160a01b031633146106a6576040805162461bcd60e51b815260206004820152600a6024820152691b9bdd081c185c995b9d60b21b604482015290519081900360640190fd5b6106ae610903565b156106eb576001600160a01b0380841660009081526008602052604080822054928516825290205460ff91821691166106e88282856109af565b50505b505050565b60006106fa610903565b1561080f57600054600154604080516318160ddd60e01b81529051610807926001600160a01b0316916318160ddd916004808301926020929190829003018186803b15801561074857600080fd5b505afa15801561075c573d6000803e3d6000fd5b505050506040513d602081101561077257600080fd5b5051600654600154604080516318160ddd60e01b8152905161080193612710936107fb9391926001600160a01b03909116916318160ddd916004808301926020929190829003018186803b1580156107c957600080fd5b505afa1580156107dd573d6000803e3d6000fd5b505050506040513d60208110156107f357600080fd5b505190610973565b9061098a565b90610ab0565b109050610501565b60005461080761082c600654600754610ac390919063ffffffff16565b6007546108019061271061098a565b6000610845610903565b156108d757600054600154604080516318160ddd60e01b815290516108ce926001600160a01b0316916318160ddd916004808301926020929190829003018186803b15801561089357600080fd5b505afa1580156108a7573d6000803e3d6000fd5b505050506040513d60208110156108bd57600080fd5b50516007546108019061271061098a565b10159050610501565b6000546108ce61082c600654600754610ac390919063ffffffff16565b6003546001600160a01b031681565b60008061091b6005544261097390919063ffffffff16565b624f1a00101591505090565b60075481565b6001600160a01b0381166000908152600860205260409020805460ff811691859182919060ff1916600183600281111561096357fe5b02179055506106e88282866109af565b60008282111561097f57fe5b508082035b92915050565b60008261099957506000610984565b50818102818382816109a757fe5b041461098457fe5b8160028111156109bb57fe5b8360028111156109c757fe5b146106eb5760028360028111156109da57fe5b14156109f5576006546109ed9082610973565b600655610a1a565b6001836002811115610a0357fe5b1415610a1a57600754610a169082610973565b6007555b6002826002811115610a2857fe5b1415610a4357600654610a3b9082610ac3565b600655610a68565b6001826002811115610a5157fe5b1415610a6857600754610a649082610ac3565b6007555b7f8fcc50c2c4edd06d51ae66e9e21ed76b32a1766c57f491788e1aa24a1b58c256600754600654604051808381526020018281526020019250505060405180910390a1505050565b6000818381610abb57fe5b049392505050565b8181018281101561098457fefea264697066735822122003198c9707537ce5959b3e8267a2b8a721cc26a72203a7d67ca0a492033fb5a264736f6c63430007010033",
                        "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x12C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xB1610D7E GT PUSH2 0xAD JUMPI DUP1 PUSH4 0xCF42A927 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xCF42A927 EQ PUSH2 0x2B4 JUMPI DUP1 PUSH4 0xD7BE4E29 EQ PUSH2 0x2BC JUMPI DUP1 PUSH4 0xE5A6B10F EQ PUSH2 0x2C4 JUMPI DUP1 PUSH4 0xFA7F1BAE EQ PUSH2 0x2CC JUMPI DUP1 PUSH4 0xFB286C65 EQ PUSH2 0x2D4 JUMPI PUSH2 0x12C JUMP JUMPDEST DUP1 PUSH4 0xB1610D7E EQ PUSH2 0x249 JUMPI DUP1 PUSH4 0xB28FA152 EQ PUSH2 0x251 JUMPI DUP1 PUSH4 0xB5B47F42 EQ PUSH2 0x26E JUMPI DUP1 PUSH4 0xB80777EA EQ PUSH2 0x276 JUMPI DUP1 PUSH4 0xC4814FAE EQ PUSH2 0x27E JUMPI PUSH2 0x12C JUMP JUMPDEST DUP1 PUSH4 0x5FF0CF84 GT PUSH2 0xF4 JUMPI DUP1 PUSH4 0x5FF0CF84 EQ PUSH2 0x1C3 JUMPI DUP1 PUSH4 0x7150D8AE EQ PUSH2 0x1EF JUMPI DUP1 PUSH4 0x8F1B4C6F EQ PUSH2 0x213 JUMPI DUP1 PUSH4 0x90E64D13 EQ PUSH2 0x239 JUMPI DUP1 PUSH4 0xA035B1FE EQ PUSH2 0x241 JUMPI PUSH2 0x12C JUMP JUMPDEST DUP1 PUSH4 0xC43CD88 EQ PUSH2 0x131 JUMPI DUP1 PUSH4 0x1703A018 EQ PUSH2 0x14B JUMPI DUP1 PUSH4 0x41C0E1B5 EQ PUSH2 0x153 JUMPI DUP1 PUSH4 0x448AB4C6 EQ PUSH2 0x15D JUMPI DUP1 PUSH4 0x4B91562E EQ PUSH2 0x197 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x139 PUSH2 0x2DC JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x139 PUSH2 0x2E3 JUMP JUMPDEST PUSH2 0x15B PUSH2 0x2E9 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x183 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x173 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x343 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x15B PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x1AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x376 JUMP JUMPDEST PUSH2 0x15B PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x1D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x421 JUMP JUMPDEST PUSH2 0x1F7 PUSH2 0x4C8 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x183 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x229 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x4D7 JUMP JUMPDEST PUSH2 0x183 PUSH2 0x4E0 JUMP JUMPDEST PUSH2 0x139 PUSH2 0x504 JUMP JUMPDEST PUSH2 0x139 PUSH2 0x50A JUMP JUMPDEST PUSH2 0x183 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x267 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x511 JUMP JUMPDEST PUSH2 0x139 PUSH2 0x64E JUMP JUMPDEST PUSH2 0x139 PUSH2 0x654 JUMP JUMPDEST PUSH2 0x15B PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x294 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH2 0x65A JUMP JUMPDEST PUSH2 0x183 PUSH2 0x6F0 JUMP JUMPDEST PUSH2 0x183 PUSH2 0x83B JUMP JUMPDEST PUSH2 0x1F7 PUSH2 0x8F4 JUMP JUMPDEST PUSH2 0x183 PUSH2 0x903 JUMP JUMPDEST PUSH2 0x139 PUSH2 0x927 JUMP JUMPDEST PUSH3 0x76A700 DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x335 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xA PUSH1 0x24 DUP3 ADD MSTORE PUSH10 0x1B9BDD081C185C995B9D PUSH1 0xB2 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SELFDESTRUCT JUMPDEST PUSH1 0x0 PUSH1 0x1 JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x36F JUMPI INVALID JUMPDEST EQ SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x3C2 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xA PUSH1 0x24 DUP3 ADD MSTORE PUSH10 0x1B9BDD081C185C995B9D PUSH1 0xB2 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x3CA PUSH2 0x903 JUMP JUMPDEST PUSH2 0x411 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x2A3432903B37BA32903430B99032B73232B217 PUSH1 0x69 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x41D PUSH1 0x2 DUP3 DUP5 PUSH2 0x92D JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x46D JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xA PUSH1 0x24 DUP3 ADD MSTORE PUSH10 0x1B9BDD081C185C995B9D PUSH1 0xB2 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x475 PUSH2 0x903 JUMP JUMPDEST PUSH2 0x4BC JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x2A3432903B37BA32903430B99032B73232B217 PUSH1 0x69 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x41D PUSH1 0x1 DUP3 DUP5 PUSH2 0x92D JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH2 0x348 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x4F8 PUSH1 0x5 SLOAD TIMESTAMP PUSH2 0x973 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH3 0x76A700 LT SWAP2 POP POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH3 0x4F1A00 DUP2 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x2 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP4 SWAP3 SWAP1 SWAP3 AND SWAP2 DUP4 SWAP2 DUP4 SWAP2 PUSH4 0x70A08231 SWAP2 PUSH1 0x24 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x569 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x57D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x593 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x2 SLOAD PUSH1 0x1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x6EB1769F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP2 DUP4 AND PUSH1 0x24 DUP4 ADD MSTORE MLOAD SWAP3 SWAP4 POP PUSH1 0x0 SWAP3 SWAP2 DUP6 AND SWAP2 PUSH4 0xDD62ED3E SWAP2 PUSH1 0x44 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x5F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x606 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x61C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x4 SLOAD SWAP1 SWAP2 POP PUSH1 0x0 SWAP1 PUSH2 0x632 SWAP1 DUP8 SWAP1 PUSH2 0x98A JUMP JUMPDEST SWAP1 POP DUP3 DUP2 GT ISZERO DUP1 ISZERO PUSH2 0x644 JUMPI POP DUP2 DUP2 GT ISZERO JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x6A6 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xA PUSH1 0x24 DUP3 ADD MSTORE PUSH10 0x1B9BDD081C185C995B9D PUSH1 0xB2 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x6AE PUSH2 0x903 JUMP JUMPDEST ISZERO PUSH2 0x6EB JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SLOAD SWAP3 DUP6 AND DUP3 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF SWAP2 DUP3 AND SWAP2 AND PUSH2 0x6E8 DUP3 DUP3 DUP6 PUSH2 0x9AF JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6FA PUSH2 0x903 JUMP JUMPDEST ISZERO PUSH2 0x80F JUMPI PUSH1 0x0 SLOAD PUSH1 0x1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x18160DDD PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD PUSH2 0x807 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0x18160DDD SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x748 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x75C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x772 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x6 SLOAD PUSH1 0x1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x18160DDD PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD PUSH2 0x801 SWAP4 PUSH2 0x2710 SWAP4 PUSH2 0x7FB SWAP4 SWAP2 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 PUSH4 0x18160DDD SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x7C9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x7DD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x7F3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 PUSH2 0x973 JUMP JUMPDEST SWAP1 PUSH2 0x98A JUMP JUMPDEST SWAP1 PUSH2 0xAB0 JUMP JUMPDEST LT SWAP1 POP PUSH2 0x501 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x807 PUSH2 0x82C PUSH1 0x6 SLOAD PUSH1 0x7 SLOAD PUSH2 0xAC3 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH2 0x801 SWAP1 PUSH2 0x2710 PUSH2 0x98A JUMP JUMPDEST PUSH1 0x0 PUSH2 0x845 PUSH2 0x903 JUMP JUMPDEST ISZERO PUSH2 0x8D7 JUMPI PUSH1 0x0 SLOAD PUSH1 0x1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x18160DDD PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD PUSH2 0x8CE SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0x18160DDD SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x893 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x8A7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x8BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x7 SLOAD PUSH2 0x801 SWAP1 PUSH2 0x2710 PUSH2 0x98A JUMP JUMPDEST LT ISZERO SWAP1 POP PUSH2 0x501 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x8CE PUSH2 0x82C PUSH1 0x6 SLOAD PUSH1 0x7 SLOAD PUSH2 0xAC3 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x91B PUSH1 0x5 SLOAD TIMESTAMP PUSH2 0x973 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH3 0x4F1A00 LT ISZERO SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF DUP2 AND SWAP2 DUP6 SWAP2 DUP3 SWAP2 SWAP1 PUSH1 0xFF NOT AND PUSH1 0x1 DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x963 JUMPI INVALID JUMPDEST MUL OR SWAP1 SSTORE POP PUSH2 0x6E8 DUP3 DUP3 DUP7 PUSH2 0x9AF JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 GT ISZERO PUSH2 0x97F JUMPI INVALID JUMPDEST POP DUP1 DUP3 SUB JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x999 JUMPI POP PUSH1 0x0 PUSH2 0x984 JUMP JUMPDEST POP DUP2 DUP2 MUL DUP2 DUP4 DUP3 DUP2 PUSH2 0x9A7 JUMPI INVALID JUMPDEST DIV EQ PUSH2 0x984 JUMPI INVALID JUMPDEST DUP2 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x9BB JUMPI INVALID JUMPDEST DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x9C7 JUMPI INVALID JUMPDEST EQ PUSH2 0x6EB JUMPI PUSH1 0x2 DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x9DA JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0x9F5 JUMPI PUSH1 0x6 SLOAD PUSH2 0x9ED SWAP1 DUP3 PUSH2 0x973 JUMP JUMPDEST PUSH1 0x6 SSTORE PUSH2 0xA1A JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xA03 JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0xA1A JUMPI PUSH1 0x7 SLOAD PUSH2 0xA16 SWAP1 DUP3 PUSH2 0x973 JUMP JUMPDEST PUSH1 0x7 SSTORE JUMPDEST PUSH1 0x2 DUP3 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xA28 JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0xA43 JUMPI PUSH1 0x6 SLOAD PUSH2 0xA3B SWAP1 DUP3 PUSH2 0xAC3 JUMP JUMPDEST PUSH1 0x6 SSTORE PUSH2 0xA68 JUMP JUMPDEST PUSH1 0x1 DUP3 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xA51 JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0xA68 JUMPI PUSH1 0x7 SLOAD PUSH2 0xA64 SWAP1 DUP3 PUSH2 0xAC3 JUMP JUMPDEST PUSH1 0x7 SSTORE JUMPDEST PUSH32 0x8FCC50C2C4EDD06D51AE66E9E21ED76B32A1766C57F491788E1AA24A1B58C256 PUSH1 0x7 SLOAD PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 DUP2 PUSH2 0xABB JUMPI INVALID JUMPDEST DIV SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP2 DUP2 ADD DUP3 DUP2 LT ISZERO PUSH2 0x984 JUMPI INVALID INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SUB NOT DUP13 SWAP8 SMOD MSTORE8 PUSH29 0xE5959B3E8267A2B8A721CC26A72203A7D67CA0A492033FB5A264736F6C PUSH4 0x43000701 STOP CALLER ",
                        "sourceMap": "1579:5068:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1719:49;;;:::i;:::-;;;;;;;;;;;;;;;;1796:21;;;:::i;6465:74::-;;;:::i;:::-;;6225:113;;;;;;;;;;;;;;;;-1:-1:-1;6225:113:0;-1:-1:-1;;;;;6225:113:0;;:::i;:::-;;;;;;;;;;;;;;;;;;5847:129;;;;;;;;;;;;;;;;-1:-1:-1;5847:129:0;;-1:-1:-1;;;;;5847:129:0;;;;;;:::i;5708:131::-;;;;;;;;;;;;;;;;-1:-1:-1;5708:131:0;;-1:-1:-1;;;;;5708:131:0;;;;;;:::i;1993:28::-;;;:::i;:::-;;;;-1:-1:-1;;;;;1993:28:0;;;;;;;;;;;;;;6346:111;;;;;;;;;;;;;;;;-1:-1:-1;6346:111:0;-1:-1:-1;;;;;6346:111:0;;:::i;5442:151::-;;;:::i;2119:20::-;;;:::i;1644:47::-;;;:::i;3109:374::-;;;;;;;;;;;;;;;;-1:-1:-1;3109:374:0;;:::i;2333:22::-;;;:::i;2207:24::-;;;:::i;4408:266::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;4408:266:0;;;;;;;;;;;;;;;;;:::i;3934:466::-;;;:::i;3491:435::-;;;:::i;2089:23::-;;;:::i;5282:152::-;;;:::i;2424:23::-;;;:::i;1719:49::-;1761:7;1719:49;:::o;1796:21::-;;;;:::o;6465:74::-;6603:6;;-1:-1:-1;;;;;6603:6:0;6589:10;:20;6581:43;;;;;-1:-1:-1;;;6581:43:0;;;;;;;;;;;;-1:-1:-1;;;6581:43:0;;;;;;;;;;;;;;;6525:5:::1;::::0;-1:-1:-1;;;;;6525:5:0::1;6512:19;6225:113:::0;6282:4;6322:8;6306:24;-1:-1:-1;;;;;6306:12:0;;;;;;:5;:12;;;;;;;;:24;;;;;;;;;;6225:113;-1:-1:-1;;6225:113:0:o;5847:129::-;6603:6;;-1:-1:-1;;;;;6603:6:0;6589:10;:20;6581:43;;;;;-1:-1:-1;;;6581:43:0;;;;;;;;;;;;-1:-1:-1;;;6581:43:0;;;;;;;;;;;;;;;5642:14:::1;:12;:14::i;:::-;5634:46;;;::::0;;-1:-1:-1;;;5634:46:0;;::::1;;::::0;::::1;::::0;::::1;::::0;;;;-1:-1:-1;;;5634:46:0;;;;;;;;;;;;;::::1;;5939:29:::2;5944:7;5953:6;5961;5939:4;:29::i;:::-;5847:129:::0;;:::o;5708:131::-;6603:6;;-1:-1:-1;;;;;6603:6:0;6589:10;:20;6581:43;;;;;-1:-1:-1;;;6581:43:0;;;;;;;;;;;;-1:-1:-1;;;6581:43:0;;;;;;;;;;;;;;;5642:14:::1;:12;:14::i;:::-;5634:46;;;::::0;;-1:-1:-1;;;5634:46:0;;::::1;;::::0;::::1;::::0;::::1;::::0;;;;-1:-1:-1;;;5634:46:0;;;;;;;;;;;;;::::1;;5801:30:::2;5806:8;5816:6;5824;5801:4;:30::i;1993:28::-:0;;;-1:-1:-1;;;;;1993:28:0;;:::o;6346:111::-;6402:4;6442:7;6426:23;;5442:151;5485:4;5502:11;5516:30;5536:9;;5516:15;:19;;:30;;;;:::i;:::-;1761:7;-1:-1:-1;5564:21:0;-1:-1:-1;;5442:151:0;;:::o;2119:20::-;;;;:::o;1644:47::-;1684:7;1644:47;:::o;3109:374::-;3214:8;;3271:5;;3257:20;;;-1:-1:-1;;;3257:20:0;;-1:-1:-1;;;;;3271:5:0;;;3257:20;;;;;;-1:-1:-1;;3214:8:0;;;;;-1:-1:-1;;3214:8:0;;-1:-1:-1;;3257:20:0;;;;;;;;;;;;;;;3214:8;3257:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3257:20:0;3327:5;;;3334:6;3313:28;;;-1:-1:-1;;;3313:28:0;;-1:-1:-1;;;;;3327:5:0;;;3313:28;;;;3334:6;;;3313:28;;;;;3257:20;;-1:-1:-1;;;3313:13:0;;;;;;:28;;;;;3257:20;;3313:28;;;;;;;;:13;:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3313:28:0;3393:5;;3313:28;;-1:-1:-1;3352:18:0;;3373:26;;:15;;:19;:26::i;:::-;3352:47;;3431:12;3417:10;:26;;:58;;;;;3461:14;3447:10;:28;;3417:58;3410:65;3109:374;-1:-1:-1;;;;;;3109:374:0:o;2333:22::-;;;;:::o;2207:24::-;;;;:::o;4408:266::-;6603:6;;-1:-1:-1;;;;;6603:6:0;6589:10;:20;6581:43;;;;;-1:-1:-1;;;6581:43:0;;;;;;;;;;;;-1:-1:-1;;;6581:43:0;;;;;;;;;;;;;;;4505:14:::1;:12;:14::i;:::-;4501:166;;;-1:-1:-1::0;;;;;4554:11:0;;::::1;4536:15;4554:11:::0;;;:5:::1;:11;::::0;;;;;;4596:9;;::::1;::::0;;;;;4554:11:::1;::::0;;::::1;::::0;4596:9:::1;4620:35;4554:11:::0;4596:9;4649:5;4620:6:::1;:35::i;:::-;4501:166;;;4408:266:::0;;;:::o;3934:466::-;3982:4;4003:14;:12;:14::i;:::-;3999:394;;;4228:6;;4203;;4196:28;;;-1:-1:-1;;;4196:28:0;;;;4137:88;;-1:-1:-1;;;;;4203:6:0;;-1:-1:-1;;4196:28:0;;;;;;;;;;;;;;4203:6;4196:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4196:28:0;4171:7;;4145:6;;4138:28;;;-1:-1:-1;;;4138:28:0;;;;4137:54;;4185:5;;4138:41;;4171:7;;-1:-1:-1;;;;;4145:6:0;;;;-1:-1:-1;;4138:28:0;;;;;4196;;4138;;;;;;;4145:6;4138:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4138:28:0;;:32;:41::i;:::-;4137:47;;:54::i;:::-;:58;;:88::i;:::-;:97;4130:104;;;;3999:394;4375:6;;4326:46;4350:21;4363:7;;4350:8;;:12;;:21;;;;:::i;:::-;4326:8;;:19;;4339:5;4326:12;:19::i;3491:435::-;3539:4;3560:14;:12;:14::i;:::-;3556:363;;;3752:6;;3726;;3719:28;;;-1:-1:-1;;;3719:28:0;;;;3695:53;;-1:-1:-1;;;;;3726:6:0;;-1:-1:-1;;3719:28:0;;;;;;;;;;;;;;3726:6;3719:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3719:28:0;3695:8;;:19;;3708:5;3695:12;:19::i;:53::-;:63;;3688:70;;;;3556:363;3901:6;;3851:46;3875:21;3888:7;;3875:8;;:12;;:21;;;;:::i;2089:23::-;;;-1:-1:-1;;;;;2089:23:0;;:::o;5282:152::-;5327:4;5344:11;5358:30;5378:9;;5358:15;:19;;:30;;;;:::i;:::-;1684:7;-1:-1:-1;5406:20:0;;-1:-1:-1;;5282:152:0;:::o;2424:23::-;;;;:::o;5984:233::-;-1:-1:-1;;;;;6083:12:0;;6063:17;6083:12;;;:5;:12;;;;;;;;;;;6121:7;;;;6083:12;-1:-1:-1;;6139:22:0;-1:-1:-1;6121:7:0;6139:22;;;;;;;;;;;;;6172:37;6179:12;6193:7;6202:6;6172;:37::i;1232:123:9:-;1290:7;1322:1;1317;:6;;1310:14;;;;-1:-1:-1;1342:5:9;;;1232:123;;;;;:::o;305:424::-;363:9;609:6;605:47;;-1:-1:-1;639:1:9;632:8;;605:47;-1:-1:-1;668:5:9;;;672:1;668;:5;:1;691:5;;;;;:10;684:18;;;4682:592:0;4787:7;4771:23;;;;;;;;:12;:23;;;;;;;;;4767:500;;4831:7;4815:12;:23;;;;;;;;;4811:195;;;4869:7;;:19;;4881:6;4869:11;:19::i;:::-;4859:7;:29;4811:195;;;4930:8;4914:12;:24;;;;;;;;;4910:96;;;4970:8;;:20;;4983:6;4970:12;:20::i;:::-;4959:8;:31;4910:96;5035:7;5024;:18;;;;;;;;;5020:185;;;5073:7;;:19;;5085:6;5073:11;:19::i;:::-;5063:7;:29;5020:185;;;5129:8;5118:7;:19;;;;;;;;;5114:91;;;5169:8;;:20;;5182:6;5169:12;:20::i;:::-;5158:8;:31;5114:91;5224:31;5237:8;;5247:7;;5224:31;;;;;;;;;;;;;;;;;;;;;;;;4682:592;;;:::o;818:295:9:-;876:7;1104:1;1100;:5;;;;;;;818:295;-1:-1:-1;;;818:295:9:o;1424:141::-;1508:5;;;1531:6;;;;1524:14;;"
                    },
                    "gasEstimates": {
                        "creation": {
                            "codeDepositCost": "564400",
                            "executionCost": "infinite",
                            "totalCost": "infinite"
                        },
                        "external": {
                            "VALIDITY_PERIOD()": "222",
                            "VOTING_PERIOD()": "221",
                            "adjustVotes(address,address,uint256)": "infinite",
                            "buyer()": "1082",
                            "currency()": "1103",
                            "hasExpired()": "infinite",
                            "hasVotedNo(address)": "1278",
                            "hasVotedYes(address)": "1290",
                            "isQuorumReached()": "infinite",
                            "isVotingOpen()": "infinite",
                            "isWellFunded(uint256)": "infinite",
                            "kill()": "31864",
                            "noVotes()": "1065",
                            "price()": "1109",
                            "quorum()": "1044",
                            "quorumHasFailed()": "infinite",
                            "timestamp()": "1087",
                            "voteNo(address,uint256)": "infinite",
                            "voteYes(address,uint256)": "infinite",
                            "yesVotes()": "1108"
                        },
                        "internal": {
                            "update(enum Acquisition.Vote,enum Acquisition.Vote,uint256)": "infinite",
                            "vote(enum Acquisition.Vote,uint256,address)": "infinite"
                        }
                    },
                    "methodIdentifiers": {
                        "VALIDITY_PERIOD()": "0c43cd88",
                        "VOTING_PERIOD()": "b1610d7e",
                        "adjustVotes(address,address,uint256)": "c4814fae",
                        "buyer()": "7150d8ae",
                        "currency()": "e5a6b10f",
                        "hasExpired()": "90e64d13",
                        "hasVotedNo(address)": "8f1b4c6f",
                        "hasVotedYes(address)": "448ab4c6",
                        "isQuorumReached()": "d7be4e29",
                        "isVotingOpen()": "fa7f1bae",
                        "isWellFunded(uint256)": "b28fa152",
                        "kill()": "41c0e1b5",
                        "noVotes()": "b5b47f42",
                        "price()": "a035b1fe",
                        "quorum()": "1703a018",
                        "quorumHasFailed()": "cf42a927",
                        "timestamp()": "b80777ea",
                        "voteNo(address,uint256)": "4b91562e",
                        "voteYes(address,uint256)": "5ff0cf84",
                        "yesVotes()": "fb286c65"
                    }
                },
                "metadata": "{\"compiler\":{\"version\":\"0.7.1+commit.f4a555be\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"buyer_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"currency_\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"price_\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"quorum_\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newYesVotes\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newNoVotes\",\"type\":\"uint256\"}],\"name\":\"VotesChanged\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"VALIDITY_PERIOD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"VOTING_PERIOD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"adjustVotes\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"buyer\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"currency\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"hasExpired\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"voter\",\"type\":\"address\"}],\"name\":\"hasVotedNo\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"voter\",\"type\":\"address\"}],\"name\":\"hasVotedYes\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isQuorumReached\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isVotingOpen\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"sharesToAcquire\",\"type\":\"uint256\"}],\"name\":\"isWellFunded\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"kill\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"noVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"price\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"quorum\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"quorumHasFailed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"timestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"votes_\",\"type\":\"uint256\"}],\"name\":\"voteNo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"votes_\",\"type\":\"uint256\"}],\"name\":\"voteYes\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"yesVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Benjamin Rickenbacher, b.rickenbacher@intergga.chLuzius Meisser, luzius@meissereconomics.com\",\"kind\":\"dev\",\"methods\":{},\"title\":\"Acquisition Attempt\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"c:/Users/luziu/Documents/aktionariat/contracts/src/Acquisition.sol\":\"Acquisition\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"c:/Users/luziu/Documents/aktionariat/contracts/src/Acquisition.sol\":{\"keccak256\":\"0x2a804527c12b009dc8d2580a78a3d1163810b00d5d8f25642813171c6372627f\",\"license\":\"LicenseRef-Aktionariat\",\"urls\":[\"bzz-raw://a8b8a2efe3d409f8f90da295f8f5b29af3967fa457e5e01672bf085250676d98\",\"dweb:/ipfs/QmPdrrCNgYMpcQDy3BAEQKo8Fk6cPLCB4QuHRvHxruG6TU\"]},\"c:/Users/luziu/Documents/aktionariat/contracts/src/IERC20.sol\":{\"keccak256\":\"0x6d0e89e1a724c13cc7dcc7184b8dcf0d46d6b5635b4ec024bb1fb69d36d87444\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40092507190092f77a521113ba3133441c76f63da097e38e587ca6e2603c6eb2\",\"dweb:/ipfs/QmeKTeVB1sND87Miju3k3as6f5cQcgLzbHc7vSREcjyQKC\"]},\"c:/Users/luziu/Documents/aktionariat/contracts/src/SafeMath.sol\":{\"keccak256\":\"0x186349cbf7b3f8c5b04eb76e4e5dc9fd4d3c00952afc2e66923abc2947abc9df\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://480ddbf34395198eea8e779632d9f50d22319df148414522d8eed58972444c92\",\"dweb:/ipfs/QmbABPCuzoFN7uhGv2omkAGKSCc5Wh2Kof1ig3jzFTCKAd\"]}},\"version\":1}",
                "userdoc": {
                    "kind": "user",
                    "methods": {},
                    "version": 1
                }
            }
        },
        "c:/Users/luziu/Documents/aktionariat/contracts/src/DraggableFactory.sol": {
            "DraggableFactory": {
                "abi": [
                    {
                        "inputs": [
                            {
                                "internalType": "bytes32",
                                "name": "salt",
                                "type": "bytes32"
                            },
                            {
                                "internalType": "string",
                                "name": "_terms",
                                "type": "string"
                            },
                            {
                                "internalType": "address",
                                "name": "baseContract",
                                "type": "address"
                            },
                            {
                                "internalType": "uint256",
                                "name": "quorum",
                                "type": "uint256"
                            }
                        ],
                        "name": "createDraggable",
                        "outputs": [
                            {
                                "internalType": "address",
                                "name": "",
                                "type": "address"
                            }
                        ],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    }
                ],
                "devdoc": {
                    "kind": "dev",
                    "methods": {},
                    "version": 1
                },
                "evm": {
                    "bytecode": {
                        "linkReferences": {},
                        "object": "608060405234801561001057600080fd5b50615111806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c806349dc213214610030575b600080fd5b6100eb6004803603608081101561004657600080fd5b8135919081019060408101602082013564010000000081111561006857600080fd5b82018360208201111561007a57600080fd5b8035906020019184600183028401116401000000008311171561009c57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550506001600160a01b038335169350505060200135610107565b604080516001600160a01b039092168252519081900360200190f35b600084848484604051610119906101c6565b8080602001846001600160a01b03168152602001838152602001828103825285818151815260200191508051906020019080838360005b83811015610168578181015183820152602001610150565b50505050905090810190601f1680156101955780820380516001836020036101000a031916815260200191505b509450505050508190604051809103906000f59050801580156101bc573d6000803e3d6000fd5b5095945050505050565b614f08806101d48339019056fe608060405262ed4e006004556001600a819055600f805460ff191690911790553480156200002c57600080fd5b5060405162004f0838038062004f08833981810160405260608110156200005257600080fd5b81019080805160405193929190846401000000008211156200007357600080fd5b9083019060208201858111156200008957600080fd5b8251640100000000811182820188101715620000a457600080fd5b82525081516020918201929091019080838360005b83811015620000d3578181015183820152602001620000b9565b50505050905090810190601f168015620001015780820380516001836020036101000a031916815260200191505b506040818152602083810151938201516003805460ff19169055600980546001600160a01b0387166001600160a01b03199182168117909255600c80549091167329fe8914e76da5ce2d90de98a64d0055f199d06d179055600d829055600e829055633a98ef3960e01b85529251949650945085938593849392633a98ef39926004808401938290030181600087803b1580156200019e57600080fd5b505af1158015620001b3573d6000803e3d6000fd5b505050506040513d6020811015620001ca57600080fd5b505060408051636427ed9760e01b815260006004820181905291516001600160a01b0388169550636427ed97945060248083019450909182900301818387803b1580156200021757600080fd5b505af11580156200022c573d6000803e3d6000fd5b505084516200024592506010915060208601906200024f565b50505050620002eb565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200029257805160ff1916838001178555620002c2565b82800160010185558215620002c2579182015b82811115620002c2578251825591602001919060010190620002a5565b50620002d0929150620002d4565b5090565b5b80821115620002d05760008155600101620002d5565b614c0d80620002fb6000396000f3fe60806040523480156200001157600080fd5b50600436106200033a5760003560e01c80636b03ed5f11620001c5578063a9059cbb11620000ff578063c6788bdd11620000b1578063de0e9a3e1162000087578063de0e9a3e14620009e1578063e1b8c38e1462000a24578063eb470ebf1462000a2e578063ec6580e21462000a57576200033a565b8063c6788bdd1462000940578063d502562514620009a6578063dd62ed3e14620009b0576200033a565b8063a9059cbb146200089b578063b40e80d114620008ca578063bb68947214620008f3578063bc1b1e7c14620008fd578063bf376c7a1462000907578063c028df061462000936576200033a565b806390cf581c11620001775780639e8a9a5a116200014d5780639e8a9a5a14620007b0578063a3ec188314620007ba578063a457c2d714620007e3578063a4c0ed361462000812576200033a565b806390cf581c146200077357806395d89b41146200077d5780639b56d6c91462000787576200033a565b80636b03ed5f14620006f95780636f4b18df146200070357806370a08231146200070d57806377e071ad14620007365780637dc2cd98146200075f5780638fd3ab801462000769576200033a565b8063313ce567116200029757806341c12a70116200024957806358047913116200021f5780635804791314620006b95780636091811714620006c35780636427ed9714620006cd5780636467c09a14620006ef576200033a565b806341c12a70146200066057806342966c68146200066a57806349b210b7146200068a576200033a565b8063313ce567146200052c57806332a7ae95146200054c5780633549788a146200057557806339509351146200057f5780633bcc45ba14620005ae5780634000aea014620005d7576200033a565b8063141c706811620002f1578063141c7068146200047b57806318160ddd14620004855780631e3b9de5146200048f57806323b872dd14620004b857806326773ddd14620004f15780632a0a4ed51462000522576200033a565b806302fb0c5e146200033f57806306fdde03146200035d5780630832e47014620003df578063095ea7b314620003fb5780630c6f0e5d146200042a5780630cd865ec1462000450575b600080fd5b6200034962000a61565b604080519115158252519081900360200190f35b6200036762000a6a565b6040805160208082528351818301528351919283929083019185019080838360005b83811015620003a357818101518382015260200162000389565b50505050905090810190601f168015620003d15780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b620003e962000c25565b60408051918252519081900360200190f35b62000349600480360360408110156200041357600080fd5b506001600160a01b03813516906020013562000c2b565b6200043462000c44565b604080516001600160a01b039092168252519081900360200190f35b62000479600480360360208110156200046857600080fd5b50356001600160a01b031662000c53565b005b6200047962000f37565b620003e962001378565b6200043460048036036020811015620004a757600080fd5b50356001600160a01b03166200137e565b6200034960048036036060811015620004d057600080fd5b506001600160a01b038135811691602081013590911690604001356200139f565b62000479600480360360408110156200050957600080fd5b506001600160a01b0381358116916020013516620013f6565b6200043462001721565b6200053662001799565b6040805160ff9092168252519081900360200190f35b62000479600480360360208110156200056457600080fd5b50356001600160a01b0316620017a2565b620003e962001a0a565b62000349600480360360408110156200059757600080fd5b506001600160a01b03813516906020013562001a10565b6200043460048036036020811015620005c657600080fd5b50356001600160a01b031662001a49565b6200034960048036036060811015620005ef57600080fd5b6001600160a01b0382351691602081013591810190606081016040820135600160201b8111156200061f57600080fd5b8201836020820111156200063257600080fd5b803590602001918460018302840111600160201b831117156200065457600080fd5b50909250905062001a6a565b6200047962001b31565b62000479600480360360208110156200068257600080fd5b503562001c0d565b6200047960048036036040811015620006a257600080fd5b50803590602001356001600160a01b031662001c7f565b62000434620021b5565b620003e9620021c4565b6200047960048036036020811015620006e557600080fd5b50351515620021ca565b62000434620021e9565b62000479620021f8565b620004796200235d565b620003e9600480360360208110156200072557600080fd5b50356001600160a01b031662002692565b620003e9600480360360208110156200074e57600080fd5b50356001600160a01b0316620026ad565b620003e962002762565b6200047962002768565b62000479620029fd565b6200036762002a76565b620003e9600480360360208110156200079f57600080fd5b50356001600160a01b031662002bee565b620003e962002c0c565b6200034960048036036020811015620007d257600080fd5b50356001600160a01b031662002c12565b6200034960048036036040811015620007fb57600080fd5b506001600160a01b03813516906020013562002c31565b62000479600480360360608110156200082a57600080fd5b6001600160a01b0382351691602081013591810190606081016040820135600160201b8111156200085a57600080fd5b8201836020820111156200086d57600080fd5b803590602001918460018302840111600160201b831117156200088f57600080fd5b50909250905062002c6a565b6200034960048036036040811015620008b357600080fd5b506001600160a01b03813516906020013562002c94565b6200034960048036036020811015620008e257600080fd5b50356001600160a01b031662002ca9565b6200043462002cbe565b6200034962002ccd565b62000479600480360360408110156200091f57600080fd5b506001600160a01b03813516906020013562002cea565b6200043462002e25565b62000969600480360360208110156200095857600080fd5b50356001600160a01b031662002e34565b60405180856001600160a01b03168152602001848152602001838152602001826001600160a01b0316815260200194505050505060405180910390f35b6200036762002e66565b620003e960048036036040811015620009c857600080fd5b506001600160a01b038135811691602001351662002ef8565b62000a0160048036036020811015620009f957600080fd5b503562002f23565b604080516001600160a01b03909316835260208301919091528051918290030190f35b6200047962003036565b620003e96004803603602081101562000a4657600080fd5b50356001600160a01b03166200318a565b62000349620031a8565b600f5460ff1681565b600954604080516306fdde0360e01b815290516060926001600160a01b0316916306fdde03916004808301926000929190829003018186803b15801562000ab057600080fd5b505afa15801562000ac5573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052602081101562000aef57600080fd5b8101908080516040519392919084600160201b82111562000b0f57600080fd5b90830190602082018581111562000b2557600080fd5b8251600160201b81118282018810171562000b3f57600080fd5b82525081516020918201929091019080838360005b8381101562000b6e57818101518382015260200162000b54565b50505050905090810190601f16801562000b9c5780820380516001836020036101000a031916815260200191505b506040525050506040516020018080690223930b3b3b0b13632960b51b815250600a0182805190602001908083835b6020831062000bec5780518252601f19909201916020918201910162000bcb565b6001836020036101000a038019825116818451168082178552505050505050905001915050604051602081830303815290604052905090565b600a5481565b600062000c3a338484620031ce565b5060015b92915050565b6007546001600160a01b031681565b62000c5d62003d6d565b506001600160a01b038082166000908152600560209081526040918290208251608081018452815485168152600182015492810183905260028201549381019390935260030154909216606082018190529091908162000cf5576040805162461bcd60e51b815260206004820152600e60248201526d139bc818db185a5b48199bdd5b9960921b604482015290519081900360640190fd5b82516001600160a01b0316331462000d54576040805162461bcd60e51b815260206004820152601f60248201527f4f6e6c7920636c61696d616e742063616e207265736f6c766520636c61696d00604482015290519081900360640190fd5b4262000d706004548560400151620032be90919063ffffffff16565b111562000dc4576040805162461bcd60e51b815260206004820152601960248201527f436c61696d20706572696f64206e6f74206f7665722079657400000000000000604482015290519081900360640190fd5b82516001600160a01b03808616600090815260056020908152604080832080546001600160a01b031990811682556001820185905560028201859055600390910180549091169055805163a9059cbb60e01b815284861660048201526024810188905290519386169363a9059cbb93604480840194938390030190829087803b15801562000e5157600080fd5b505af115801562000e66573d6000803e3d6000fd5b505050506040513d602081101562000e7d57600080fd5b505162000ece576040805162461bcd60e51b815260206004820152601a60248201527910dbdb1b185d195c985b081d1c985b9cd9995c8819985a5b195960321b604482015290519081900360640190fd5b62000ee5858262000edf8862002692565b620032cc565b806001600160a01b0316856001600160a01b03167f52a5c2b28bc6eb9712d0ced43463103b486b13ccc9cda499fd3b2d7b6a74a8ee856040518082815260200191505060405180910390a35050505050565b62000f4162002ccd565b801562000f505750600f5460ff165b62000f91576040805162461bcd60e51b8152602060048201526019602482015260008051602062004aae833981519152604482015290519081900360640190fd5b600b54604080516338a86c5760e11b815290516000926001600160a01b031691637150d8ae916004808301926020929190829003018186803b15801562000fd757600080fd5b505afa15801562000fec573d6000803e3d6000fd5b505050506040513d60208110156200100357600080fd5b50519050336001600160a01b03821614620010505760405162461bcd60e51b815260040180806020018281038252603981526020018062004b666039913960400191505060405180910390fd5b600b60009054906101000a90046001600160a01b03166001600160a01b031663d7be4e296040518163ffffffff1660e01b815260040160206040518083038186803b1580156200109f57600080fd5b505afa158015620010b4573d6000803e3d6000fd5b505050506040513d6020811015620010cb57600080fd5b50516200111f576040805162461bcd60e51b815260206004820181905260248201527f496e73756666696369656e74206e756d626572206f662079657320766f746573604482015290519081900360640190fd5b600b546001600160a01b031663b28fa1526200113b8362002692565b6200114562001378565b036040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b1580156200117b57600080fd5b505afa15801562001190573d6000803e3d6000fd5b505050506040513d6020811015620011a757600080fd5b5051620011fb576040805162461bcd60e51b815260206004820152601b60248201527f4f6666657220696e73756666696369656e746c792066756e6465640000000000604482015290519081900360640190fd5b620012f781600b60009054906101000a90046001600160a01b03166001600160a01b031663e5a6b10f6040518163ffffffff1660e01b815260040160206040518083038186803b1580156200124f57600080fd5b505afa15801562001264573d6000803e3d6000fd5b505050506040513d60208110156200127b57600080fd5b5051600b546040805163501ad8ff60e11b815290516001600160a01b039092169163a035b1fe91600480820192602092909190829003018186803b158015620012c357600080fd5b505afa158015620012d8573d6000803e3d6000fd5b505050506040513d6020811015620012ef57600080fd5b5051620032de565b600b5460408051338152600160208201526001600160a01b039283166060820152608081830181905260169082015275436f6d706c65746564207375636365737366756c6c7960501b60a08201529051918316917fc88f58ae9feb0742d9422f604dd3c1be6d02818f8dec340c5061f428b554e9759181900360c00190a250565b60025490565b6001600160a01b03808216600090815260056020526040902054165b919050565b6000620013ae848484620032cc565b6001600160a01b038416600090815260016020908152604080832033808552925290912054620013ec918691620013e6908662003505565b620031ce565b5060019392505050565b620014018162002c12565b62001453576040805162461bcd60e51b815260206004820181905260248201527f436c61696d732064697361626c656420666f7220746869732061646472657373604482015290519081900360640190fd5b60006200146083620026ad565b905060008111620014b1576040805162461bcd60e51b8152602060048201526016602482015275155b9cdd5c1c1bdc9d19590818dbdb1b185d195c985b60521b604482015290519081900360640190fd5b336000620014bf8462002692565b90506000620014cf828562003518565b9050858262001525576040805162461bcd60e51b815260206004820152601f60248201527f436c61696d6564206164647265737320686f6c6473206e6f2073686172657300604482015290519081900360640190fd5b6001600160a01b0386166000908152600560205260409020600101541562001594576040805162461bcd60e51b815260206004820152601760248201527f4164647265737320616c726561647920636c61696d6564000000000000000000604482015290519081900360640190fd5b604080516323b872dd60e01b81526001600160a01b038681166004830152306024830152604482018590529151918316916323b872dd916064808201926020929091908290030181600087803b158015620015ee57600080fd5b505af115801562001603573d6000803e3d6000fd5b505050506040513d60208110156200161a57600080fd5b50516200166b576040805162461bcd60e51b815260206004820152601a60248201527910dbdb1b185d195c985b081d1c985b9cd9995c8819985a5b195960321b604482015290519081900360640190fd5b604080516080810182526001600160a01b038087168083526020808401878152428587019081528d8516606087019081528d8616600081815260058652899020975188549088166001600160a01b0319918216178955935160018901559151600288015551600390960180549690951695909116949094179092558351878152935190937f1982ca8958fc8a8176cb52be509260f4bc5af7ce04e1533711793f1c56dd535992908290030190a350505050505050565b60006200172d620021b5565b6001600160a01b0316632a0a4ed56040518163ffffffff1660e01b815260040160206040518083038186803b1580156200176657600080fd5b505afa1580156200177b573d6000803e3d6000fd5b505050506040513d60208110156200179257600080fd5b5051905090565b60035460ff1681565b620017ac62001721565b6001600160a01b0316336001600160a01b03161462001812576040805162461bcd60e51b815260206004820152601860248201527f596f752063616e6e6f742064656c65746520636c61696d730000000000000000604482015290519081900360640190fd5b6200181c62003d6d565b506001600160a01b038082166000908152600560209081526040918290208251608081018452815485168152600182015492810183905260028201549381019390935260030154909216606082018190529091620018b2576040805162461bcd60e51b815260206004820152600e60248201526d139bc818db185a5b48199bdd5b9960921b604482015290519081900360640190fd5b6001600160a01b03808416600090815260056020908152604080832080546001600160a01b031990811682556001820185905560028201859055600390910180549091169055855186830151825163a9059cbb60e01b81529186166004830152602482015290519385169363a9059cbb93604480840194938390030190829087803b1580156200194157600080fd5b505af115801562001956573d6000803e3d6000fd5b505050506040513d60208110156200196d57600080fd5b5051620019be576040805162461bcd60e51b815260206004820152601a60248201527910dbdb1b185d195c985b081d1c985b9cd9995c8819985a5b195960321b604482015290519081900360640190fd5b815160208084015160408051918252516001600160a01b03938416938716927fbb036e629a9f4c0897ee5d48440dfdb36f7e772117723a2ed603a6514244c2d5928290030190a3505050565b600e5481565b3360008181526001602090815260408083206001600160a01b0387168452909152812054909162000c3a918590620013e69086620032be565b6001600160a01b039081166000908152600560205260409020600301541690565b60008062001a79868662002c94565b9050801562001b2857856001600160a01b031663a4c0ed36338787876040518563ffffffff1660e01b815260040180856001600160a01b03168152602001848152602001806020018281038252848482818152602001925080828437600081840152601f19601f82011690508083019250505095505050505050600060405180830381600087803b15801562001b0e57600080fd5b505af115801562001b23573d6000803e3d6000fd5b505050505b95945050505050565b62001b3b62002ccd565b801562001b4a5750600f5460ff165b62001b8b576040805162461bcd60e51b8152602060048201526019602482015260008051602062004aae833981519152604482015290519081900360640190fd5b600b5433906001600160a01b0316634b91562e8262001baa8162002692565b6040518363ffffffff1660e01b815260040180836001600160a01b0316815260200182815260200192505050600060405180830381600087803b15801562001bf157600080fd5b505af115801562001c06573d6000803e3d6000fd5b5050505050565b62001c19338262003541565b62001c23620021b5565b6001600160a01b03166342966c6862001c48600a54846200351890919063ffffffff16565b6040518263ffffffff1660e01b815260040180828152602001915050600060405180830381600087803b15801562001bf157600080fd5b600f5460ff1662001cd7576040805162461bcd60e51b815260206004820152601860248201527f416e206163636570746564206f66666572206578697374730000000000000000604482015290519081900360640190fd5b600062001ce3620021b5565b6001600160a01b0316633a98ef396040518163ffffffff1660e01b8152600401602060405180830381600087803b15801562001d1e57600080fd5b505af115801562001d33573d6000803e3d6000fd5b505050506040513d602081101562001d4a57600080fd5b505190503362001d6b61271062001d6484610bb862003518565b906200354d565b62001d7562001378565b101562001db45760405162461bcd60e51b815260040180806020018281038252602e81526020018062004b14602e913960400191505060405180910390fd5b62001dc961271062001d64846101f462003518565b62001dd48262002692565b101562001e135760405162461bcd60e51b815260040180806020018281038252603981526020018062004b9f6039913960400191505060405180910390fd5b600c546040516001600160a01b0390911690600090670de0b6b3a76400009082818181858883f1935050505015801562001e51573d6000803e3d6000fd5b506000338486600e5460405162001e689062003da7565b80856001600160a01b03168152602001846001600160a01b03168152602001838152602001828152602001945050505050604051809103906000f08015801562001eb6573d6000803e3d6000fd5b509050806001600160a01b031663b28fa15262001ed38462002692565b62001edd62001378565b036040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b15801562001f1357600080fd5b505afa15801562001f28573d6000803e3d6000fd5b505050506040513d602081101562001f3f57600080fd5b505162001f8a576040805162461bcd60e51b8152602060048201526014602482015273496e73756666696369656e742066756e64696e6760601b604482015290519081900360640190fd5b62001f9462002ccd565b156200214057600b60009054906101000a90046001600160a01b03166001600160a01b031663e5a6b10f6040518163ffffffff1660e01b815260040160206040518083038186803b15801562001fe957600080fd5b505afa15801562001ffe573d6000803e3d6000fd5b505050506040513d60208110156200201557600080fd5b50516001600160a01b038581169116148015620020c35750620020bf61271062001d64612904600b60009054906101000a90046001600160a01b03166001600160a01b031663a035b1fe6040518163ffffffff1660e01b815260040160206040518083038186803b1580156200208a57600080fd5b505afa1580156200209f573d6000803e3d6000fd5b505050506040513d6020811015620020b657600080fd5b50519062003518565b8510155b620021005760405162461bcd60e51b815260040180806020018281038252603c81526020018062004a72603c913960400191505060405180910390fd5b620021406040518060400160405280601c81526020017f4f66666572207265706c6163656420627920686967686572206269640000000081525062003561565b600b80546001600160a01b0319166001600160a01b038381169190911790915582167f9c00f159b1fa9eaebda7acaf50be0bf3a652277380f907b35cb681bd641a62d3866200218e620021e9565b604080519283526001600160a01b0390911660208301528051918290030190a25050505050565b6009546001600160a01b031690565b60085481565b336000908152600660205260409020805460ff19169115919091179055565b600b546001600160a01b031690565b33600090815260056020526040902060010154156200235b5733600081815260056020908152604080832060018101805460038301805484546001600160a01b03199081168655938890556002909401879055918316909155825163a9059cbb60e01b8152600481019690965260248601819052915191946001600160a01b0390911693849363a9059cbb93604480850194929391928390030190829087803b158015620022a557600080fd5b505af1158015620022ba573d6000803e3d6000fd5b505050506040513d6020811015620022d157600080fd5b505162002322576040805162461bcd60e51b815260206004820152601a60248201527910dbdb1b185d195c985b081d1c985b9cd9995c8819985a5b195960321b604482015290519081900360640190fd5b60408051838152905133917f203627483d943880619f4b7e0cca21dbefd6204b4d85b124eb99540e17ba86dd919081900360200190a250505b565b6200236762002ccd565b8015620023765750600f5460ff165b620023b7576040805162461bcd60e51b8152602060048201526019602482015260008051602062004aae833981519152604482015290519081900360640190fd5b600b60009054906101000a90046001600160a01b03166001600160a01b03166390e64d136040518163ffffffff1660e01b815260040160206040518083038186803b1580156200240657600080fd5b505afa1580156200241b573d6000803e3d6000fd5b505050506040513d60208110156200243257600080fd5b50511562002470576200246a6040518060400160405280600d81526020016c13d999995c88195e1c1a5c9959609a1b81525062003561565b6200235b565b600b60009054906101000a90046001600160a01b03166001600160a01b031663cf42a9276040518163ffffffff1660e01b815260040160206040518083038186803b158015620024bf57600080fd5b505afa158015620024d4573d6000803e3d6000fd5b505050506040513d6020811015620024eb57600080fd5b50511562002528576200246a60405180604001604052806012815260200171139bdd08195b9bdd59da081cdd5c1c1bdc9d60721b81525062003561565b600b54604080516338a86c5760e11b815290516001600160a01b039092169163b28fa15291620025ae918491637150d8ae916004808301926020929190829003018186803b1580156200257a57600080fd5b505afa1580156200258f573d6000803e3d6000fd5b505050506040513d6020811015620025a657600080fd5b505162002692565b620025b862001378565b036040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b158015620025ee57600080fd5b505afa15801562002603573d6000803e3d6000fd5b505050506040513d60208110156200261a57600080fd5b505162002645576200246a604051806060016040528060218152602001620049e46021913962003561565b6040805162461bcd60e51b815260206004820181905260248201527f4163717569736974696f6e20636f6e7465737420756e7375636365737366756c604482015290519081900360640190fd5b6001600160a01b031660009081526020819052604090205490565b600080620026bb8362003731565b90508015620026cc5790506200139a565b620026d6620021b5565b6001600160a01b0316836001600160a01b03161415620026fb575050600a546200139a565b62002759600a546200270c620021b5565b6001600160a01b03166377e071ad866040518263ffffffff1660e01b815260040180826001600160a01b0316815260200191505060206040518083038186803b1580156200208a57600080fd5b9150506200139a565b60045481565b600f5460ff16620027b9576040805162461bcd60e51b8152602060048201526016602482015275436f6e7472616374206973206e6f742061637469766560501b604482015290519081900360640190fd5b6000339050620027dd61271062001d64600d54620027d662001378565b9062003518565b620027e88262002692565b101562002831576040805162461bcd60e51b8152602060048201526012602482015271145d5bdc9d5b481b9bdd081c995858da195960721b604482015290519081900360640190fd5b6200283b62002ccd565b15620029b057600b60009054906101000a90046001600160a01b03166001600160a01b031663cf42a9276040518163ffffffff1660e01b815260040160206040518083038186803b1580156200289057600080fd5b505afa158015620028a5573d6000803e3d6000fd5b505050506040513d6020811015620028bc57600080fd5b50516200299457620028cd62001b31565b600b60009054906101000a90046001600160a01b03166001600160a01b031663cf42a9276040518163ffffffff1660e01b815260040160206040518083038186803b1580156200291c57600080fd5b505afa15801562002931573d6000803e3d6000fd5b505050506040513d60208110156200294857600080fd5b505162002994576040805162461bcd60e51b8152602060048201526015602482015274145d5bdc9d5b481a185cc81b9bdd0819985a5b1959605a1b604482015290519081900360640190fd5b6200299e6200235d565b620029a862002ccd565b15620029b057fe5b620029be81826001620032de565b604080516001600160a01b038316815290517f3b6b79a09e9fd230e8591b65c97236bf7df7a604edf733db0658e66b0e6eb2a99181900360200190a150565b62002a0762002ccd565b801562002a165750600f5460ff165b62002a57576040805162461bcd60e51b8152602060048201526019602482015260008051602062004aae833981519152604482015290519081900360640190fd5b600b5433906001600160a01b0316635ff0cf848262001baa8162002692565b600954604080516395d89b4160e01b815290516060926001600160a01b0316916395d89b41916004808301926000929190829003018186803b15801562002abc57600080fd5b505afa15801562002ad1573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052602081101562002afb57600080fd5b8101908080516040519392919084600160201b82111562002b1b57600080fd5b90830190602082018581111562002b3157600080fd5b8251600160201b81118282018810171562002b4b57600080fd5b82525081516020918201929091019080838360005b8381101562002b7a57818101518382015260200162002b60565b50505050905090810190601f16801562002ba85780820380516001836020036101000a031916815260200191505b506040525050506040516020018080601160fa1b81525060010182805190602001908083836020831062000bec5780518252601f19909201916020918201910162000bcb565b6001600160a01b031660009081526005602052604090206001015490565b600d5481565b6001600160a01b031660009081526006602052604090205460ff161590565b3360008181526001602090815260408083206001600160a01b0387168452909152812054909162000c3a918590620013e6908662003505565b6009546001600160a01b0316331462002c8257600080fd5b62002c8e848462003778565b50505050565b600062002ca2838362003834565b9392505050565b60066020526000908152604090205460ff1681565b600c546001600160a01b031681565b60008062002cda620021e9565b6001600160a01b03161415905090565b62002cf462002ccd565b1562002d42576040805162461bcd60e51b81526020600482015260186024820152772a3432b9329034b99030903832b73234b7339037b33332b960411b604482015290519081900360640190fd5b600954604080516323b872dd60e01b81523360048201523060248201526044810184905290516001600160a01b03909216916323b872dd916064808201926020929091908290030181600087803b15801562002d9d57600080fd5b505af115801562002db2573d6000803e3d6000fd5b505050506040513d602081101562002dc957600080fd5b505162002e15576040805162461bcd60e51b815260206004820152601560248201527414da185c99481d1c985b9cd9995c8819985a5b1959605a1b604482015290519081900360640190fd5b62002e21828262003778565b5050565b600b546001600160a01b031681565b60056020526000908152604090208054600182015460028301546003909301546001600160a01b039283169391921684565b6010805460408051602060026001851615610100026000190190941693909304601f8101849004840282018401909252818152929183018282801562002ef05780601f1062002ec45761010080835404028352916020019162002ef0565b820191906000526020600020905b81548152906001019060200180831162002ed257829003601f168201915b505050505081565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b600f54600090819060ff161562002f6c5760405162461bcd60e51b815260040180806020018281038252603681526020018062004a056036913960400191505060405180910390fd5b62002f78338462003541565b600062002f91600a54856200351890919063ffffffff16565b6009546040805163a9059cbb60e01b81523360048201526024810184905290519293506001600160a01b039091169163a9059cbb916044808201926020929091908290030181600087803b15801562002fe957600080fd5b505af115801562002ffe573d6000803e3d6000fd5b505050506040513d60208110156200301557600080fd5b50516200302157600080fd5b6009546001600160a01b031692509050915091565b6200304062002ccd565b80156200304f5750600f5460ff165b62003090576040805162461bcd60e51b8152602060048201526019602482015260008051602062004aae833981519152604482015290519081900360640190fd5b600b60009054906101000a90046001600160a01b03166001600160a01b0316637150d8ae6040518163ffffffff1660e01b815260040160206040518083038186803b158015620030df57600080fd5b505afa158015620030f4573d6000803e3d6000fd5b505050506040513d60208110156200310b57600080fd5b50516001600160a01b03163314620031555760405162461bcd60e51b815260040180806020018281038252603781526020018062004a3b6037913960400191505060405180910390fd5b6200235b6040518060400160405280601281526020017121b0b731b2b63632b210313c90313abcb2b960711b81525062003561565b6001600160a01b031660009081526005602052604090206002015490565b6000620031b462002ccd565b620031c1576000620031c9565b600f5460ff16155b905090565b6001600160a01b038316620032155760405162461bcd60e51b815260040180806020018281038252602481526020018062004b426024913960400191505060405180910390fd5b6001600160a01b0382166200325c5760405162461bcd60e51b8152600401808060200182810382526022815260200180620049c26022913960400191505060405180910390fd5b6001600160a01b03808416600081815260016020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b8181018281101562000c3e57fe5b620032d983838362003890565b505050565b6000620032eb8462002692565b90506000620032f962001378565b600f805460ff191690559050620033108262002f23565b506000905062003321828462003505565b6009546040805163a9059cbb60e01b81526001600160a01b038a8116600483015260248201859052915193945091169163a9059cbb916044808201926020929091908290030181600087803b1580156200337a57600080fd5b505af11580156200338f573d6000803e3d6000fd5b505050506040513d6020811015620033a657600080fd5b5051620033ec576040805162461bcd60e51b815260206004820152600f60248201526e1d1c985b9cd9995c8819985a5b1959608a1b604482015290519081900360640190fd5b600980546001600160a01b0319166001600160a01b038781169190911791829055600a869055166323b872dd873062003426888662003518565b6040518463ffffffff1660e01b815260040180846001600160a01b03168152602001836001600160a01b031681526020018281526020019350505050602060405180830381600087803b1580156200347d57600080fd5b505af115801562003492573d6000803e3d6000fd5b505050506040513d6020811015620034a957600080fd5b5051620034fd576040805162461bcd60e51b815260206004820152601760248201527f4261636b696e67207472616e73666572206661696c6564000000000000000000604482015290519081900360640190fd5b505050505050565b6000828211156200351257fe5b50900390565b600082620035295750600062000c3e565b50818102818382816200353857fe5b041462000c3e57fe5b62002e21828262003938565b60008183816200355957fe5b049392505050565b600b54604080516338a86c5760e11b815290516000926001600160a01b031691637150d8ae916004808301926020929190829003018186803b158015620035a757600080fd5b505afa158015620035bc573d6000803e3d6000fd5b505050506040513d6020811015620035d357600080fd5b505190506001600160a01b0381167fc88f58ae9feb0742d9422f604dd3c1be6d02818f8dec340c5061f428b554e9753360008562003610620021e9565b60405180856001600160a01b03168152602001841515815260200180602001836001600160a01b03168152602001828103825284818151815260200191508051906020019080838360005b83811015620036755781810151838201526020016200365b565b50505050905090810190601f168015620036a35780820380516001836020036101000a031916815260200191505b509550505050505060405180910390a2600b60009054906101000a90046001600160a01b03166001600160a01b03166341c0e1b56040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156200370457600080fd5b505af115801562003719573d6000803e3d6000fd5b5050600b80546001600160a01b031916905550505050565b60006001600160a01b0382163014156200374e575060016200139a565b6007546001600160a01b03838116911614156200376f57506008546200139a565b5060006200139a565b6200378262002ccd565b15620037d0576040805162461bcd60e51b81526020600482015260186024820152772a3432b9329034b99030903832b73234b7339037b33332b960411b604482015290519081900360640190fd5b600f5460ff1662003828576040805162461bcd60e51b815260206004820152601d60248201527f436f6e7472616374206e6f742061637469766520616e79206d6f72652e000000604482015290519081900360640190fd5b62002e218282620039d3565b6000620038428383620039df565b62003886576040805162461bcd60e51b815260206004820152600f60248201526e151c985b9cd9995c8819985a5b1959608a1b604482015290519081900360640190fd5b62000c3a620021f8565b6200389d838383620039ee565b620038a762002ccd565b8015620038b65750600f5460ff165b15620032d957600b5460408051636240a7d760e11b81526001600160a01b0386811660048301528581166024830152604482018590529151919092169163c4814fae91606480830192600092919082900301818387803b1580156200391a57600080fd5b505af11580156200392f573d6000803e3d6000fd5b50505050505050565b62003944828262003b2c565b6200394e62002ccd565b80156200395d5750600f5460ff165b1562002e2157600b5460408051636240a7d760e11b81526001600160a01b03858116600483015260006024830181905260448301869052925193169263c4814fae9260648084019391929182900301818387803b158015620039be57600080fd5b505af1158015620034fd573d6000803e3d6000fd5b62002e21828262003bff565b600062000c3a338484620032cc565b6001600160a01b03831662003a355760405162461bcd60e51b815260040180806020018281038252602581526020018062004aef6025913960400191505060405180910390fd5b6001600160a01b03821662003a7c5760405162461bcd60e51b81526004018080602001828103825260238152602001806200499f6023913960400191505060405180910390fd5b6001600160a01b03831660009081526020819052604090205462003aa1908262003505565b6001600160a01b03808516600090815260208190526040808220939093559084168152205462003ad29082620032be565b6001600160a01b038084166000818152602081815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b6001600160a01b03821662003b735760405162461bcd60e51b815260040180806020018281038252602181526020018062004ace6021913960400191505060405180910390fd5b60025462003b82908262003505565b6002556001600160a01b03821660009081526020819052604090205462003baa908262003505565b6001600160a01b038316600081815260208181526040808320949094558351858152935191937fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef929081900390910190a35050565b62003c0b828262003c84565b62003c1562002ccd565b801562003c245750600f5460ff165b1562002e2157600b5460408051636240a7d760e11b81526000600482018190526001600160a01b038681166024840152604483018690529251929093169263c4814fae9260648084019382900301818387803b158015620039be57600080fd5b6001600160a01b03821662003ce0576040805162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015290519081900360640190fd5b60025462003cef9082620032be565b6002556001600160a01b03821660009081526020819052604090205462003d179082620032be565b6001600160a01b0383166000818152602081815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050565b604051806080016040528060006001600160a01b03168152602001600081526020016000815260200160006001600160a01b031681525090565b610be98062003db68339019056fe608060405234801561001057600080fd5b50604051610be9380380610be98339818101604052608081101561003357600080fd5b50805160208201516040830151606090930151919290918161008c576040805162461bcd60e51b815260206004820152600d60248201526c696e76616c696420707269636560981b604482015290519081900360640190fd5b600180546001600160a01b03199081163317909155600280546001600160a01b03968716908316179055600380549490951693169290921790925560049190915560005542600555610b06806100e36000396000f3fe608060405234801561001057600080fd5b506004361061012c5760003560e01c8063b1610d7e116100ad578063cf42a92711610071578063cf42a927146102b4578063d7be4e29146102bc578063e5a6b10f146102c4578063fa7f1bae146102cc578063fb286c65146102d45761012c565b8063b1610d7e14610249578063b28fa15214610251578063b5b47f421461026e578063b80777ea14610276578063c4814fae1461027e5761012c565b80635ff0cf84116100f45780635ff0cf84146101c35780637150d8ae146101ef5780638f1b4c6f1461021357806390e64d1314610239578063a035b1fe146102415761012c565b80630c43cd88146101315780631703a0181461014b57806341c0e1b514610153578063448ab4c61461015d5780634b91562e14610197575b600080fd5b6101396102dc565b60408051918252519081900360200190f35b6101396102e3565b61015b6102e9565b005b6101836004803603602081101561017357600080fd5b50356001600160a01b0316610343565b604080519115158252519081900360200190f35b61015b600480360360408110156101ad57600080fd5b506001600160a01b038135169060200135610376565b61015b600480360360408110156101d957600080fd5b506001600160a01b038135169060200135610421565b6101f76104c8565b604080516001600160a01b039092168252519081900360200190f35b6101836004803603602081101561022957600080fd5b50356001600160a01b03166104d7565b6101836104e0565b610139610504565b61013961050a565b6101836004803603602081101561026757600080fd5b5035610511565b61013961064e565b610139610654565b61015b6004803603606081101561029457600080fd5b506001600160a01b0381358116916020810135909116906040013561065a565b6101836106f0565b61018361083b565b6101f76108f4565b610183610903565b610139610927565b6276a70081565b60005481565b6001546001600160a01b03163314610335576040805162461bcd60e51b815260206004820152600a6024820152691b9bdd081c185c995b9d60b21b604482015290519081900360640190fd5b6002546001600160a01b0316ff5b600060015b6001600160a01b03831660009081526008602052604090205460ff16600281111561036f57fe5b1492915050565b6001546001600160a01b031633146103c2576040805162461bcd60e51b815260206004820152600a6024820152691b9bdd081c185c995b9d60b21b604482015290519081900360640190fd5b6103ca610903565b610411576040805162461bcd60e51b81526020600482015260136024820152722a3432903b37ba32903430b99032b73232b21760691b604482015290519081900360640190fd5b61041d6002828461092d565b5050565b6001546001600160a01b0316331461046d576040805162461bcd60e51b815260206004820152600a6024820152691b9bdd081c185c995b9d60b21b604482015290519081900360640190fd5b610475610903565b6104bc576040805162461bcd60e51b81526020600482015260136024820152722a3432903b37ba32903430b99032b73232b21760691b604482015290519081900360640190fd5b61041d6001828461092d565b6002546001600160a01b031681565b60006002610348565b6000806104f86005544261097390919063ffffffff16565b6276a700109150505b90565b60045481565b624f1a0081565b600354600254604080516370a0823160e01b81526001600160a01b03928316600482015290516000939290921691839183916370a0823191602480820192602092909190829003018186803b15801561056957600080fd5b505afa15801561057d573d6000803e3d6000fd5b505050506040513d602081101561059357600080fd5b505160025460015460408051636eb1769f60e11b81526001600160a01b0393841660048201529183166024830152519293506000929185169163dd62ed3e91604480820192602092909190829003018186803b1580156105f257600080fd5b505afa158015610606573d6000803e3d6000fd5b505050506040513d602081101561061c57600080fd5b505160045490915060009061063290879061098a565b90508281111580156106445750818111155b9695505050505050565b60065481565b60055481565b6001546001600160a01b031633146106a6576040805162461bcd60e51b815260206004820152600a6024820152691b9bdd081c185c995b9d60b21b604482015290519081900360640190fd5b6106ae610903565b156106eb576001600160a01b0380841660009081526008602052604080822054928516825290205460ff91821691166106e88282856109af565b50505b505050565b60006106fa610903565b1561080f57600054600154604080516318160ddd60e01b81529051610807926001600160a01b0316916318160ddd916004808301926020929190829003018186803b15801561074857600080fd5b505afa15801561075c573d6000803e3d6000fd5b505050506040513d602081101561077257600080fd5b5051600654600154604080516318160ddd60e01b8152905161080193612710936107fb9391926001600160a01b03909116916318160ddd916004808301926020929190829003018186803b1580156107c957600080fd5b505afa1580156107dd573d6000803e3d6000fd5b505050506040513d60208110156107f357600080fd5b505190610973565b9061098a565b90610ab0565b109050610501565b60005461080761082c600654600754610ac390919063ffffffff16565b6007546108019061271061098a565b6000610845610903565b156108d757600054600154604080516318160ddd60e01b815290516108ce926001600160a01b0316916318160ddd916004808301926020929190829003018186803b15801561089357600080fd5b505afa1580156108a7573d6000803e3d6000fd5b505050506040513d60208110156108bd57600080fd5b50516007546108019061271061098a565b10159050610501565b6000546108ce61082c600654600754610ac390919063ffffffff16565b6003546001600160a01b031681565b60008061091b6005544261097390919063ffffffff16565b624f1a00101591505090565b60075481565b6001600160a01b0381166000908152600860205260409020805460ff811691859182919060ff1916600183600281111561096357fe5b02179055506106e88282866109af565b60008282111561097f57fe5b508082035b92915050565b60008261099957506000610984565b50818102818382816109a757fe5b041461098457fe5b8160028111156109bb57fe5b8360028111156109c757fe5b146106eb5760028360028111156109da57fe5b14156109f5576006546109ed9082610973565b600655610a1a565b6001836002811115610a0357fe5b1415610a1a57600754610a169082610973565b6007555b6002826002811115610a2857fe5b1415610a4357600654610a3b9082610ac3565b600655610a68565b6001826002811115610a5157fe5b1415610a6857600754610a649082610ac3565b6007555b7f8fcc50c2c4edd06d51ae66e9e21ed76b32a1766c57f491788e1aa24a1b58c256600754600654604051808381526020018281526020019250505060405180910390a1505050565b6000818381610abb57fe5b049392505050565b8181018281101561098457fefea264697066735822122003198c9707537ce5959b3e8267a2b8a721cc26a72203a7d67ca0a492033fb5a264736f6c6343000701003345524332303a207472616e7366657220746f20746865207a65726f206164647265737345524332303a20617070726f766520746f20746865207a65726f20616464726573734f6666657220776173206e6f742073756666696369656e746c792066756e6465644173206c6f6e672061732074686520636f6e7472616374206973206163746976652c20796f752061726520626f756e6420746f206974596f7520617265206e6f7420617574686f72697a656420746f2063616e63656c2074686973206163717569736974696f6e206f666665724e6577206f6666657273206d757374206265206174206c6561737420352520686967686572207468616e207468652070656e64696e67206f666665725468657265206973206e6f2070656e64696e67206f666665720000000000000045524332303a206275726e2066726f6d20746865207a65726f206164647265737345524332303a207472616e736665722066726f6d20746865207a65726f20616464726573735468697320636f6e747261637420646f6573206e6f7420726570726573656e7420656e6f7567682065717569747945524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373596f7520617265206e6f7420617574686f72697a656420746f20636f6d706c6574652074686973206163717569736974696f6e206f66666572596f75206e65656420746f20686f6c64206174206c65617374203525206f6620746865206669726d20746f206d616b6520616e206f66666572a2646970667358221220ebdf6e8dc9df34e307523934f7538babecdf0d1305409cf8edc1921aa400166b64736f6c63430007010033a264697066735822122059f1efb0f8e8adb8478a307aeeca3e41d813182284c9a27c18ae52e74dfcac8d64736f6c63430007010033",
                        "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5111 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x49DC2132 EQ PUSH2 0x30 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xEB PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x80 DUP2 LT ISZERO PUSH2 0x46 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH1 0x40 DUP2 ADD PUSH1 0x20 DUP3 ADD CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x68 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x7A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x9C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP6 POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 CALLDATALOAD AND SWAP4 POP POP POP PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x107 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP5 DUP5 DUP5 DUP5 PUSH1 0x40 MLOAD PUSH2 0x119 SWAP1 PUSH2 0x1C6 JUMP JUMPDEST DUP1 DUP1 PUSH1 0x20 ADD DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP6 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x168 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x150 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x195 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP5 POP POP POP POP POP DUP2 SWAP1 PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 PUSH1 0x0 CREATE2 SWAP1 POP DUP1 ISZERO DUP1 ISZERO PUSH2 0x1BC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x4F08 DUP1 PUSH2 0x1D4 DUP4 CODECOPY ADD SWAP1 JUMP INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH3 0xED4E00 PUSH1 0x4 SSTORE PUSH1 0x1 PUSH1 0xA DUP2 SWAP1 SSTORE PUSH1 0xF DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SWAP2 OR SWAP1 SSTORE CALLVALUE DUP1 ISZERO PUSH3 0x2C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x4F08 CODESIZE SUB DUP1 PUSH3 0x4F08 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE PUSH1 0x60 DUP2 LT ISZERO PUSH3 0x52 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD PUSH1 0x40 MLOAD SWAP4 SWAP3 SWAP2 SWAP1 DUP5 PUSH5 0x100000000 DUP3 GT ISZERO PUSH3 0x73 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 DUP4 ADD SWAP1 PUSH1 0x20 DUP3 ADD DUP6 DUP2 GT ISZERO PUSH3 0x89 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH5 0x100000000 DUP2 GT DUP3 DUP3 ADD DUP9 LT OR ISZERO PUSH3 0xA4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MSTORE POP DUP2 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0xD3 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH3 0xB9 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH3 0x101 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP PUSH1 0x40 DUP2 DUP2 MSTORE PUSH1 0x20 DUP4 DUP2 ADD MLOAD SWAP4 DUP3 ADD MLOAD PUSH1 0x3 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH1 0x9 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP2 DUP3 AND DUP2 OR SWAP1 SWAP3 SSTORE PUSH1 0xC DUP1 SLOAD SWAP1 SWAP2 AND PUSH20 0x29FE8914E76DA5CE2D90DE98A64D0055F199D06D OR SWAP1 SSTORE PUSH1 0xD DUP3 SWAP1 SSTORE PUSH1 0xE DUP3 SWAP1 SSTORE PUSH4 0x3A98EF39 PUSH1 0xE0 SHL DUP6 MSTORE SWAP3 MLOAD SWAP5 SWAP7 POP SWAP5 POP DUP6 SWAP4 DUP6 SWAP4 DUP5 SWAP4 SWAP3 PUSH4 0x3A98EF39 SWAP3 PUSH1 0x4 DUP1 DUP5 ADD SWAP4 DUP3 SWAP1 SUB ADD DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x19E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH3 0x1B3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH3 0x1CA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP PUSH1 0x40 DUP1 MLOAD PUSH4 0x6427ED97 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE SWAP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND SWAP6 POP PUSH4 0x6427ED97 SWAP5 POP PUSH1 0x24 DUP1 DUP4 ADD SWAP5 POP SWAP1 SWAP2 DUP3 SWAP1 SUB ADD DUP2 DUP4 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x217 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH3 0x22C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP DUP5 MLOAD PUSH3 0x245 SWAP3 POP PUSH1 0x10 SWAP2 POP PUSH1 0x20 DUP7 ADD SWAP1 PUSH3 0x24F JUMP JUMPDEST POP POP POP POP PUSH3 0x2EB JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH1 0x1F LT PUSH3 0x292 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0x2C2 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0x2C2 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x2C2 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x2A5 JUMP JUMPDEST POP PUSH3 0x2D0 SWAP3 SWAP2 POP PUSH3 0x2D4 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x2D0 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x2D5 JUMP JUMPDEST PUSH2 0x4C0D DUP1 PUSH3 0x2FB PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH3 0x33A JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6B03ED5F GT PUSH3 0x1C5 JUMPI DUP1 PUSH4 0xA9059CBB GT PUSH3 0xFF JUMPI DUP1 PUSH4 0xC6788BDD GT PUSH3 0xB1 JUMPI DUP1 PUSH4 0xDE0E9A3E GT PUSH3 0x87 JUMPI DUP1 PUSH4 0xDE0E9A3E EQ PUSH3 0x9E1 JUMPI DUP1 PUSH4 0xE1B8C38E EQ PUSH3 0xA24 JUMPI DUP1 PUSH4 0xEB470EBF EQ PUSH3 0xA2E JUMPI DUP1 PUSH4 0xEC6580E2 EQ PUSH3 0xA57 JUMPI PUSH3 0x33A JUMP JUMPDEST DUP1 PUSH4 0xC6788BDD EQ PUSH3 0x940 JUMPI DUP1 PUSH4 0xD5025625 EQ PUSH3 0x9A6 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH3 0x9B0 JUMPI PUSH3 0x33A JUMP JUMPDEST DUP1 PUSH4 0xA9059CBB EQ PUSH3 0x89B JUMPI DUP1 PUSH4 0xB40E80D1 EQ PUSH3 0x8CA JUMPI DUP1 PUSH4 0xBB689472 EQ PUSH3 0x8F3 JUMPI DUP1 PUSH4 0xBC1B1E7C EQ PUSH3 0x8FD JUMPI DUP1 PUSH4 0xBF376C7A EQ PUSH3 0x907 JUMPI DUP1 PUSH4 0xC028DF06 EQ PUSH3 0x936 JUMPI PUSH3 0x33A JUMP JUMPDEST DUP1 PUSH4 0x90CF581C GT PUSH3 0x177 JUMPI DUP1 PUSH4 0x9E8A9A5A GT PUSH3 0x14D JUMPI DUP1 PUSH4 0x9E8A9A5A EQ PUSH3 0x7B0 JUMPI DUP1 PUSH4 0xA3EC1883 EQ PUSH3 0x7BA JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH3 0x7E3 JUMPI DUP1 PUSH4 0xA4C0ED36 EQ PUSH3 0x812 JUMPI PUSH3 0x33A JUMP JUMPDEST DUP1 PUSH4 0x90CF581C EQ PUSH3 0x773 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH3 0x77D JUMPI DUP1 PUSH4 0x9B56D6C9 EQ PUSH3 0x787 JUMPI PUSH3 0x33A JUMP JUMPDEST DUP1 PUSH4 0x6B03ED5F EQ PUSH3 0x6F9 JUMPI DUP1 PUSH4 0x6F4B18DF EQ PUSH3 0x703 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH3 0x70D JUMPI DUP1 PUSH4 0x77E071AD EQ PUSH3 0x736 JUMPI DUP1 PUSH4 0x7DC2CD98 EQ PUSH3 0x75F JUMPI DUP1 PUSH4 0x8FD3AB80 EQ PUSH3 0x769 JUMPI PUSH3 0x33A JUMP JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH3 0x297 JUMPI DUP1 PUSH4 0x41C12A70 GT PUSH3 0x249 JUMPI DUP1 PUSH4 0x58047913 GT PUSH3 0x21F JUMPI DUP1 PUSH4 0x58047913 EQ PUSH3 0x6B9 JUMPI DUP1 PUSH4 0x60918117 EQ PUSH3 0x6C3 JUMPI DUP1 PUSH4 0x6427ED97 EQ PUSH3 0x6CD JUMPI DUP1 PUSH4 0x6467C09A EQ PUSH3 0x6EF JUMPI PUSH3 0x33A JUMP JUMPDEST DUP1 PUSH4 0x41C12A70 EQ PUSH3 0x660 JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH3 0x66A JUMPI DUP1 PUSH4 0x49B210B7 EQ PUSH3 0x68A JUMPI PUSH3 0x33A JUMP JUMPDEST DUP1 PUSH4 0x313CE567 EQ PUSH3 0x52C JUMPI DUP1 PUSH4 0x32A7AE95 EQ PUSH3 0x54C JUMPI DUP1 PUSH4 0x3549788A EQ PUSH3 0x575 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH3 0x57F JUMPI DUP1 PUSH4 0x3BCC45BA EQ PUSH3 0x5AE JUMPI DUP1 PUSH4 0x4000AEA0 EQ PUSH3 0x5D7 JUMPI PUSH3 0x33A JUMP JUMPDEST DUP1 PUSH4 0x141C7068 GT PUSH3 0x2F1 JUMPI DUP1 PUSH4 0x141C7068 EQ PUSH3 0x47B JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH3 0x485 JUMPI DUP1 PUSH4 0x1E3B9DE5 EQ PUSH3 0x48F JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH3 0x4B8 JUMPI DUP1 PUSH4 0x26773DDD EQ PUSH3 0x4F1 JUMPI DUP1 PUSH4 0x2A0A4ED5 EQ PUSH3 0x522 JUMPI PUSH3 0x33A JUMP JUMPDEST DUP1 PUSH4 0x2FB0C5E EQ PUSH3 0x33F JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH3 0x35D JUMPI DUP1 PUSH4 0x832E470 EQ PUSH3 0x3DF JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH3 0x3FB JUMPI DUP1 PUSH4 0xC6F0E5D EQ PUSH3 0x42A JUMPI DUP1 PUSH4 0xCD865EC EQ PUSH3 0x450 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x349 PUSH3 0xA61 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH3 0x367 PUSH3 0xA6A JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP4 MLOAD DUP2 DUP4 ADD MSTORE DUP4 MLOAD SWAP2 SWAP3 DUP4 SWAP3 SWAP1 DUP4 ADD SWAP2 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x3A3 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH3 0x389 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH3 0x3D1 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH3 0x3E9 PUSH3 0xC25 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH3 0x349 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH3 0x413 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH3 0xC2B JUMP JUMPDEST PUSH3 0x434 PUSH3 0xC44 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH3 0x479 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH3 0x468 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH3 0xC53 JUMP JUMPDEST STOP JUMPDEST PUSH3 0x479 PUSH3 0xF37 JUMP JUMPDEST PUSH3 0x3E9 PUSH3 0x1378 JUMP JUMPDEST PUSH3 0x434 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH3 0x4A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH3 0x137E JUMP JUMPDEST PUSH3 0x349 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH3 0x4D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH3 0x139F JUMP JUMPDEST PUSH3 0x479 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH3 0x509 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 ADD CALLDATALOAD AND PUSH3 0x13F6 JUMP JUMPDEST PUSH3 0x434 PUSH3 0x1721 JUMP JUMPDEST PUSH3 0x536 PUSH3 0x1799 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xFF SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH3 0x479 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH3 0x564 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH3 0x17A2 JUMP JUMPDEST PUSH3 0x3E9 PUSH3 0x1A0A JUMP JUMPDEST PUSH3 0x349 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH3 0x597 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH3 0x1A10 JUMP JUMPDEST PUSH3 0x434 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH3 0x5C6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH3 0x1A49 JUMP JUMPDEST PUSH3 0x349 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH3 0x5EF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 CALLDATALOAD AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP2 DUP2 ADD SWAP1 PUSH1 0x60 DUP2 ADD PUSH1 0x40 DUP3 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x20 SHL DUP2 GT ISZERO PUSH3 0x61F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH3 0x632 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH1 0x1 PUSH1 0x20 SHL DUP4 GT OR ISZERO PUSH3 0x654 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP SWAP1 SWAP3 POP SWAP1 POP PUSH3 0x1A6A JUMP JUMPDEST PUSH3 0x479 PUSH3 0x1B31 JUMP JUMPDEST PUSH3 0x479 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH3 0x682 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH3 0x1C0D JUMP JUMPDEST PUSH3 0x479 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH3 0x6A2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH3 0x1C7F JUMP JUMPDEST PUSH3 0x434 PUSH3 0x21B5 JUMP JUMPDEST PUSH3 0x3E9 PUSH3 0x21C4 JUMP JUMPDEST PUSH3 0x479 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH3 0x6E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD ISZERO ISZERO PUSH3 0x21CA JUMP JUMPDEST PUSH3 0x434 PUSH3 0x21E9 JUMP JUMPDEST PUSH3 0x479 PUSH3 0x21F8 JUMP JUMPDEST PUSH3 0x479 PUSH3 0x235D JUMP JUMPDEST PUSH3 0x3E9 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH3 0x725 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH3 0x2692 JUMP JUMPDEST PUSH3 0x3E9 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH3 0x74E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH3 0x26AD JUMP JUMPDEST PUSH3 0x3E9 PUSH3 0x2762 JUMP JUMPDEST PUSH3 0x479 PUSH3 0x2768 JUMP JUMPDEST PUSH3 0x479 PUSH3 0x29FD JUMP JUMPDEST PUSH3 0x367 PUSH3 0x2A76 JUMP JUMPDEST PUSH3 0x3E9 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH3 0x79F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH3 0x2BEE JUMP JUMPDEST PUSH3 0x3E9 PUSH3 0x2C0C JUMP JUMPDEST PUSH3 0x349 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH3 0x7D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH3 0x2C12 JUMP JUMPDEST PUSH3 0x349 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH3 0x7FB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH3 0x2C31 JUMP JUMPDEST PUSH3 0x479 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH3 0x82A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 CALLDATALOAD AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP2 DUP2 ADD SWAP1 PUSH1 0x60 DUP2 ADD PUSH1 0x40 DUP3 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x20 SHL DUP2 GT ISZERO PUSH3 0x85A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH3 0x86D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH1 0x1 PUSH1 0x20 SHL DUP4 GT OR ISZERO PUSH3 0x88F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP SWAP1 SWAP3 POP SWAP1 POP PUSH3 0x2C6A JUMP JUMPDEST PUSH3 0x349 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH3 0x8B3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH3 0x2C94 JUMP JUMPDEST PUSH3 0x349 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH3 0x8E2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH3 0x2CA9 JUMP JUMPDEST PUSH3 0x434 PUSH3 0x2CBE JUMP JUMPDEST PUSH3 0x349 PUSH3 0x2CCD JUMP JUMPDEST PUSH3 0x479 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH3 0x91F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH3 0x2CEA JUMP JUMPDEST PUSH3 0x434 PUSH3 0x2E25 JUMP JUMPDEST PUSH3 0x969 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH3 0x958 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH3 0x2E34 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP5 POP POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH3 0x367 PUSH3 0x2E66 JUMP JUMPDEST PUSH3 0x3E9 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH3 0x9C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 ADD CALLDATALOAD AND PUSH3 0x2EF8 JUMP JUMPDEST PUSH3 0xA01 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH3 0x9F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH3 0x2F23 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP1 MLOAD SWAP2 DUP3 SWAP1 SUB ADD SWAP1 RETURN JUMPDEST PUSH3 0x479 PUSH3 0x3036 JUMP JUMPDEST PUSH3 0x3E9 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH3 0xA46 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH3 0x318A JUMP JUMPDEST PUSH3 0x349 PUSH3 0x31A8 JUMP JUMPDEST PUSH1 0xF SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x6FDDE03 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD PUSH1 0x60 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0x6FDDE03 SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x0 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0xAB0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH3 0xAC5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH1 0x20 DUP2 LT ISZERO PUSH3 0xAEF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD PUSH1 0x40 MLOAD SWAP4 SWAP3 SWAP2 SWAP1 DUP5 PUSH1 0x1 PUSH1 0x20 SHL DUP3 GT ISZERO PUSH3 0xB0F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 DUP4 ADD SWAP1 PUSH1 0x20 DUP3 ADD DUP6 DUP2 GT ISZERO PUSH3 0xB25 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x20 SHL DUP2 GT DUP3 DUP3 ADD DUP9 LT OR ISZERO PUSH3 0xB3F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MSTORE POP DUP2 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0xB6E JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH3 0xB54 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH3 0xB9C JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP PUSH1 0x40 MSTORE POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP1 PUSH10 0x223930B3B3B0B136329 PUSH1 0xB5 SHL DUP2 MSTORE POP PUSH1 0xA ADD DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH3 0xBEC JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x1F NOT SWAP1 SWAP3 ADD SWAP2 PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH3 0xBCB JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH3 0xC3A CALLER DUP5 DUP5 PUSH3 0x31CE JUMP JUMPDEST POP PUSH1 0x1 JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH3 0xC5D PUSH3 0x3D6D JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP3 MLOAD PUSH1 0x80 DUP2 ADD DUP5 MSTORE DUP2 SLOAD DUP6 AND DUP2 MSTORE PUSH1 0x1 DUP3 ADD SLOAD SWAP3 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x2 DUP3 ADD SLOAD SWAP4 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x3 ADD SLOAD SWAP1 SWAP3 AND PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE SWAP1 SWAP2 SWAP1 DUP2 PUSH3 0xCF5 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x139BC818DB185A5B48199BDD5B99 PUSH1 0x92 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH3 0xD54 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C7920636C61696D616E742063616E207265736F6C766520636C61696D00 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST TIMESTAMP PUSH3 0xD70 PUSH1 0x4 SLOAD DUP6 PUSH1 0x40 ADD MLOAD PUSH3 0x32BE SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST GT ISZERO PUSH3 0xDC4 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436C61696D20706572696F64206E6F74206F7665722079657400000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND DUP3 SSTORE PUSH1 0x1 DUP3 ADD DUP6 SWAP1 SSTORE PUSH1 0x2 DUP3 ADD DUP6 SWAP1 SSTORE PUSH1 0x3 SWAP1 SWAP2 ADD DUP1 SLOAD SWAP1 SWAP2 AND SWAP1 SSTORE DUP1 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE DUP5 DUP7 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP9 SWAP1 MSTORE SWAP1 MLOAD SWAP4 DUP7 AND SWAP4 PUSH4 0xA9059CBB SWAP4 PUSH1 0x44 DUP1 DUP5 ADD SWAP5 SWAP4 DUP4 SWAP1 SUB ADD SWAP1 DUP3 SWAP1 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0xE51 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH3 0xE66 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH3 0xE7D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH3 0xECE JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH26 0x10DBDB1B185D195C985B081D1C985B9CD9995C8819985A5B1959 PUSH1 0x32 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH3 0xEE5 DUP6 DUP3 PUSH3 0xEDF DUP9 PUSH3 0x2692 JUMP JUMPDEST PUSH3 0x32CC JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x52A5C2B28BC6EB9712D0CED43463103B486B13CCC9CDA499FD3B2D7B6A74A8EE DUP6 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP JUMP JUMPDEST PUSH3 0xF41 PUSH3 0x2CCD JUMP JUMPDEST DUP1 ISZERO PUSH3 0xF50 JUMPI POP PUSH1 0xF SLOAD PUSH1 0xFF AND JUMPDEST PUSH3 0xF91 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH3 0x4AAE DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0xB SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x38A86C57 PUSH1 0xE1 SHL DUP2 MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0x7150D8AE SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0xFD7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH3 0xFEC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH3 0x1003 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 POP CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ PUSH3 0x1050 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x39 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH3 0x4B66 PUSH1 0x39 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xB PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xD7BE4E29 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x109F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH3 0x10B4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH3 0x10CB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH3 0x111F JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E74206E756D626572206F662079657320766F746573 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0xB SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xB28FA152 PUSH3 0x113B DUP4 PUSH3 0x2692 JUMP JUMPDEST PUSH3 0x1145 PUSH3 0x1378 JUMP JUMPDEST SUB PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x117B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH3 0x1190 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH3 0x11A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH3 0x11FB JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6666657220696E73756666696369656E746C792066756E6465640000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH3 0x12F7 DUP2 PUSH1 0xB PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xE5A6B10F PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x124F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH3 0x1264 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH3 0x127B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0xB SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x501AD8FF PUSH1 0xE1 SHL DUP2 MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 PUSH4 0xA035B1FE SWAP2 PUSH1 0x4 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x12C3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH3 0x12D8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH3 0x12EF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH3 0x32DE JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x40 DUP1 MLOAD CALLER DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 DUP2 DUP4 ADD DUP2 SWAP1 MSTORE PUSH1 0x16 SWAP1 DUP3 ADD MSTORE PUSH22 0x436F6D706C65746564207375636365737366756C6C79 PUSH1 0x50 SHL PUSH1 0xA0 DUP3 ADD MSTORE SWAP1 MLOAD SWAP2 DUP4 AND SWAP2 PUSH32 0xC88F58AE9FEB0742D9422F604DD3C1BE6D02818F8DEC340C5061F428B554E975 SWAP2 DUP2 SWAP1 SUB PUSH1 0xC0 ADD SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD AND JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x13AE DUP5 DUP5 DUP5 PUSH3 0x32CC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP1 DUP6 MSTORE SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 SLOAD PUSH3 0x13EC SWAP2 DUP7 SWAP2 PUSH3 0x13E6 SWAP1 DUP7 PUSH3 0x3505 JUMP JUMPDEST PUSH3 0x31CE JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH3 0x1401 DUP2 PUSH3 0x2C12 JUMP JUMPDEST PUSH3 0x1453 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436C61696D732064697361626C656420666F7220746869732061646472657373 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH3 0x1460 DUP4 PUSH3 0x26AD JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT PUSH3 0x14B1 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x155B9CDD5C1C1BDC9D19590818DBDB1B185D195C985B PUSH1 0x52 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST CALLER PUSH1 0x0 PUSH3 0x14BF DUP5 PUSH3 0x2692 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH3 0x14CF DUP3 DUP6 PUSH3 0x3518 JUMP JUMPDEST SWAP1 POP DUP6 DUP3 PUSH3 0x1525 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436C61696D6564206164647265737320686F6C6473206E6F2073686172657300 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD ISZERO PUSH3 0x1594 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4164647265737320616C726561647920636C61696D6564000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE ADDRESS PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD DUP6 SWAP1 MSTORE SWAP2 MLOAD SWAP2 DUP4 AND SWAP2 PUSH4 0x23B872DD SWAP2 PUSH1 0x64 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x15EE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH3 0x1603 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH3 0x161A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH3 0x166B JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH26 0x10DBDB1B185D195C985B081D1C985B9CD9995C8819985A5B1959 PUSH1 0x32 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x80 DUP2 ADD DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP8 AND DUP1 DUP4 MSTORE PUSH1 0x20 DUP1 DUP5 ADD DUP8 DUP2 MSTORE TIMESTAMP DUP6 DUP8 ADD SWAP1 DUP2 MSTORE DUP14 DUP6 AND PUSH1 0x60 DUP8 ADD SWAP1 DUP2 MSTORE DUP14 DUP7 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 DUP7 MSTORE DUP10 SWAP1 KECCAK256 SWAP8 MLOAD DUP9 SLOAD SWAP1 DUP9 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP2 DUP3 AND OR DUP10 SSTORE SWAP4 MLOAD PUSH1 0x1 DUP10 ADD SSTORE SWAP2 MLOAD PUSH1 0x2 DUP9 ADD SSTORE MLOAD PUSH1 0x3 SWAP1 SWAP7 ADD DUP1 SLOAD SWAP7 SWAP1 SWAP6 AND SWAP6 SWAP1 SWAP2 AND SWAP5 SWAP1 SWAP5 OR SWAP1 SWAP3 SSTORE DUP4 MLOAD DUP8 DUP2 MSTORE SWAP4 MLOAD SWAP1 SWAP4 PUSH32 0x1982CA8958FC8A8176CB52BE509260F4BC5AF7CE04E1533711793F1C56DD5359 SWAP3 SWAP1 DUP3 SWAP1 SUB ADD SWAP1 LOG3 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x172D PUSH3 0x21B5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x2A0A4ED5 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x1766 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH3 0x177B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH3 0x1792 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH3 0x17AC PUSH3 0x1721 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH3 0x1812 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F752063616E6E6F742064656C65746520636C61696D730000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH3 0x181C PUSH3 0x3D6D JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP3 MLOAD PUSH1 0x80 DUP2 ADD DUP5 MSTORE DUP2 SLOAD DUP6 AND DUP2 MSTORE PUSH1 0x1 DUP3 ADD SLOAD SWAP3 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x2 DUP3 ADD SLOAD SWAP4 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x3 ADD SLOAD SWAP1 SWAP3 AND PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE SWAP1 SWAP2 PUSH3 0x18B2 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x139BC818DB185A5B48199BDD5B99 PUSH1 0x92 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND DUP3 SSTORE PUSH1 0x1 DUP3 ADD DUP6 SWAP1 SSTORE PUSH1 0x2 DUP3 ADD DUP6 SWAP1 SSTORE PUSH1 0x3 SWAP1 SWAP2 ADD DUP1 SLOAD SWAP1 SWAP2 AND SWAP1 SSTORE DUP6 MLOAD DUP7 DUP4 ADD MLOAD DUP3 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE SWAP2 DUP7 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE SWAP1 MLOAD SWAP4 DUP6 AND SWAP4 PUSH4 0xA9059CBB SWAP4 PUSH1 0x44 DUP1 DUP5 ADD SWAP5 SWAP4 DUP4 SWAP1 SUB ADD SWAP1 DUP3 SWAP1 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x1941 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH3 0x1956 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH3 0x196D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH3 0x19BE JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH26 0x10DBDB1B185D195C985B081D1C985B9CD9995C8819985A5B1959 PUSH1 0x32 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x20 DUP1 DUP5 ADD MLOAD PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND SWAP4 DUP8 AND SWAP3 PUSH32 0xBB036E629A9F4C0897EE5D48440DFDB36F7E772117723A2ED603A6514244C2D5 SWAP3 DUP3 SWAP1 SUB ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0xE SLOAD DUP2 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 PUSH3 0xC3A SWAP2 DUP6 SWAP1 PUSH3 0x13E6 SWAP1 DUP7 PUSH3 0x32BE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x3 ADD SLOAD AND SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH3 0x1A79 DUP7 DUP7 PUSH3 0x2C94 JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH3 0x1B28 JUMPI DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xA4C0ED36 CALLER DUP8 DUP8 DUP8 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP5 DUP5 DUP3 DUP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP SWAP6 POP POP POP POP POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x1B0E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH3 0x1B23 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH3 0x1B3B PUSH3 0x2CCD JUMP JUMPDEST DUP1 ISZERO PUSH3 0x1B4A JUMPI POP PUSH1 0xF SLOAD PUSH1 0xFF AND JUMPDEST PUSH3 0x1B8B JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH3 0x4AAE DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0xB SLOAD CALLER SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x4B91562E DUP3 PUSH3 0x1BAA DUP2 PUSH3 0x2692 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x1BF1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH3 0x1C06 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH3 0x1C19 CALLER DUP3 PUSH3 0x3541 JUMP JUMPDEST PUSH3 0x1C23 PUSH3 0x21B5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x42966C68 PUSH3 0x1C48 PUSH1 0xA SLOAD DUP5 PUSH3 0x3518 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x1BF1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0xF SLOAD PUSH1 0xFF AND PUSH3 0x1CD7 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416E206163636570746564206F66666572206578697374730000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH3 0x1CE3 PUSH3 0x21B5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x3A98EF39 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x1D1E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH3 0x1D33 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH3 0x1D4A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 POP CALLER PUSH3 0x1D6B PUSH2 0x2710 PUSH3 0x1D64 DUP5 PUSH2 0xBB8 PUSH3 0x3518 JUMP JUMPDEST SWAP1 PUSH3 0x354D JUMP JUMPDEST PUSH3 0x1D75 PUSH3 0x1378 JUMP JUMPDEST LT ISZERO PUSH3 0x1DB4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2E DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH3 0x4B14 PUSH1 0x2E SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x1DC9 PUSH2 0x2710 PUSH3 0x1D64 DUP5 PUSH2 0x1F4 PUSH3 0x3518 JUMP JUMPDEST PUSH3 0x1DD4 DUP3 PUSH3 0x2692 JUMP JUMPDEST LT ISZERO PUSH3 0x1E13 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x39 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH3 0x4B9F PUSH1 0x39 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xC SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH1 0x0 SWAP1 PUSH8 0xDE0B6B3A7640000 SWAP1 DUP3 DUP2 DUP2 DUP2 DUP6 DUP9 DUP4 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH3 0x1E51 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x0 CALLER DUP5 DUP7 PUSH1 0xE SLOAD PUSH1 0x40 MLOAD PUSH3 0x1E68 SWAP1 PUSH3 0x3DA7 JUMP JUMPDEST DUP1 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP5 POP POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 PUSH1 0x0 CREATE DUP1 ISZERO DUP1 ISZERO PUSH3 0x1EB6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xB28FA152 PUSH3 0x1ED3 DUP5 PUSH3 0x2692 JUMP JUMPDEST PUSH3 0x1EDD PUSH3 0x1378 JUMP JUMPDEST SUB PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x1F13 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH3 0x1F28 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH3 0x1F3F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH3 0x1F8A JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x496E73756666696369656E742066756E64696E67 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH3 0x1F94 PUSH3 0x2CCD JUMP JUMPDEST ISZERO PUSH3 0x2140 JUMPI PUSH1 0xB PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xE5A6B10F PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x1FE9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH3 0x1FFE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH3 0x2015 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND SWAP2 AND EQ DUP1 ISZERO PUSH3 0x20C3 JUMPI POP PUSH3 0x20BF PUSH2 0x2710 PUSH3 0x1D64 PUSH2 0x2904 PUSH1 0xB PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xA035B1FE PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x208A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH3 0x209F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH3 0x20B6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 PUSH3 0x3518 JUMP JUMPDEST DUP6 LT ISZERO JUMPDEST PUSH3 0x2100 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x3C DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH3 0x4A72 PUSH1 0x3C SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x2140 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1C DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4F66666572207265706C61636564206279206869676865722062696400000000 DUP2 MSTORE POP PUSH3 0x3561 JUMP JUMPDEST PUSH1 0xB DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SWAP2 SSTORE DUP3 AND PUSH32 0x9C00F159B1FA9EAEBDA7ACAF50BE0BF3A652277380F907B35CB681BD641A62D3 DUP7 PUSH3 0x218E PUSH3 0x21E9 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x20 DUP4 ADD MSTORE DUP1 MLOAD SWAP2 DUP3 SWAP1 SUB ADD SWAP1 LOG2 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD ISZERO PUSH3 0x235B JUMPI CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 DUP2 ADD DUP1 SLOAD PUSH1 0x3 DUP4 ADD DUP1 SLOAD DUP5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND DUP7 SSTORE SWAP4 DUP9 SWAP1 SSTORE PUSH1 0x2 SWAP1 SWAP5 ADD DUP8 SWAP1 SSTORE SWAP2 DUP4 AND SWAP1 SWAP2 SSTORE DUP3 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP7 SWAP1 SWAP7 MSTORE PUSH1 0x24 DUP7 ADD DUP2 SWAP1 MSTORE SWAP2 MLOAD SWAP2 SWAP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP4 DUP5 SWAP4 PUSH4 0xA9059CBB SWAP4 PUSH1 0x44 DUP1 DUP6 ADD SWAP5 SWAP3 SWAP4 SWAP2 SWAP3 DUP4 SWAP1 SUB ADD SWAP1 DUP3 SWAP1 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x22A5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH3 0x22BA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH3 0x22D1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH3 0x2322 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH26 0x10DBDB1B185D195C985B081D1C985B9CD9995C8819985A5B1959 PUSH1 0x32 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP4 DUP2 MSTORE SWAP1 MLOAD CALLER SWAP2 PUSH32 0x203627483D943880619F4B7E0CCA21DBEFD6204B4D85B124EB99540E17BA86DD SWAP2 SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG2 POP POP JUMPDEST JUMP JUMPDEST PUSH3 0x2367 PUSH3 0x2CCD JUMP JUMPDEST DUP1 ISZERO PUSH3 0x2376 JUMPI POP PUSH1 0xF SLOAD PUSH1 0xFF AND JUMPDEST PUSH3 0x23B7 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH3 0x4AAE DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0xB PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x90E64D13 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x2406 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH3 0x241B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH3 0x2432 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD ISZERO PUSH3 0x2470 JUMPI PUSH3 0x246A PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xD DUP2 MSTORE PUSH1 0x20 ADD PUSH13 0x13D999995C88195E1C1A5C9959 PUSH1 0x9A SHL DUP2 MSTORE POP PUSH3 0x3561 JUMP JUMPDEST PUSH3 0x235B JUMP JUMPDEST PUSH1 0xB PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xCF42A927 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x24BF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH3 0x24D4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH3 0x24EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD ISZERO PUSH3 0x2528 JUMPI PUSH3 0x246A PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH18 0x139BDD08195B9BDD59DA081CDD5C1C1BDC9D PUSH1 0x72 SHL DUP2 MSTORE POP PUSH3 0x3561 JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x38A86C57 PUSH1 0xE1 SHL DUP2 MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 PUSH4 0xB28FA152 SWAP2 PUSH3 0x25AE SWAP2 DUP5 SWAP2 PUSH4 0x7150D8AE SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x257A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH3 0x258F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH3 0x25A6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH3 0x2692 JUMP JUMPDEST PUSH3 0x25B8 PUSH3 0x1378 JUMP JUMPDEST SUB PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x25EE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH3 0x2603 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH3 0x261A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH3 0x2645 JUMPI PUSH3 0x246A PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0x49E4 PUSH1 0x21 SWAP2 CODECOPY PUSH3 0x3561 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4163717569736974696F6E20636F6E7465737420756E7375636365737366756C PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH3 0x26BB DUP4 PUSH3 0x3731 JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH3 0x26CC JUMPI SWAP1 POP PUSH3 0x139A JUMP JUMPDEST PUSH3 0x26D6 PUSH3 0x21B5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH3 0x26FB JUMPI POP POP PUSH1 0xA SLOAD PUSH3 0x139A JUMP JUMPDEST PUSH3 0x2759 PUSH1 0xA SLOAD PUSH3 0x270C PUSH3 0x21B5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x77E071AD DUP7 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x208A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 POP POP PUSH3 0x139A JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0xF SLOAD PUSH1 0xFF AND PUSH3 0x27B9 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x436F6E7472616374206973206E6F7420616374697665 PUSH1 0x50 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 CALLER SWAP1 POP PUSH3 0x27DD PUSH2 0x2710 PUSH3 0x1D64 PUSH1 0xD SLOAD PUSH3 0x27D6 PUSH3 0x1378 JUMP JUMPDEST SWAP1 PUSH3 0x3518 JUMP JUMPDEST PUSH3 0x27E8 DUP3 PUSH3 0x2692 JUMP JUMPDEST LT ISZERO PUSH3 0x2831 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x145D5BDC9D5B481B9BDD081C995858DA1959 PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH3 0x283B PUSH3 0x2CCD JUMP JUMPDEST ISZERO PUSH3 0x29B0 JUMPI PUSH1 0xB PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xCF42A927 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x2890 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH3 0x28A5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH3 0x28BC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH3 0x2994 JUMPI PUSH3 0x28CD PUSH3 0x1B31 JUMP JUMPDEST PUSH1 0xB PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xCF42A927 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x291C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH3 0x2931 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH3 0x2948 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH3 0x2994 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x145D5BDC9D5B481A185CC81B9BDD0819985A5B1959 PUSH1 0x5A SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH3 0x299E PUSH3 0x235D JUMP JUMPDEST PUSH3 0x29A8 PUSH3 0x2CCD JUMP JUMPDEST ISZERO PUSH3 0x29B0 JUMPI INVALID JUMPDEST PUSH3 0x29BE DUP2 DUP3 PUSH1 0x1 PUSH3 0x32DE JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND DUP2 MSTORE SWAP1 MLOAD PUSH32 0x3B6B79A09E9FD230E8591B65C97236BF7DF7A604EDF733DB0658E66B0E6EB2A9 SWAP2 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG1 POP JUMP JUMPDEST PUSH3 0x2A07 PUSH3 0x2CCD JUMP JUMPDEST DUP1 ISZERO PUSH3 0x2A16 JUMPI POP PUSH1 0xF SLOAD PUSH1 0xFF AND JUMPDEST PUSH3 0x2A57 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH3 0x4AAE DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0xB SLOAD CALLER SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x5FF0CF84 DUP3 PUSH3 0x1BAA DUP2 PUSH3 0x2692 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x95D89B41 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD PUSH1 0x60 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0x95D89B41 SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x0 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x2ABC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH3 0x2AD1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH1 0x20 DUP2 LT ISZERO PUSH3 0x2AFB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD PUSH1 0x40 MLOAD SWAP4 SWAP3 SWAP2 SWAP1 DUP5 PUSH1 0x1 PUSH1 0x20 SHL DUP3 GT ISZERO PUSH3 0x2B1B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 DUP4 ADD SWAP1 PUSH1 0x20 DUP3 ADD DUP6 DUP2 GT ISZERO PUSH3 0x2B31 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x20 SHL DUP2 GT DUP3 DUP3 ADD DUP9 LT OR ISZERO PUSH3 0x2B4B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MSTORE POP DUP2 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x2B7A JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH3 0x2B60 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH3 0x2BA8 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP PUSH1 0x40 MSTORE POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP1 PUSH1 0x11 PUSH1 0xFA SHL DUP2 MSTORE POP PUSH1 0x1 ADD DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x20 DUP4 LT PUSH3 0xBEC JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x1F NOT SWAP1 SWAP3 ADD SWAP2 PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH3 0xBCB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH1 0xD SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO SWAP1 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 PUSH3 0xC3A SWAP2 DUP6 SWAP1 PUSH3 0x13E6 SWAP1 DUP7 PUSH3 0x3505 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH3 0x2C82 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x2C8E DUP5 DUP5 PUSH3 0x3778 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x2CA2 DUP4 DUP4 PUSH3 0x3834 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0xC SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH3 0x2CDA PUSH3 0x21E9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO SWAP1 POP SWAP1 JUMP JUMPDEST PUSH3 0x2CF4 PUSH3 0x2CCD JUMP JUMPDEST ISZERO PUSH3 0x2D42 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH24 0x2A3432B9329034B99030903832B73234B7339037B33332B9 PUSH1 0x41 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x9 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP5 SWAP1 MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 PUSH4 0x23B872DD SWAP2 PUSH1 0x64 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x2D9D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH3 0x2DB2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH3 0x2DC9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH3 0x2E15 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x14DA185C99481D1C985B9CD9995C8819985A5B1959 PUSH1 0x5A SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH3 0x2E21 DUP3 DUP3 PUSH3 0x3778 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x3 SWAP1 SWAP4 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND SWAP4 SWAP2 SWAP3 AND DUP5 JUMP JUMPDEST PUSH1 0x10 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x2 PUSH1 0x1 DUP6 AND ISZERO PUSH2 0x100 MUL PUSH1 0x0 NOT ADD SWAP1 SWAP5 AND SWAP4 SWAP1 SWAP4 DIV PUSH1 0x1F DUP2 ADD DUP5 SWAP1 DIV DUP5 MUL DUP3 ADD DUP5 ADD SWAP1 SWAP3 MSTORE DUP2 DUP2 MSTORE SWAP3 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH3 0x2EF0 JUMPI DUP1 PUSH1 0x1F LT PUSH3 0x2EC4 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH3 0x2EF0 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH3 0x2ED2 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0xF SLOAD PUSH1 0x0 SWAP1 DUP2 SWAP1 PUSH1 0xFF AND ISZERO PUSH3 0x2F6C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x36 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH3 0x4A05 PUSH1 0x36 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x2F78 CALLER DUP5 PUSH3 0x3541 JUMP JUMPDEST PUSH1 0x0 PUSH3 0x2F91 PUSH1 0xA SLOAD DUP6 PUSH3 0x3518 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP5 SWAP1 MSTORE SWAP1 MLOAD SWAP3 SWAP4 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 PUSH4 0xA9059CBB SWAP2 PUSH1 0x44 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x2FE9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH3 0x2FFE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH3 0x3015 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH3 0x3021 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x9 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP3 POP SWAP1 POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH3 0x3040 PUSH3 0x2CCD JUMP JUMPDEST DUP1 ISZERO PUSH3 0x304F JUMPI POP PUSH1 0xF SLOAD PUSH1 0xFF AND JUMPDEST PUSH3 0x3090 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH3 0x4AAE DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0xB PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x7150D8AE PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x30DF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH3 0x30F4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH3 0x310B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH3 0x3155 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x37 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH3 0x4A3B PUSH1 0x37 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x235B PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH18 0x21B0B731B2B63632B210313C90313ABCB2B9 PUSH1 0x71 SHL DUP2 MSTORE POP PUSH3 0x3561 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH3 0x31B4 PUSH3 0x2CCD JUMP JUMPDEST PUSH3 0x31C1 JUMPI PUSH1 0x0 PUSH3 0x31C9 JUMP JUMPDEST PUSH1 0xF SLOAD PUSH1 0xFF AND ISZERO JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH3 0x3215 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH3 0x4B42 PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH3 0x325C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH3 0x49C2 PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE DUP2 MLOAD DUP6 DUP2 MSTORE SWAP2 MLOAD PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST DUP2 DUP2 ADD DUP3 DUP2 LT ISZERO PUSH3 0xC3E JUMPI INVALID JUMPDEST PUSH3 0x32D9 DUP4 DUP4 DUP4 PUSH3 0x3890 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x32EB DUP5 PUSH3 0x2692 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH3 0x32F9 PUSH3 0x1378 JUMP JUMPDEST PUSH1 0xF DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE SWAP1 POP PUSH3 0x3310 DUP3 PUSH3 0x2F23 JUMP JUMPDEST POP PUSH1 0x0 SWAP1 POP PUSH3 0x3321 DUP3 DUP5 PUSH3 0x3505 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP6 SWAP1 MSTORE SWAP2 MLOAD SWAP4 SWAP5 POP SWAP2 AND SWAP2 PUSH4 0xA9059CBB SWAP2 PUSH1 0x44 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x337A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH3 0x338F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH3 0x33A6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH3 0x33EC JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x1D1C985B9CD9995C8819985A5B1959 PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x9 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND SWAP2 SWAP1 SWAP2 OR SWAP2 DUP3 SWAP1 SSTORE PUSH1 0xA DUP7 SWAP1 SSTORE AND PUSH4 0x23B872DD DUP8 ADDRESS PUSH3 0x3426 DUP9 DUP7 PUSH3 0x3518 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP4 POP POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x347D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH3 0x3492 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH3 0x34A9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH3 0x34FD JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4261636B696E67207472616E73666572206661696C6564000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 GT ISZERO PUSH3 0x3512 JUMPI INVALID JUMPDEST POP SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH3 0x3529 JUMPI POP PUSH1 0x0 PUSH3 0xC3E JUMP JUMPDEST POP DUP2 DUP2 MUL DUP2 DUP4 DUP3 DUP2 PUSH3 0x3538 JUMPI INVALID JUMPDEST DIV EQ PUSH3 0xC3E JUMPI INVALID JUMPDEST PUSH3 0x2E21 DUP3 DUP3 PUSH3 0x3938 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 DUP2 PUSH3 0x3559 JUMPI INVALID JUMPDEST DIV SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x38A86C57 PUSH1 0xE1 SHL DUP2 MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0x7150D8AE SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x35A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH3 0x35BC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH3 0x35D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH32 0xC88F58AE9FEB0742D9422F604DD3C1BE6D02818F8DEC340C5061F428B554E975 CALLER PUSH1 0x0 DUP6 PUSH3 0x3610 PUSH3 0x21E9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP5 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x3675 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH3 0x365B JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH3 0x36A3 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP6 POP POP POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0xB PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x41C0E1B5 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x3704 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH3 0x3719 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0xB DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ADDRESS EQ ISZERO PUSH3 0x374E JUMPI POP PUSH1 0x1 PUSH3 0x139A JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND SWAP2 AND EQ ISZERO PUSH3 0x376F JUMPI POP PUSH1 0x8 SLOAD PUSH3 0x139A JUMP JUMPDEST POP PUSH1 0x0 PUSH3 0x139A JUMP JUMPDEST PUSH3 0x3782 PUSH3 0x2CCD JUMP JUMPDEST ISZERO PUSH3 0x37D0 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH24 0x2A3432B9329034B99030903832B73234B7339037B33332B9 PUSH1 0x41 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0xF SLOAD PUSH1 0xFF AND PUSH3 0x3828 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436F6E7472616374206E6F742061637469766520616E79206D6F72652E000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH3 0x2E21 DUP3 DUP3 PUSH3 0x39D3 JUMP JUMPDEST PUSH1 0x0 PUSH3 0x3842 DUP4 DUP4 PUSH3 0x39DF JUMP JUMPDEST PUSH3 0x3886 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x151C985B9CD9995C8819985A5B1959 PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH3 0xC3A PUSH3 0x21F8 JUMP JUMPDEST PUSH3 0x389D DUP4 DUP4 DUP4 PUSH3 0x39EE JUMP JUMPDEST PUSH3 0x38A7 PUSH3 0x2CCD JUMP JUMPDEST DUP1 ISZERO PUSH3 0x38B6 JUMPI POP PUSH1 0xF SLOAD PUSH1 0xFF AND JUMPDEST ISZERO PUSH3 0x32D9 JUMPI PUSH1 0xB SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x6240A7D7 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE DUP6 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD DUP6 SWAP1 MSTORE SWAP2 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP2 PUSH4 0xC4814FAE SWAP2 PUSH1 0x64 DUP1 DUP4 ADD SWAP3 PUSH1 0x0 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP4 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x391A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH3 0x392F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH3 0x3944 DUP3 DUP3 PUSH3 0x3B2C JUMP JUMPDEST PUSH3 0x394E PUSH3 0x2CCD JUMP JUMPDEST DUP1 ISZERO PUSH3 0x395D JUMPI POP PUSH1 0xF SLOAD PUSH1 0xFF AND JUMPDEST ISZERO PUSH3 0x2E21 JUMPI PUSH1 0xB SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x6240A7D7 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x0 PUSH1 0x24 DUP4 ADD DUP2 SWAP1 MSTORE PUSH1 0x44 DUP4 ADD DUP7 SWAP1 MSTORE SWAP3 MLOAD SWAP4 AND SWAP3 PUSH4 0xC4814FAE SWAP3 PUSH1 0x64 DUP1 DUP5 ADD SWAP4 SWAP2 SWAP3 SWAP2 DUP3 SWAP1 SUB ADD DUP2 DUP4 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x39BE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH3 0x34FD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST PUSH3 0x2E21 DUP3 DUP3 PUSH3 0x3BFF JUMP JUMPDEST PUSH1 0x0 PUSH3 0xC3A CALLER DUP5 DUP5 PUSH3 0x32CC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH3 0x3A35 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH3 0x4AEF PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH3 0x3A7C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH3 0x499F PUSH1 0x23 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH3 0x3AA1 SWAP1 DUP3 PUSH3 0x3505 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP1 DUP5 AND DUP2 MSTORE KECCAK256 SLOAD PUSH3 0x3AD2 SWAP1 DUP3 PUSH3 0x32BE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE DUP1 MLOAD DUP6 DUP2 MSTORE SWAP1 MLOAD SWAP2 SWAP4 SWAP3 DUP8 AND SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 SWAP2 DUP3 SWAP1 SUB ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH3 0x3B73 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH3 0x4ACE PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 SLOAD PUSH3 0x3B82 SWAP1 DUP3 PUSH3 0x3505 JUMP JUMPDEST PUSH1 0x2 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH3 0x3BAA SWAP1 DUP3 PUSH3 0x3505 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE DUP4 MLOAD DUP6 DUP2 MSTORE SWAP4 MLOAD SWAP2 SWAP4 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 SWAP1 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH3 0x3C0B DUP3 DUP3 PUSH3 0x3C84 JUMP JUMPDEST PUSH3 0x3C15 PUSH3 0x2CCD JUMP JUMPDEST DUP1 ISZERO PUSH3 0x3C24 JUMPI POP PUSH1 0xF SLOAD PUSH1 0xFF AND JUMPDEST ISZERO PUSH3 0x2E21 JUMPI PUSH1 0xB SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x6240A7D7 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND PUSH1 0x24 DUP5 ADD MSTORE PUSH1 0x44 DUP4 ADD DUP7 SWAP1 MSTORE SWAP3 MLOAD SWAP3 SWAP1 SWAP4 AND SWAP3 PUSH4 0xC4814FAE SWAP3 PUSH1 0x64 DUP1 DUP5 ADD SWAP4 DUP3 SWAP1 SUB ADD DUP2 DUP4 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x39BE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH3 0x3CE0 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x2 SLOAD PUSH3 0x3CEF SWAP1 DUP3 PUSH3 0x32BE JUMP JUMPDEST PUSH1 0x2 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH3 0x3D17 SWAP1 DUP3 PUSH3 0x32BE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE DUP4 MLOAD DUP6 DUP2 MSTORE SWAP4 MLOAD SWAP3 SWAP4 SWAP2 SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH2 0xBE9 DUP1 PUSH3 0x3DB6 DUP4 CODECOPY ADD SWAP1 JUMP INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0xBE9 CODESIZE SUB DUP1 PUSH2 0xBE9 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE PUSH1 0x80 DUP2 LT ISZERO PUSH2 0x33 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 MLOAD PUSH1 0x20 DUP3 ADD MLOAD PUSH1 0x40 DUP4 ADD MLOAD PUSH1 0x60 SWAP1 SWAP4 ADD MLOAD SWAP2 SWAP3 SWAP1 SWAP2 DUP2 PUSH2 0x8C JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x696E76616C6964207072696365 PUSH1 0x98 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND CALLER OR SWAP1 SWAP2 SSTORE PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP7 DUP8 AND SWAP1 DUP4 AND OR SWAP1 SSTORE PUSH1 0x3 DUP1 SLOAD SWAP5 SWAP1 SWAP6 AND SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP3 SSTORE PUSH1 0x4 SWAP2 SWAP1 SWAP2 SSTORE PUSH1 0x0 SSTORE TIMESTAMP PUSH1 0x5 SSTORE PUSH2 0xB06 DUP1 PUSH2 0xE3 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x12C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xB1610D7E GT PUSH2 0xAD JUMPI DUP1 PUSH4 0xCF42A927 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xCF42A927 EQ PUSH2 0x2B4 JUMPI DUP1 PUSH4 0xD7BE4E29 EQ PUSH2 0x2BC JUMPI DUP1 PUSH4 0xE5A6B10F EQ PUSH2 0x2C4 JUMPI DUP1 PUSH4 0xFA7F1BAE EQ PUSH2 0x2CC JUMPI DUP1 PUSH4 0xFB286C65 EQ PUSH2 0x2D4 JUMPI PUSH2 0x12C JUMP JUMPDEST DUP1 PUSH4 0xB1610D7E EQ PUSH2 0x249 JUMPI DUP1 PUSH4 0xB28FA152 EQ PUSH2 0x251 JUMPI DUP1 PUSH4 0xB5B47F42 EQ PUSH2 0x26E JUMPI DUP1 PUSH4 0xB80777EA EQ PUSH2 0x276 JUMPI DUP1 PUSH4 0xC4814FAE EQ PUSH2 0x27E JUMPI PUSH2 0x12C JUMP JUMPDEST DUP1 PUSH4 0x5FF0CF84 GT PUSH2 0xF4 JUMPI DUP1 PUSH4 0x5FF0CF84 EQ PUSH2 0x1C3 JUMPI DUP1 PUSH4 0x7150D8AE EQ PUSH2 0x1EF JUMPI DUP1 PUSH4 0x8F1B4C6F EQ PUSH2 0x213 JUMPI DUP1 PUSH4 0x90E64D13 EQ PUSH2 0x239 JUMPI DUP1 PUSH4 0xA035B1FE EQ PUSH2 0x241 JUMPI PUSH2 0x12C JUMP JUMPDEST DUP1 PUSH4 0xC43CD88 EQ PUSH2 0x131 JUMPI DUP1 PUSH4 0x1703A018 EQ PUSH2 0x14B JUMPI DUP1 PUSH4 0x41C0E1B5 EQ PUSH2 0x153 JUMPI DUP1 PUSH4 0x448AB4C6 EQ PUSH2 0x15D JUMPI DUP1 PUSH4 0x4B91562E EQ PUSH2 0x197 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x139 PUSH2 0x2DC JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x139 PUSH2 0x2E3 JUMP JUMPDEST PUSH2 0x15B PUSH2 0x2E9 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x183 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x173 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x343 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x15B PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x1AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x376 JUMP JUMPDEST PUSH2 0x15B PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x1D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x421 JUMP JUMPDEST PUSH2 0x1F7 PUSH2 0x4C8 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x183 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x229 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x4D7 JUMP JUMPDEST PUSH2 0x183 PUSH2 0x4E0 JUMP JUMPDEST PUSH2 0x139 PUSH2 0x504 JUMP JUMPDEST PUSH2 0x139 PUSH2 0x50A JUMP JUMPDEST PUSH2 0x183 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x267 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x511 JUMP JUMPDEST PUSH2 0x139 PUSH2 0x64E JUMP JUMPDEST PUSH2 0x139 PUSH2 0x654 JUMP JUMPDEST PUSH2 0x15B PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x294 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH2 0x65A JUMP JUMPDEST PUSH2 0x183 PUSH2 0x6F0 JUMP JUMPDEST PUSH2 0x183 PUSH2 0x83B JUMP JUMPDEST PUSH2 0x1F7 PUSH2 0x8F4 JUMP JUMPDEST PUSH2 0x183 PUSH2 0x903 JUMP JUMPDEST PUSH2 0x139 PUSH2 0x927 JUMP JUMPDEST PUSH3 0x76A700 DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x335 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xA PUSH1 0x24 DUP3 ADD MSTORE PUSH10 0x1B9BDD081C185C995B9D PUSH1 0xB2 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SELFDESTRUCT JUMPDEST PUSH1 0x0 PUSH1 0x1 JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x36F JUMPI INVALID JUMPDEST EQ SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x3C2 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xA PUSH1 0x24 DUP3 ADD MSTORE PUSH10 0x1B9BDD081C185C995B9D PUSH1 0xB2 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x3CA PUSH2 0x903 JUMP JUMPDEST PUSH2 0x411 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x2A3432903B37BA32903430B99032B73232B217 PUSH1 0x69 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x41D PUSH1 0x2 DUP3 DUP5 PUSH2 0x92D JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x46D JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xA PUSH1 0x24 DUP3 ADD MSTORE PUSH10 0x1B9BDD081C185C995B9D PUSH1 0xB2 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x475 PUSH2 0x903 JUMP JUMPDEST PUSH2 0x4BC JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x2A3432903B37BA32903430B99032B73232B217 PUSH1 0x69 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x41D PUSH1 0x1 DUP3 DUP5 PUSH2 0x92D JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH2 0x348 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x4F8 PUSH1 0x5 SLOAD TIMESTAMP PUSH2 0x973 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH3 0x76A700 LT SWAP2 POP POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH3 0x4F1A00 DUP2 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x2 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP4 SWAP3 SWAP1 SWAP3 AND SWAP2 DUP4 SWAP2 DUP4 SWAP2 PUSH4 0x70A08231 SWAP2 PUSH1 0x24 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x569 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x57D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x593 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x2 SLOAD PUSH1 0x1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x6EB1769F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP2 DUP4 AND PUSH1 0x24 DUP4 ADD MSTORE MLOAD SWAP3 SWAP4 POP PUSH1 0x0 SWAP3 SWAP2 DUP6 AND SWAP2 PUSH4 0xDD62ED3E SWAP2 PUSH1 0x44 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x5F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x606 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x61C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x4 SLOAD SWAP1 SWAP2 POP PUSH1 0x0 SWAP1 PUSH2 0x632 SWAP1 DUP8 SWAP1 PUSH2 0x98A JUMP JUMPDEST SWAP1 POP DUP3 DUP2 GT ISZERO DUP1 ISZERO PUSH2 0x644 JUMPI POP DUP2 DUP2 GT ISZERO JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x6A6 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xA PUSH1 0x24 DUP3 ADD MSTORE PUSH10 0x1B9BDD081C185C995B9D PUSH1 0xB2 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x6AE PUSH2 0x903 JUMP JUMPDEST ISZERO PUSH2 0x6EB JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SLOAD SWAP3 DUP6 AND DUP3 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF SWAP2 DUP3 AND SWAP2 AND PUSH2 0x6E8 DUP3 DUP3 DUP6 PUSH2 0x9AF JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6FA PUSH2 0x903 JUMP JUMPDEST ISZERO PUSH2 0x80F JUMPI PUSH1 0x0 SLOAD PUSH1 0x1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x18160DDD PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD PUSH2 0x807 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0x18160DDD SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x748 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x75C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x772 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x6 SLOAD PUSH1 0x1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x18160DDD PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD PUSH2 0x801 SWAP4 PUSH2 0x2710 SWAP4 PUSH2 0x7FB SWAP4 SWAP2 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 PUSH4 0x18160DDD SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x7C9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x7DD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x7F3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 PUSH2 0x973 JUMP JUMPDEST SWAP1 PUSH2 0x98A JUMP JUMPDEST SWAP1 PUSH2 0xAB0 JUMP JUMPDEST LT SWAP1 POP PUSH2 0x501 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x807 PUSH2 0x82C PUSH1 0x6 SLOAD PUSH1 0x7 SLOAD PUSH2 0xAC3 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH2 0x801 SWAP1 PUSH2 0x2710 PUSH2 0x98A JUMP JUMPDEST PUSH1 0x0 PUSH2 0x845 PUSH2 0x903 JUMP JUMPDEST ISZERO PUSH2 0x8D7 JUMPI PUSH1 0x0 SLOAD PUSH1 0x1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x18160DDD PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD PUSH2 0x8CE SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0x18160DDD SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x893 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x8A7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x8BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x7 SLOAD PUSH2 0x801 SWAP1 PUSH2 0x2710 PUSH2 0x98A JUMP JUMPDEST LT ISZERO SWAP1 POP PUSH2 0x501 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x8CE PUSH2 0x82C PUSH1 0x6 SLOAD PUSH1 0x7 SLOAD PUSH2 0xAC3 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x91B PUSH1 0x5 SLOAD TIMESTAMP PUSH2 0x973 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH3 0x4F1A00 LT ISZERO SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF DUP2 AND SWAP2 DUP6 SWAP2 DUP3 SWAP2 SWAP1 PUSH1 0xFF NOT AND PUSH1 0x1 DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x963 JUMPI INVALID JUMPDEST MUL OR SWAP1 SSTORE POP PUSH2 0x6E8 DUP3 DUP3 DUP7 PUSH2 0x9AF JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 GT ISZERO PUSH2 0x97F JUMPI INVALID JUMPDEST POP DUP1 DUP3 SUB JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x999 JUMPI POP PUSH1 0x0 PUSH2 0x984 JUMP JUMPDEST POP DUP2 DUP2 MUL DUP2 DUP4 DUP3 DUP2 PUSH2 0x9A7 JUMPI INVALID JUMPDEST DIV EQ PUSH2 0x984 JUMPI INVALID JUMPDEST DUP2 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x9BB JUMPI INVALID JUMPDEST DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x9C7 JUMPI INVALID JUMPDEST EQ PUSH2 0x6EB JUMPI PUSH1 0x2 DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x9DA JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0x9F5 JUMPI PUSH1 0x6 SLOAD PUSH2 0x9ED SWAP1 DUP3 PUSH2 0x973 JUMP JUMPDEST PUSH1 0x6 SSTORE PUSH2 0xA1A JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xA03 JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0xA1A JUMPI PUSH1 0x7 SLOAD PUSH2 0xA16 SWAP1 DUP3 PUSH2 0x973 JUMP JUMPDEST PUSH1 0x7 SSTORE JUMPDEST PUSH1 0x2 DUP3 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xA28 JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0xA43 JUMPI PUSH1 0x6 SLOAD PUSH2 0xA3B SWAP1 DUP3 PUSH2 0xAC3 JUMP JUMPDEST PUSH1 0x6 SSTORE PUSH2 0xA68 JUMP JUMPDEST PUSH1 0x1 DUP3 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xA51 JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0xA68 JUMPI PUSH1 0x7 SLOAD PUSH2 0xA64 SWAP1 DUP3 PUSH2 0xAC3 JUMP JUMPDEST PUSH1 0x7 SSTORE JUMPDEST PUSH32 0x8FCC50C2C4EDD06D51AE66E9E21ED76B32A1766C57F491788E1AA24A1B58C256 PUSH1 0x7 SLOAD PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 DUP2 PUSH2 0xABB JUMPI INVALID JUMPDEST DIV SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP2 DUP2 ADD DUP3 DUP2 LT ISZERO PUSH2 0x984 JUMPI INVALID INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SUB NOT DUP13 SWAP8 SMOD MSTORE8 PUSH29 0xE5959B3E8267A2B8A721CC26A72203A7D67CA0A492033FB5A264736F6C PUSH4 0x43000701 STOP CALLER GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220746F20746865207A65726F2061 PUSH5 0x6472657373 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH2 0x7070 PUSH19 0x6F766520746F20746865207A65726F20616464 PUSH19 0x6573734F6666657220776173206E6F74207375 PUSH7 0x66696369656E74 PUSH13 0x792066756E6465644173206C6F PUSH15 0x672061732074686520636F6E747261 PUSH4 0x74206973 KECCAK256 PUSH2 0x6374 PUSH10 0x76652C20796F75206172 PUSH6 0x20626F756E64 KECCAK256 PUSH21 0x6F206974596F7520617265206E6F7420617574686F PUSH19 0x697A656420746F2063616E63656C2074686973 KECCAK256 PUSH2 0x6371 PUSH22 0x69736974696F6E206F666665724E6577206F66666572 PUSH20 0x206D757374206265206174206C65617374203525 KECCAK256 PUSH9 0x696768657220746861 PUSH15 0x207468652070656E64696E67206F66 PUSH7 0x65725468657265 KECCAK256 PUSH10 0x73206E6F2070656E6469 PUSH15 0x67206F666665720000000000000045 MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH3 0x75726E KECCAK256 PUSH7 0x726F6D20746865 KECCAK256 PUSH27 0x65726F206164647265737345524332303A207472616E7366657220 PUSH7 0x726F6D20746865 KECCAK256 PUSH27 0x65726F20616464726573735468697320636F6E747261637420646F PUSH6 0x73206E6F7420 PUSH19 0x6570726573656E7420656E6F75676820657175 PUSH10 0x747945524332303A2061 PUSH17 0x70726F76652066726F6D20746865207A65 PUSH19 0x6F2061646472657373596F7520617265206E6F PUSH21 0x20617574686F72697A656420746F20636F6D706C65 PUSH21 0x652074686973206163717569736974696F6E206F66 PUSH7 0x6572596F75206E PUSH6 0x656420746F20 PUSH9 0x6F6C64206174206C65 PUSH2 0x7374 KECCAK256 CALLDATALOAD 0x25 KECCAK256 PUSH16 0x6620746865206669726D20746F206D61 PUSH12 0x6520616E206F66666572A264 PUSH10 0x70667358221220EBDF6E DUP14 0xC9 0xDF CALLVALUE 0xE3 SMOD MSTORE CODECOPY CALLVALUE 0xF7 MSTORE8 DUP12 0xAB 0xEC 0xDF 0xD SGT SDIV BLOCKHASH SWAP13 0xF8 0xED 0xC1 SWAP3 BYTE LOG4 STOP AND PUSH12 0x64736F6C63430007010033A2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MSIZE CALL 0xEF 0xB0 0xF8 0xE8 0xAD 0xB8 SELFBALANCE DUP11 ADDRESS PUSH27 0xEECA3E41D813182284C9A27C18AE52E74DFCAC8D64736F6C634300 SMOD ADD STOP CALLER ",
                        "sourceMap": "108:252:1:-:0;;;;;;;;;;;;;;;;;;;"
                    },
                    "deployedBytecode": {
                        "immutableReferences": {},
                        "linkReferences": {},
                        "object": "608060405234801561001057600080fd5b506004361061002b5760003560e01c806349dc213214610030575b600080fd5b6100eb6004803603608081101561004657600080fd5b8135919081019060408101602082013564010000000081111561006857600080fd5b82018360208201111561007a57600080fd5b8035906020019184600183028401116401000000008311171561009c57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550506001600160a01b038335169350505060200135610107565b604080516001600160a01b039092168252519081900360200190f35b600084848484604051610119906101c6565b8080602001846001600160a01b03168152602001838152602001828103825285818151815260200191508051906020019080838360005b83811015610168578181015183820152602001610150565b50505050905090810190601f1680156101955780820380516001836020036101000a031916815260200191505b509450505050508190604051809103906000f59050801580156101bc573d6000803e3d6000fd5b5095945050505050565b614f08806101d48339019056fe608060405262ed4e006004556001600a819055600f805460ff191690911790553480156200002c57600080fd5b5060405162004f0838038062004f08833981810160405260608110156200005257600080fd5b81019080805160405193929190846401000000008211156200007357600080fd5b9083019060208201858111156200008957600080fd5b8251640100000000811182820188101715620000a457600080fd5b82525081516020918201929091019080838360005b83811015620000d3578181015183820152602001620000b9565b50505050905090810190601f168015620001015780820380516001836020036101000a031916815260200191505b506040818152602083810151938201516003805460ff19169055600980546001600160a01b0387166001600160a01b03199182168117909255600c80549091167329fe8914e76da5ce2d90de98a64d0055f199d06d179055600d829055600e829055633a98ef3960e01b85529251949650945085938593849392633a98ef39926004808401938290030181600087803b1580156200019e57600080fd5b505af1158015620001b3573d6000803e3d6000fd5b505050506040513d6020811015620001ca57600080fd5b505060408051636427ed9760e01b815260006004820181905291516001600160a01b0388169550636427ed97945060248083019450909182900301818387803b1580156200021757600080fd5b505af11580156200022c573d6000803e3d6000fd5b505084516200024592506010915060208601906200024f565b50505050620002eb565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200029257805160ff1916838001178555620002c2565b82800160010185558215620002c2579182015b82811115620002c2578251825591602001919060010190620002a5565b50620002d0929150620002d4565b5090565b5b80821115620002d05760008155600101620002d5565b614c0d80620002fb6000396000f3fe60806040523480156200001157600080fd5b50600436106200033a5760003560e01c80636b03ed5f11620001c5578063a9059cbb11620000ff578063c6788bdd11620000b1578063de0e9a3e1162000087578063de0e9a3e14620009e1578063e1b8c38e1462000a24578063eb470ebf1462000a2e578063ec6580e21462000a57576200033a565b8063c6788bdd1462000940578063d502562514620009a6578063dd62ed3e14620009b0576200033a565b8063a9059cbb146200089b578063b40e80d114620008ca578063bb68947214620008f3578063bc1b1e7c14620008fd578063bf376c7a1462000907578063c028df061462000936576200033a565b806390cf581c11620001775780639e8a9a5a116200014d5780639e8a9a5a14620007b0578063a3ec188314620007ba578063a457c2d714620007e3578063a4c0ed361462000812576200033a565b806390cf581c146200077357806395d89b41146200077d5780639b56d6c91462000787576200033a565b80636b03ed5f14620006f95780636f4b18df146200070357806370a08231146200070d57806377e071ad14620007365780637dc2cd98146200075f5780638fd3ab801462000769576200033a565b8063313ce567116200029757806341c12a70116200024957806358047913116200021f5780635804791314620006b95780636091811714620006c35780636427ed9714620006cd5780636467c09a14620006ef576200033a565b806341c12a70146200066057806342966c68146200066a57806349b210b7146200068a576200033a565b8063313ce567146200052c57806332a7ae95146200054c5780633549788a146200057557806339509351146200057f5780633bcc45ba14620005ae5780634000aea014620005d7576200033a565b8063141c706811620002f1578063141c7068146200047b57806318160ddd14620004855780631e3b9de5146200048f57806323b872dd14620004b857806326773ddd14620004f15780632a0a4ed51462000522576200033a565b806302fb0c5e146200033f57806306fdde03146200035d5780630832e47014620003df578063095ea7b314620003fb5780630c6f0e5d146200042a5780630cd865ec1462000450575b600080fd5b6200034962000a61565b604080519115158252519081900360200190f35b6200036762000a6a565b6040805160208082528351818301528351919283929083019185019080838360005b83811015620003a357818101518382015260200162000389565b50505050905090810190601f168015620003d15780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b620003e962000c25565b60408051918252519081900360200190f35b62000349600480360360408110156200041357600080fd5b506001600160a01b03813516906020013562000c2b565b6200043462000c44565b604080516001600160a01b039092168252519081900360200190f35b62000479600480360360208110156200046857600080fd5b50356001600160a01b031662000c53565b005b6200047962000f37565b620003e962001378565b6200043460048036036020811015620004a757600080fd5b50356001600160a01b03166200137e565b6200034960048036036060811015620004d057600080fd5b506001600160a01b038135811691602081013590911690604001356200139f565b62000479600480360360408110156200050957600080fd5b506001600160a01b0381358116916020013516620013f6565b6200043462001721565b6200053662001799565b6040805160ff9092168252519081900360200190f35b62000479600480360360208110156200056457600080fd5b50356001600160a01b0316620017a2565b620003e962001a0a565b62000349600480360360408110156200059757600080fd5b506001600160a01b03813516906020013562001a10565b6200043460048036036020811015620005c657600080fd5b50356001600160a01b031662001a49565b6200034960048036036060811015620005ef57600080fd5b6001600160a01b0382351691602081013591810190606081016040820135600160201b8111156200061f57600080fd5b8201836020820111156200063257600080fd5b803590602001918460018302840111600160201b831117156200065457600080fd5b50909250905062001a6a565b6200047962001b31565b62000479600480360360208110156200068257600080fd5b503562001c0d565b6200047960048036036040811015620006a257600080fd5b50803590602001356001600160a01b031662001c7f565b62000434620021b5565b620003e9620021c4565b6200047960048036036020811015620006e557600080fd5b50351515620021ca565b62000434620021e9565b62000479620021f8565b620004796200235d565b620003e9600480360360208110156200072557600080fd5b50356001600160a01b031662002692565b620003e9600480360360208110156200074e57600080fd5b50356001600160a01b0316620026ad565b620003e962002762565b6200047962002768565b62000479620029fd565b6200036762002a76565b620003e9600480360360208110156200079f57600080fd5b50356001600160a01b031662002bee565b620003e962002c0c565b6200034960048036036020811015620007d257600080fd5b50356001600160a01b031662002c12565b6200034960048036036040811015620007fb57600080fd5b506001600160a01b03813516906020013562002c31565b62000479600480360360608110156200082a57600080fd5b6001600160a01b0382351691602081013591810190606081016040820135600160201b8111156200085a57600080fd5b8201836020820111156200086d57600080fd5b803590602001918460018302840111600160201b831117156200088f57600080fd5b50909250905062002c6a565b6200034960048036036040811015620008b357600080fd5b506001600160a01b03813516906020013562002c94565b6200034960048036036020811015620008e257600080fd5b50356001600160a01b031662002ca9565b6200043462002cbe565b6200034962002ccd565b62000479600480360360408110156200091f57600080fd5b506001600160a01b03813516906020013562002cea565b6200043462002e25565b62000969600480360360208110156200095857600080fd5b50356001600160a01b031662002e34565b60405180856001600160a01b03168152602001848152602001838152602001826001600160a01b0316815260200194505050505060405180910390f35b6200036762002e66565b620003e960048036036040811015620009c857600080fd5b506001600160a01b038135811691602001351662002ef8565b62000a0160048036036020811015620009f957600080fd5b503562002f23565b604080516001600160a01b03909316835260208301919091528051918290030190f35b6200047962003036565b620003e96004803603602081101562000a4657600080fd5b50356001600160a01b03166200318a565b62000349620031a8565b600f5460ff1681565b600954604080516306fdde0360e01b815290516060926001600160a01b0316916306fdde03916004808301926000929190829003018186803b15801562000ab057600080fd5b505afa15801562000ac5573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052602081101562000aef57600080fd5b8101908080516040519392919084600160201b82111562000b0f57600080fd5b90830190602082018581111562000b2557600080fd5b8251600160201b81118282018810171562000b3f57600080fd5b82525081516020918201929091019080838360005b8381101562000b6e57818101518382015260200162000b54565b50505050905090810190601f16801562000b9c5780820380516001836020036101000a031916815260200191505b506040525050506040516020018080690223930b3b3b0b13632960b51b815250600a0182805190602001908083835b6020831062000bec5780518252601f19909201916020918201910162000bcb565b6001836020036101000a038019825116818451168082178552505050505050905001915050604051602081830303815290604052905090565b600a5481565b600062000c3a338484620031ce565b5060015b92915050565b6007546001600160a01b031681565b62000c5d62003d6d565b506001600160a01b038082166000908152600560209081526040918290208251608081018452815485168152600182015492810183905260028201549381019390935260030154909216606082018190529091908162000cf5576040805162461bcd60e51b815260206004820152600e60248201526d139bc818db185a5b48199bdd5b9960921b604482015290519081900360640190fd5b82516001600160a01b0316331462000d54576040805162461bcd60e51b815260206004820152601f60248201527f4f6e6c7920636c61696d616e742063616e207265736f6c766520636c61696d00604482015290519081900360640190fd5b4262000d706004548560400151620032be90919063ffffffff16565b111562000dc4576040805162461bcd60e51b815260206004820152601960248201527f436c61696d20706572696f64206e6f74206f7665722079657400000000000000604482015290519081900360640190fd5b82516001600160a01b03808616600090815260056020908152604080832080546001600160a01b031990811682556001820185905560028201859055600390910180549091169055805163a9059cbb60e01b815284861660048201526024810188905290519386169363a9059cbb93604480840194938390030190829087803b15801562000e5157600080fd5b505af115801562000e66573d6000803e3d6000fd5b505050506040513d602081101562000e7d57600080fd5b505162000ece576040805162461bcd60e51b815260206004820152601a60248201527910dbdb1b185d195c985b081d1c985b9cd9995c8819985a5b195960321b604482015290519081900360640190fd5b62000ee5858262000edf8862002692565b620032cc565b806001600160a01b0316856001600160a01b03167f52a5c2b28bc6eb9712d0ced43463103b486b13ccc9cda499fd3b2d7b6a74a8ee856040518082815260200191505060405180910390a35050505050565b62000f4162002ccd565b801562000f505750600f5460ff165b62000f91576040805162461bcd60e51b8152602060048201526019602482015260008051602062004aae833981519152604482015290519081900360640190fd5b600b54604080516338a86c5760e11b815290516000926001600160a01b031691637150d8ae916004808301926020929190829003018186803b15801562000fd757600080fd5b505afa15801562000fec573d6000803e3d6000fd5b505050506040513d60208110156200100357600080fd5b50519050336001600160a01b03821614620010505760405162461bcd60e51b815260040180806020018281038252603981526020018062004b666039913960400191505060405180910390fd5b600b60009054906101000a90046001600160a01b03166001600160a01b031663d7be4e296040518163ffffffff1660e01b815260040160206040518083038186803b1580156200109f57600080fd5b505afa158015620010b4573d6000803e3d6000fd5b505050506040513d6020811015620010cb57600080fd5b50516200111f576040805162461bcd60e51b815260206004820181905260248201527f496e73756666696369656e74206e756d626572206f662079657320766f746573604482015290519081900360640190fd5b600b546001600160a01b031663b28fa1526200113b8362002692565b6200114562001378565b036040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b1580156200117b57600080fd5b505afa15801562001190573d6000803e3d6000fd5b505050506040513d6020811015620011a757600080fd5b5051620011fb576040805162461bcd60e51b815260206004820152601b60248201527f4f6666657220696e73756666696369656e746c792066756e6465640000000000604482015290519081900360640190fd5b620012f781600b60009054906101000a90046001600160a01b03166001600160a01b031663e5a6b10f6040518163ffffffff1660e01b815260040160206040518083038186803b1580156200124f57600080fd5b505afa15801562001264573d6000803e3d6000fd5b505050506040513d60208110156200127b57600080fd5b5051600b546040805163501ad8ff60e11b815290516001600160a01b039092169163a035b1fe91600480820192602092909190829003018186803b158015620012c357600080fd5b505afa158015620012d8573d6000803e3d6000fd5b505050506040513d6020811015620012ef57600080fd5b5051620032de565b600b5460408051338152600160208201526001600160a01b039283166060820152608081830181905260169082015275436f6d706c65746564207375636365737366756c6c7960501b60a08201529051918316917fc88f58ae9feb0742d9422f604dd3c1be6d02818f8dec340c5061f428b554e9759181900360c00190a250565b60025490565b6001600160a01b03808216600090815260056020526040902054165b919050565b6000620013ae848484620032cc565b6001600160a01b038416600090815260016020908152604080832033808552925290912054620013ec918691620013e6908662003505565b620031ce565b5060019392505050565b620014018162002c12565b62001453576040805162461bcd60e51b815260206004820181905260248201527f436c61696d732064697361626c656420666f7220746869732061646472657373604482015290519081900360640190fd5b60006200146083620026ad565b905060008111620014b1576040805162461bcd60e51b8152602060048201526016602482015275155b9cdd5c1c1bdc9d19590818dbdb1b185d195c985b60521b604482015290519081900360640190fd5b336000620014bf8462002692565b90506000620014cf828562003518565b9050858262001525576040805162461bcd60e51b815260206004820152601f60248201527f436c61696d6564206164647265737320686f6c6473206e6f2073686172657300604482015290519081900360640190fd5b6001600160a01b0386166000908152600560205260409020600101541562001594576040805162461bcd60e51b815260206004820152601760248201527f4164647265737320616c726561647920636c61696d6564000000000000000000604482015290519081900360640190fd5b604080516323b872dd60e01b81526001600160a01b038681166004830152306024830152604482018590529151918316916323b872dd916064808201926020929091908290030181600087803b158015620015ee57600080fd5b505af115801562001603573d6000803e3d6000fd5b505050506040513d60208110156200161a57600080fd5b50516200166b576040805162461bcd60e51b815260206004820152601a60248201527910dbdb1b185d195c985b081d1c985b9cd9995c8819985a5b195960321b604482015290519081900360640190fd5b604080516080810182526001600160a01b038087168083526020808401878152428587019081528d8516606087019081528d8616600081815260058652899020975188549088166001600160a01b0319918216178955935160018901559151600288015551600390960180549690951695909116949094179092558351878152935190937f1982ca8958fc8a8176cb52be509260f4bc5af7ce04e1533711793f1c56dd535992908290030190a350505050505050565b60006200172d620021b5565b6001600160a01b0316632a0a4ed56040518163ffffffff1660e01b815260040160206040518083038186803b1580156200176657600080fd5b505afa1580156200177b573d6000803e3d6000fd5b505050506040513d60208110156200179257600080fd5b5051905090565b60035460ff1681565b620017ac62001721565b6001600160a01b0316336001600160a01b03161462001812576040805162461bcd60e51b815260206004820152601860248201527f596f752063616e6e6f742064656c65746520636c61696d730000000000000000604482015290519081900360640190fd5b6200181c62003d6d565b506001600160a01b038082166000908152600560209081526040918290208251608081018452815485168152600182015492810183905260028201549381019390935260030154909216606082018190529091620018b2576040805162461bcd60e51b815260206004820152600e60248201526d139bc818db185a5b48199bdd5b9960921b604482015290519081900360640190fd5b6001600160a01b03808416600090815260056020908152604080832080546001600160a01b031990811682556001820185905560028201859055600390910180549091169055855186830151825163a9059cbb60e01b81529186166004830152602482015290519385169363a9059cbb93604480840194938390030190829087803b1580156200194157600080fd5b505af115801562001956573d6000803e3d6000fd5b505050506040513d60208110156200196d57600080fd5b5051620019be576040805162461bcd60e51b815260206004820152601a60248201527910dbdb1b185d195c985b081d1c985b9cd9995c8819985a5b195960321b604482015290519081900360640190fd5b815160208084015160408051918252516001600160a01b03938416938716927fbb036e629a9f4c0897ee5d48440dfdb36f7e772117723a2ed603a6514244c2d5928290030190a3505050565b600e5481565b3360008181526001602090815260408083206001600160a01b0387168452909152812054909162000c3a918590620013e69086620032be565b6001600160a01b039081166000908152600560205260409020600301541690565b60008062001a79868662002c94565b9050801562001b2857856001600160a01b031663a4c0ed36338787876040518563ffffffff1660e01b815260040180856001600160a01b03168152602001848152602001806020018281038252848482818152602001925080828437600081840152601f19601f82011690508083019250505095505050505050600060405180830381600087803b15801562001b0e57600080fd5b505af115801562001b23573d6000803e3d6000fd5b505050505b95945050505050565b62001b3b62002ccd565b801562001b4a5750600f5460ff165b62001b8b576040805162461bcd60e51b8152602060048201526019602482015260008051602062004aae833981519152604482015290519081900360640190fd5b600b5433906001600160a01b0316634b91562e8262001baa8162002692565b6040518363ffffffff1660e01b815260040180836001600160a01b0316815260200182815260200192505050600060405180830381600087803b15801562001bf157600080fd5b505af115801562001c06573d6000803e3d6000fd5b5050505050565b62001c19338262003541565b62001c23620021b5565b6001600160a01b03166342966c6862001c48600a54846200351890919063ffffffff16565b6040518263ffffffff1660e01b815260040180828152602001915050600060405180830381600087803b15801562001bf157600080fd5b600f5460ff1662001cd7576040805162461bcd60e51b815260206004820152601860248201527f416e206163636570746564206f66666572206578697374730000000000000000604482015290519081900360640190fd5b600062001ce3620021b5565b6001600160a01b0316633a98ef396040518163ffffffff1660e01b8152600401602060405180830381600087803b15801562001d1e57600080fd5b505af115801562001d33573d6000803e3d6000fd5b505050506040513d602081101562001d4a57600080fd5b505190503362001d6b61271062001d6484610bb862003518565b906200354d565b62001d7562001378565b101562001db45760405162461bcd60e51b815260040180806020018281038252602e81526020018062004b14602e913960400191505060405180910390fd5b62001dc961271062001d64846101f462003518565b62001dd48262002692565b101562001e135760405162461bcd60e51b815260040180806020018281038252603981526020018062004b9f6039913960400191505060405180910390fd5b600c546040516001600160a01b0390911690600090670de0b6b3a76400009082818181858883f1935050505015801562001e51573d6000803e3d6000fd5b506000338486600e5460405162001e689062003da7565b80856001600160a01b03168152602001846001600160a01b03168152602001838152602001828152602001945050505050604051809103906000f08015801562001eb6573d6000803e3d6000fd5b509050806001600160a01b031663b28fa15262001ed38462002692565b62001edd62001378565b036040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b15801562001f1357600080fd5b505afa15801562001f28573d6000803e3d6000fd5b505050506040513d602081101562001f3f57600080fd5b505162001f8a576040805162461bcd60e51b8152602060048201526014602482015273496e73756666696369656e742066756e64696e6760601b604482015290519081900360640190fd5b62001f9462002ccd565b156200214057600b60009054906101000a90046001600160a01b03166001600160a01b031663e5a6b10f6040518163ffffffff1660e01b815260040160206040518083038186803b15801562001fe957600080fd5b505afa15801562001ffe573d6000803e3d6000fd5b505050506040513d60208110156200201557600080fd5b50516001600160a01b038581169116148015620020c35750620020bf61271062001d64612904600b60009054906101000a90046001600160a01b03166001600160a01b031663a035b1fe6040518163ffffffff1660e01b815260040160206040518083038186803b1580156200208a57600080fd5b505afa1580156200209f573d6000803e3d6000fd5b505050506040513d6020811015620020b657600080fd5b50519062003518565b8510155b620021005760405162461bcd60e51b815260040180806020018281038252603c81526020018062004a72603c913960400191505060405180910390fd5b620021406040518060400160405280601c81526020017f4f66666572207265706c6163656420627920686967686572206269640000000081525062003561565b600b80546001600160a01b0319166001600160a01b038381169190911790915582167f9c00f159b1fa9eaebda7acaf50be0bf3a652277380f907b35cb681bd641a62d3866200218e620021e9565b604080519283526001600160a01b0390911660208301528051918290030190a25050505050565b6009546001600160a01b031690565b60085481565b336000908152600660205260409020805460ff19169115919091179055565b600b546001600160a01b031690565b33600090815260056020526040902060010154156200235b5733600081815260056020908152604080832060018101805460038301805484546001600160a01b03199081168655938890556002909401879055918316909155825163a9059cbb60e01b8152600481019690965260248601819052915191946001600160a01b0390911693849363a9059cbb93604480850194929391928390030190829087803b158015620022a557600080fd5b505af1158015620022ba573d6000803e3d6000fd5b505050506040513d6020811015620022d157600080fd5b505162002322576040805162461bcd60e51b815260206004820152601a60248201527910dbdb1b185d195c985b081d1c985b9cd9995c8819985a5b195960321b604482015290519081900360640190fd5b60408051838152905133917f203627483d943880619f4b7e0cca21dbefd6204b4d85b124eb99540e17ba86dd919081900360200190a250505b565b6200236762002ccd565b8015620023765750600f5460ff165b620023b7576040805162461bcd60e51b8152602060048201526019602482015260008051602062004aae833981519152604482015290519081900360640190fd5b600b60009054906101000a90046001600160a01b03166001600160a01b03166390e64d136040518163ffffffff1660e01b815260040160206040518083038186803b1580156200240657600080fd5b505afa1580156200241b573d6000803e3d6000fd5b505050506040513d60208110156200243257600080fd5b50511562002470576200246a6040518060400160405280600d81526020016c13d999995c88195e1c1a5c9959609a1b81525062003561565b6200235b565b600b60009054906101000a90046001600160a01b03166001600160a01b031663cf42a9276040518163ffffffff1660e01b815260040160206040518083038186803b158015620024bf57600080fd5b505afa158015620024d4573d6000803e3d6000fd5b505050506040513d6020811015620024eb57600080fd5b50511562002528576200246a60405180604001604052806012815260200171139bdd08195b9bdd59da081cdd5c1c1bdc9d60721b81525062003561565b600b54604080516338a86c5760e11b815290516001600160a01b039092169163b28fa15291620025ae918491637150d8ae916004808301926020929190829003018186803b1580156200257a57600080fd5b505afa1580156200258f573d6000803e3d6000fd5b505050506040513d6020811015620025a657600080fd5b505162002692565b620025b862001378565b036040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b158015620025ee57600080fd5b505afa15801562002603573d6000803e3d6000fd5b505050506040513d60208110156200261a57600080fd5b505162002645576200246a604051806060016040528060218152602001620049e46021913962003561565b6040805162461bcd60e51b815260206004820181905260248201527f4163717569736974696f6e20636f6e7465737420756e7375636365737366756c604482015290519081900360640190fd5b6001600160a01b031660009081526020819052604090205490565b600080620026bb8362003731565b90508015620026cc5790506200139a565b620026d6620021b5565b6001600160a01b0316836001600160a01b03161415620026fb575050600a546200139a565b62002759600a546200270c620021b5565b6001600160a01b03166377e071ad866040518263ffffffff1660e01b815260040180826001600160a01b0316815260200191505060206040518083038186803b1580156200208a57600080fd5b9150506200139a565b60045481565b600f5460ff16620027b9576040805162461bcd60e51b8152602060048201526016602482015275436f6e7472616374206973206e6f742061637469766560501b604482015290519081900360640190fd5b6000339050620027dd61271062001d64600d54620027d662001378565b9062003518565b620027e88262002692565b101562002831576040805162461bcd60e51b8152602060048201526012602482015271145d5bdc9d5b481b9bdd081c995858da195960721b604482015290519081900360640190fd5b6200283b62002ccd565b15620029b057600b60009054906101000a90046001600160a01b03166001600160a01b031663cf42a9276040518163ffffffff1660e01b815260040160206040518083038186803b1580156200289057600080fd5b505afa158015620028a5573d6000803e3d6000fd5b505050506040513d6020811015620028bc57600080fd5b50516200299457620028cd62001b31565b600b60009054906101000a90046001600160a01b03166001600160a01b031663cf42a9276040518163ffffffff1660e01b815260040160206040518083038186803b1580156200291c57600080fd5b505afa15801562002931573d6000803e3d6000fd5b505050506040513d60208110156200294857600080fd5b505162002994576040805162461bcd60e51b8152602060048201526015602482015274145d5bdc9d5b481a185cc81b9bdd0819985a5b1959605a1b604482015290519081900360640190fd5b6200299e6200235d565b620029a862002ccd565b15620029b057fe5b620029be81826001620032de565b604080516001600160a01b038316815290517f3b6b79a09e9fd230e8591b65c97236bf7df7a604edf733db0658e66b0e6eb2a99181900360200190a150565b62002a0762002ccd565b801562002a165750600f5460ff165b62002a57576040805162461bcd60e51b8152602060048201526019602482015260008051602062004aae833981519152604482015290519081900360640190fd5b600b5433906001600160a01b0316635ff0cf848262001baa8162002692565b600954604080516395d89b4160e01b815290516060926001600160a01b0316916395d89b41916004808301926000929190829003018186803b15801562002abc57600080fd5b505afa15801562002ad1573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052602081101562002afb57600080fd5b8101908080516040519392919084600160201b82111562002b1b57600080fd5b90830190602082018581111562002b3157600080fd5b8251600160201b81118282018810171562002b4b57600080fd5b82525081516020918201929091019080838360005b8381101562002b7a57818101518382015260200162002b60565b50505050905090810190601f16801562002ba85780820380516001836020036101000a031916815260200191505b506040525050506040516020018080601160fa1b81525060010182805190602001908083836020831062000bec5780518252601f19909201916020918201910162000bcb565b6001600160a01b031660009081526005602052604090206001015490565b600d5481565b6001600160a01b031660009081526006602052604090205460ff161590565b3360008181526001602090815260408083206001600160a01b0387168452909152812054909162000c3a918590620013e6908662003505565b6009546001600160a01b0316331462002c8257600080fd5b62002c8e848462003778565b50505050565b600062002ca2838362003834565b9392505050565b60066020526000908152604090205460ff1681565b600c546001600160a01b031681565b60008062002cda620021e9565b6001600160a01b03161415905090565b62002cf462002ccd565b1562002d42576040805162461bcd60e51b81526020600482015260186024820152772a3432b9329034b99030903832b73234b7339037b33332b960411b604482015290519081900360640190fd5b600954604080516323b872dd60e01b81523360048201523060248201526044810184905290516001600160a01b03909216916323b872dd916064808201926020929091908290030181600087803b15801562002d9d57600080fd5b505af115801562002db2573d6000803e3d6000fd5b505050506040513d602081101562002dc957600080fd5b505162002e15576040805162461bcd60e51b815260206004820152601560248201527414da185c99481d1c985b9cd9995c8819985a5b1959605a1b604482015290519081900360640190fd5b62002e21828262003778565b5050565b600b546001600160a01b031681565b60056020526000908152604090208054600182015460028301546003909301546001600160a01b039283169391921684565b6010805460408051602060026001851615610100026000190190941693909304601f8101849004840282018401909252818152929183018282801562002ef05780601f1062002ec45761010080835404028352916020019162002ef0565b820191906000526020600020905b81548152906001019060200180831162002ed257829003601f168201915b505050505081565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b600f54600090819060ff161562002f6c5760405162461bcd60e51b815260040180806020018281038252603681526020018062004a056036913960400191505060405180910390fd5b62002f78338462003541565b600062002f91600a54856200351890919063ffffffff16565b6009546040805163a9059cbb60e01b81523360048201526024810184905290519293506001600160a01b039091169163a9059cbb916044808201926020929091908290030181600087803b15801562002fe957600080fd5b505af115801562002ffe573d6000803e3d6000fd5b505050506040513d60208110156200301557600080fd5b50516200302157600080fd5b6009546001600160a01b031692509050915091565b6200304062002ccd565b80156200304f5750600f5460ff165b62003090576040805162461bcd60e51b8152602060048201526019602482015260008051602062004aae833981519152604482015290519081900360640190fd5b600b60009054906101000a90046001600160a01b03166001600160a01b0316637150d8ae6040518163ffffffff1660e01b815260040160206040518083038186803b158015620030df57600080fd5b505afa158015620030f4573d6000803e3d6000fd5b505050506040513d60208110156200310b57600080fd5b50516001600160a01b03163314620031555760405162461bcd60e51b815260040180806020018281038252603781526020018062004a3b6037913960400191505060405180910390fd5b6200235b6040518060400160405280601281526020017121b0b731b2b63632b210313c90313abcb2b960711b81525062003561565b6001600160a01b031660009081526005602052604090206002015490565b6000620031b462002ccd565b620031c1576000620031c9565b600f5460ff16155b905090565b6001600160a01b038316620032155760405162461bcd60e51b815260040180806020018281038252602481526020018062004b426024913960400191505060405180910390fd5b6001600160a01b0382166200325c5760405162461bcd60e51b8152600401808060200182810382526022815260200180620049c26022913960400191505060405180910390fd5b6001600160a01b03808416600081815260016020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b8181018281101562000c3e57fe5b620032d983838362003890565b505050565b6000620032eb8462002692565b90506000620032f962001378565b600f805460ff191690559050620033108262002f23565b506000905062003321828462003505565b6009546040805163a9059cbb60e01b81526001600160a01b038a8116600483015260248201859052915193945091169163a9059cbb916044808201926020929091908290030181600087803b1580156200337a57600080fd5b505af11580156200338f573d6000803e3d6000fd5b505050506040513d6020811015620033a657600080fd5b5051620033ec576040805162461bcd60e51b815260206004820152600f60248201526e1d1c985b9cd9995c8819985a5b1959608a1b604482015290519081900360640190fd5b600980546001600160a01b0319166001600160a01b038781169190911791829055600a869055166323b872dd873062003426888662003518565b6040518463ffffffff1660e01b815260040180846001600160a01b03168152602001836001600160a01b031681526020018281526020019350505050602060405180830381600087803b1580156200347d57600080fd5b505af115801562003492573d6000803e3d6000fd5b505050506040513d6020811015620034a957600080fd5b5051620034fd576040805162461bcd60e51b815260206004820152601760248201527f4261636b696e67207472616e73666572206661696c6564000000000000000000604482015290519081900360640190fd5b505050505050565b6000828211156200351257fe5b50900390565b600082620035295750600062000c3e565b50818102818382816200353857fe5b041462000c3e57fe5b62002e21828262003938565b60008183816200355957fe5b049392505050565b600b54604080516338a86c5760e11b815290516000926001600160a01b031691637150d8ae916004808301926020929190829003018186803b158015620035a757600080fd5b505afa158015620035bc573d6000803e3d6000fd5b505050506040513d6020811015620035d357600080fd5b505190506001600160a01b0381167fc88f58ae9feb0742d9422f604dd3c1be6d02818f8dec340c5061f428b554e9753360008562003610620021e9565b60405180856001600160a01b03168152602001841515815260200180602001836001600160a01b03168152602001828103825284818151815260200191508051906020019080838360005b83811015620036755781810151838201526020016200365b565b50505050905090810190601f168015620036a35780820380516001836020036101000a031916815260200191505b509550505050505060405180910390a2600b60009054906101000a90046001600160a01b03166001600160a01b03166341c0e1b56040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156200370457600080fd5b505af115801562003719573d6000803e3d6000fd5b5050600b80546001600160a01b031916905550505050565b60006001600160a01b0382163014156200374e575060016200139a565b6007546001600160a01b03838116911614156200376f57506008546200139a565b5060006200139a565b6200378262002ccd565b15620037d0576040805162461bcd60e51b81526020600482015260186024820152772a3432b9329034b99030903832b73234b7339037b33332b960411b604482015290519081900360640190fd5b600f5460ff1662003828576040805162461bcd60e51b815260206004820152601d60248201527f436f6e7472616374206e6f742061637469766520616e79206d6f72652e000000604482015290519081900360640190fd5b62002e218282620039d3565b6000620038428383620039df565b62003886576040805162461bcd60e51b815260206004820152600f60248201526e151c985b9cd9995c8819985a5b1959608a1b604482015290519081900360640190fd5b62000c3a620021f8565b6200389d838383620039ee565b620038a762002ccd565b8015620038b65750600f5460ff165b15620032d957600b5460408051636240a7d760e11b81526001600160a01b0386811660048301528581166024830152604482018590529151919092169163c4814fae91606480830192600092919082900301818387803b1580156200391a57600080fd5b505af11580156200392f573d6000803e3d6000fd5b50505050505050565b62003944828262003b2c565b6200394e62002ccd565b80156200395d5750600f5460ff165b1562002e2157600b5460408051636240a7d760e11b81526001600160a01b03858116600483015260006024830181905260448301869052925193169263c4814fae9260648084019391929182900301818387803b158015620039be57600080fd5b505af1158015620034fd573d6000803e3d6000fd5b62002e21828262003bff565b600062000c3a338484620032cc565b6001600160a01b03831662003a355760405162461bcd60e51b815260040180806020018281038252602581526020018062004aef6025913960400191505060405180910390fd5b6001600160a01b03821662003a7c5760405162461bcd60e51b81526004018080602001828103825260238152602001806200499f6023913960400191505060405180910390fd5b6001600160a01b03831660009081526020819052604090205462003aa1908262003505565b6001600160a01b03808516600090815260208190526040808220939093559084168152205462003ad29082620032be565b6001600160a01b038084166000818152602081815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b6001600160a01b03821662003b735760405162461bcd60e51b815260040180806020018281038252602181526020018062004ace6021913960400191505060405180910390fd5b60025462003b82908262003505565b6002556001600160a01b03821660009081526020819052604090205462003baa908262003505565b6001600160a01b038316600081815260208181526040808320949094558351858152935191937fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef929081900390910190a35050565b62003c0b828262003c84565b62003c1562002ccd565b801562003c245750600f5460ff165b1562002e2157600b5460408051636240a7d760e11b81526000600482018190526001600160a01b038681166024840152604483018690529251929093169263c4814fae9260648084019382900301818387803b158015620039be57600080fd5b6001600160a01b03821662003ce0576040805162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015290519081900360640190fd5b60025462003cef9082620032be565b6002556001600160a01b03821660009081526020819052604090205462003d179082620032be565b6001600160a01b0383166000818152602081815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050565b604051806080016040528060006001600160a01b03168152602001600081526020016000815260200160006001600160a01b031681525090565b610be98062003db68339019056fe608060405234801561001057600080fd5b50604051610be9380380610be98339818101604052608081101561003357600080fd5b50805160208201516040830151606090930151919290918161008c576040805162461bcd60e51b815260206004820152600d60248201526c696e76616c696420707269636560981b604482015290519081900360640190fd5b600180546001600160a01b03199081163317909155600280546001600160a01b03968716908316179055600380549490951693169290921790925560049190915560005542600555610b06806100e36000396000f3fe608060405234801561001057600080fd5b506004361061012c5760003560e01c8063b1610d7e116100ad578063cf42a92711610071578063cf42a927146102b4578063d7be4e29146102bc578063e5a6b10f146102c4578063fa7f1bae146102cc578063fb286c65146102d45761012c565b8063b1610d7e14610249578063b28fa15214610251578063b5b47f421461026e578063b80777ea14610276578063c4814fae1461027e5761012c565b80635ff0cf84116100f45780635ff0cf84146101c35780637150d8ae146101ef5780638f1b4c6f1461021357806390e64d1314610239578063a035b1fe146102415761012c565b80630c43cd88146101315780631703a0181461014b57806341c0e1b514610153578063448ab4c61461015d5780634b91562e14610197575b600080fd5b6101396102dc565b60408051918252519081900360200190f35b6101396102e3565b61015b6102e9565b005b6101836004803603602081101561017357600080fd5b50356001600160a01b0316610343565b604080519115158252519081900360200190f35b61015b600480360360408110156101ad57600080fd5b506001600160a01b038135169060200135610376565b61015b600480360360408110156101d957600080fd5b506001600160a01b038135169060200135610421565b6101f76104c8565b604080516001600160a01b039092168252519081900360200190f35b6101836004803603602081101561022957600080fd5b50356001600160a01b03166104d7565b6101836104e0565b610139610504565b61013961050a565b6101836004803603602081101561026757600080fd5b5035610511565b61013961064e565b610139610654565b61015b6004803603606081101561029457600080fd5b506001600160a01b0381358116916020810135909116906040013561065a565b6101836106f0565b61018361083b565b6101f76108f4565b610183610903565b610139610927565b6276a70081565b60005481565b6001546001600160a01b03163314610335576040805162461bcd60e51b815260206004820152600a6024820152691b9bdd081c185c995b9d60b21b604482015290519081900360640190fd5b6002546001600160a01b0316ff5b600060015b6001600160a01b03831660009081526008602052604090205460ff16600281111561036f57fe5b1492915050565b6001546001600160a01b031633146103c2576040805162461bcd60e51b815260206004820152600a6024820152691b9bdd081c185c995b9d60b21b604482015290519081900360640190fd5b6103ca610903565b610411576040805162461bcd60e51b81526020600482015260136024820152722a3432903b37ba32903430b99032b73232b21760691b604482015290519081900360640190fd5b61041d6002828461092d565b5050565b6001546001600160a01b0316331461046d576040805162461bcd60e51b815260206004820152600a6024820152691b9bdd081c185c995b9d60b21b604482015290519081900360640190fd5b610475610903565b6104bc576040805162461bcd60e51b81526020600482015260136024820152722a3432903b37ba32903430b99032b73232b21760691b604482015290519081900360640190fd5b61041d6001828461092d565b6002546001600160a01b031681565b60006002610348565b6000806104f86005544261097390919063ffffffff16565b6276a700109150505b90565b60045481565b624f1a0081565b600354600254604080516370a0823160e01b81526001600160a01b03928316600482015290516000939290921691839183916370a0823191602480820192602092909190829003018186803b15801561056957600080fd5b505afa15801561057d573d6000803e3d6000fd5b505050506040513d602081101561059357600080fd5b505160025460015460408051636eb1769f60e11b81526001600160a01b0393841660048201529183166024830152519293506000929185169163dd62ed3e91604480820192602092909190829003018186803b1580156105f257600080fd5b505afa158015610606573d6000803e3d6000fd5b505050506040513d602081101561061c57600080fd5b505160045490915060009061063290879061098a565b90508281111580156106445750818111155b9695505050505050565b60065481565b60055481565b6001546001600160a01b031633146106a6576040805162461bcd60e51b815260206004820152600a6024820152691b9bdd081c185c995b9d60b21b604482015290519081900360640190fd5b6106ae610903565b156106eb576001600160a01b0380841660009081526008602052604080822054928516825290205460ff91821691166106e88282856109af565b50505b505050565b60006106fa610903565b1561080f57600054600154604080516318160ddd60e01b81529051610807926001600160a01b0316916318160ddd916004808301926020929190829003018186803b15801561074857600080fd5b505afa15801561075c573d6000803e3d6000fd5b505050506040513d602081101561077257600080fd5b5051600654600154604080516318160ddd60e01b8152905161080193612710936107fb9391926001600160a01b03909116916318160ddd916004808301926020929190829003018186803b1580156107c957600080fd5b505afa1580156107dd573d6000803e3d6000fd5b505050506040513d60208110156107f357600080fd5b505190610973565b9061098a565b90610ab0565b109050610501565b60005461080761082c600654600754610ac390919063ffffffff16565b6007546108019061271061098a565b6000610845610903565b156108d757600054600154604080516318160ddd60e01b815290516108ce926001600160a01b0316916318160ddd916004808301926020929190829003018186803b15801561089357600080fd5b505afa1580156108a7573d6000803e3d6000fd5b505050506040513d60208110156108bd57600080fd5b50516007546108019061271061098a565b10159050610501565b6000546108ce61082c600654600754610ac390919063ffffffff16565b6003546001600160a01b031681565b60008061091b6005544261097390919063ffffffff16565b624f1a00101591505090565b60075481565b6001600160a01b0381166000908152600860205260409020805460ff811691859182919060ff1916600183600281111561096357fe5b02179055506106e88282866109af565b60008282111561097f57fe5b508082035b92915050565b60008261099957506000610984565b50818102818382816109a757fe5b041461098457fe5b8160028111156109bb57fe5b8360028111156109c757fe5b146106eb5760028360028111156109da57fe5b14156109f5576006546109ed9082610973565b600655610a1a565b6001836002811115610a0357fe5b1415610a1a57600754610a169082610973565b6007555b6002826002811115610a2857fe5b1415610a4357600654610a3b9082610ac3565b600655610a68565b6001826002811115610a5157fe5b1415610a6857600754610a649082610ac3565b6007555b7f8fcc50c2c4edd06d51ae66e9e21ed76b32a1766c57f491788e1aa24a1b58c256600754600654604051808381526020018281526020019250505060405180910390a1505050565b6000818381610abb57fe5b049392505050565b8181018281101561098457fefea264697066735822122003198c9707537ce5959b3e8267a2b8a721cc26a72203a7d67ca0a492033fb5a264736f6c6343000701003345524332303a207472616e7366657220746f20746865207a65726f206164647265737345524332303a20617070726f766520746f20746865207a65726f20616464726573734f6666657220776173206e6f742073756666696369656e746c792066756e6465644173206c6f6e672061732074686520636f6e7472616374206973206163746976652c20796f752061726520626f756e6420746f206974596f7520617265206e6f7420617574686f72697a656420746f2063616e63656c2074686973206163717569736974696f6e206f666665724e6577206f6666657273206d757374206265206174206c6561737420352520686967686572207468616e207468652070656e64696e67206f666665725468657265206973206e6f2070656e64696e67206f666665720000000000000045524332303a206275726e2066726f6d20746865207a65726f206164647265737345524332303a207472616e736665722066726f6d20746865207a65726f20616464726573735468697320636f6e747261637420646f6573206e6f7420726570726573656e7420656e6f7567682065717569747945524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373596f7520617265206e6f7420617574686f72697a656420746f20636f6d706c6574652074686973206163717569736974696f6e206f66666572596f75206e65656420746f20686f6c64206174206c65617374203525206f6620746865206669726d20746f206d616b6520616e206f66666572a2646970667358221220ebdf6e8dc9df34e307523934f7538babecdf0d1305409cf8edc1921aa400166b64736f6c63430007010033a264697066735822122059f1efb0f8e8adb8478a307aeeca3e41d813182284c9a27c18ae52e74dfcac8d64736f6c63430007010033",
                        "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x49DC2132 EQ PUSH2 0x30 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xEB PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x80 DUP2 LT ISZERO PUSH2 0x46 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH1 0x40 DUP2 ADD PUSH1 0x20 DUP3 ADD CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x68 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x7A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x9C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP6 POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 CALLDATALOAD AND SWAP4 POP POP POP PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x107 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP5 DUP5 DUP5 DUP5 PUSH1 0x40 MLOAD PUSH2 0x119 SWAP1 PUSH2 0x1C6 JUMP JUMPDEST DUP1 DUP1 PUSH1 0x20 ADD DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP6 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x168 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x150 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x195 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP5 POP POP POP POP POP DUP2 SWAP1 PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 PUSH1 0x0 CREATE2 SWAP1 POP DUP1 ISZERO DUP1 ISZERO PUSH2 0x1BC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x4F08 DUP1 PUSH2 0x1D4 DUP4 CODECOPY ADD SWAP1 JUMP INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH3 0xED4E00 PUSH1 0x4 SSTORE PUSH1 0x1 PUSH1 0xA DUP2 SWAP1 SSTORE PUSH1 0xF DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SWAP2 OR SWAP1 SSTORE CALLVALUE DUP1 ISZERO PUSH3 0x2C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x4F08 CODESIZE SUB DUP1 PUSH3 0x4F08 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE PUSH1 0x60 DUP2 LT ISZERO PUSH3 0x52 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD PUSH1 0x40 MLOAD SWAP4 SWAP3 SWAP2 SWAP1 DUP5 PUSH5 0x100000000 DUP3 GT ISZERO PUSH3 0x73 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 DUP4 ADD SWAP1 PUSH1 0x20 DUP3 ADD DUP6 DUP2 GT ISZERO PUSH3 0x89 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH5 0x100000000 DUP2 GT DUP3 DUP3 ADD DUP9 LT OR ISZERO PUSH3 0xA4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MSTORE POP DUP2 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0xD3 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH3 0xB9 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH3 0x101 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP PUSH1 0x40 DUP2 DUP2 MSTORE PUSH1 0x20 DUP4 DUP2 ADD MLOAD SWAP4 DUP3 ADD MLOAD PUSH1 0x3 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH1 0x9 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP2 DUP3 AND DUP2 OR SWAP1 SWAP3 SSTORE PUSH1 0xC DUP1 SLOAD SWAP1 SWAP2 AND PUSH20 0x29FE8914E76DA5CE2D90DE98A64D0055F199D06D OR SWAP1 SSTORE PUSH1 0xD DUP3 SWAP1 SSTORE PUSH1 0xE DUP3 SWAP1 SSTORE PUSH4 0x3A98EF39 PUSH1 0xE0 SHL DUP6 MSTORE SWAP3 MLOAD SWAP5 SWAP7 POP SWAP5 POP DUP6 SWAP4 DUP6 SWAP4 DUP5 SWAP4 SWAP3 PUSH4 0x3A98EF39 SWAP3 PUSH1 0x4 DUP1 DUP5 ADD SWAP4 DUP3 SWAP1 SUB ADD DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x19E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH3 0x1B3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH3 0x1CA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP PUSH1 0x40 DUP1 MLOAD PUSH4 0x6427ED97 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE SWAP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND SWAP6 POP PUSH4 0x6427ED97 SWAP5 POP PUSH1 0x24 DUP1 DUP4 ADD SWAP5 POP SWAP1 SWAP2 DUP3 SWAP1 SUB ADD DUP2 DUP4 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x217 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH3 0x22C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP DUP5 MLOAD PUSH3 0x245 SWAP3 POP PUSH1 0x10 SWAP2 POP PUSH1 0x20 DUP7 ADD SWAP1 PUSH3 0x24F JUMP JUMPDEST POP POP POP POP PUSH3 0x2EB JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH1 0x1F LT PUSH3 0x292 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0x2C2 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0x2C2 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x2C2 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x2A5 JUMP JUMPDEST POP PUSH3 0x2D0 SWAP3 SWAP2 POP PUSH3 0x2D4 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x2D0 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x2D5 JUMP JUMPDEST PUSH2 0x4C0D DUP1 PUSH3 0x2FB PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH3 0x33A JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6B03ED5F GT PUSH3 0x1C5 JUMPI DUP1 PUSH4 0xA9059CBB GT PUSH3 0xFF JUMPI DUP1 PUSH4 0xC6788BDD GT PUSH3 0xB1 JUMPI DUP1 PUSH4 0xDE0E9A3E GT PUSH3 0x87 JUMPI DUP1 PUSH4 0xDE0E9A3E EQ PUSH3 0x9E1 JUMPI DUP1 PUSH4 0xE1B8C38E EQ PUSH3 0xA24 JUMPI DUP1 PUSH4 0xEB470EBF EQ PUSH3 0xA2E JUMPI DUP1 PUSH4 0xEC6580E2 EQ PUSH3 0xA57 JUMPI PUSH3 0x33A JUMP JUMPDEST DUP1 PUSH4 0xC6788BDD EQ PUSH3 0x940 JUMPI DUP1 PUSH4 0xD5025625 EQ PUSH3 0x9A6 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH3 0x9B0 JUMPI PUSH3 0x33A JUMP JUMPDEST DUP1 PUSH4 0xA9059CBB EQ PUSH3 0x89B JUMPI DUP1 PUSH4 0xB40E80D1 EQ PUSH3 0x8CA JUMPI DUP1 PUSH4 0xBB689472 EQ PUSH3 0x8F3 JUMPI DUP1 PUSH4 0xBC1B1E7C EQ PUSH3 0x8FD JUMPI DUP1 PUSH4 0xBF376C7A EQ PUSH3 0x907 JUMPI DUP1 PUSH4 0xC028DF06 EQ PUSH3 0x936 JUMPI PUSH3 0x33A JUMP JUMPDEST DUP1 PUSH4 0x90CF581C GT PUSH3 0x177 JUMPI DUP1 PUSH4 0x9E8A9A5A GT PUSH3 0x14D JUMPI DUP1 PUSH4 0x9E8A9A5A EQ PUSH3 0x7B0 JUMPI DUP1 PUSH4 0xA3EC1883 EQ PUSH3 0x7BA JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH3 0x7E3 JUMPI DUP1 PUSH4 0xA4C0ED36 EQ PUSH3 0x812 JUMPI PUSH3 0x33A JUMP JUMPDEST DUP1 PUSH4 0x90CF581C EQ PUSH3 0x773 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH3 0x77D JUMPI DUP1 PUSH4 0x9B56D6C9 EQ PUSH3 0x787 JUMPI PUSH3 0x33A JUMP JUMPDEST DUP1 PUSH4 0x6B03ED5F EQ PUSH3 0x6F9 JUMPI DUP1 PUSH4 0x6F4B18DF EQ PUSH3 0x703 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH3 0x70D JUMPI DUP1 PUSH4 0x77E071AD EQ PUSH3 0x736 JUMPI DUP1 PUSH4 0x7DC2CD98 EQ PUSH3 0x75F JUMPI DUP1 PUSH4 0x8FD3AB80 EQ PUSH3 0x769 JUMPI PUSH3 0x33A JUMP JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH3 0x297 JUMPI DUP1 PUSH4 0x41C12A70 GT PUSH3 0x249 JUMPI DUP1 PUSH4 0x58047913 GT PUSH3 0x21F JUMPI DUP1 PUSH4 0x58047913 EQ PUSH3 0x6B9 JUMPI DUP1 PUSH4 0x60918117 EQ PUSH3 0x6C3 JUMPI DUP1 PUSH4 0x6427ED97 EQ PUSH3 0x6CD JUMPI DUP1 PUSH4 0x6467C09A EQ PUSH3 0x6EF JUMPI PUSH3 0x33A JUMP JUMPDEST DUP1 PUSH4 0x41C12A70 EQ PUSH3 0x660 JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH3 0x66A JUMPI DUP1 PUSH4 0x49B210B7 EQ PUSH3 0x68A JUMPI PUSH3 0x33A JUMP JUMPDEST DUP1 PUSH4 0x313CE567 EQ PUSH3 0x52C JUMPI DUP1 PUSH4 0x32A7AE95 EQ PUSH3 0x54C JUMPI DUP1 PUSH4 0x3549788A EQ PUSH3 0x575 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH3 0x57F JUMPI DUP1 PUSH4 0x3BCC45BA EQ PUSH3 0x5AE JUMPI DUP1 PUSH4 0x4000AEA0 EQ PUSH3 0x5D7 JUMPI PUSH3 0x33A JUMP JUMPDEST DUP1 PUSH4 0x141C7068 GT PUSH3 0x2F1 JUMPI DUP1 PUSH4 0x141C7068 EQ PUSH3 0x47B JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH3 0x485 JUMPI DUP1 PUSH4 0x1E3B9DE5 EQ PUSH3 0x48F JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH3 0x4B8 JUMPI DUP1 PUSH4 0x26773DDD EQ PUSH3 0x4F1 JUMPI DUP1 PUSH4 0x2A0A4ED5 EQ PUSH3 0x522 JUMPI PUSH3 0x33A JUMP JUMPDEST DUP1 PUSH4 0x2FB0C5E EQ PUSH3 0x33F JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH3 0x35D JUMPI DUP1 PUSH4 0x832E470 EQ PUSH3 0x3DF JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH3 0x3FB JUMPI DUP1 PUSH4 0xC6F0E5D EQ PUSH3 0x42A JUMPI DUP1 PUSH4 0xCD865EC EQ PUSH3 0x450 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x349 PUSH3 0xA61 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH3 0x367 PUSH3 0xA6A JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP4 MLOAD DUP2 DUP4 ADD MSTORE DUP4 MLOAD SWAP2 SWAP3 DUP4 SWAP3 SWAP1 DUP4 ADD SWAP2 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x3A3 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH3 0x389 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH3 0x3D1 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH3 0x3E9 PUSH3 0xC25 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH3 0x349 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH3 0x413 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH3 0xC2B JUMP JUMPDEST PUSH3 0x434 PUSH3 0xC44 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH3 0x479 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH3 0x468 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH3 0xC53 JUMP JUMPDEST STOP JUMPDEST PUSH3 0x479 PUSH3 0xF37 JUMP JUMPDEST PUSH3 0x3E9 PUSH3 0x1378 JUMP JUMPDEST PUSH3 0x434 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH3 0x4A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH3 0x137E JUMP JUMPDEST PUSH3 0x349 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH3 0x4D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH3 0x139F JUMP JUMPDEST PUSH3 0x479 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH3 0x509 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 ADD CALLDATALOAD AND PUSH3 0x13F6 JUMP JUMPDEST PUSH3 0x434 PUSH3 0x1721 JUMP JUMPDEST PUSH3 0x536 PUSH3 0x1799 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xFF SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH3 0x479 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH3 0x564 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH3 0x17A2 JUMP JUMPDEST PUSH3 0x3E9 PUSH3 0x1A0A JUMP JUMPDEST PUSH3 0x349 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH3 0x597 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH3 0x1A10 JUMP JUMPDEST PUSH3 0x434 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH3 0x5C6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH3 0x1A49 JUMP JUMPDEST PUSH3 0x349 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH3 0x5EF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 CALLDATALOAD AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP2 DUP2 ADD SWAP1 PUSH1 0x60 DUP2 ADD PUSH1 0x40 DUP3 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x20 SHL DUP2 GT ISZERO PUSH3 0x61F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH3 0x632 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH1 0x1 PUSH1 0x20 SHL DUP4 GT OR ISZERO PUSH3 0x654 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP SWAP1 SWAP3 POP SWAP1 POP PUSH3 0x1A6A JUMP JUMPDEST PUSH3 0x479 PUSH3 0x1B31 JUMP JUMPDEST PUSH3 0x479 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH3 0x682 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH3 0x1C0D JUMP JUMPDEST PUSH3 0x479 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH3 0x6A2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH3 0x1C7F JUMP JUMPDEST PUSH3 0x434 PUSH3 0x21B5 JUMP JUMPDEST PUSH3 0x3E9 PUSH3 0x21C4 JUMP JUMPDEST PUSH3 0x479 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH3 0x6E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD ISZERO ISZERO PUSH3 0x21CA JUMP JUMPDEST PUSH3 0x434 PUSH3 0x21E9 JUMP JUMPDEST PUSH3 0x479 PUSH3 0x21F8 JUMP JUMPDEST PUSH3 0x479 PUSH3 0x235D JUMP JUMPDEST PUSH3 0x3E9 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH3 0x725 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH3 0x2692 JUMP JUMPDEST PUSH3 0x3E9 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH3 0x74E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH3 0x26AD JUMP JUMPDEST PUSH3 0x3E9 PUSH3 0x2762 JUMP JUMPDEST PUSH3 0x479 PUSH3 0x2768 JUMP JUMPDEST PUSH3 0x479 PUSH3 0x29FD JUMP JUMPDEST PUSH3 0x367 PUSH3 0x2A76 JUMP JUMPDEST PUSH3 0x3E9 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH3 0x79F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH3 0x2BEE JUMP JUMPDEST PUSH3 0x3E9 PUSH3 0x2C0C JUMP JUMPDEST PUSH3 0x349 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH3 0x7D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH3 0x2C12 JUMP JUMPDEST PUSH3 0x349 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH3 0x7FB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH3 0x2C31 JUMP JUMPDEST PUSH3 0x479 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH3 0x82A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 CALLDATALOAD AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP2 DUP2 ADD SWAP1 PUSH1 0x60 DUP2 ADD PUSH1 0x40 DUP3 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x20 SHL DUP2 GT ISZERO PUSH3 0x85A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH3 0x86D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH1 0x1 PUSH1 0x20 SHL DUP4 GT OR ISZERO PUSH3 0x88F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP SWAP1 SWAP3 POP SWAP1 POP PUSH3 0x2C6A JUMP JUMPDEST PUSH3 0x349 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH3 0x8B3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH3 0x2C94 JUMP JUMPDEST PUSH3 0x349 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH3 0x8E2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH3 0x2CA9 JUMP JUMPDEST PUSH3 0x434 PUSH3 0x2CBE JUMP JUMPDEST PUSH3 0x349 PUSH3 0x2CCD JUMP JUMPDEST PUSH3 0x479 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH3 0x91F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH3 0x2CEA JUMP JUMPDEST PUSH3 0x434 PUSH3 0x2E25 JUMP JUMPDEST PUSH3 0x969 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH3 0x958 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH3 0x2E34 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP5 POP POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH3 0x367 PUSH3 0x2E66 JUMP JUMPDEST PUSH3 0x3E9 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH3 0x9C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 ADD CALLDATALOAD AND PUSH3 0x2EF8 JUMP JUMPDEST PUSH3 0xA01 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH3 0x9F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH3 0x2F23 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP1 MLOAD SWAP2 DUP3 SWAP1 SUB ADD SWAP1 RETURN JUMPDEST PUSH3 0x479 PUSH3 0x3036 JUMP JUMPDEST PUSH3 0x3E9 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH3 0xA46 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH3 0x318A JUMP JUMPDEST PUSH3 0x349 PUSH3 0x31A8 JUMP JUMPDEST PUSH1 0xF SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x6FDDE03 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD PUSH1 0x60 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0x6FDDE03 SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x0 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0xAB0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH3 0xAC5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH1 0x20 DUP2 LT ISZERO PUSH3 0xAEF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD PUSH1 0x40 MLOAD SWAP4 SWAP3 SWAP2 SWAP1 DUP5 PUSH1 0x1 PUSH1 0x20 SHL DUP3 GT ISZERO PUSH3 0xB0F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 DUP4 ADD SWAP1 PUSH1 0x20 DUP3 ADD DUP6 DUP2 GT ISZERO PUSH3 0xB25 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x20 SHL DUP2 GT DUP3 DUP3 ADD DUP9 LT OR ISZERO PUSH3 0xB3F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MSTORE POP DUP2 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0xB6E JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH3 0xB54 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH3 0xB9C JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP PUSH1 0x40 MSTORE POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP1 PUSH10 0x223930B3B3B0B136329 PUSH1 0xB5 SHL DUP2 MSTORE POP PUSH1 0xA ADD DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH3 0xBEC JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x1F NOT SWAP1 SWAP3 ADD SWAP2 PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH3 0xBCB JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH3 0xC3A CALLER DUP5 DUP5 PUSH3 0x31CE JUMP JUMPDEST POP PUSH1 0x1 JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH3 0xC5D PUSH3 0x3D6D JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP3 MLOAD PUSH1 0x80 DUP2 ADD DUP5 MSTORE DUP2 SLOAD DUP6 AND DUP2 MSTORE PUSH1 0x1 DUP3 ADD SLOAD SWAP3 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x2 DUP3 ADD SLOAD SWAP4 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x3 ADD SLOAD SWAP1 SWAP3 AND PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE SWAP1 SWAP2 SWAP1 DUP2 PUSH3 0xCF5 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x139BC818DB185A5B48199BDD5B99 PUSH1 0x92 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH3 0xD54 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C7920636C61696D616E742063616E207265736F6C766520636C61696D00 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST TIMESTAMP PUSH3 0xD70 PUSH1 0x4 SLOAD DUP6 PUSH1 0x40 ADD MLOAD PUSH3 0x32BE SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST GT ISZERO PUSH3 0xDC4 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436C61696D20706572696F64206E6F74206F7665722079657400000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND DUP3 SSTORE PUSH1 0x1 DUP3 ADD DUP6 SWAP1 SSTORE PUSH1 0x2 DUP3 ADD DUP6 SWAP1 SSTORE PUSH1 0x3 SWAP1 SWAP2 ADD DUP1 SLOAD SWAP1 SWAP2 AND SWAP1 SSTORE DUP1 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE DUP5 DUP7 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP9 SWAP1 MSTORE SWAP1 MLOAD SWAP4 DUP7 AND SWAP4 PUSH4 0xA9059CBB SWAP4 PUSH1 0x44 DUP1 DUP5 ADD SWAP5 SWAP4 DUP4 SWAP1 SUB ADD SWAP1 DUP3 SWAP1 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0xE51 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH3 0xE66 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH3 0xE7D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH3 0xECE JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH26 0x10DBDB1B185D195C985B081D1C985B9CD9995C8819985A5B1959 PUSH1 0x32 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH3 0xEE5 DUP6 DUP3 PUSH3 0xEDF DUP9 PUSH3 0x2692 JUMP JUMPDEST PUSH3 0x32CC JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x52A5C2B28BC6EB9712D0CED43463103B486B13CCC9CDA499FD3B2D7B6A74A8EE DUP6 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP JUMP JUMPDEST PUSH3 0xF41 PUSH3 0x2CCD JUMP JUMPDEST DUP1 ISZERO PUSH3 0xF50 JUMPI POP PUSH1 0xF SLOAD PUSH1 0xFF AND JUMPDEST PUSH3 0xF91 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH3 0x4AAE DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0xB SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x38A86C57 PUSH1 0xE1 SHL DUP2 MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0x7150D8AE SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0xFD7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH3 0xFEC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH3 0x1003 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 POP CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ PUSH3 0x1050 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x39 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH3 0x4B66 PUSH1 0x39 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xB PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xD7BE4E29 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x109F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH3 0x10B4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH3 0x10CB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH3 0x111F JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E74206E756D626572206F662079657320766F746573 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0xB SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xB28FA152 PUSH3 0x113B DUP4 PUSH3 0x2692 JUMP JUMPDEST PUSH3 0x1145 PUSH3 0x1378 JUMP JUMPDEST SUB PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x117B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH3 0x1190 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH3 0x11A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH3 0x11FB JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6666657220696E73756666696369656E746C792066756E6465640000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH3 0x12F7 DUP2 PUSH1 0xB PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xE5A6B10F PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x124F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH3 0x1264 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH3 0x127B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0xB SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x501AD8FF PUSH1 0xE1 SHL DUP2 MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 PUSH4 0xA035B1FE SWAP2 PUSH1 0x4 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x12C3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH3 0x12D8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH3 0x12EF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH3 0x32DE JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x40 DUP1 MLOAD CALLER DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 DUP2 DUP4 ADD DUP2 SWAP1 MSTORE PUSH1 0x16 SWAP1 DUP3 ADD MSTORE PUSH22 0x436F6D706C65746564207375636365737366756C6C79 PUSH1 0x50 SHL PUSH1 0xA0 DUP3 ADD MSTORE SWAP1 MLOAD SWAP2 DUP4 AND SWAP2 PUSH32 0xC88F58AE9FEB0742D9422F604DD3C1BE6D02818F8DEC340C5061F428B554E975 SWAP2 DUP2 SWAP1 SUB PUSH1 0xC0 ADD SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD AND JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x13AE DUP5 DUP5 DUP5 PUSH3 0x32CC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP1 DUP6 MSTORE SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 SLOAD PUSH3 0x13EC SWAP2 DUP7 SWAP2 PUSH3 0x13E6 SWAP1 DUP7 PUSH3 0x3505 JUMP JUMPDEST PUSH3 0x31CE JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH3 0x1401 DUP2 PUSH3 0x2C12 JUMP JUMPDEST PUSH3 0x1453 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436C61696D732064697361626C656420666F7220746869732061646472657373 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH3 0x1460 DUP4 PUSH3 0x26AD JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT PUSH3 0x14B1 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x155B9CDD5C1C1BDC9D19590818DBDB1B185D195C985B PUSH1 0x52 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST CALLER PUSH1 0x0 PUSH3 0x14BF DUP5 PUSH3 0x2692 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH3 0x14CF DUP3 DUP6 PUSH3 0x3518 JUMP JUMPDEST SWAP1 POP DUP6 DUP3 PUSH3 0x1525 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436C61696D6564206164647265737320686F6C6473206E6F2073686172657300 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD ISZERO PUSH3 0x1594 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4164647265737320616C726561647920636C61696D6564000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE ADDRESS PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD DUP6 SWAP1 MSTORE SWAP2 MLOAD SWAP2 DUP4 AND SWAP2 PUSH4 0x23B872DD SWAP2 PUSH1 0x64 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x15EE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH3 0x1603 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH3 0x161A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH3 0x166B JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH26 0x10DBDB1B185D195C985B081D1C985B9CD9995C8819985A5B1959 PUSH1 0x32 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x80 DUP2 ADD DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP8 AND DUP1 DUP4 MSTORE PUSH1 0x20 DUP1 DUP5 ADD DUP8 DUP2 MSTORE TIMESTAMP DUP6 DUP8 ADD SWAP1 DUP2 MSTORE DUP14 DUP6 AND PUSH1 0x60 DUP8 ADD SWAP1 DUP2 MSTORE DUP14 DUP7 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 DUP7 MSTORE DUP10 SWAP1 KECCAK256 SWAP8 MLOAD DUP9 SLOAD SWAP1 DUP9 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP2 DUP3 AND OR DUP10 SSTORE SWAP4 MLOAD PUSH1 0x1 DUP10 ADD SSTORE SWAP2 MLOAD PUSH1 0x2 DUP9 ADD SSTORE MLOAD PUSH1 0x3 SWAP1 SWAP7 ADD DUP1 SLOAD SWAP7 SWAP1 SWAP6 AND SWAP6 SWAP1 SWAP2 AND SWAP5 SWAP1 SWAP5 OR SWAP1 SWAP3 SSTORE DUP4 MLOAD DUP8 DUP2 MSTORE SWAP4 MLOAD SWAP1 SWAP4 PUSH32 0x1982CA8958FC8A8176CB52BE509260F4BC5AF7CE04E1533711793F1C56DD5359 SWAP3 SWAP1 DUP3 SWAP1 SUB ADD SWAP1 LOG3 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x172D PUSH3 0x21B5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x2A0A4ED5 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x1766 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH3 0x177B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH3 0x1792 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH3 0x17AC PUSH3 0x1721 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH3 0x1812 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F752063616E6E6F742064656C65746520636C61696D730000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH3 0x181C PUSH3 0x3D6D JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP3 MLOAD PUSH1 0x80 DUP2 ADD DUP5 MSTORE DUP2 SLOAD DUP6 AND DUP2 MSTORE PUSH1 0x1 DUP3 ADD SLOAD SWAP3 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x2 DUP3 ADD SLOAD SWAP4 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x3 ADD SLOAD SWAP1 SWAP3 AND PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE SWAP1 SWAP2 PUSH3 0x18B2 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x139BC818DB185A5B48199BDD5B99 PUSH1 0x92 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND DUP3 SSTORE PUSH1 0x1 DUP3 ADD DUP6 SWAP1 SSTORE PUSH1 0x2 DUP3 ADD DUP6 SWAP1 SSTORE PUSH1 0x3 SWAP1 SWAP2 ADD DUP1 SLOAD SWAP1 SWAP2 AND SWAP1 SSTORE DUP6 MLOAD DUP7 DUP4 ADD MLOAD DUP3 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE SWAP2 DUP7 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE SWAP1 MLOAD SWAP4 DUP6 AND SWAP4 PUSH4 0xA9059CBB SWAP4 PUSH1 0x44 DUP1 DUP5 ADD SWAP5 SWAP4 DUP4 SWAP1 SUB ADD SWAP1 DUP3 SWAP1 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x1941 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH3 0x1956 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH3 0x196D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH3 0x19BE JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH26 0x10DBDB1B185D195C985B081D1C985B9CD9995C8819985A5B1959 PUSH1 0x32 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x20 DUP1 DUP5 ADD MLOAD PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND SWAP4 DUP8 AND SWAP3 PUSH32 0xBB036E629A9F4C0897EE5D48440DFDB36F7E772117723A2ED603A6514244C2D5 SWAP3 DUP3 SWAP1 SUB ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0xE SLOAD DUP2 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 PUSH3 0xC3A SWAP2 DUP6 SWAP1 PUSH3 0x13E6 SWAP1 DUP7 PUSH3 0x32BE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x3 ADD SLOAD AND SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH3 0x1A79 DUP7 DUP7 PUSH3 0x2C94 JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH3 0x1B28 JUMPI DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xA4C0ED36 CALLER DUP8 DUP8 DUP8 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP5 DUP5 DUP3 DUP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP SWAP6 POP POP POP POP POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x1B0E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH3 0x1B23 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH3 0x1B3B PUSH3 0x2CCD JUMP JUMPDEST DUP1 ISZERO PUSH3 0x1B4A JUMPI POP PUSH1 0xF SLOAD PUSH1 0xFF AND JUMPDEST PUSH3 0x1B8B JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH3 0x4AAE DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0xB SLOAD CALLER SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x4B91562E DUP3 PUSH3 0x1BAA DUP2 PUSH3 0x2692 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x1BF1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH3 0x1C06 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH3 0x1C19 CALLER DUP3 PUSH3 0x3541 JUMP JUMPDEST PUSH3 0x1C23 PUSH3 0x21B5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x42966C68 PUSH3 0x1C48 PUSH1 0xA SLOAD DUP5 PUSH3 0x3518 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x1BF1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0xF SLOAD PUSH1 0xFF AND PUSH3 0x1CD7 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416E206163636570746564206F66666572206578697374730000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH3 0x1CE3 PUSH3 0x21B5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x3A98EF39 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x1D1E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH3 0x1D33 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH3 0x1D4A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 POP CALLER PUSH3 0x1D6B PUSH2 0x2710 PUSH3 0x1D64 DUP5 PUSH2 0xBB8 PUSH3 0x3518 JUMP JUMPDEST SWAP1 PUSH3 0x354D JUMP JUMPDEST PUSH3 0x1D75 PUSH3 0x1378 JUMP JUMPDEST LT ISZERO PUSH3 0x1DB4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2E DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH3 0x4B14 PUSH1 0x2E SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x1DC9 PUSH2 0x2710 PUSH3 0x1D64 DUP5 PUSH2 0x1F4 PUSH3 0x3518 JUMP JUMPDEST PUSH3 0x1DD4 DUP3 PUSH3 0x2692 JUMP JUMPDEST LT ISZERO PUSH3 0x1E13 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x39 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH3 0x4B9F PUSH1 0x39 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xC SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH1 0x0 SWAP1 PUSH8 0xDE0B6B3A7640000 SWAP1 DUP3 DUP2 DUP2 DUP2 DUP6 DUP9 DUP4 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH3 0x1E51 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x0 CALLER DUP5 DUP7 PUSH1 0xE SLOAD PUSH1 0x40 MLOAD PUSH3 0x1E68 SWAP1 PUSH3 0x3DA7 JUMP JUMPDEST DUP1 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP5 POP POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 PUSH1 0x0 CREATE DUP1 ISZERO DUP1 ISZERO PUSH3 0x1EB6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xB28FA152 PUSH3 0x1ED3 DUP5 PUSH3 0x2692 JUMP JUMPDEST PUSH3 0x1EDD PUSH3 0x1378 JUMP JUMPDEST SUB PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x1F13 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH3 0x1F28 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH3 0x1F3F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH3 0x1F8A JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x496E73756666696369656E742066756E64696E67 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH3 0x1F94 PUSH3 0x2CCD JUMP JUMPDEST ISZERO PUSH3 0x2140 JUMPI PUSH1 0xB PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xE5A6B10F PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x1FE9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH3 0x1FFE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH3 0x2015 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND SWAP2 AND EQ DUP1 ISZERO PUSH3 0x20C3 JUMPI POP PUSH3 0x20BF PUSH2 0x2710 PUSH3 0x1D64 PUSH2 0x2904 PUSH1 0xB PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xA035B1FE PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x208A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH3 0x209F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH3 0x20B6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 PUSH3 0x3518 JUMP JUMPDEST DUP6 LT ISZERO JUMPDEST PUSH3 0x2100 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x3C DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH3 0x4A72 PUSH1 0x3C SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x2140 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1C DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4F66666572207265706C61636564206279206869676865722062696400000000 DUP2 MSTORE POP PUSH3 0x3561 JUMP JUMPDEST PUSH1 0xB DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SWAP2 SSTORE DUP3 AND PUSH32 0x9C00F159B1FA9EAEBDA7ACAF50BE0BF3A652277380F907B35CB681BD641A62D3 DUP7 PUSH3 0x218E PUSH3 0x21E9 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x20 DUP4 ADD MSTORE DUP1 MLOAD SWAP2 DUP3 SWAP1 SUB ADD SWAP1 LOG2 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD ISZERO PUSH3 0x235B JUMPI CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 DUP2 ADD DUP1 SLOAD PUSH1 0x3 DUP4 ADD DUP1 SLOAD DUP5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND DUP7 SSTORE SWAP4 DUP9 SWAP1 SSTORE PUSH1 0x2 SWAP1 SWAP5 ADD DUP8 SWAP1 SSTORE SWAP2 DUP4 AND SWAP1 SWAP2 SSTORE DUP3 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP7 SWAP1 SWAP7 MSTORE PUSH1 0x24 DUP7 ADD DUP2 SWAP1 MSTORE SWAP2 MLOAD SWAP2 SWAP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP4 DUP5 SWAP4 PUSH4 0xA9059CBB SWAP4 PUSH1 0x44 DUP1 DUP6 ADD SWAP5 SWAP3 SWAP4 SWAP2 SWAP3 DUP4 SWAP1 SUB ADD SWAP1 DUP3 SWAP1 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x22A5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH3 0x22BA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH3 0x22D1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH3 0x2322 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH26 0x10DBDB1B185D195C985B081D1C985B9CD9995C8819985A5B1959 PUSH1 0x32 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP4 DUP2 MSTORE SWAP1 MLOAD CALLER SWAP2 PUSH32 0x203627483D943880619F4B7E0CCA21DBEFD6204B4D85B124EB99540E17BA86DD SWAP2 SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG2 POP POP JUMPDEST JUMP JUMPDEST PUSH3 0x2367 PUSH3 0x2CCD JUMP JUMPDEST DUP1 ISZERO PUSH3 0x2376 JUMPI POP PUSH1 0xF SLOAD PUSH1 0xFF AND JUMPDEST PUSH3 0x23B7 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH3 0x4AAE DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0xB PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x90E64D13 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x2406 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH3 0x241B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH3 0x2432 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD ISZERO PUSH3 0x2470 JUMPI PUSH3 0x246A PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xD DUP2 MSTORE PUSH1 0x20 ADD PUSH13 0x13D999995C88195E1C1A5C9959 PUSH1 0x9A SHL DUP2 MSTORE POP PUSH3 0x3561 JUMP JUMPDEST PUSH3 0x235B JUMP JUMPDEST PUSH1 0xB PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xCF42A927 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x24BF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH3 0x24D4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH3 0x24EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD ISZERO PUSH3 0x2528 JUMPI PUSH3 0x246A PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH18 0x139BDD08195B9BDD59DA081CDD5C1C1BDC9D PUSH1 0x72 SHL DUP2 MSTORE POP PUSH3 0x3561 JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x38A86C57 PUSH1 0xE1 SHL DUP2 MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 PUSH4 0xB28FA152 SWAP2 PUSH3 0x25AE SWAP2 DUP5 SWAP2 PUSH4 0x7150D8AE SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x257A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH3 0x258F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH3 0x25A6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH3 0x2692 JUMP JUMPDEST PUSH3 0x25B8 PUSH3 0x1378 JUMP JUMPDEST SUB PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x25EE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH3 0x2603 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH3 0x261A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH3 0x2645 JUMPI PUSH3 0x246A PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0x49E4 PUSH1 0x21 SWAP2 CODECOPY PUSH3 0x3561 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4163717569736974696F6E20636F6E7465737420756E7375636365737366756C PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH3 0x26BB DUP4 PUSH3 0x3731 JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH3 0x26CC JUMPI SWAP1 POP PUSH3 0x139A JUMP JUMPDEST PUSH3 0x26D6 PUSH3 0x21B5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH3 0x26FB JUMPI POP POP PUSH1 0xA SLOAD PUSH3 0x139A JUMP JUMPDEST PUSH3 0x2759 PUSH1 0xA SLOAD PUSH3 0x270C PUSH3 0x21B5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x77E071AD DUP7 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x208A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 POP POP PUSH3 0x139A JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0xF SLOAD PUSH1 0xFF AND PUSH3 0x27B9 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x436F6E7472616374206973206E6F7420616374697665 PUSH1 0x50 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 CALLER SWAP1 POP PUSH3 0x27DD PUSH2 0x2710 PUSH3 0x1D64 PUSH1 0xD SLOAD PUSH3 0x27D6 PUSH3 0x1378 JUMP JUMPDEST SWAP1 PUSH3 0x3518 JUMP JUMPDEST PUSH3 0x27E8 DUP3 PUSH3 0x2692 JUMP JUMPDEST LT ISZERO PUSH3 0x2831 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x145D5BDC9D5B481B9BDD081C995858DA1959 PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH3 0x283B PUSH3 0x2CCD JUMP JUMPDEST ISZERO PUSH3 0x29B0 JUMPI PUSH1 0xB PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xCF42A927 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x2890 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH3 0x28A5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH3 0x28BC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH3 0x2994 JUMPI PUSH3 0x28CD PUSH3 0x1B31 JUMP JUMPDEST PUSH1 0xB PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xCF42A927 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x291C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH3 0x2931 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH3 0x2948 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH3 0x2994 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x145D5BDC9D5B481A185CC81B9BDD0819985A5B1959 PUSH1 0x5A SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH3 0x299E PUSH3 0x235D JUMP JUMPDEST PUSH3 0x29A8 PUSH3 0x2CCD JUMP JUMPDEST ISZERO PUSH3 0x29B0 JUMPI INVALID JUMPDEST PUSH3 0x29BE DUP2 DUP3 PUSH1 0x1 PUSH3 0x32DE JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND DUP2 MSTORE SWAP1 MLOAD PUSH32 0x3B6B79A09E9FD230E8591B65C97236BF7DF7A604EDF733DB0658E66B0E6EB2A9 SWAP2 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG1 POP JUMP JUMPDEST PUSH3 0x2A07 PUSH3 0x2CCD JUMP JUMPDEST DUP1 ISZERO PUSH3 0x2A16 JUMPI POP PUSH1 0xF SLOAD PUSH1 0xFF AND JUMPDEST PUSH3 0x2A57 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH3 0x4AAE DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0xB SLOAD CALLER SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x5FF0CF84 DUP3 PUSH3 0x1BAA DUP2 PUSH3 0x2692 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x95D89B41 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD PUSH1 0x60 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0x95D89B41 SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x0 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x2ABC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH3 0x2AD1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH1 0x20 DUP2 LT ISZERO PUSH3 0x2AFB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD PUSH1 0x40 MLOAD SWAP4 SWAP3 SWAP2 SWAP1 DUP5 PUSH1 0x1 PUSH1 0x20 SHL DUP3 GT ISZERO PUSH3 0x2B1B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 DUP4 ADD SWAP1 PUSH1 0x20 DUP3 ADD DUP6 DUP2 GT ISZERO PUSH3 0x2B31 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x20 SHL DUP2 GT DUP3 DUP3 ADD DUP9 LT OR ISZERO PUSH3 0x2B4B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MSTORE POP DUP2 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x2B7A JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH3 0x2B60 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH3 0x2BA8 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP PUSH1 0x40 MSTORE POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP1 PUSH1 0x11 PUSH1 0xFA SHL DUP2 MSTORE POP PUSH1 0x1 ADD DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x20 DUP4 LT PUSH3 0xBEC JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x1F NOT SWAP1 SWAP3 ADD SWAP2 PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH3 0xBCB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH1 0xD SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO SWAP1 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 PUSH3 0xC3A SWAP2 DUP6 SWAP1 PUSH3 0x13E6 SWAP1 DUP7 PUSH3 0x3505 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH3 0x2C82 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x2C8E DUP5 DUP5 PUSH3 0x3778 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x2CA2 DUP4 DUP4 PUSH3 0x3834 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0xC SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH3 0x2CDA PUSH3 0x21E9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO SWAP1 POP SWAP1 JUMP JUMPDEST PUSH3 0x2CF4 PUSH3 0x2CCD JUMP JUMPDEST ISZERO PUSH3 0x2D42 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH24 0x2A3432B9329034B99030903832B73234B7339037B33332B9 PUSH1 0x41 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x9 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP5 SWAP1 MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 PUSH4 0x23B872DD SWAP2 PUSH1 0x64 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x2D9D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH3 0x2DB2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH3 0x2DC9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH3 0x2E15 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x14DA185C99481D1C985B9CD9995C8819985A5B1959 PUSH1 0x5A SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH3 0x2E21 DUP3 DUP3 PUSH3 0x3778 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x3 SWAP1 SWAP4 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND SWAP4 SWAP2 SWAP3 AND DUP5 JUMP JUMPDEST PUSH1 0x10 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x2 PUSH1 0x1 DUP6 AND ISZERO PUSH2 0x100 MUL PUSH1 0x0 NOT ADD SWAP1 SWAP5 AND SWAP4 SWAP1 SWAP4 DIV PUSH1 0x1F DUP2 ADD DUP5 SWAP1 DIV DUP5 MUL DUP3 ADD DUP5 ADD SWAP1 SWAP3 MSTORE DUP2 DUP2 MSTORE SWAP3 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH3 0x2EF0 JUMPI DUP1 PUSH1 0x1F LT PUSH3 0x2EC4 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH3 0x2EF0 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH3 0x2ED2 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0xF SLOAD PUSH1 0x0 SWAP1 DUP2 SWAP1 PUSH1 0xFF AND ISZERO PUSH3 0x2F6C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x36 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH3 0x4A05 PUSH1 0x36 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x2F78 CALLER DUP5 PUSH3 0x3541 JUMP JUMPDEST PUSH1 0x0 PUSH3 0x2F91 PUSH1 0xA SLOAD DUP6 PUSH3 0x3518 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP5 SWAP1 MSTORE SWAP1 MLOAD SWAP3 SWAP4 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 PUSH4 0xA9059CBB SWAP2 PUSH1 0x44 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x2FE9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH3 0x2FFE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH3 0x3015 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH3 0x3021 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x9 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP3 POP SWAP1 POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH3 0x3040 PUSH3 0x2CCD JUMP JUMPDEST DUP1 ISZERO PUSH3 0x304F JUMPI POP PUSH1 0xF SLOAD PUSH1 0xFF AND JUMPDEST PUSH3 0x3090 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH3 0x4AAE DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0xB PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x7150D8AE PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x30DF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH3 0x30F4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH3 0x310B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH3 0x3155 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x37 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH3 0x4A3B PUSH1 0x37 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x235B PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH18 0x21B0B731B2B63632B210313C90313ABCB2B9 PUSH1 0x71 SHL DUP2 MSTORE POP PUSH3 0x3561 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH3 0x31B4 PUSH3 0x2CCD JUMP JUMPDEST PUSH3 0x31C1 JUMPI PUSH1 0x0 PUSH3 0x31C9 JUMP JUMPDEST PUSH1 0xF SLOAD PUSH1 0xFF AND ISZERO JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH3 0x3215 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH3 0x4B42 PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH3 0x325C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH3 0x49C2 PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE DUP2 MLOAD DUP6 DUP2 MSTORE SWAP2 MLOAD PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST DUP2 DUP2 ADD DUP3 DUP2 LT ISZERO PUSH3 0xC3E JUMPI INVALID JUMPDEST PUSH3 0x32D9 DUP4 DUP4 DUP4 PUSH3 0x3890 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x32EB DUP5 PUSH3 0x2692 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH3 0x32F9 PUSH3 0x1378 JUMP JUMPDEST PUSH1 0xF DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE SWAP1 POP PUSH3 0x3310 DUP3 PUSH3 0x2F23 JUMP JUMPDEST POP PUSH1 0x0 SWAP1 POP PUSH3 0x3321 DUP3 DUP5 PUSH3 0x3505 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP6 SWAP1 MSTORE SWAP2 MLOAD SWAP4 SWAP5 POP SWAP2 AND SWAP2 PUSH4 0xA9059CBB SWAP2 PUSH1 0x44 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x337A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH3 0x338F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH3 0x33A6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH3 0x33EC JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x1D1C985B9CD9995C8819985A5B1959 PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x9 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND SWAP2 SWAP1 SWAP2 OR SWAP2 DUP3 SWAP1 SSTORE PUSH1 0xA DUP7 SWAP1 SSTORE AND PUSH4 0x23B872DD DUP8 ADDRESS PUSH3 0x3426 DUP9 DUP7 PUSH3 0x3518 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP4 POP POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x347D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH3 0x3492 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH3 0x34A9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH3 0x34FD JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4261636B696E67207472616E73666572206661696C6564000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 GT ISZERO PUSH3 0x3512 JUMPI INVALID JUMPDEST POP SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH3 0x3529 JUMPI POP PUSH1 0x0 PUSH3 0xC3E JUMP JUMPDEST POP DUP2 DUP2 MUL DUP2 DUP4 DUP3 DUP2 PUSH3 0x3538 JUMPI INVALID JUMPDEST DIV EQ PUSH3 0xC3E JUMPI INVALID JUMPDEST PUSH3 0x2E21 DUP3 DUP3 PUSH3 0x3938 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 DUP2 PUSH3 0x3559 JUMPI INVALID JUMPDEST DIV SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x38A86C57 PUSH1 0xE1 SHL DUP2 MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0x7150D8AE SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x35A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH3 0x35BC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH3 0x35D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH32 0xC88F58AE9FEB0742D9422F604DD3C1BE6D02818F8DEC340C5061F428B554E975 CALLER PUSH1 0x0 DUP6 PUSH3 0x3610 PUSH3 0x21E9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP5 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x3675 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH3 0x365B JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH3 0x36A3 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP6 POP POP POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0xB PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x41C0E1B5 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x3704 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH3 0x3719 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0xB DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ADDRESS EQ ISZERO PUSH3 0x374E JUMPI POP PUSH1 0x1 PUSH3 0x139A JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND SWAP2 AND EQ ISZERO PUSH3 0x376F JUMPI POP PUSH1 0x8 SLOAD PUSH3 0x139A JUMP JUMPDEST POP PUSH1 0x0 PUSH3 0x139A JUMP JUMPDEST PUSH3 0x3782 PUSH3 0x2CCD JUMP JUMPDEST ISZERO PUSH3 0x37D0 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH24 0x2A3432B9329034B99030903832B73234B7339037B33332B9 PUSH1 0x41 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0xF SLOAD PUSH1 0xFF AND PUSH3 0x3828 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436F6E7472616374206E6F742061637469766520616E79206D6F72652E000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH3 0x2E21 DUP3 DUP3 PUSH3 0x39D3 JUMP JUMPDEST PUSH1 0x0 PUSH3 0x3842 DUP4 DUP4 PUSH3 0x39DF JUMP JUMPDEST PUSH3 0x3886 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x151C985B9CD9995C8819985A5B1959 PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH3 0xC3A PUSH3 0x21F8 JUMP JUMPDEST PUSH3 0x389D DUP4 DUP4 DUP4 PUSH3 0x39EE JUMP JUMPDEST PUSH3 0x38A7 PUSH3 0x2CCD JUMP JUMPDEST DUP1 ISZERO PUSH3 0x38B6 JUMPI POP PUSH1 0xF SLOAD PUSH1 0xFF AND JUMPDEST ISZERO PUSH3 0x32D9 JUMPI PUSH1 0xB SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x6240A7D7 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE DUP6 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD DUP6 SWAP1 MSTORE SWAP2 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP2 PUSH4 0xC4814FAE SWAP2 PUSH1 0x64 DUP1 DUP4 ADD SWAP3 PUSH1 0x0 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP4 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x391A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH3 0x392F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH3 0x3944 DUP3 DUP3 PUSH3 0x3B2C JUMP JUMPDEST PUSH3 0x394E PUSH3 0x2CCD JUMP JUMPDEST DUP1 ISZERO PUSH3 0x395D JUMPI POP PUSH1 0xF SLOAD PUSH1 0xFF AND JUMPDEST ISZERO PUSH3 0x2E21 JUMPI PUSH1 0xB SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x6240A7D7 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x0 PUSH1 0x24 DUP4 ADD DUP2 SWAP1 MSTORE PUSH1 0x44 DUP4 ADD DUP7 SWAP1 MSTORE SWAP3 MLOAD SWAP4 AND SWAP3 PUSH4 0xC4814FAE SWAP3 PUSH1 0x64 DUP1 DUP5 ADD SWAP4 SWAP2 SWAP3 SWAP2 DUP3 SWAP1 SUB ADD DUP2 DUP4 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x39BE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH3 0x34FD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST PUSH3 0x2E21 DUP3 DUP3 PUSH3 0x3BFF JUMP JUMPDEST PUSH1 0x0 PUSH3 0xC3A CALLER DUP5 DUP5 PUSH3 0x32CC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH3 0x3A35 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH3 0x4AEF PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH3 0x3A7C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH3 0x499F PUSH1 0x23 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH3 0x3AA1 SWAP1 DUP3 PUSH3 0x3505 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP1 DUP5 AND DUP2 MSTORE KECCAK256 SLOAD PUSH3 0x3AD2 SWAP1 DUP3 PUSH3 0x32BE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE DUP1 MLOAD DUP6 DUP2 MSTORE SWAP1 MLOAD SWAP2 SWAP4 SWAP3 DUP8 AND SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 SWAP2 DUP3 SWAP1 SUB ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH3 0x3B73 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH3 0x4ACE PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 SLOAD PUSH3 0x3B82 SWAP1 DUP3 PUSH3 0x3505 JUMP JUMPDEST PUSH1 0x2 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH3 0x3BAA SWAP1 DUP3 PUSH3 0x3505 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE DUP4 MLOAD DUP6 DUP2 MSTORE SWAP4 MLOAD SWAP2 SWAP4 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 SWAP1 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH3 0x3C0B DUP3 DUP3 PUSH3 0x3C84 JUMP JUMPDEST PUSH3 0x3C15 PUSH3 0x2CCD JUMP JUMPDEST DUP1 ISZERO PUSH3 0x3C24 JUMPI POP PUSH1 0xF SLOAD PUSH1 0xFF AND JUMPDEST ISZERO PUSH3 0x2E21 JUMPI PUSH1 0xB SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x6240A7D7 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND PUSH1 0x24 DUP5 ADD MSTORE PUSH1 0x44 DUP4 ADD DUP7 SWAP1 MSTORE SWAP3 MLOAD SWAP3 SWAP1 SWAP4 AND SWAP3 PUSH4 0xC4814FAE SWAP3 PUSH1 0x64 DUP1 DUP5 ADD SWAP4 DUP3 SWAP1 SUB ADD DUP2 DUP4 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x39BE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH3 0x3CE0 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x2 SLOAD PUSH3 0x3CEF SWAP1 DUP3 PUSH3 0x32BE JUMP JUMPDEST PUSH1 0x2 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH3 0x3D17 SWAP1 DUP3 PUSH3 0x32BE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE DUP4 MLOAD DUP6 DUP2 MSTORE SWAP4 MLOAD SWAP3 SWAP4 SWAP2 SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH2 0xBE9 DUP1 PUSH3 0x3DB6 DUP4 CODECOPY ADD SWAP1 JUMP INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0xBE9 CODESIZE SUB DUP1 PUSH2 0xBE9 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE PUSH1 0x80 DUP2 LT ISZERO PUSH2 0x33 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 MLOAD PUSH1 0x20 DUP3 ADD MLOAD PUSH1 0x40 DUP4 ADD MLOAD PUSH1 0x60 SWAP1 SWAP4 ADD MLOAD SWAP2 SWAP3 SWAP1 SWAP2 DUP2 PUSH2 0x8C JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x696E76616C6964207072696365 PUSH1 0x98 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND CALLER OR SWAP1 SWAP2 SSTORE PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP7 DUP8 AND SWAP1 DUP4 AND OR SWAP1 SSTORE PUSH1 0x3 DUP1 SLOAD SWAP5 SWAP1 SWAP6 AND SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP3 SSTORE PUSH1 0x4 SWAP2 SWAP1 SWAP2 SSTORE PUSH1 0x0 SSTORE TIMESTAMP PUSH1 0x5 SSTORE PUSH2 0xB06 DUP1 PUSH2 0xE3 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x12C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xB1610D7E GT PUSH2 0xAD JUMPI DUP1 PUSH4 0xCF42A927 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xCF42A927 EQ PUSH2 0x2B4 JUMPI DUP1 PUSH4 0xD7BE4E29 EQ PUSH2 0x2BC JUMPI DUP1 PUSH4 0xE5A6B10F EQ PUSH2 0x2C4 JUMPI DUP1 PUSH4 0xFA7F1BAE EQ PUSH2 0x2CC JUMPI DUP1 PUSH4 0xFB286C65 EQ PUSH2 0x2D4 JUMPI PUSH2 0x12C JUMP JUMPDEST DUP1 PUSH4 0xB1610D7E EQ PUSH2 0x249 JUMPI DUP1 PUSH4 0xB28FA152 EQ PUSH2 0x251 JUMPI DUP1 PUSH4 0xB5B47F42 EQ PUSH2 0x26E JUMPI DUP1 PUSH4 0xB80777EA EQ PUSH2 0x276 JUMPI DUP1 PUSH4 0xC4814FAE EQ PUSH2 0x27E JUMPI PUSH2 0x12C JUMP JUMPDEST DUP1 PUSH4 0x5FF0CF84 GT PUSH2 0xF4 JUMPI DUP1 PUSH4 0x5FF0CF84 EQ PUSH2 0x1C3 JUMPI DUP1 PUSH4 0x7150D8AE EQ PUSH2 0x1EF JUMPI DUP1 PUSH4 0x8F1B4C6F EQ PUSH2 0x213 JUMPI DUP1 PUSH4 0x90E64D13 EQ PUSH2 0x239 JUMPI DUP1 PUSH4 0xA035B1FE EQ PUSH2 0x241 JUMPI PUSH2 0x12C JUMP JUMPDEST DUP1 PUSH4 0xC43CD88 EQ PUSH2 0x131 JUMPI DUP1 PUSH4 0x1703A018 EQ PUSH2 0x14B JUMPI DUP1 PUSH4 0x41C0E1B5 EQ PUSH2 0x153 JUMPI DUP1 PUSH4 0x448AB4C6 EQ PUSH2 0x15D JUMPI DUP1 PUSH4 0x4B91562E EQ PUSH2 0x197 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x139 PUSH2 0x2DC JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x139 PUSH2 0x2E3 JUMP JUMPDEST PUSH2 0x15B PUSH2 0x2E9 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x183 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x173 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x343 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x15B PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x1AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x376 JUMP JUMPDEST PUSH2 0x15B PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x1D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x421 JUMP JUMPDEST PUSH2 0x1F7 PUSH2 0x4C8 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x183 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x229 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x4D7 JUMP JUMPDEST PUSH2 0x183 PUSH2 0x4E0 JUMP JUMPDEST PUSH2 0x139 PUSH2 0x504 JUMP JUMPDEST PUSH2 0x139 PUSH2 0x50A JUMP JUMPDEST PUSH2 0x183 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x267 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x511 JUMP JUMPDEST PUSH2 0x139 PUSH2 0x64E JUMP JUMPDEST PUSH2 0x139 PUSH2 0x654 JUMP JUMPDEST PUSH2 0x15B PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x294 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH2 0x65A JUMP JUMPDEST PUSH2 0x183 PUSH2 0x6F0 JUMP JUMPDEST PUSH2 0x183 PUSH2 0x83B JUMP JUMPDEST PUSH2 0x1F7 PUSH2 0x8F4 JUMP JUMPDEST PUSH2 0x183 PUSH2 0x903 JUMP JUMPDEST PUSH2 0x139 PUSH2 0x927 JUMP JUMPDEST PUSH3 0x76A700 DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x335 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xA PUSH1 0x24 DUP3 ADD MSTORE PUSH10 0x1B9BDD081C185C995B9D PUSH1 0xB2 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SELFDESTRUCT JUMPDEST PUSH1 0x0 PUSH1 0x1 JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x36F JUMPI INVALID JUMPDEST EQ SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x3C2 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xA PUSH1 0x24 DUP3 ADD MSTORE PUSH10 0x1B9BDD081C185C995B9D PUSH1 0xB2 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x3CA PUSH2 0x903 JUMP JUMPDEST PUSH2 0x411 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x2A3432903B37BA32903430B99032B73232B217 PUSH1 0x69 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x41D PUSH1 0x2 DUP3 DUP5 PUSH2 0x92D JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x46D JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xA PUSH1 0x24 DUP3 ADD MSTORE PUSH10 0x1B9BDD081C185C995B9D PUSH1 0xB2 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x475 PUSH2 0x903 JUMP JUMPDEST PUSH2 0x4BC JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x2A3432903B37BA32903430B99032B73232B217 PUSH1 0x69 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x41D PUSH1 0x1 DUP3 DUP5 PUSH2 0x92D JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH2 0x348 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x4F8 PUSH1 0x5 SLOAD TIMESTAMP PUSH2 0x973 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH3 0x76A700 LT SWAP2 POP POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH3 0x4F1A00 DUP2 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x2 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP4 SWAP3 SWAP1 SWAP3 AND SWAP2 DUP4 SWAP2 DUP4 SWAP2 PUSH4 0x70A08231 SWAP2 PUSH1 0x24 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x569 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x57D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x593 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x2 SLOAD PUSH1 0x1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x6EB1769F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP2 DUP4 AND PUSH1 0x24 DUP4 ADD MSTORE MLOAD SWAP3 SWAP4 POP PUSH1 0x0 SWAP3 SWAP2 DUP6 AND SWAP2 PUSH4 0xDD62ED3E SWAP2 PUSH1 0x44 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x5F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x606 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x61C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x4 SLOAD SWAP1 SWAP2 POP PUSH1 0x0 SWAP1 PUSH2 0x632 SWAP1 DUP8 SWAP1 PUSH2 0x98A JUMP JUMPDEST SWAP1 POP DUP3 DUP2 GT ISZERO DUP1 ISZERO PUSH2 0x644 JUMPI POP DUP2 DUP2 GT ISZERO JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x6A6 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xA PUSH1 0x24 DUP3 ADD MSTORE PUSH10 0x1B9BDD081C185C995B9D PUSH1 0xB2 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x6AE PUSH2 0x903 JUMP JUMPDEST ISZERO PUSH2 0x6EB JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SLOAD SWAP3 DUP6 AND DUP3 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF SWAP2 DUP3 AND SWAP2 AND PUSH2 0x6E8 DUP3 DUP3 DUP6 PUSH2 0x9AF JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6FA PUSH2 0x903 JUMP JUMPDEST ISZERO PUSH2 0x80F JUMPI PUSH1 0x0 SLOAD PUSH1 0x1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x18160DDD PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD PUSH2 0x807 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0x18160DDD SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x748 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x75C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x772 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x6 SLOAD PUSH1 0x1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x18160DDD PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD PUSH2 0x801 SWAP4 PUSH2 0x2710 SWAP4 PUSH2 0x7FB SWAP4 SWAP2 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 PUSH4 0x18160DDD SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x7C9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x7DD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x7F3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 PUSH2 0x973 JUMP JUMPDEST SWAP1 PUSH2 0x98A JUMP JUMPDEST SWAP1 PUSH2 0xAB0 JUMP JUMPDEST LT SWAP1 POP PUSH2 0x501 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x807 PUSH2 0x82C PUSH1 0x6 SLOAD PUSH1 0x7 SLOAD PUSH2 0xAC3 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH2 0x801 SWAP1 PUSH2 0x2710 PUSH2 0x98A JUMP JUMPDEST PUSH1 0x0 PUSH2 0x845 PUSH2 0x903 JUMP JUMPDEST ISZERO PUSH2 0x8D7 JUMPI PUSH1 0x0 SLOAD PUSH1 0x1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x18160DDD PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD PUSH2 0x8CE SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0x18160DDD SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x893 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x8A7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x8BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x7 SLOAD PUSH2 0x801 SWAP1 PUSH2 0x2710 PUSH2 0x98A JUMP JUMPDEST LT ISZERO SWAP1 POP PUSH2 0x501 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x8CE PUSH2 0x82C PUSH1 0x6 SLOAD PUSH1 0x7 SLOAD PUSH2 0xAC3 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x91B PUSH1 0x5 SLOAD TIMESTAMP PUSH2 0x973 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH3 0x4F1A00 LT ISZERO SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF DUP2 AND SWAP2 DUP6 SWAP2 DUP3 SWAP2 SWAP1 PUSH1 0xFF NOT AND PUSH1 0x1 DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x963 JUMPI INVALID JUMPDEST MUL OR SWAP1 SSTORE POP PUSH2 0x6E8 DUP3 DUP3 DUP7 PUSH2 0x9AF JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 GT ISZERO PUSH2 0x97F JUMPI INVALID JUMPDEST POP DUP1 DUP3 SUB JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x999 JUMPI POP PUSH1 0x0 PUSH2 0x984 JUMP JUMPDEST POP DUP2 DUP2 MUL DUP2 DUP4 DUP3 DUP2 PUSH2 0x9A7 JUMPI INVALID JUMPDEST DIV EQ PUSH2 0x984 JUMPI INVALID JUMPDEST DUP2 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x9BB JUMPI INVALID JUMPDEST DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x9C7 JUMPI INVALID JUMPDEST EQ PUSH2 0x6EB JUMPI PUSH1 0x2 DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x9DA JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0x9F5 JUMPI PUSH1 0x6 SLOAD PUSH2 0x9ED SWAP1 DUP3 PUSH2 0x973 JUMP JUMPDEST PUSH1 0x6 SSTORE PUSH2 0xA1A JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xA03 JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0xA1A JUMPI PUSH1 0x7 SLOAD PUSH2 0xA16 SWAP1 DUP3 PUSH2 0x973 JUMP JUMPDEST PUSH1 0x7 SSTORE JUMPDEST PUSH1 0x2 DUP3 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xA28 JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0xA43 JUMPI PUSH1 0x6 SLOAD PUSH2 0xA3B SWAP1 DUP3 PUSH2 0xAC3 JUMP JUMPDEST PUSH1 0x6 SSTORE PUSH2 0xA68 JUMP JUMPDEST PUSH1 0x1 DUP3 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xA51 JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0xA68 JUMPI PUSH1 0x7 SLOAD PUSH2 0xA64 SWAP1 DUP3 PUSH2 0xAC3 JUMP JUMPDEST PUSH1 0x7 SSTORE JUMPDEST PUSH32 0x8FCC50C2C4EDD06D51AE66E9E21ED76B32A1766C57F491788E1AA24A1B58C256 PUSH1 0x7 SLOAD PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 DUP2 PUSH2 0xABB JUMPI INVALID JUMPDEST DIV SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP2 DUP2 ADD DUP3 DUP2 LT ISZERO PUSH2 0x984 JUMPI INVALID INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SUB NOT DUP13 SWAP8 SMOD MSTORE8 PUSH29 0xE5959B3E8267A2B8A721CC26A72203A7D67CA0A492033FB5A264736F6C PUSH4 0x43000701 STOP CALLER GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220746F20746865207A65726F2061 PUSH5 0x6472657373 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH2 0x7070 PUSH19 0x6F766520746F20746865207A65726F20616464 PUSH19 0x6573734F6666657220776173206E6F74207375 PUSH7 0x66696369656E74 PUSH13 0x792066756E6465644173206C6F PUSH15 0x672061732074686520636F6E747261 PUSH4 0x74206973 KECCAK256 PUSH2 0x6374 PUSH10 0x76652C20796F75206172 PUSH6 0x20626F756E64 KECCAK256 PUSH21 0x6F206974596F7520617265206E6F7420617574686F PUSH19 0x697A656420746F2063616E63656C2074686973 KECCAK256 PUSH2 0x6371 PUSH22 0x69736974696F6E206F666665724E6577206F66666572 PUSH20 0x206D757374206265206174206C65617374203525 KECCAK256 PUSH9 0x696768657220746861 PUSH15 0x207468652070656E64696E67206F66 PUSH7 0x65725468657265 KECCAK256 PUSH10 0x73206E6F2070656E6469 PUSH15 0x67206F666665720000000000000045 MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH3 0x75726E KECCAK256 PUSH7 0x726F6D20746865 KECCAK256 PUSH27 0x65726F206164647265737345524332303A207472616E7366657220 PUSH7 0x726F6D20746865 KECCAK256 PUSH27 0x65726F20616464726573735468697320636F6E747261637420646F PUSH6 0x73206E6F7420 PUSH19 0x6570726573656E7420656E6F75676820657175 PUSH10 0x747945524332303A2061 PUSH17 0x70726F76652066726F6D20746865207A65 PUSH19 0x6F2061646472657373596F7520617265206E6F PUSH21 0x20617574686F72697A656420746F20636F6D706C65 PUSH21 0x652074686973206163717569736974696F6E206F66 PUSH7 0x6572596F75206E PUSH6 0x656420746F20 PUSH9 0x6F6C64206174206C65 PUSH2 0x7374 KECCAK256 CALLDATALOAD 0x25 KECCAK256 PUSH16 0x6620746865206669726D20746F206D61 PUSH12 0x6520616E206F66666572A264 PUSH10 0x70667358221220EBDF6E DUP14 0xC9 0xDF CALLVALUE 0xE3 SMOD MSTORE CODECOPY CALLVALUE 0xF7 MSTORE8 DUP12 0xAB 0xEC 0xDF 0xD SGT SDIV BLOCKHASH SWAP13 0xF8 0xED 0xC1 SWAP3 BYTE LOG4 STOP AND PUSH12 0x64736F6C63430007010033A2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MSIZE CALL 0xEF 0xB0 0xF8 0xE8 0xAD 0xB8 SELFBALANCE DUP11 ADDRESS PUSH27 0xEECA3E41D813182284C9A27C18AE52E74DFCAC8D64736F6C634300 SMOD ADD STOP CALLER ",
                        "sourceMap": "108:252:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;141:214;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;141:214:1;;-1:-1:-1;;;;;;;141:214:1;;;;-1:-1:-1;;;141:214:1;;;;:::i;:::-;;;;-1:-1:-1;;;;;141:214:1;;;;;;;;;;;;;;;256:7;313:4;319:6;327:12;341:6;287:61;;;;;:::i;:::-;;;;;;-1:-1:-1;;;;;287:61:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;272:77:1;141:214;-1:-1:-1;;;;;141:214:1:o;-1:-1:-1:-;;;;;;;;:::o"
                    },
                    "gasEstimates": {
                        "creation": {
                            "codeDepositCost": "4150600",
                            "executionCost": "4767",
                            "totalCost": "4155367"
                        },
                        "external": {
                            "createDraggable(bytes32,string,address,uint256)": "infinite"
                        }
                    },
                    "methodIdentifiers": {
                        "createDraggable(bytes32,string,address,uint256)": "49dc2132"
                    }
                },
                "metadata": "{\"compiler\":{\"version\":\"0.7.1+commit.f4a555be\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"_terms\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"baseContract\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"quorum\",\"type\":\"uint256\"}],\"name\":\"createDraggable\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"c:/Users/luziu/Documents/aktionariat/contracts/src/DraggableFactory.sol\":\"DraggableFactory\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"c:/Users/luziu/Documents/aktionariat/contracts/src/Acquisition.sol\":{\"keccak256\":\"0x2a804527c12b009dc8d2580a78a3d1163810b00d5d8f25642813171c6372627f\",\"license\":\"LicenseRef-Aktionariat\",\"urls\":[\"bzz-raw://a8b8a2efe3d409f8f90da295f8f5b29af3967fa457e5e01672bf085250676d98\",\"dweb:/ipfs/QmPdrrCNgYMpcQDy3BAEQKo8Fk6cPLCB4QuHRvHxruG6TU\"]},\"c:/Users/luziu/Documents/aktionariat/contracts/src/DraggableFactory.sol\":{\"keccak256\":\"0x93b13cfbd042e4e62852e1e67176da692d89f2a7343f46f3c5f563b578867711\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a6b5fa1c600ea22d578de0c74bff3dd6b19e9b25518ef10f9be47e7301e49e75\",\"dweb:/ipfs/QmXihJV7TniGXjUoWPEMAskiS2C6K15ydRFh2whGQRqk98\"]},\"c:/Users/luziu/Documents/aktionariat/contracts/src/DraggableShares.sol\":{\"keccak256\":\"0x499bd2ed415bdc7e50da56415fdc415106cd75744c678ae7695cf731defcf829\",\"license\":\"LicenseRef-Aktionariat\",\"urls\":[\"bzz-raw://816094c15964676cebe374dd8a66fda4df0ba07d4a04bdac4e76882572d2aff1\",\"dweb:/ipfs/QmSa7WgsWTmSujb8GjWEUAbS7UALQwVJpdUpHRjiLn7wL3\"]},\"c:/Users/luziu/Documents/aktionariat/contracts/src/ERC20.sol\":{\"keccak256\":\"0x2fc989a10429560f03d7db1467e541b46c6f50e5c7a71761957016f795325880\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://95f1b0c5f0e807ec78bb8dc61d42627b63acc449c8e31938b84f27299a1fb6e9\",\"dweb:/ipfs/Qmf8cj2hDyNr7eLTFDdYiX3w6oZHtjCDcMBGV33qZNBngy\"]},\"c:/Users/luziu/Documents/aktionariat/contracts/src/ERC20Draggable.sol\":{\"keccak256\":\"0x51f0c088c30bdd5b81c567752600c4fa19f4eddcb9aec0f645fae0371445e073\",\"license\":\"LicenseRef-Aktionariat\",\"urls\":[\"bzz-raw://0e17c52adcd24d03c6cdbff2ef8fc69b61e7d425835c818c8940de046f585b4b\",\"dweb:/ipfs/QmXzFfoLnNJYi8UyxrVgU4CiPU5rKhcUWAVB2jf8XRDKYw\"]},\"c:/Users/luziu/Documents/aktionariat/contracts/src/ERC20Recoverable.sol\":{\"keccak256\":\"0xd5af4f8143b6e02f036d8389b19a59c3c0a7ee00952844dca5ecb039f391170c\",\"license\":\"LicenseRef-Aktionariat\",\"urls\":[\"bzz-raw://11adb0e721764bf6ff35e1dd4d2722d5921d4c89ceb6faea4a18b5ff29fb9f3b\",\"dweb:/ipfs/Qmd9MK19Q2b5DXgYK5GDM9xQ3S33ayVQ8rN6GouD4k8p6N\"]},\"c:/Users/luziu/Documents/aktionariat/contracts/src/IERC20.sol\":{\"keccak256\":\"0x6d0e89e1a724c13cc7dcc7184b8dcf0d46d6b5635b4ec024bb1fb69d36d87444\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40092507190092f77a521113ba3133441c76f63da097e38e587ca6e2603c6eb2\",\"dweb:/ipfs/QmeKTeVB1sND87Miju3k3as6f5cQcgLzbHc7vSREcjyQKC\"]},\"c:/Users/luziu/Documents/aktionariat/contracts/src/IERC677Receiver.sol\":{\"keccak256\":\"0x08574d3d2296c648c53d8175ffc992d22b77b7a2af4f26a3ad30bcfe67a56455\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a15e476ad8295470c052d149ce6ea8593174899a1995ff4ace6d3554fb1928c3\",\"dweb:/ipfs/QmT6wxjVrGALDukRDPi9ktfQ296jFC8o975ronUQNEhKQ9\"]},\"c:/Users/luziu/Documents/aktionariat/contracts/src/IMigratable.sol\":{\"keccak256\":\"0x5212714cd6ce722124bbb8c32282a4cd3b4a37fd9dd224e5ac54d99020c24c1b\",\"license\":\"LicenseRef-Aktionariat\",\"urls\":[\"bzz-raw://338eab542263cf438c99110de0f9b059b2de6894b3e44418e16d1051b4e0fb86\",\"dweb:/ipfs/Qmbs8VNthe4VLYBf3Bv9WFWC2HSNX9LyDLgG5VneXkzHnP\"]},\"c:/Users/luziu/Documents/aktionariat/contracts/src/SafeMath.sol\":{\"keccak256\":\"0x186349cbf7b3f8c5b04eb76e4e5dc9fd4d3c00952afc2e66923abc2947abc9df\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://480ddbf34395198eea8e779632d9f50d22319df148414522d8eed58972444c92\",\"dweb:/ipfs/QmbABPCuzoFN7uhGv2omkAGKSCc5Wh2Kof1ig3jzFTCKAd\"]}},\"version\":1}",
                "userdoc": {
                    "kind": "user",
                    "methods": {},
                    "version": 1
                }
            }
        },
        "c:/Users/luziu/Documents/aktionariat/contracts/src/DraggableShares.sol": {
            "DraggableShares": {
                "abi": [
                    {
                        "inputs": [
                            {
                                "internalType": "string",
                                "name": "_terms",
                                "type": "string"
                            },
                            {
                                "internalType": "address",
                                "name": "wrappedToken",
                                "type": "address"
                            },
                            {
                                "internalType": "uint256",
                                "name": "quorum",
                                "type": "uint256"
                            }
                        ],
                        "stateMutability": "nonpayable",
                        "type": "constructor"
                    },
                    {
                        "anonymous": false,
                        "inputs": [
                            {
                                "indexed": true,
                                "internalType": "address",
                                "name": "owner",
                                "type": "address"
                            },
                            {
                                "indexed": true,
                                "internalType": "address",
                                "name": "spender",
                                "type": "address"
                            },
                            {
                                "indexed": false,
                                "internalType": "uint256",
                                "name": "value",
                                "type": "uint256"
                            }
                        ],
                        "name": "Approval",
                        "type": "event"
                    },
                    {
                        "anonymous": false,
                        "inputs": [
                            {
                                "indexed": true,
                                "internalType": "address",
                                "name": "lostAddress",
                                "type": "address"
                            },
                            {
                                "indexed": false,
                                "internalType": "uint256",
                                "name": "collateral",
                                "type": "uint256"
                            }
                        ],
                        "name": "ClaimCleared",
                        "type": "event"
                    },
                    {
                        "anonymous": false,
                        "inputs": [
                            {
                                "indexed": true,
                                "internalType": "address",
                                "name": "lostAddress",
                                "type": "address"
                            },
                            {
                                "indexed": true,
                                "internalType": "address",
                                "name": "claimant",
                                "type": "address"
                            },
                            {
                                "indexed": false,
                                "internalType": "uint256",
                                "name": "collateral",
                                "type": "uint256"
                            }
                        ],
                        "name": "ClaimDeleted",
                        "type": "event"
                    },
                    {
                        "anonymous": false,
                        "inputs": [
                            {
                                "indexed": true,
                                "internalType": "address",
                                "name": "lostAddress",
                                "type": "address"
                            },
                            {
                                "indexed": true,
                                "internalType": "address",
                                "name": "claimant",
                                "type": "address"
                            },
                            {
                                "indexed": false,
                                "internalType": "uint256",
                                "name": "balance",
                                "type": "uint256"
                            }
                        ],
                        "name": "ClaimMade",
                        "type": "event"
                    },
                    {
                        "anonymous": false,
                        "inputs": [
                            {
                                "indexed": false,
                                "internalType": "uint256",
                                "name": "newClaimPeriodInDays",
                                "type": "uint256"
                            }
                        ],
                        "name": "ClaimPeriodChanged",
                        "type": "event"
                    },
                    {
                        "anonymous": false,
                        "inputs": [
                            {
                                "indexed": true,
                                "internalType": "address",
                                "name": "lostAddress",
                                "type": "address"
                            },
                            {
                                "indexed": true,
                                "internalType": "address",
                                "name": "claimant",
                                "type": "address"
                            },
                            {
                                "indexed": false,
                                "internalType": "uint256",
                                "name": "collateral",
                                "type": "uint256"
                            }
                        ],
                        "name": "ClaimResolved",
                        "type": "event"
                    },
                    {
                        "anonymous": false,
                        "inputs": [
                            {
                                "indexed": false,
                                "internalType": "address",
                                "name": "newCustomCollateralAddress",
                                "type": "address"
                            },
                            {
                                "indexed": false,
                                "internalType": "uint256",
                                "name": "newCustomCollareralRate",
                                "type": "uint256"
                            }
                        ],
                        "name": "CustomClaimCollateralChanged",
                        "type": "event"
                    },
                    {
                        "anonymous": false,
                        "inputs": [
                            {
                                "indexed": false,
                                "internalType": "address",
                                "name": "newContractAddress",
                                "type": "address"
                            }
                        ],
                        "name": "MigrationSucceeded",
                        "type": "event"
                    },
                    {
                        "anonymous": false,
                        "inputs": [
                            {
                                "indexed": true,
                                "internalType": "address",
                                "name": "buyer",
                                "type": "address"
                            },
                            {
                                "indexed": false,
                                "internalType": "uint256",
                                "name": "pricePerShare",
                                "type": "uint256"
                            },
                            {
                                "indexed": false,
                                "internalType": "address",
                                "name": "offerContract",
                                "type": "address"
                            }
                        ],
                        "name": "OfferCreated",
                        "type": "event"
                    },
                    {
                        "anonymous": false,
                        "inputs": [
                            {
                                "indexed": true,
                                "internalType": "address",
                                "name": "buyer",
                                "type": "address"
                            },
                            {
                                "indexed": false,
                                "internalType": "address",
                                "name": "sender",
                                "type": "address"
                            },
                            {
                                "indexed": false,
                                "internalType": "bool",
                                "name": "success",
                                "type": "bool"
                            },
                            {
                                "indexed": false,
                                "internalType": "string",
                                "name": "message",
                                "type": "string"
                            },
                            {
                                "indexed": false,
                                "internalType": "address",
                                "name": "offerContract",
                                "type": "address"
                            }
                        ],
                        "name": "OfferEnded",
                        "type": "event"
                    },
                    {
                        "anonymous": false,
                        "inputs": [
                            {
                                "indexed": true,
                                "internalType": "address",
                                "name": "from",
                                "type": "address"
                            },
                            {
                                "indexed": true,
                                "internalType": "address",
                                "name": "to",
                                "type": "address"
                            },
                            {
                                "indexed": false,
                                "internalType": "uint256",
                                "name": "value",
                                "type": "uint256"
                            }
                        ],
                        "name": "Transfer",
                        "type": "event"
                    },
                    {
                        "inputs": [],
                        "name": "acquisitionQuorum",
                        "outputs": [
                            {
                                "internalType": "uint256",
                                "name": "",
                                "type": "uint256"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "inputs": [],
                        "name": "active",
                        "outputs": [
                            {
                                "internalType": "bool",
                                "name": "",
                                "type": "bool"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "owner",
                                "type": "address"
                            },
                            {
                                "internalType": "address",
                                "name": "spender",
                                "type": "address"
                            }
                        ],
                        "name": "allowance",
                        "outputs": [
                            {
                                "internalType": "uint256",
                                "name": "",
                                "type": "uint256"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "spender",
                                "type": "address"
                            },
                            {
                                "internalType": "uint256",
                                "name": "value",
                                "type": "uint256"
                            }
                        ],
                        "name": "approve",
                        "outputs": [
                            {
                                "internalType": "bool",
                                "name": "",
                                "type": "bool"
                            }
                        ],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "account",
                                "type": "address"
                            }
                        ],
                        "name": "balanceOf",
                        "outputs": [
                            {
                                "internalType": "uint256",
                                "name": "",
                                "type": "uint256"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "uint256",
                                "name": "amount",
                                "type": "uint256"
                            }
                        ],
                        "name": "burn",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "inputs": [],
                        "name": "cancelAcquisition",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "inputs": [],
                        "name": "claimPeriod",
                        "outputs": [
                            {
                                "internalType": "uint256",
                                "name": "",
                                "type": "uint256"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "",
                                "type": "address"
                            }
                        ],
                        "name": "claims",
                        "outputs": [
                            {
                                "internalType": "address",
                                "name": "claimant",
                                "type": "address"
                            },
                            {
                                "internalType": "uint256",
                                "name": "collateral",
                                "type": "uint256"
                            },
                            {
                                "internalType": "uint256",
                                "name": "timestamp",
                                "type": "uint256"
                            },
                            {
                                "internalType": "address",
                                "name": "currencyUsed",
                                "type": "address"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "inputs": [],
                        "name": "clearClaim",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "inputs": [],
                        "name": "completeAcquisition",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "inputs": [],
                        "name": "contestAcquisition",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "inputs": [],
                        "name": "customCollateralAddress",
                        "outputs": [
                            {
                                "internalType": "address",
                                "name": "",
                                "type": "address"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "inputs": [],
                        "name": "customCollateralRate",
                        "outputs": [
                            {
                                "internalType": "uint256",
                                "name": "",
                                "type": "uint256"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "inputs": [],
                        "name": "decimals",
                        "outputs": [
                            {
                                "internalType": "uint8",
                                "name": "",
                                "type": "uint8"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "collateralType",
                                "type": "address"
                            },
                            {
                                "internalType": "address",
                                "name": "lostAddress",
                                "type": "address"
                            }
                        ],
                        "name": "declareLost",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "spender",
                                "type": "address"
                            },
                            {
                                "internalType": "uint256",
                                "name": "subtractedValue",
                                "type": "uint256"
                            }
                        ],
                        "name": "decreaseAllowance",
                        "outputs": [
                            {
                                "internalType": "bool",
                                "name": "",
                                "type": "bool"
                            }
                        ],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "lostAddress",
                                "type": "address"
                            }
                        ],
                        "name": "deleteClaim",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "inputs": [],
                        "name": "getClaimDeleter",
                        "outputs": [
                            {
                                "internalType": "address",
                                "name": "",
                                "type": "address"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "lostAddress",
                                "type": "address"
                            }
                        ],
                        "name": "getClaimant",
                        "outputs": [
                            {
                                "internalType": "address",
                                "name": "",
                                "type": "address"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "lostAddress",
                                "type": "address"
                            }
                        ],
                        "name": "getCollateral",
                        "outputs": [
                            {
                                "internalType": "uint256",
                                "name": "",
                                "type": "uint256"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "collateralType",
                                "type": "address"
                            }
                        ],
                        "name": "getCollateralRate",
                        "outputs": [
                            {
                                "internalType": "uint256",
                                "name": "",
                                "type": "uint256"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "lostAddress",
                                "type": "address"
                            }
                        ],
                        "name": "getCollateralType",
                        "outputs": [
                            {
                                "internalType": "address",
                                "name": "",
                                "type": "address"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "inputs": [],
                        "name": "getPendingOffer",
                        "outputs": [
                            {
                                "internalType": "address",
                                "name": "",
                                "type": "address"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "lostAddress",
                                "type": "address"
                            }
                        ],
                        "name": "getTimeStamp",
                        "outputs": [
                            {
                                "internalType": "uint256",
                                "name": "",
                                "type": "uint256"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "inputs": [],
                        "name": "getWrappedContract",
                        "outputs": [
                            {
                                "internalType": "address",
                                "name": "",
                                "type": "address"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "spender",
                                "type": "address"
                            },
                            {
                                "internalType": "uint256",
                                "name": "addedValue",
                                "type": "uint256"
                            }
                        ],
                        "name": "increaseAllowance",
                        "outputs": [
                            {
                                "internalType": "bool",
                                "name": "",
                                "type": "bool"
                            }
                        ],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "uint256",
                                "name": "pricePerShare",
                                "type": "uint256"
                            },
                            {
                                "internalType": "address",
                                "name": "currency",
                                "type": "address"
                            }
                        ],
                        "name": "initiateAcquisition",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "target",
                                "type": "address"
                            }
                        ],
                        "name": "isRecoveryEnabled",
                        "outputs": [
                            {
                                "internalType": "bool",
                                "name": "",
                                "type": "bool"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "inputs": [],
                        "name": "licenseFeeRecipient",
                        "outputs": [
                            {
                                "internalType": "address payable",
                                "name": "",
                                "type": "address"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "inputs": [],
                        "name": "migrate",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "inputs": [],
                        "name": "migrationQuorum",
                        "outputs": [
                            {
                                "internalType": "uint256",
                                "name": "",
                                "type": "uint256"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "inputs": [],
                        "name": "name",
                        "outputs": [
                            {
                                "internalType": "string",
                                "name": "",
                                "type": "string"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "inputs": [],
                        "name": "offer",
                        "outputs": [
                            {
                                "internalType": "contract Acquisition",
                                "name": "",
                                "type": "address"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "inputs": [],
                        "name": "offerExists",
                        "outputs": [
                            {
                                "internalType": "bool",
                                "name": "",
                                "type": "bool"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "from",
                                "type": "address"
                            },
                            {
                                "internalType": "uint256",
                                "name": "amount",
                                "type": "uint256"
                            },
                            {
                                "internalType": "bytes",
                                "name": "",
                                "type": "bytes"
                            }
                        ],
                        "name": "onTokenTransfer",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "lostAddress",
                                "type": "address"
                            }
                        ],
                        "name": "recover",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "",
                                "type": "address"
                            }
                        ],
                        "name": "recoveryDisabled",
                        "outputs": [
                            {
                                "internalType": "bool",
                                "name": "",
                                "type": "bool"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "bool",
                                "name": "enabled",
                                "type": "bool"
                            }
                        ],
                        "name": "setRecoverable",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "inputs": [],
                        "name": "symbol",
                        "outputs": [
                            {
                                "internalType": "string",
                                "name": "",
                                "type": "string"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "inputs": [],
                        "name": "terms",
                        "outputs": [
                            {
                                "internalType": "string",
                                "name": "",
                                "type": "string"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "inputs": [],
                        "name": "totalSupply",
                        "outputs": [
                            {
                                "internalType": "uint256",
                                "name": "",
                                "type": "uint256"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "to",
                                "type": "address"
                            },
                            {
                                "internalType": "uint256",
                                "name": "value",
                                "type": "uint256"
                            }
                        ],
                        "name": "transfer",
                        "outputs": [
                            {
                                "internalType": "bool",
                                "name": "",
                                "type": "bool"
                            }
                        ],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "recipient",
                                "type": "address"
                            },
                            {
                                "internalType": "uint256",
                                "name": "amount",
                                "type": "uint256"
                            },
                            {
                                "internalType": "bytes",
                                "name": "data",
                                "type": "bytes"
                            }
                        ],
                        "name": "transferAndCall",
                        "outputs": [
                            {
                                "internalType": "bool",
                                "name": "",
                                "type": "bool"
                            }
                        ],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "sender",
                                "type": "address"
                            },
                            {
                                "internalType": "address",
                                "name": "recipient",
                                "type": "address"
                            },
                            {
                                "internalType": "uint256",
                                "name": "amount",
                                "type": "uint256"
                            }
                        ],
                        "name": "transferFrom",
                        "outputs": [
                            {
                                "internalType": "bool",
                                "name": "",
                                "type": "bool"
                            }
                        ],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "uint256",
                                "name": "amount",
                                "type": "uint256"
                            }
                        ],
                        "name": "unwrap",
                        "outputs": [
                            {
                                "internalType": "address",
                                "name": "",
                                "type": "address"
                            },
                            {
                                "internalType": "uint256",
                                "name": "",
                                "type": "uint256"
                            }
                        ],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "inputs": [],
                        "name": "unwrapConversionFactor",
                        "outputs": [
                            {
                                "internalType": "uint256",
                                "name": "",
                                "type": "uint256"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "inputs": [],
                        "name": "voteNo",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "inputs": [],
                        "name": "voteYes",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "inputs": [],
                        "name": "wasAcquired",
                        "outputs": [
                            {
                                "internalType": "bool",
                                "name": "",
                                "type": "bool"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "shareholder",
                                "type": "address"
                            },
                            {
                                "internalType": "uint256",
                                "name": "amount",
                                "type": "uint256"
                            }
                        ],
                        "name": "wrap",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    }
                ],
                "devdoc": {
                    "author": "Benjamin Rickenbacher, b.rickenbacher@intergga.chLuzius Meisser, luzius@meissereconomics.com This is an ERC-20 token representing shares of CompanyName AG that are bound to a shareholder agreement that can be found at the URL defined in the constant 'terms'. The shareholder agreement is partially enforced through this smart contract. The agreement is designed to facilitate a complete acquisition of the firm even if a minority of shareholders disagree with the acquisition, to protect the interest of the minority shareholders by requiring the acquirer to offer the same conditions to everyone when acquiring the company, and to facilitate an update of the shareholder agreement even if a minority of the shareholders that are bound to this agreement disagree. The name \"draggable\" stems from the convention of calling the right to drag a minority along with a sale of the company \"drag-along\" rights. The name is chosen to ensure that token holders are aware that they are bound to such an agreement. The percentage of token holders that must agree with an update of the terms is defined by the constant UPDATE_QUORUM. The precentage of yes-votes that is needed to successfully complete an acquisition is defined in the constant ACQUISITION_QUORUM. Note that the update quorum is based on the total number of tokens in circulation. In contrast, the acquisition quorum is based on the number of votes cast during the voting period, not taking into account those who did not bother to vote.",
                    "kind": "dev",
                    "methods": {
                        "allowance(address,address)": {
                            "details": "See `IERC20.allowance`."
                        },
                        "approve(address,uint256)": {
                            "details": "See `IERC20.approve`. Requirements: - `spender` cannot be the zero address."
                        },
                        "balanceOf(address)": {
                            "details": "See `IERC20.balanceOf`."
                        },
                        "decreaseAllowance(address,uint256)": {
                            "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to `approve` that can be used as a mitigation for problems described in `IERC20.approve`. Emits an `Approval` event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
                        },
                        "increaseAllowance(address,uint256)": {
                            "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to `approve` that can be used as a mitigation for problems described in `IERC20.approve`. Emits an `Approval` event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
                        },
                        "initiateAcquisition(uint256,address)": {
                            "details": "Function to start drag-along procedure  This can be called by anyone, but there is an upfront payment."
                        },
                        "totalSupply()": {
                            "details": "See `IERC20.totalSupply`."
                        },
                        "transferFrom(address,address,uint256)": {
                            "details": "See `IERC20.transferFrom`. Emits an `Approval` event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of `ERC20`; Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `value`. - the caller must have allowance for `sender`'s tokens of at least `amount`."
                        }
                    },
                    "title": "Draggable CompanyName AG Shares",
                    "version": 1
                },
                "evm": {
                    "bytecode": {
                        "linkReferences": {},
                        "object": "",
                        "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH3 0xED4E00 PUSH1 0x4 SSTORE PUSH1 0x1 PUSH1 0xA DUP2 SWAP1 SSTORE PUSH1 0xF DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SWAP2 OR SWAP1 SSTORE CALLVALUE DUP1 ISZERO PUSH3 0x2C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x4F08 CODESIZE SUB DUP1 PUSH3 0x4F08 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE PUSH1 0x60 DUP2 LT ISZERO PUSH3 0x52 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD PUSH1 0x40 MLOAD SWAP4 SWAP3 SWAP2 SWAP1 DUP5 PUSH5 0x100000000 DUP3 GT ISZERO PUSH3 0x73 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 DUP4 ADD SWAP1 PUSH1 0x20 DUP3 ADD DUP6 DUP2 GT ISZERO PUSH3 0x89 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH5 0x100000000 DUP2 GT DUP3 DUP3 ADD DUP9 LT OR ISZERO PUSH3 0xA4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MSTORE POP DUP2 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0xD3 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH3 0xB9 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH3 0x101 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP PUSH1 0x40 DUP2 DUP2 MSTORE PUSH1 0x20 DUP4 DUP2 ADD MLOAD SWAP4 DUP3 ADD MLOAD PUSH1 0x3 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH1 0x9 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP2 DUP3 AND DUP2 OR SWAP1 SWAP3 SSTORE PUSH1 0xC DUP1 SLOAD SWAP1 SWAP2 AND PUSH20 0x29FE8914E76DA5CE2D90DE98A64D0055F199D06D OR SWAP1 SSTORE PUSH1 0xD DUP3 SWAP1 SSTORE PUSH1 0xE DUP3 SWAP1 SSTORE PUSH4 0x3A98EF39 PUSH1 0xE0 SHL DUP6 MSTORE SWAP3 MLOAD SWAP5 SWAP7 POP SWAP5 POP DUP6 SWAP4 DUP6 SWAP4 DUP5 SWAP4 SWAP3 PUSH4 0x3A98EF39 SWAP3 PUSH1 0x4 DUP1 DUP5 ADD SWAP4 DUP3 SWAP1 SUB ADD DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x19E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH3 0x1B3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH3 0x1CA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP PUSH1 0x40 DUP1 MLOAD PUSH4 0x6427ED97 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE SWAP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND SWAP6 POP PUSH4 0x6427ED97 SWAP5 POP PUSH1 0x24 DUP1 DUP4 ADD SWAP5 POP SWAP1 SWAP2 DUP3 SWAP1 SUB ADD DUP2 DUP4 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x217 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH3 0x22C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP DUP5 MLOAD PUSH3 0x245 SWAP3 POP PUSH1 0x10 SWAP2 POP PUSH1 0x20 DUP7 ADD SWAP1 PUSH3 0x24F JUMP JUMPDEST POP POP POP POP PUSH3 0x2EB JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH1 0x1F LT PUSH3 0x292 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0x2C2 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0x2C2 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x2C2 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x2A5 JUMP JUMPDEST POP PUSH3 0x2D0 SWAP3 SWAP2 POP PUSH3 0x2D4 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x2D0 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x2D5 JUMP JUMPDEST PUSH2 0x4C0D DUP1 PUSH3 0x2FB PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH3 0x33A JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6B03ED5F GT PUSH3 0x1C5 JUMPI DUP1 PUSH4 0xA9059CBB GT PUSH3 0xFF JUMPI DUP1 PUSH4 0xC6788BDD GT PUSH3 0xB1 JUMPI DUP1 PUSH4 0xDE0E9A3E GT PUSH3 0x87 JUMPI DUP1 PUSH4 0xDE0E9A3E EQ PUSH3 0x9E1 JUMPI DUP1 PUSH4 0xE1B8C38E EQ PUSH3 0xA24 JUMPI DUP1 PUSH4 0xEB470EBF EQ PUSH3 0xA2E JUMPI DUP1 PUSH4 0xEC6580E2 EQ PUSH3 0xA57 JUMPI PUSH3 0x33A JUMP JUMPDEST DUP1 PUSH4 0xC6788BDD EQ PUSH3 0x940 JUMPI DUP1 PUSH4 0xD5025625 EQ PUSH3 0x9A6 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH3 0x9B0 JUMPI PUSH3 0x33A JUMP JUMPDEST DUP1 PUSH4 0xA9059CBB EQ PUSH3 0x89B JUMPI DUP1 PUSH4 0xB40E80D1 EQ PUSH3 0x8CA JUMPI DUP1 PUSH4 0xBB689472 EQ PUSH3 0x8F3 JUMPI DUP1 PUSH4 0xBC1B1E7C EQ PUSH3 0x8FD JUMPI DUP1 PUSH4 0xBF376C7A EQ PUSH3 0x907 JUMPI DUP1 PUSH4 0xC028DF06 EQ PUSH3 0x936 JUMPI PUSH3 0x33A JUMP JUMPDEST DUP1 PUSH4 0x90CF581C GT PUSH3 0x177 JUMPI DUP1 PUSH4 0x9E8A9A5A GT PUSH3 0x14D JUMPI DUP1 PUSH4 0x9E8A9A5A EQ PUSH3 0x7B0 JUMPI DUP1 PUSH4 0xA3EC1883 EQ PUSH3 0x7BA JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH3 0x7E3 JUMPI DUP1 PUSH4 0xA4C0ED36 EQ PUSH3 0x812 JUMPI PUSH3 0x33A JUMP JUMPDEST DUP1 PUSH4 0x90CF581C EQ PUSH3 0x773 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH3 0x77D JUMPI DUP1 PUSH4 0x9B56D6C9 EQ PUSH3 0x787 JUMPI PUSH3 0x33A JUMP JUMPDEST DUP1 PUSH4 0x6B03ED5F EQ PUSH3 0x6F9 JUMPI DUP1 PUSH4 0x6F4B18DF EQ PUSH3 0x703 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH3 0x70D JUMPI DUP1 PUSH4 0x77E071AD EQ PUSH3 0x736 JUMPI DUP1 PUSH4 0x7DC2CD98 EQ PUSH3 0x75F JUMPI DUP1 PUSH4 0x8FD3AB80 EQ PUSH3 0x769 JUMPI PUSH3 0x33A JUMP JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH3 0x297 JUMPI DUP1 PUSH4 0x41C12A70 GT PUSH3 0x249 JUMPI DUP1 PUSH4 0x58047913 GT PUSH3 0x21F JUMPI DUP1 PUSH4 0x58047913 EQ PUSH3 0x6B9 JUMPI DUP1 PUSH4 0x60918117 EQ PUSH3 0x6C3 JUMPI DUP1 PUSH4 0x6427ED97 EQ PUSH3 0x6CD JUMPI DUP1 PUSH4 0x6467C09A EQ PUSH3 0x6EF JUMPI PUSH3 0x33A JUMP JUMPDEST DUP1 PUSH4 0x41C12A70 EQ PUSH3 0x660 JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH3 0x66A JUMPI DUP1 PUSH4 0x49B210B7 EQ PUSH3 0x68A JUMPI PUSH3 0x33A JUMP JUMPDEST DUP1 PUSH4 0x313CE567 EQ PUSH3 0x52C JUMPI DUP1 PUSH4 0x32A7AE95 EQ PUSH3 0x54C JUMPI DUP1 PUSH4 0x3549788A EQ PUSH3 0x575 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH3 0x57F JUMPI DUP1 PUSH4 0x3BCC45BA EQ PUSH3 0x5AE JUMPI DUP1 PUSH4 0x4000AEA0 EQ PUSH3 0x5D7 JUMPI PUSH3 0x33A JUMP JUMPDEST DUP1 PUSH4 0x141C7068 GT PUSH3 0x2F1 JUMPI DUP1 PUSH4 0x141C7068 EQ PUSH3 0x47B JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH3 0x485 JUMPI DUP1 PUSH4 0x1E3B9DE5 EQ PUSH3 0x48F JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH3 0x4B8 JUMPI DUP1 PUSH4 0x26773DDD EQ PUSH3 0x4F1 JUMPI DUP1 PUSH4 0x2A0A4ED5 EQ PUSH3 0x522 JUMPI PUSH3 0x33A JUMP JUMPDEST DUP1 PUSH4 0x2FB0C5E EQ PUSH3 0x33F JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH3 0x35D JUMPI DUP1 PUSH4 0x832E470 EQ PUSH3 0x3DF JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH3 0x3FB JUMPI DUP1 PUSH4 0xC6F0E5D EQ PUSH3 0x42A JUMPI DUP1 PUSH4 0xCD865EC EQ PUSH3 0x450 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x349 PUSH3 0xA61 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH3 0x367 PUSH3 0xA6A JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP4 MLOAD DUP2 DUP4 ADD MSTORE DUP4 MLOAD SWAP2 SWAP3 DUP4 SWAP3 SWAP1 DUP4 ADD SWAP2 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x3A3 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH3 0x389 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH3 0x3D1 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH3 0x3E9 PUSH3 0xC25 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH3 0x349 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH3 0x413 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH3 0xC2B JUMP JUMPDEST PUSH3 0x434 PUSH3 0xC44 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH3 0x479 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH3 0x468 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH3 0xC53 JUMP JUMPDEST STOP JUMPDEST PUSH3 0x479 PUSH3 0xF37 JUMP JUMPDEST PUSH3 0x3E9 PUSH3 0x1378 JUMP JUMPDEST PUSH3 0x434 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH3 0x4A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH3 0x137E JUMP JUMPDEST PUSH3 0x349 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH3 0x4D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH3 0x139F JUMP JUMPDEST PUSH3 0x479 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH3 0x509 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 ADD CALLDATALOAD AND PUSH3 0x13F6 JUMP JUMPDEST PUSH3 0x434 PUSH3 0x1721 JUMP JUMPDEST PUSH3 0x536 PUSH3 0x1799 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xFF SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH3 0x479 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH3 0x564 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH3 0x17A2 JUMP JUMPDEST PUSH3 0x3E9 PUSH3 0x1A0A JUMP JUMPDEST PUSH3 0x349 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH3 0x597 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH3 0x1A10 JUMP JUMPDEST PUSH3 0x434 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH3 0x5C6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH3 0x1A49 JUMP JUMPDEST PUSH3 0x349 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH3 0x5EF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 CALLDATALOAD AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP2 DUP2 ADD SWAP1 PUSH1 0x60 DUP2 ADD PUSH1 0x40 DUP3 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x20 SHL DUP2 GT ISZERO PUSH3 0x61F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH3 0x632 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH1 0x1 PUSH1 0x20 SHL DUP4 GT OR ISZERO PUSH3 0x654 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP SWAP1 SWAP3 POP SWAP1 POP PUSH3 0x1A6A JUMP JUMPDEST PUSH3 0x479 PUSH3 0x1B31 JUMP JUMPDEST PUSH3 0x479 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH3 0x682 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH3 0x1C0D JUMP JUMPDEST PUSH3 0x479 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH3 0x6A2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH3 0x1C7F JUMP JUMPDEST PUSH3 0x434 PUSH3 0x21B5 JUMP JUMPDEST PUSH3 0x3E9 PUSH3 0x21C4 JUMP JUMPDEST PUSH3 0x479 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH3 0x6E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD ISZERO ISZERO PUSH3 0x21CA JUMP JUMPDEST PUSH3 0x434 PUSH3 0x21E9 JUMP JUMPDEST PUSH3 0x479 PUSH3 0x21F8 JUMP JUMPDEST PUSH3 0x479 PUSH3 0x235D JUMP JUMPDEST PUSH3 0x3E9 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH3 0x725 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH3 0x2692 JUMP JUMPDEST PUSH3 0x3E9 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH3 0x74E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH3 0x26AD JUMP JUMPDEST PUSH3 0x3E9 PUSH3 0x2762 JUMP JUMPDEST PUSH3 0x479 PUSH3 0x2768 JUMP JUMPDEST PUSH3 0x479 PUSH3 0x29FD JUMP JUMPDEST PUSH3 0x367 PUSH3 0x2A76 JUMP JUMPDEST PUSH3 0x3E9 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH3 0x79F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH3 0x2BEE JUMP JUMPDEST PUSH3 0x3E9 PUSH3 0x2C0C JUMP JUMPDEST PUSH3 0x349 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH3 0x7D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH3 0x2C12 JUMP JUMPDEST PUSH3 0x349 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH3 0x7FB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH3 0x2C31 JUMP JUMPDEST PUSH3 0x479 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH3 0x82A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 CALLDATALOAD AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP2 DUP2 ADD SWAP1 PUSH1 0x60 DUP2 ADD PUSH1 0x40 DUP3 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x20 SHL DUP2 GT ISZERO PUSH3 0x85A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH3 0x86D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH1 0x1 PUSH1 0x20 SHL DUP4 GT OR ISZERO PUSH3 0x88F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP SWAP1 SWAP3 POP SWAP1 POP PUSH3 0x2C6A JUMP JUMPDEST PUSH3 0x349 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH3 0x8B3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH3 0x2C94 JUMP JUMPDEST PUSH3 0x349 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH3 0x8E2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH3 0x2CA9 JUMP JUMPDEST PUSH3 0x434 PUSH3 0x2CBE JUMP JUMPDEST PUSH3 0x349 PUSH3 0x2CCD JUMP JUMPDEST PUSH3 0x479 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH3 0x91F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH3 0x2CEA JUMP JUMPDEST PUSH3 0x434 PUSH3 0x2E25 JUMP JUMPDEST PUSH3 0x969 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH3 0x958 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH3 0x2E34 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP5 POP POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH3 0x367 PUSH3 0x2E66 JUMP JUMPDEST PUSH3 0x3E9 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH3 0x9C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 ADD CALLDATALOAD AND PUSH3 0x2EF8 JUMP JUMPDEST PUSH3 0xA01 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH3 0x9F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH3 0x2F23 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP1 MLOAD SWAP2 DUP3 SWAP1 SUB ADD SWAP1 RETURN JUMPDEST PUSH3 0x479 PUSH3 0x3036 JUMP JUMPDEST PUSH3 0x3E9 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH3 0xA46 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH3 0x318A JUMP JUMPDEST PUSH3 0x349 PUSH3 0x31A8 JUMP JUMPDEST PUSH1 0xF SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x6FDDE03 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD PUSH1 0x60 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0x6FDDE03 SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x0 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0xAB0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH3 0xAC5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH1 0x20 DUP2 LT ISZERO PUSH3 0xAEF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD PUSH1 0x40 MLOAD SWAP4 SWAP3 SWAP2 SWAP1 DUP5 PUSH1 0x1 PUSH1 0x20 SHL DUP3 GT ISZERO PUSH3 0xB0F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 DUP4 ADD SWAP1 PUSH1 0x20 DUP3 ADD DUP6 DUP2 GT ISZERO PUSH3 0xB25 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x20 SHL DUP2 GT DUP3 DUP3 ADD DUP9 LT OR ISZERO PUSH3 0xB3F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MSTORE POP DUP2 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0xB6E JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH3 0xB54 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH3 0xB9C JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP PUSH1 0x40 MSTORE POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP1 PUSH10 0x223930B3B3B0B136329 PUSH1 0xB5 SHL DUP2 MSTORE POP PUSH1 0xA ADD DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH3 0xBEC JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x1F NOT SWAP1 SWAP3 ADD SWAP2 PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH3 0xBCB JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH3 0xC3A CALLER DUP5 DUP5 PUSH3 0x31CE JUMP JUMPDEST POP PUSH1 0x1 JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH3 0xC5D PUSH3 0x3D6D JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP3 MLOAD PUSH1 0x80 DUP2 ADD DUP5 MSTORE DUP2 SLOAD DUP6 AND DUP2 MSTORE PUSH1 0x1 DUP3 ADD SLOAD SWAP3 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x2 DUP3 ADD SLOAD SWAP4 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x3 ADD SLOAD SWAP1 SWAP3 AND PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE SWAP1 SWAP2 SWAP1 DUP2 PUSH3 0xCF5 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x139BC818DB185A5B48199BDD5B99 PUSH1 0x92 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH3 0xD54 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C7920636C61696D616E742063616E207265736F6C766520636C61696D00 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST TIMESTAMP PUSH3 0xD70 PUSH1 0x4 SLOAD DUP6 PUSH1 0x40 ADD MLOAD PUSH3 0x32BE SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST GT ISZERO PUSH3 0xDC4 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436C61696D20706572696F64206E6F74206F7665722079657400000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND DUP3 SSTORE PUSH1 0x1 DUP3 ADD DUP6 SWAP1 SSTORE PUSH1 0x2 DUP3 ADD DUP6 SWAP1 SSTORE PUSH1 0x3 SWAP1 SWAP2 ADD DUP1 SLOAD SWAP1 SWAP2 AND SWAP1 SSTORE DUP1 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE DUP5 DUP7 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP9 SWAP1 MSTORE SWAP1 MLOAD SWAP4 DUP7 AND SWAP4 PUSH4 0xA9059CBB SWAP4 PUSH1 0x44 DUP1 DUP5 ADD SWAP5 SWAP4 DUP4 SWAP1 SUB ADD SWAP1 DUP3 SWAP1 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0xE51 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH3 0xE66 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH3 0xE7D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH3 0xECE JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH26 0x10DBDB1B185D195C985B081D1C985B9CD9995C8819985A5B1959 PUSH1 0x32 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH3 0xEE5 DUP6 DUP3 PUSH3 0xEDF DUP9 PUSH3 0x2692 JUMP JUMPDEST PUSH3 0x32CC JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x52A5C2B28BC6EB9712D0CED43463103B486B13CCC9CDA499FD3B2D7B6A74A8EE DUP6 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP JUMP JUMPDEST PUSH3 0xF41 PUSH3 0x2CCD JUMP JUMPDEST DUP1 ISZERO PUSH3 0xF50 JUMPI POP PUSH1 0xF SLOAD PUSH1 0xFF AND JUMPDEST PUSH3 0xF91 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH3 0x4AAE DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0xB SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x38A86C57 PUSH1 0xE1 SHL DUP2 MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0x7150D8AE SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0xFD7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH3 0xFEC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH3 0x1003 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 POP CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ PUSH3 0x1050 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x39 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH3 0x4B66 PUSH1 0x39 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xB PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xD7BE4E29 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x109F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH3 0x10B4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH3 0x10CB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH3 0x111F JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E74206E756D626572206F662079657320766F746573 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0xB SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xB28FA152 PUSH3 0x113B DUP4 PUSH3 0x2692 JUMP JUMPDEST PUSH3 0x1145 PUSH3 0x1378 JUMP JUMPDEST SUB PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x117B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH3 0x1190 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH3 0x11A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH3 0x11FB JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6666657220696E73756666696369656E746C792066756E6465640000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH3 0x12F7 DUP2 PUSH1 0xB PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xE5A6B10F PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x124F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH3 0x1264 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH3 0x127B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0xB SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x501AD8FF PUSH1 0xE1 SHL DUP2 MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 PUSH4 0xA035B1FE SWAP2 PUSH1 0x4 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x12C3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH3 0x12D8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH3 0x12EF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH3 0x32DE JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x40 DUP1 MLOAD CALLER DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 DUP2 DUP4 ADD DUP2 SWAP1 MSTORE PUSH1 0x16 SWAP1 DUP3 ADD MSTORE PUSH22 0x436F6D706C65746564207375636365737366756C6C79 PUSH1 0x50 SHL PUSH1 0xA0 DUP3 ADD MSTORE SWAP1 MLOAD SWAP2 DUP4 AND SWAP2 PUSH32 0xC88F58AE9FEB0742D9422F604DD3C1BE6D02818F8DEC340C5061F428B554E975 SWAP2 DUP2 SWAP1 SUB PUSH1 0xC0 ADD SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD AND JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x13AE DUP5 DUP5 DUP5 PUSH3 0x32CC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP1 DUP6 MSTORE SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 SLOAD PUSH3 0x13EC SWAP2 DUP7 SWAP2 PUSH3 0x13E6 SWAP1 DUP7 PUSH3 0x3505 JUMP JUMPDEST PUSH3 0x31CE JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH3 0x1401 DUP2 PUSH3 0x2C12 JUMP JUMPDEST PUSH3 0x1453 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436C61696D732064697361626C656420666F7220746869732061646472657373 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH3 0x1460 DUP4 PUSH3 0x26AD JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT PUSH3 0x14B1 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x155B9CDD5C1C1BDC9D19590818DBDB1B185D195C985B PUSH1 0x52 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST CALLER PUSH1 0x0 PUSH3 0x14BF DUP5 PUSH3 0x2692 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH3 0x14CF DUP3 DUP6 PUSH3 0x3518 JUMP JUMPDEST SWAP1 POP DUP6 DUP3 PUSH3 0x1525 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436C61696D6564206164647265737320686F6C6473206E6F2073686172657300 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD ISZERO PUSH3 0x1594 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4164647265737320616C726561647920636C61696D6564000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE ADDRESS PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD DUP6 SWAP1 MSTORE SWAP2 MLOAD SWAP2 DUP4 AND SWAP2 PUSH4 0x23B872DD SWAP2 PUSH1 0x64 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x15EE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH3 0x1603 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH3 0x161A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH3 0x166B JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH26 0x10DBDB1B185D195C985B081D1C985B9CD9995C8819985A5B1959 PUSH1 0x32 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x80 DUP2 ADD DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP8 AND DUP1 DUP4 MSTORE PUSH1 0x20 DUP1 DUP5 ADD DUP8 DUP2 MSTORE TIMESTAMP DUP6 DUP8 ADD SWAP1 DUP2 MSTORE DUP14 DUP6 AND PUSH1 0x60 DUP8 ADD SWAP1 DUP2 MSTORE DUP14 DUP7 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 DUP7 MSTORE DUP10 SWAP1 KECCAK256 SWAP8 MLOAD DUP9 SLOAD SWAP1 DUP9 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP2 DUP3 AND OR DUP10 SSTORE SWAP4 MLOAD PUSH1 0x1 DUP10 ADD SSTORE SWAP2 MLOAD PUSH1 0x2 DUP9 ADD SSTORE MLOAD PUSH1 0x3 SWAP1 SWAP7 ADD DUP1 SLOAD SWAP7 SWAP1 SWAP6 AND SWAP6 SWAP1 SWAP2 AND SWAP5 SWAP1 SWAP5 OR SWAP1 SWAP3 SSTORE DUP4 MLOAD DUP8 DUP2 MSTORE SWAP4 MLOAD SWAP1 SWAP4 PUSH32 0x1982CA8958FC8A8176CB52BE509260F4BC5AF7CE04E1533711793F1C56DD5359 SWAP3 SWAP1 DUP3 SWAP1 SUB ADD SWAP1 LOG3 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x172D PUSH3 0x21B5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x2A0A4ED5 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x1766 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH3 0x177B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH3 0x1792 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH3 0x17AC PUSH3 0x1721 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH3 0x1812 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F752063616E6E6F742064656C65746520636C61696D730000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH3 0x181C PUSH3 0x3D6D JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP3 MLOAD PUSH1 0x80 DUP2 ADD DUP5 MSTORE DUP2 SLOAD DUP6 AND DUP2 MSTORE PUSH1 0x1 DUP3 ADD SLOAD SWAP3 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x2 DUP3 ADD SLOAD SWAP4 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x3 ADD SLOAD SWAP1 SWAP3 AND PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE SWAP1 SWAP2 PUSH3 0x18B2 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x139BC818DB185A5B48199BDD5B99 PUSH1 0x92 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND DUP3 SSTORE PUSH1 0x1 DUP3 ADD DUP6 SWAP1 SSTORE PUSH1 0x2 DUP3 ADD DUP6 SWAP1 SSTORE PUSH1 0x3 SWAP1 SWAP2 ADD DUP1 SLOAD SWAP1 SWAP2 AND SWAP1 SSTORE DUP6 MLOAD DUP7 DUP4 ADD MLOAD DUP3 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE SWAP2 DUP7 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE SWAP1 MLOAD SWAP4 DUP6 AND SWAP4 PUSH4 0xA9059CBB SWAP4 PUSH1 0x44 DUP1 DUP5 ADD SWAP5 SWAP4 DUP4 SWAP1 SUB ADD SWAP1 DUP3 SWAP1 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x1941 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH3 0x1956 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH3 0x196D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH3 0x19BE JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH26 0x10DBDB1B185D195C985B081D1C985B9CD9995C8819985A5B1959 PUSH1 0x32 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x20 DUP1 DUP5 ADD MLOAD PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND SWAP4 DUP8 AND SWAP3 PUSH32 0xBB036E629A9F4C0897EE5D48440DFDB36F7E772117723A2ED603A6514244C2D5 SWAP3 DUP3 SWAP1 SUB ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0xE SLOAD DUP2 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 PUSH3 0xC3A SWAP2 DUP6 SWAP1 PUSH3 0x13E6 SWAP1 DUP7 PUSH3 0x32BE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x3 ADD SLOAD AND SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH3 0x1A79 DUP7 DUP7 PUSH3 0x2C94 JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH3 0x1B28 JUMPI DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xA4C0ED36 CALLER DUP8 DUP8 DUP8 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP5 DUP5 DUP3 DUP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP SWAP6 POP POP POP POP POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x1B0E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH3 0x1B23 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH3 0x1B3B PUSH3 0x2CCD JUMP JUMPDEST DUP1 ISZERO PUSH3 0x1B4A JUMPI POP PUSH1 0xF SLOAD PUSH1 0xFF AND JUMPDEST PUSH3 0x1B8B JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH3 0x4AAE DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0xB SLOAD CALLER SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x4B91562E DUP3 PUSH3 0x1BAA DUP2 PUSH3 0x2692 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x1BF1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH3 0x1C06 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH3 0x1C19 CALLER DUP3 PUSH3 0x3541 JUMP JUMPDEST PUSH3 0x1C23 PUSH3 0x21B5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x42966C68 PUSH3 0x1C48 PUSH1 0xA SLOAD DUP5 PUSH3 0x3518 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x1BF1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0xF SLOAD PUSH1 0xFF AND PUSH3 0x1CD7 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416E206163636570746564206F66666572206578697374730000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH3 0x1CE3 PUSH3 0x21B5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x3A98EF39 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x1D1E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH3 0x1D33 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH3 0x1D4A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 POP CALLER PUSH3 0x1D6B PUSH2 0x2710 PUSH3 0x1D64 DUP5 PUSH2 0xBB8 PUSH3 0x3518 JUMP JUMPDEST SWAP1 PUSH3 0x354D JUMP JUMPDEST PUSH3 0x1D75 PUSH3 0x1378 JUMP JUMPDEST LT ISZERO PUSH3 0x1DB4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2E DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH3 0x4B14 PUSH1 0x2E SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x1DC9 PUSH2 0x2710 PUSH3 0x1D64 DUP5 PUSH2 0x1F4 PUSH3 0x3518 JUMP JUMPDEST PUSH3 0x1DD4 DUP3 PUSH3 0x2692 JUMP JUMPDEST LT ISZERO PUSH3 0x1E13 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x39 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH3 0x4B9F PUSH1 0x39 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xC SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH1 0x0 SWAP1 PUSH8 0xDE0B6B3A7640000 SWAP1 DUP3 DUP2 DUP2 DUP2 DUP6 DUP9 DUP4 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH3 0x1E51 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x0 CALLER DUP5 DUP7 PUSH1 0xE SLOAD PUSH1 0x40 MLOAD PUSH3 0x1E68 SWAP1 PUSH3 0x3DA7 JUMP JUMPDEST DUP1 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP5 POP POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 PUSH1 0x0 CREATE DUP1 ISZERO DUP1 ISZERO PUSH3 0x1EB6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xB28FA152 PUSH3 0x1ED3 DUP5 PUSH3 0x2692 JUMP JUMPDEST PUSH3 0x1EDD PUSH3 0x1378 JUMP JUMPDEST SUB PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x1F13 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH3 0x1F28 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH3 0x1F3F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH3 0x1F8A JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x496E73756666696369656E742066756E64696E67 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH3 0x1F94 PUSH3 0x2CCD JUMP JUMPDEST ISZERO PUSH3 0x2140 JUMPI PUSH1 0xB PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xE5A6B10F PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x1FE9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH3 0x1FFE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH3 0x2015 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND SWAP2 AND EQ DUP1 ISZERO PUSH3 0x20C3 JUMPI POP PUSH3 0x20BF PUSH2 0x2710 PUSH3 0x1D64 PUSH2 0x2904 PUSH1 0xB PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xA035B1FE PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x208A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH3 0x209F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH3 0x20B6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 PUSH3 0x3518 JUMP JUMPDEST DUP6 LT ISZERO JUMPDEST PUSH3 0x2100 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x3C DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH3 0x4A72 PUSH1 0x3C SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x2140 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1C DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4F66666572207265706C61636564206279206869676865722062696400000000 DUP2 MSTORE POP PUSH3 0x3561 JUMP JUMPDEST PUSH1 0xB DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SWAP2 SSTORE DUP3 AND PUSH32 0x9C00F159B1FA9EAEBDA7ACAF50BE0BF3A652277380F907B35CB681BD641A62D3 DUP7 PUSH3 0x218E PUSH3 0x21E9 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x20 DUP4 ADD MSTORE DUP1 MLOAD SWAP2 DUP3 SWAP1 SUB ADD SWAP1 LOG2 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD ISZERO PUSH3 0x235B JUMPI CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 DUP2 ADD DUP1 SLOAD PUSH1 0x3 DUP4 ADD DUP1 SLOAD DUP5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND DUP7 SSTORE SWAP4 DUP9 SWAP1 SSTORE PUSH1 0x2 SWAP1 SWAP5 ADD DUP8 SWAP1 SSTORE SWAP2 DUP4 AND SWAP1 SWAP2 SSTORE DUP3 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP7 SWAP1 SWAP7 MSTORE PUSH1 0x24 DUP7 ADD DUP2 SWAP1 MSTORE SWAP2 MLOAD SWAP2 SWAP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP4 DUP5 SWAP4 PUSH4 0xA9059CBB SWAP4 PUSH1 0x44 DUP1 DUP6 ADD SWAP5 SWAP3 SWAP4 SWAP2 SWAP3 DUP4 SWAP1 SUB ADD SWAP1 DUP3 SWAP1 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x22A5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH3 0x22BA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH3 0x22D1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH3 0x2322 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH26 0x10DBDB1B185D195C985B081D1C985B9CD9995C8819985A5B1959 PUSH1 0x32 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP4 DUP2 MSTORE SWAP1 MLOAD CALLER SWAP2 PUSH32 0x203627483D943880619F4B7E0CCA21DBEFD6204B4D85B124EB99540E17BA86DD SWAP2 SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG2 POP POP JUMPDEST JUMP JUMPDEST PUSH3 0x2367 PUSH3 0x2CCD JUMP JUMPDEST DUP1 ISZERO PUSH3 0x2376 JUMPI POP PUSH1 0xF SLOAD PUSH1 0xFF AND JUMPDEST PUSH3 0x23B7 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH3 0x4AAE DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0xB PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x90E64D13 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x2406 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH3 0x241B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH3 0x2432 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD ISZERO PUSH3 0x2470 JUMPI PUSH3 0x246A PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xD DUP2 MSTORE PUSH1 0x20 ADD PUSH13 0x13D999995C88195E1C1A5C9959 PUSH1 0x9A SHL DUP2 MSTORE POP PUSH3 0x3561 JUMP JUMPDEST PUSH3 0x235B JUMP JUMPDEST PUSH1 0xB PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xCF42A927 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x24BF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH3 0x24D4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH3 0x24EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD ISZERO PUSH3 0x2528 JUMPI PUSH3 0x246A PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH18 0x139BDD08195B9BDD59DA081CDD5C1C1BDC9D PUSH1 0x72 SHL DUP2 MSTORE POP PUSH3 0x3561 JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x38A86C57 PUSH1 0xE1 SHL DUP2 MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 PUSH4 0xB28FA152 SWAP2 PUSH3 0x25AE SWAP2 DUP5 SWAP2 PUSH4 0x7150D8AE SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x257A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH3 0x258F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH3 0x25A6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH3 0x2692 JUMP JUMPDEST PUSH3 0x25B8 PUSH3 0x1378 JUMP JUMPDEST SUB PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x25EE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH3 0x2603 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH3 0x261A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH3 0x2645 JUMPI PUSH3 0x246A PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0x49E4 PUSH1 0x21 SWAP2 CODECOPY PUSH3 0x3561 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4163717569736974696F6E20636F6E7465737420756E7375636365737366756C PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH3 0x26BB DUP4 PUSH3 0x3731 JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH3 0x26CC JUMPI SWAP1 POP PUSH3 0x139A JUMP JUMPDEST PUSH3 0x26D6 PUSH3 0x21B5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH3 0x26FB JUMPI POP POP PUSH1 0xA SLOAD PUSH3 0x139A JUMP JUMPDEST PUSH3 0x2759 PUSH1 0xA SLOAD PUSH3 0x270C PUSH3 0x21B5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x77E071AD DUP7 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x208A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 POP POP PUSH3 0x139A JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0xF SLOAD PUSH1 0xFF AND PUSH3 0x27B9 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x436F6E7472616374206973206E6F7420616374697665 PUSH1 0x50 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 CALLER SWAP1 POP PUSH3 0x27DD PUSH2 0x2710 PUSH3 0x1D64 PUSH1 0xD SLOAD PUSH3 0x27D6 PUSH3 0x1378 JUMP JUMPDEST SWAP1 PUSH3 0x3518 JUMP JUMPDEST PUSH3 0x27E8 DUP3 PUSH3 0x2692 JUMP JUMPDEST LT ISZERO PUSH3 0x2831 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x145D5BDC9D5B481B9BDD081C995858DA1959 PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH3 0x283B PUSH3 0x2CCD JUMP JUMPDEST ISZERO PUSH3 0x29B0 JUMPI PUSH1 0xB PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xCF42A927 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x2890 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH3 0x28A5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH3 0x28BC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH3 0x2994 JUMPI PUSH3 0x28CD PUSH3 0x1B31 JUMP JUMPDEST PUSH1 0xB PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xCF42A927 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x291C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH3 0x2931 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH3 0x2948 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH3 0x2994 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x145D5BDC9D5B481A185CC81B9BDD0819985A5B1959 PUSH1 0x5A SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH3 0x299E PUSH3 0x235D JUMP JUMPDEST PUSH3 0x29A8 PUSH3 0x2CCD JUMP JUMPDEST ISZERO PUSH3 0x29B0 JUMPI INVALID JUMPDEST PUSH3 0x29BE DUP2 DUP3 PUSH1 0x1 PUSH3 0x32DE JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND DUP2 MSTORE SWAP1 MLOAD PUSH32 0x3B6B79A09E9FD230E8591B65C97236BF7DF7A604EDF733DB0658E66B0E6EB2A9 SWAP2 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG1 POP JUMP JUMPDEST PUSH3 0x2A07 PUSH3 0x2CCD JUMP JUMPDEST DUP1 ISZERO PUSH3 0x2A16 JUMPI POP PUSH1 0xF SLOAD PUSH1 0xFF AND JUMPDEST PUSH3 0x2A57 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH3 0x4AAE DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0xB SLOAD CALLER SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x5FF0CF84 DUP3 PUSH3 0x1BAA DUP2 PUSH3 0x2692 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x95D89B41 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD PUSH1 0x60 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0x95D89B41 SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x0 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x2ABC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH3 0x2AD1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH1 0x20 DUP2 LT ISZERO PUSH3 0x2AFB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD PUSH1 0x40 MLOAD SWAP4 SWAP3 SWAP2 SWAP1 DUP5 PUSH1 0x1 PUSH1 0x20 SHL DUP3 GT ISZERO PUSH3 0x2B1B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 DUP4 ADD SWAP1 PUSH1 0x20 DUP3 ADD DUP6 DUP2 GT ISZERO PUSH3 0x2B31 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x20 SHL DUP2 GT DUP3 DUP3 ADD DUP9 LT OR ISZERO PUSH3 0x2B4B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MSTORE POP DUP2 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x2B7A JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH3 0x2B60 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH3 0x2BA8 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP PUSH1 0x40 MSTORE POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP1 PUSH1 0x11 PUSH1 0xFA SHL DUP2 MSTORE POP PUSH1 0x1 ADD DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x20 DUP4 LT PUSH3 0xBEC JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x1F NOT SWAP1 SWAP3 ADD SWAP2 PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH3 0xBCB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH1 0xD SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO SWAP1 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 PUSH3 0xC3A SWAP2 DUP6 SWAP1 PUSH3 0x13E6 SWAP1 DUP7 PUSH3 0x3505 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH3 0x2C82 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x2C8E DUP5 DUP5 PUSH3 0x3778 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x2CA2 DUP4 DUP4 PUSH3 0x3834 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0xC SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH3 0x2CDA PUSH3 0x21E9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO SWAP1 POP SWAP1 JUMP JUMPDEST PUSH3 0x2CF4 PUSH3 0x2CCD JUMP JUMPDEST ISZERO PUSH3 0x2D42 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH24 0x2A3432B9329034B99030903832B73234B7339037B33332B9 PUSH1 0x41 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x9 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP5 SWAP1 MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 PUSH4 0x23B872DD SWAP2 PUSH1 0x64 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x2D9D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH3 0x2DB2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH3 0x2DC9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH3 0x2E15 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x14DA185C99481D1C985B9CD9995C8819985A5B1959 PUSH1 0x5A SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH3 0x2E21 DUP3 DUP3 PUSH3 0x3778 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x3 SWAP1 SWAP4 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND SWAP4 SWAP2 SWAP3 AND DUP5 JUMP JUMPDEST PUSH1 0x10 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x2 PUSH1 0x1 DUP6 AND ISZERO PUSH2 0x100 MUL PUSH1 0x0 NOT ADD SWAP1 SWAP5 AND SWAP4 SWAP1 SWAP4 DIV PUSH1 0x1F DUP2 ADD DUP5 SWAP1 DIV DUP5 MUL DUP3 ADD DUP5 ADD SWAP1 SWAP3 MSTORE DUP2 DUP2 MSTORE SWAP3 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH3 0x2EF0 JUMPI DUP1 PUSH1 0x1F LT PUSH3 0x2EC4 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH3 0x2EF0 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH3 0x2ED2 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0xF SLOAD PUSH1 0x0 SWAP1 DUP2 SWAP1 PUSH1 0xFF AND ISZERO PUSH3 0x2F6C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x36 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH3 0x4A05 PUSH1 0x36 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x2F78 CALLER DUP5 PUSH3 0x3541 JUMP JUMPDEST PUSH1 0x0 PUSH3 0x2F91 PUSH1 0xA SLOAD DUP6 PUSH3 0x3518 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP5 SWAP1 MSTORE SWAP1 MLOAD SWAP3 SWAP4 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 PUSH4 0xA9059CBB SWAP2 PUSH1 0x44 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x2FE9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH3 0x2FFE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH3 0x3015 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH3 0x3021 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x9 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP3 POP SWAP1 POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH3 0x3040 PUSH3 0x2CCD JUMP JUMPDEST DUP1 ISZERO PUSH3 0x304F JUMPI POP PUSH1 0xF SLOAD PUSH1 0xFF AND JUMPDEST PUSH3 0x3090 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH3 0x4AAE DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0xB PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x7150D8AE PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x30DF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH3 0x30F4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH3 0x310B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH3 0x3155 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x37 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH3 0x4A3B PUSH1 0x37 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x235B PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH18 0x21B0B731B2B63632B210313C90313ABCB2B9 PUSH1 0x71 SHL DUP2 MSTORE POP PUSH3 0x3561 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH3 0x31B4 PUSH3 0x2CCD JUMP JUMPDEST PUSH3 0x31C1 JUMPI PUSH1 0x0 PUSH3 0x31C9 JUMP JUMPDEST PUSH1 0xF SLOAD PUSH1 0xFF AND ISZERO JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH3 0x3215 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH3 0x4B42 PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH3 0x325C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH3 0x49C2 PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE DUP2 MLOAD DUP6 DUP2 MSTORE SWAP2 MLOAD PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST DUP2 DUP2 ADD DUP3 DUP2 LT ISZERO PUSH3 0xC3E JUMPI INVALID JUMPDEST PUSH3 0x32D9 DUP4 DUP4 DUP4 PUSH3 0x3890 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x32EB DUP5 PUSH3 0x2692 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH3 0x32F9 PUSH3 0x1378 JUMP JUMPDEST PUSH1 0xF DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE SWAP1 POP PUSH3 0x3310 DUP3 PUSH3 0x2F23 JUMP JUMPDEST POP PUSH1 0x0 SWAP1 POP PUSH3 0x3321 DUP3 DUP5 PUSH3 0x3505 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP6 SWAP1 MSTORE SWAP2 MLOAD SWAP4 SWAP5 POP SWAP2 AND SWAP2 PUSH4 0xA9059CBB SWAP2 PUSH1 0x44 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x337A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH3 0x338F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH3 0x33A6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH3 0x33EC JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x1D1C985B9CD9995C8819985A5B1959 PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x9 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND SWAP2 SWAP1 SWAP2 OR SWAP2 DUP3 SWAP1 SSTORE PUSH1 0xA DUP7 SWAP1 SSTORE AND PUSH4 0x23B872DD DUP8 ADDRESS PUSH3 0x3426 DUP9 DUP7 PUSH3 0x3518 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP4 POP POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x347D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH3 0x3492 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH3 0x34A9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH3 0x34FD JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4261636B696E67207472616E73666572206661696C6564000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 GT ISZERO PUSH3 0x3512 JUMPI INVALID JUMPDEST POP SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH3 0x3529 JUMPI POP PUSH1 0x0 PUSH3 0xC3E JUMP JUMPDEST POP DUP2 DUP2 MUL DUP2 DUP4 DUP3 DUP2 PUSH3 0x3538 JUMPI INVALID JUMPDEST DIV EQ PUSH3 0xC3E JUMPI INVALID JUMPDEST PUSH3 0x2E21 DUP3 DUP3 PUSH3 0x3938 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 DUP2 PUSH3 0x3559 JUMPI INVALID JUMPDEST DIV SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x38A86C57 PUSH1 0xE1 SHL DUP2 MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0x7150D8AE SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x35A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH3 0x35BC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH3 0x35D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH32 0xC88F58AE9FEB0742D9422F604DD3C1BE6D02818F8DEC340C5061F428B554E975 CALLER PUSH1 0x0 DUP6 PUSH3 0x3610 PUSH3 0x21E9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP5 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x3675 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH3 0x365B JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH3 0x36A3 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP6 POP POP POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0xB PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x41C0E1B5 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x3704 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH3 0x3719 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0xB DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ADDRESS EQ ISZERO PUSH3 0x374E JUMPI POP PUSH1 0x1 PUSH3 0x139A JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND SWAP2 AND EQ ISZERO PUSH3 0x376F JUMPI POP PUSH1 0x8 SLOAD PUSH3 0x139A JUMP JUMPDEST POP PUSH1 0x0 PUSH3 0x139A JUMP JUMPDEST PUSH3 0x3782 PUSH3 0x2CCD JUMP JUMPDEST ISZERO PUSH3 0x37D0 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH24 0x2A3432B9329034B99030903832B73234B7339037B33332B9 PUSH1 0x41 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0xF SLOAD PUSH1 0xFF AND PUSH3 0x3828 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436F6E7472616374206E6F742061637469766520616E79206D6F72652E000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH3 0x2E21 DUP3 DUP3 PUSH3 0x39D3 JUMP JUMPDEST PUSH1 0x0 PUSH3 0x3842 DUP4 DUP4 PUSH3 0x39DF JUMP JUMPDEST PUSH3 0x3886 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x151C985B9CD9995C8819985A5B1959 PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH3 0xC3A PUSH3 0x21F8 JUMP JUMPDEST PUSH3 0x389D DUP4 DUP4 DUP4 PUSH3 0x39EE JUMP JUMPDEST PUSH3 0x38A7 PUSH3 0x2CCD JUMP JUMPDEST DUP1 ISZERO PUSH3 0x38B6 JUMPI POP PUSH1 0xF SLOAD PUSH1 0xFF AND JUMPDEST ISZERO PUSH3 0x32D9 JUMPI PUSH1 0xB SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x6240A7D7 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE DUP6 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD DUP6 SWAP1 MSTORE SWAP2 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP2 PUSH4 0xC4814FAE SWAP2 PUSH1 0x64 DUP1 DUP4 ADD SWAP3 PUSH1 0x0 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP4 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x391A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH3 0x392F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH3 0x3944 DUP3 DUP3 PUSH3 0x3B2C JUMP JUMPDEST PUSH3 0x394E PUSH3 0x2CCD JUMP JUMPDEST DUP1 ISZERO PUSH3 0x395D JUMPI POP PUSH1 0xF SLOAD PUSH1 0xFF AND JUMPDEST ISZERO PUSH3 0x2E21 JUMPI PUSH1 0xB SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x6240A7D7 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x0 PUSH1 0x24 DUP4 ADD DUP2 SWAP1 MSTORE PUSH1 0x44 DUP4 ADD DUP7 SWAP1 MSTORE SWAP3 MLOAD SWAP4 AND SWAP3 PUSH4 0xC4814FAE SWAP3 PUSH1 0x64 DUP1 DUP5 ADD SWAP4 SWAP2 SWAP3 SWAP2 DUP3 SWAP1 SUB ADD DUP2 DUP4 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x39BE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH3 0x34FD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST PUSH3 0x2E21 DUP3 DUP3 PUSH3 0x3BFF JUMP JUMPDEST PUSH1 0x0 PUSH3 0xC3A CALLER DUP5 DUP5 PUSH3 0x32CC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH3 0x3A35 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH3 0x4AEF PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH3 0x3A7C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH3 0x499F PUSH1 0x23 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH3 0x3AA1 SWAP1 DUP3 PUSH3 0x3505 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP1 DUP5 AND DUP2 MSTORE KECCAK256 SLOAD PUSH3 0x3AD2 SWAP1 DUP3 PUSH3 0x32BE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE DUP1 MLOAD DUP6 DUP2 MSTORE SWAP1 MLOAD SWAP2 SWAP4 SWAP3 DUP8 AND SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 SWAP2 DUP3 SWAP1 SUB ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH3 0x3B73 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH3 0x4ACE PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 SLOAD PUSH3 0x3B82 SWAP1 DUP3 PUSH3 0x3505 JUMP JUMPDEST PUSH1 0x2 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH3 0x3BAA SWAP1 DUP3 PUSH3 0x3505 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE DUP4 MLOAD DUP6 DUP2 MSTORE SWAP4 MLOAD SWAP2 SWAP4 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 SWAP1 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH3 0x3C0B DUP3 DUP3 PUSH3 0x3C84 JUMP JUMPDEST PUSH3 0x3C15 PUSH3 0x2CCD JUMP JUMPDEST DUP1 ISZERO PUSH3 0x3C24 JUMPI POP PUSH1 0xF SLOAD PUSH1 0xFF AND JUMPDEST ISZERO PUSH3 0x2E21 JUMPI PUSH1 0xB SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x6240A7D7 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND PUSH1 0x24 DUP5 ADD MSTORE PUSH1 0x44 DUP4 ADD DUP7 SWAP1 MSTORE SWAP3 MLOAD SWAP3 SWAP1 SWAP4 AND SWAP3 PUSH4 0xC4814FAE SWAP3 PUSH1 0x64 DUP1 DUP5 ADD SWAP4 DUP3 SWAP1 SUB ADD DUP2 DUP4 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x39BE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH3 0x3CE0 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x2 SLOAD PUSH3 0x3CEF SWAP1 DUP3 PUSH3 0x32BE JUMP JUMPDEST PUSH1 0x2 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH3 0x3D17 SWAP1 DUP3 PUSH3 0x32BE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE DUP4 MLOAD DUP6 DUP2 MSTORE SWAP4 MLOAD SWAP3 SWAP4 SWAP2 SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH2 0xBE9 DUP1 PUSH3 0x3DB6 DUP4 CODECOPY ADD SWAP1 JUMP INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0xBE9 CODESIZE SUB DUP1 PUSH2 0xBE9 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE PUSH1 0x80 DUP2 LT ISZERO PUSH2 0x33 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 MLOAD PUSH1 0x20 DUP3 ADD MLOAD PUSH1 0x40 DUP4 ADD MLOAD PUSH1 0x60 SWAP1 SWAP4 ADD MLOAD SWAP2 SWAP3 SWAP1 SWAP2 DUP2 PUSH2 0x8C JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x696E76616C6964207072696365 PUSH1 0x98 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND CALLER OR SWAP1 SWAP2 SSTORE PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP7 DUP8 AND SWAP1 DUP4 AND OR SWAP1 SSTORE PUSH1 0x3 DUP1 SLOAD SWAP5 SWAP1 SWAP6 AND SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP3 SSTORE PUSH1 0x4 SWAP2 SWAP1 SWAP2 SSTORE PUSH1 0x0 SSTORE TIMESTAMP PUSH1 0x5 SSTORE PUSH2 0xB06 DUP1 PUSH2 0xE3 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x12C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xB1610D7E GT PUSH2 0xAD JUMPI DUP1 PUSH4 0xCF42A927 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xCF42A927 EQ PUSH2 0x2B4 JUMPI DUP1 PUSH4 0xD7BE4E29 EQ PUSH2 0x2BC JUMPI DUP1 PUSH4 0xE5A6B10F EQ PUSH2 0x2C4 JUMPI DUP1 PUSH4 0xFA7F1BAE EQ PUSH2 0x2CC JUMPI DUP1 PUSH4 0xFB286C65 EQ PUSH2 0x2D4 JUMPI PUSH2 0x12C JUMP JUMPDEST DUP1 PUSH4 0xB1610D7E EQ PUSH2 0x249 JUMPI DUP1 PUSH4 0xB28FA152 EQ PUSH2 0x251 JUMPI DUP1 PUSH4 0xB5B47F42 EQ PUSH2 0x26E JUMPI DUP1 PUSH4 0xB80777EA EQ PUSH2 0x276 JUMPI DUP1 PUSH4 0xC4814FAE EQ PUSH2 0x27E JUMPI PUSH2 0x12C JUMP JUMPDEST DUP1 PUSH4 0x5FF0CF84 GT PUSH2 0xF4 JUMPI DUP1 PUSH4 0x5FF0CF84 EQ PUSH2 0x1C3 JUMPI DUP1 PUSH4 0x7150D8AE EQ PUSH2 0x1EF JUMPI DUP1 PUSH4 0x8F1B4C6F EQ PUSH2 0x213 JUMPI DUP1 PUSH4 0x90E64D13 EQ PUSH2 0x239 JUMPI DUP1 PUSH4 0xA035B1FE EQ PUSH2 0x241 JUMPI PUSH2 0x12C JUMP JUMPDEST DUP1 PUSH4 0xC43CD88 EQ PUSH2 0x131 JUMPI DUP1 PUSH4 0x1703A018 EQ PUSH2 0x14B JUMPI DUP1 PUSH4 0x41C0E1B5 EQ PUSH2 0x153 JUMPI DUP1 PUSH4 0x448AB4C6 EQ PUSH2 0x15D JUMPI DUP1 PUSH4 0x4B91562E EQ PUSH2 0x197 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x139 PUSH2 0x2DC JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x139 PUSH2 0x2E3 JUMP JUMPDEST PUSH2 0x15B PUSH2 0x2E9 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x183 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x173 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x343 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x15B PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x1AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x376 JUMP JUMPDEST PUSH2 0x15B PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x1D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x421 JUMP JUMPDEST PUSH2 0x1F7 PUSH2 0x4C8 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x183 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x229 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x4D7 JUMP JUMPDEST PUSH2 0x183 PUSH2 0x4E0 JUMP JUMPDEST PUSH2 0x139 PUSH2 0x504 JUMP JUMPDEST PUSH2 0x139 PUSH2 0x50A JUMP JUMPDEST PUSH2 0x183 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x267 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x511 JUMP JUMPDEST PUSH2 0x139 PUSH2 0x64E JUMP JUMPDEST PUSH2 0x139 PUSH2 0x654 JUMP JUMPDEST PUSH2 0x15B PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x294 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH2 0x65A JUMP JUMPDEST PUSH2 0x183 PUSH2 0x6F0 JUMP JUMPDEST PUSH2 0x183 PUSH2 0x83B JUMP JUMPDEST PUSH2 0x1F7 PUSH2 0x8F4 JUMP JUMPDEST PUSH2 0x183 PUSH2 0x903 JUMP JUMPDEST PUSH2 0x139 PUSH2 0x927 JUMP JUMPDEST PUSH3 0x76A700 DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x335 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xA PUSH1 0x24 DUP3 ADD MSTORE PUSH10 0x1B9BDD081C185C995B9D PUSH1 0xB2 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SELFDESTRUCT JUMPDEST PUSH1 0x0 PUSH1 0x1 JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x36F JUMPI INVALID JUMPDEST EQ SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x3C2 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xA PUSH1 0x24 DUP3 ADD MSTORE PUSH10 0x1B9BDD081C185C995B9D PUSH1 0xB2 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x3CA PUSH2 0x903 JUMP JUMPDEST PUSH2 0x411 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x2A3432903B37BA32903430B99032B73232B217 PUSH1 0x69 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x41D PUSH1 0x2 DUP3 DUP5 PUSH2 0x92D JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x46D JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xA PUSH1 0x24 DUP3 ADD MSTORE PUSH10 0x1B9BDD081C185C995B9D PUSH1 0xB2 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x475 PUSH2 0x903 JUMP JUMPDEST PUSH2 0x4BC JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x2A3432903B37BA32903430B99032B73232B217 PUSH1 0x69 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x41D PUSH1 0x1 DUP3 DUP5 PUSH2 0x92D JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH2 0x348 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x4F8 PUSH1 0x5 SLOAD TIMESTAMP PUSH2 0x973 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH3 0x76A700 LT SWAP2 POP POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH3 0x4F1A00 DUP2 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x2 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP4 SWAP3 SWAP1 SWAP3 AND SWAP2 DUP4 SWAP2 DUP4 SWAP2 PUSH4 0x70A08231 SWAP2 PUSH1 0x24 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x569 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x57D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x593 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x2 SLOAD PUSH1 0x1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x6EB1769F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP2 DUP4 AND PUSH1 0x24 DUP4 ADD MSTORE MLOAD SWAP3 SWAP4 POP PUSH1 0x0 SWAP3 SWAP2 DUP6 AND SWAP2 PUSH4 0xDD62ED3E SWAP2 PUSH1 0x44 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x5F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x606 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x61C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x4 SLOAD SWAP1 SWAP2 POP PUSH1 0x0 SWAP1 PUSH2 0x632 SWAP1 DUP8 SWAP1 PUSH2 0x98A JUMP JUMPDEST SWAP1 POP DUP3 DUP2 GT ISZERO DUP1 ISZERO PUSH2 0x644 JUMPI POP DUP2 DUP2 GT ISZERO JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x6A6 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xA PUSH1 0x24 DUP3 ADD MSTORE PUSH10 0x1B9BDD081C185C995B9D PUSH1 0xB2 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x6AE PUSH2 0x903 JUMP JUMPDEST ISZERO PUSH2 0x6EB JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SLOAD SWAP3 DUP6 AND DUP3 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF SWAP2 DUP3 AND SWAP2 AND PUSH2 0x6E8 DUP3 DUP3 DUP6 PUSH2 0x9AF JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6FA PUSH2 0x903 JUMP JUMPDEST ISZERO PUSH2 0x80F JUMPI PUSH1 0x0 SLOAD PUSH1 0x1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x18160DDD PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD PUSH2 0x807 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0x18160DDD SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x748 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x75C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x772 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x6 SLOAD PUSH1 0x1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x18160DDD PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD PUSH2 0x801 SWAP4 PUSH2 0x2710 SWAP4 PUSH2 0x7FB SWAP4 SWAP2 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 PUSH4 0x18160DDD SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x7C9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x7DD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x7F3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 PUSH2 0x973 JUMP JUMPDEST SWAP1 PUSH2 0x98A JUMP JUMPDEST SWAP1 PUSH2 0xAB0 JUMP JUMPDEST LT SWAP1 POP PUSH2 0x501 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x807 PUSH2 0x82C PUSH1 0x6 SLOAD PUSH1 0x7 SLOAD PUSH2 0xAC3 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH2 0x801 SWAP1 PUSH2 0x2710 PUSH2 0x98A JUMP JUMPDEST PUSH1 0x0 PUSH2 0x845 PUSH2 0x903 JUMP JUMPDEST ISZERO PUSH2 0x8D7 JUMPI PUSH1 0x0 SLOAD PUSH1 0x1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x18160DDD PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD PUSH2 0x8CE SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0x18160DDD SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x893 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x8A7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x8BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x7 SLOAD PUSH2 0x801 SWAP1 PUSH2 0x2710 PUSH2 0x98A JUMP JUMPDEST LT ISZERO SWAP1 POP PUSH2 0x501 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x8CE PUSH2 0x82C PUSH1 0x6 SLOAD PUSH1 0x7 SLOAD PUSH2 0xAC3 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x91B PUSH1 0x5 SLOAD TIMESTAMP PUSH2 0x973 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH3 0x4F1A00 LT ISZERO SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF DUP2 AND SWAP2 DUP6 SWAP2 DUP3 SWAP2 SWAP1 PUSH1 0xFF NOT AND PUSH1 0x1 DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x963 JUMPI INVALID JUMPDEST MUL OR SWAP1 SSTORE POP PUSH2 0x6E8 DUP3 DUP3 DUP7 PUSH2 0x9AF JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 GT ISZERO PUSH2 0x97F JUMPI INVALID JUMPDEST POP DUP1 DUP3 SUB JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x999 JUMPI POP PUSH1 0x0 PUSH2 0x984 JUMP JUMPDEST POP DUP2 DUP2 MUL DUP2 DUP4 DUP3 DUP2 PUSH2 0x9A7 JUMPI INVALID JUMPDEST DIV EQ PUSH2 0x984 JUMPI INVALID JUMPDEST DUP2 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x9BB JUMPI INVALID JUMPDEST DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x9C7 JUMPI INVALID JUMPDEST EQ PUSH2 0x6EB JUMPI PUSH1 0x2 DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x9DA JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0x9F5 JUMPI PUSH1 0x6 SLOAD PUSH2 0x9ED SWAP1 DUP3 PUSH2 0x973 JUMP JUMPDEST PUSH1 0x6 SSTORE PUSH2 0xA1A JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xA03 JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0xA1A JUMPI PUSH1 0x7 SLOAD PUSH2 0xA16 SWAP1 DUP3 PUSH2 0x973 JUMP JUMPDEST PUSH1 0x7 SSTORE JUMPDEST PUSH1 0x2 DUP3 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xA28 JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0xA43 JUMPI PUSH1 0x6 SLOAD PUSH2 0xA3B SWAP1 DUP3 PUSH2 0xAC3 JUMP JUMPDEST PUSH1 0x6 SSTORE PUSH2 0xA68 JUMP JUMPDEST PUSH1 0x1 DUP3 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xA51 JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0xA68 JUMPI PUSH1 0x7 SLOAD PUSH2 0xA64 SWAP1 DUP3 PUSH2 0xAC3 JUMP JUMPDEST PUSH1 0x7 SSTORE JUMPDEST PUSH32 0x8FCC50C2C4EDD06D51AE66E9E21ED76B32A1766C57F491788E1AA24A1B58C256 PUSH1 0x7 SLOAD PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 DUP2 PUSH2 0xABB JUMPI INVALID JUMPDEST DIV SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP2 DUP2 ADD DUP3 DUP2 LT ISZERO PUSH2 0x984 JUMPI INVALID INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SUB NOT DUP13 SWAP8 SMOD MSTORE8 PUSH29 0xE5959B3E8267A2B8A721CC26A72203A7D67CA0A492033FB5A264736F6C PUSH4 0x43000701 STOP CALLER GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220746F20746865207A65726F2061 PUSH5 0x6472657373 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH2 0x7070 PUSH19 0x6F766520746F20746865207A65726F20616464 PUSH19 0x6573734F6666657220776173206E6F74207375 PUSH7 0x66696369656E74 PUSH13 0x792066756E6465644173206C6F PUSH15 0x672061732074686520636F6E747261 PUSH4 0x74206973 KECCAK256 PUSH2 0x6374 PUSH10 0x76652C20796F75206172 PUSH6 0x20626F756E64 KECCAK256 PUSH21 0x6F206974596F7520617265206E6F7420617574686F PUSH19 0x697A656420746F2063616E63656C2074686973 KECCAK256 PUSH2 0x6371 PUSH22 0x69736974696F6E206F666665724E6577206F66666572 PUSH20 0x206D757374206265206174206C65617374203525 KECCAK256 PUSH9 0x696768657220746861 PUSH15 0x207468652070656E64696E67206F66 PUSH7 0x65725468657265 KECCAK256 PUSH10 0x73206E6F2070656E6469 PUSH15 0x67206F666665720000000000000045 MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH3 0x75726E KECCAK256 PUSH7 0x726F6D20746865 KECCAK256 PUSH27 0x65726F206164647265737345524332303A207472616E7366657220 PUSH7 0x726F6D20746865 KECCAK256 PUSH27 0x65726F20616464726573735468697320636F6E747261637420646F PUSH6 0x73206E6F7420 PUSH19 0x6570726573656E7420656E6F75676820657175 PUSH10 0x747945524332303A2061 PUSH17 0x70726F76652066726F6D20746865207A65 PUSH19 0x6F2061646472657373596F7520617265206E6F PUSH21 0x20617574686F72697A656420746F20636F6D706C65 PUSH21 0x652074686973206163717569736974696F6E206F66 PUSH7 0x6572596F75206E PUSH6 0x656420746F20 PUSH9 0x6F6C64206174206C65 PUSH2 0x7374 KECCAK256 CALLDATALOAD 0x25 KECCAK256 PUSH16 0x6620746865206669726D20746F206D61 PUSH12 0x6520616E206F66666572A264 PUSH10 0x70667358221220EBDF6E DUP14 0xC9 0xDF CALLVALUE 0xE3 SMOD MSTORE CODECOPY CALLVALUE 0xF7 MSTORE8 DUP12 0xAB 0xEC 0xDF 0xD SGT SDIV BLOCKHASH SWAP13 0xF8 0xED 0xC1 SWAP3 BYTE LOG4 STOP AND PUSH12 0x64736F6C6343000701003300 ",
                        "sourceMap": "3075:2048:2:-:0;;;3102:8:5;3073:37;;2729:1:4;2689:41;;;;3519:25;;;-1:-1:-1;;3519:25:4;;;;;;3324:351:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3324:351:2;;;;;;;;;;-1:-1:-1;3324:351:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3324:351:2;;;;;;;;;;;;;1746:8:3;:20;;-1:-1:-1;;1746:20:3;;;4402:7:4::1;:30:::0;;-1:-1:-1;;;;;4402:30:4;::::1;-1:-1:-1::0;;;;;;4402:30:4;;::::1;::::0;::::1;::::0;;;4443:19:::1;:64:::0;;;;::::1;4465:42;4443:64;::::0;;4536:15:::1;:40:::0;;;4587:17:::1;:38:::0;;;-1:-1:-1;;;4636:35:4;;;;3324:351:2;;-1:-1:-1;3324:351:2;-1:-1:-1;3324:351:2;;;;;;4402:30:4;-1:-1:-1;;4636:35:4::1;::::0;;::::1;::::0;;;;;;-1:-1:-1;4402:30:4;4636:35;::::1;;::::0;::::1;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;::::0;::::1;;-1:-1:-1::0;;3461:48:2::1;::::0;;-1:-1:-1;;;3461:48:2;;3503:5:::1;3461:48;::::0;::::1;::::0;;;;;-1:-1:-1;;;;;3461:41:2;::::1;::::0;-1:-1:-1;;;;3461:48:2;;;;;-1:-1:-1;3461:48:2;;;;;;;3503:5;3461:41;:48;::::1;;::::0;::::1;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;3520:14:2;;::::1;::::0;-1:-1:-1;3520:5:2::1;::::0;-1:-1:-1;3520:14:2::1;::::0;::::1;::::0;::::1;:::i;:::-;;3324:351:::0;;;3075:2048;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3075:2048:2;;;-1:-1:-1;3075:2048:2;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;"
                    },
                    "deployedBytecode": {
                        "immutableReferences": {},
                        "linkReferences": {},
                        "object": "60806040523480156200001157600080fd5b50600436106200033a5760003560e01c80636b03ed5f11620001c5578063a9059cbb11620000ff578063c6788bdd11620000b1578063de0e9a3e1162000087578063de0e9a3e14620009e1578063e1b8c38e1462000a24578063eb470ebf1462000a2e578063ec6580e21462000a57576200033a565b8063c6788bdd1462000940578063d502562514620009a6578063dd62ed3e14620009b0576200033a565b8063a9059cbb146200089b578063b40e80d114620008ca578063bb68947214620008f3578063bc1b1e7c14620008fd578063bf376c7a1462000907578063c028df061462000936576200033a565b806390cf581c11620001775780639e8a9a5a116200014d5780639e8a9a5a14620007b0578063a3ec188314620007ba578063a457c2d714620007e3578063a4c0ed361462000812576200033a565b806390cf581c146200077357806395d89b41146200077d5780639b56d6c91462000787576200033a565b80636b03ed5f14620006f95780636f4b18df146200070357806370a08231146200070d57806377e071ad14620007365780637dc2cd98146200075f5780638fd3ab801462000769576200033a565b8063313ce567116200029757806341c12a70116200024957806358047913116200021f5780635804791314620006b95780636091811714620006c35780636427ed9714620006cd5780636467c09a14620006ef576200033a565b806341c12a70146200066057806342966c68146200066a57806349b210b7146200068a576200033a565b8063313ce567146200052c57806332a7ae95146200054c5780633549788a146200057557806339509351146200057f5780633bcc45ba14620005ae5780634000aea014620005d7576200033a565b8063141c706811620002f1578063141c7068146200047b57806318160ddd14620004855780631e3b9de5146200048f57806323b872dd14620004b857806326773ddd14620004f15780632a0a4ed51462000522576200033a565b806302fb0c5e146200033f57806306fdde03146200035d5780630832e47014620003df578063095ea7b314620003fb5780630c6f0e5d146200042a5780630cd865ec1462000450575b600080fd5b6200034962000a61565b604080519115158252519081900360200190f35b6200036762000a6a565b6040805160208082528351818301528351919283929083019185019080838360005b83811015620003a357818101518382015260200162000389565b50505050905090810190601f168015620003d15780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b620003e962000c25565b60408051918252519081900360200190f35b62000349600480360360408110156200041357600080fd5b506001600160a01b03813516906020013562000c2b565b6200043462000c44565b604080516001600160a01b039092168252519081900360200190f35b62000479600480360360208110156200046857600080fd5b50356001600160a01b031662000c53565b005b6200047962000f37565b620003e962001378565b6200043460048036036020811015620004a757600080fd5b50356001600160a01b03166200137e565b6200034960048036036060811015620004d057600080fd5b506001600160a01b038135811691602081013590911690604001356200139f565b62000479600480360360408110156200050957600080fd5b506001600160a01b0381358116916020013516620013f6565b6200043462001721565b6200053662001799565b6040805160ff9092168252519081900360200190f35b62000479600480360360208110156200056457600080fd5b50356001600160a01b0316620017a2565b620003e962001a0a565b62000349600480360360408110156200059757600080fd5b506001600160a01b03813516906020013562001a10565b6200043460048036036020811015620005c657600080fd5b50356001600160a01b031662001a49565b6200034960048036036060811015620005ef57600080fd5b6001600160a01b0382351691602081013591810190606081016040820135600160201b8111156200061f57600080fd5b8201836020820111156200063257600080fd5b803590602001918460018302840111600160201b831117156200065457600080fd5b50909250905062001a6a565b6200047962001b31565b62000479600480360360208110156200068257600080fd5b503562001c0d565b6200047960048036036040811015620006a257600080fd5b50803590602001356001600160a01b031662001c7f565b62000434620021b5565b620003e9620021c4565b6200047960048036036020811015620006e557600080fd5b50351515620021ca565b62000434620021e9565b62000479620021f8565b620004796200235d565b620003e9600480360360208110156200072557600080fd5b50356001600160a01b031662002692565b620003e9600480360360208110156200074e57600080fd5b50356001600160a01b0316620026ad565b620003e962002762565b6200047962002768565b62000479620029fd565b6200036762002a76565b620003e9600480360360208110156200079f57600080fd5b50356001600160a01b031662002bee565b620003e962002c0c565b6200034960048036036020811015620007d257600080fd5b50356001600160a01b031662002c12565b6200034960048036036040811015620007fb57600080fd5b506001600160a01b03813516906020013562002c31565b62000479600480360360608110156200082a57600080fd5b6001600160a01b0382351691602081013591810190606081016040820135600160201b8111156200085a57600080fd5b8201836020820111156200086d57600080fd5b803590602001918460018302840111600160201b831117156200088f57600080fd5b50909250905062002c6a565b6200034960048036036040811015620008b357600080fd5b506001600160a01b03813516906020013562002c94565b6200034960048036036020811015620008e257600080fd5b50356001600160a01b031662002ca9565b6200043462002cbe565b6200034962002ccd565b62000479600480360360408110156200091f57600080fd5b506001600160a01b03813516906020013562002cea565b6200043462002e25565b62000969600480360360208110156200095857600080fd5b50356001600160a01b031662002e34565b60405180856001600160a01b03168152602001848152602001838152602001826001600160a01b0316815260200194505050505060405180910390f35b6200036762002e66565b620003e960048036036040811015620009c857600080fd5b506001600160a01b038135811691602001351662002ef8565b62000a0160048036036020811015620009f957600080fd5b503562002f23565b604080516001600160a01b03909316835260208301919091528051918290030190f35b6200047962003036565b620003e96004803603602081101562000a4657600080fd5b50356001600160a01b03166200318a565b62000349620031a8565b600f5460ff1681565b600954604080516306fdde0360e01b815290516060926001600160a01b0316916306fdde03916004808301926000929190829003018186803b15801562000ab057600080fd5b505afa15801562000ac5573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052602081101562000aef57600080fd5b8101908080516040519392919084600160201b82111562000b0f57600080fd5b90830190602082018581111562000b2557600080fd5b8251600160201b81118282018810171562000b3f57600080fd5b82525081516020918201929091019080838360005b8381101562000b6e57818101518382015260200162000b54565b50505050905090810190601f16801562000b9c5780820380516001836020036101000a031916815260200191505b506040525050506040516020018080690223930b3b3b0b13632960b51b815250600a0182805190602001908083835b6020831062000bec5780518252601f19909201916020918201910162000bcb565b6001836020036101000a038019825116818451168082178552505050505050905001915050604051602081830303815290604052905090565b600a5481565b600062000c3a338484620031ce565b5060015b92915050565b6007546001600160a01b031681565b62000c5d62003d6d565b506001600160a01b038082166000908152600560209081526040918290208251608081018452815485168152600182015492810183905260028201549381019390935260030154909216606082018190529091908162000cf5576040805162461bcd60e51b815260206004820152600e60248201526d139bc818db185a5b48199bdd5b9960921b604482015290519081900360640190fd5b82516001600160a01b0316331462000d54576040805162461bcd60e51b815260206004820152601f60248201527f4f6e6c7920636c61696d616e742063616e207265736f6c766520636c61696d00604482015290519081900360640190fd5b4262000d706004548560400151620032be90919063ffffffff16565b111562000dc4576040805162461bcd60e51b815260206004820152601960248201527f436c61696d20706572696f64206e6f74206f7665722079657400000000000000604482015290519081900360640190fd5b82516001600160a01b03808616600090815260056020908152604080832080546001600160a01b031990811682556001820185905560028201859055600390910180549091169055805163a9059cbb60e01b815284861660048201526024810188905290519386169363a9059cbb93604480840194938390030190829087803b15801562000e5157600080fd5b505af115801562000e66573d6000803e3d6000fd5b505050506040513d602081101562000e7d57600080fd5b505162000ece576040805162461bcd60e51b815260206004820152601a60248201527910dbdb1b185d195c985b081d1c985b9cd9995c8819985a5b195960321b604482015290519081900360640190fd5b62000ee5858262000edf8862002692565b620032cc565b806001600160a01b0316856001600160a01b03167f52a5c2b28bc6eb9712d0ced43463103b486b13ccc9cda499fd3b2d7b6a74a8ee856040518082815260200191505060405180910390a35050505050565b62000f4162002ccd565b801562000f505750600f5460ff165b62000f91576040805162461bcd60e51b8152602060048201526019602482015260008051602062004aae833981519152604482015290519081900360640190fd5b600b54604080516338a86c5760e11b815290516000926001600160a01b031691637150d8ae916004808301926020929190829003018186803b15801562000fd757600080fd5b505afa15801562000fec573d6000803e3d6000fd5b505050506040513d60208110156200100357600080fd5b50519050336001600160a01b03821614620010505760405162461bcd60e51b815260040180806020018281038252603981526020018062004b666039913960400191505060405180910390fd5b600b60009054906101000a90046001600160a01b03166001600160a01b031663d7be4e296040518163ffffffff1660e01b815260040160206040518083038186803b1580156200109f57600080fd5b505afa158015620010b4573d6000803e3d6000fd5b505050506040513d6020811015620010cb57600080fd5b50516200111f576040805162461bcd60e51b815260206004820181905260248201527f496e73756666696369656e74206e756d626572206f662079657320766f746573604482015290519081900360640190fd5b600b546001600160a01b031663b28fa1526200113b8362002692565b6200114562001378565b036040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b1580156200117b57600080fd5b505afa15801562001190573d6000803e3d6000fd5b505050506040513d6020811015620011a757600080fd5b5051620011fb576040805162461bcd60e51b815260206004820152601b60248201527f4f6666657220696e73756666696369656e746c792066756e6465640000000000604482015290519081900360640190fd5b620012f781600b60009054906101000a90046001600160a01b03166001600160a01b031663e5a6b10f6040518163ffffffff1660e01b815260040160206040518083038186803b1580156200124f57600080fd5b505afa15801562001264573d6000803e3d6000fd5b505050506040513d60208110156200127b57600080fd5b5051600b546040805163501ad8ff60e11b815290516001600160a01b039092169163a035b1fe91600480820192602092909190829003018186803b158015620012c357600080fd5b505afa158015620012d8573d6000803e3d6000fd5b505050506040513d6020811015620012ef57600080fd5b5051620032de565b600b5460408051338152600160208201526001600160a01b039283166060820152608081830181905260169082015275436f6d706c65746564207375636365737366756c6c7960501b60a08201529051918316917fc88f58ae9feb0742d9422f604dd3c1be6d02818f8dec340c5061f428b554e9759181900360c00190a250565b60025490565b6001600160a01b03808216600090815260056020526040902054165b919050565b6000620013ae848484620032cc565b6001600160a01b038416600090815260016020908152604080832033808552925290912054620013ec918691620013e6908662003505565b620031ce565b5060019392505050565b620014018162002c12565b62001453576040805162461bcd60e51b815260206004820181905260248201527f436c61696d732064697361626c656420666f7220746869732061646472657373604482015290519081900360640190fd5b60006200146083620026ad565b905060008111620014b1576040805162461bcd60e51b8152602060048201526016602482015275155b9cdd5c1c1bdc9d19590818dbdb1b185d195c985b60521b604482015290519081900360640190fd5b336000620014bf8462002692565b90506000620014cf828562003518565b9050858262001525576040805162461bcd60e51b815260206004820152601f60248201527f436c61696d6564206164647265737320686f6c6473206e6f2073686172657300604482015290519081900360640190fd5b6001600160a01b0386166000908152600560205260409020600101541562001594576040805162461bcd60e51b815260206004820152601760248201527f4164647265737320616c726561647920636c61696d6564000000000000000000604482015290519081900360640190fd5b604080516323b872dd60e01b81526001600160a01b038681166004830152306024830152604482018590529151918316916323b872dd916064808201926020929091908290030181600087803b158015620015ee57600080fd5b505af115801562001603573d6000803e3d6000fd5b505050506040513d60208110156200161a57600080fd5b50516200166b576040805162461bcd60e51b815260206004820152601a60248201527910dbdb1b185d195c985b081d1c985b9cd9995c8819985a5b195960321b604482015290519081900360640190fd5b604080516080810182526001600160a01b038087168083526020808401878152428587019081528d8516606087019081528d8616600081815260058652899020975188549088166001600160a01b0319918216178955935160018901559151600288015551600390960180549690951695909116949094179092558351878152935190937f1982ca8958fc8a8176cb52be509260f4bc5af7ce04e1533711793f1c56dd535992908290030190a350505050505050565b60006200172d620021b5565b6001600160a01b0316632a0a4ed56040518163ffffffff1660e01b815260040160206040518083038186803b1580156200176657600080fd5b505afa1580156200177b573d6000803e3d6000fd5b505050506040513d60208110156200179257600080fd5b5051905090565b60035460ff1681565b620017ac62001721565b6001600160a01b0316336001600160a01b03161462001812576040805162461bcd60e51b815260206004820152601860248201527f596f752063616e6e6f742064656c65746520636c61696d730000000000000000604482015290519081900360640190fd5b6200181c62003d6d565b506001600160a01b038082166000908152600560209081526040918290208251608081018452815485168152600182015492810183905260028201549381019390935260030154909216606082018190529091620018b2576040805162461bcd60e51b815260206004820152600e60248201526d139bc818db185a5b48199bdd5b9960921b604482015290519081900360640190fd5b6001600160a01b03808416600090815260056020908152604080832080546001600160a01b031990811682556001820185905560028201859055600390910180549091169055855186830151825163a9059cbb60e01b81529186166004830152602482015290519385169363a9059cbb93604480840194938390030190829087803b1580156200194157600080fd5b505af115801562001956573d6000803e3d6000fd5b505050506040513d60208110156200196d57600080fd5b5051620019be576040805162461bcd60e51b815260206004820152601a60248201527910dbdb1b185d195c985b081d1c985b9cd9995c8819985a5b195960321b604482015290519081900360640190fd5b815160208084015160408051918252516001600160a01b03938416938716927fbb036e629a9f4c0897ee5d48440dfdb36f7e772117723a2ed603a6514244c2d5928290030190a3505050565b600e5481565b3360008181526001602090815260408083206001600160a01b0387168452909152812054909162000c3a918590620013e69086620032be565b6001600160a01b039081166000908152600560205260409020600301541690565b60008062001a79868662002c94565b9050801562001b2857856001600160a01b031663a4c0ed36338787876040518563ffffffff1660e01b815260040180856001600160a01b03168152602001848152602001806020018281038252848482818152602001925080828437600081840152601f19601f82011690508083019250505095505050505050600060405180830381600087803b15801562001b0e57600080fd5b505af115801562001b23573d6000803e3d6000fd5b505050505b95945050505050565b62001b3b62002ccd565b801562001b4a5750600f5460ff165b62001b8b576040805162461bcd60e51b8152602060048201526019602482015260008051602062004aae833981519152604482015290519081900360640190fd5b600b5433906001600160a01b0316634b91562e8262001baa8162002692565b6040518363ffffffff1660e01b815260040180836001600160a01b0316815260200182815260200192505050600060405180830381600087803b15801562001bf157600080fd5b505af115801562001c06573d6000803e3d6000fd5b5050505050565b62001c19338262003541565b62001c23620021b5565b6001600160a01b03166342966c6862001c48600a54846200351890919063ffffffff16565b6040518263ffffffff1660e01b815260040180828152602001915050600060405180830381600087803b15801562001bf157600080fd5b600f5460ff1662001cd7576040805162461bcd60e51b815260206004820152601860248201527f416e206163636570746564206f66666572206578697374730000000000000000604482015290519081900360640190fd5b600062001ce3620021b5565b6001600160a01b0316633a98ef396040518163ffffffff1660e01b8152600401602060405180830381600087803b15801562001d1e57600080fd5b505af115801562001d33573d6000803e3d6000fd5b505050506040513d602081101562001d4a57600080fd5b505190503362001d6b61271062001d6484610bb862003518565b906200354d565b62001d7562001378565b101562001db45760405162461bcd60e51b815260040180806020018281038252602e81526020018062004b14602e913960400191505060405180910390fd5b62001dc961271062001d64846101f462003518565b62001dd48262002692565b101562001e135760405162461bcd60e51b815260040180806020018281038252603981526020018062004b9f6039913960400191505060405180910390fd5b600c546040516001600160a01b0390911690600090670de0b6b3a76400009082818181858883f1935050505015801562001e51573d6000803e3d6000fd5b506000338486600e5460405162001e689062003da7565b80856001600160a01b03168152602001846001600160a01b03168152602001838152602001828152602001945050505050604051809103906000f08015801562001eb6573d6000803e3d6000fd5b509050806001600160a01b031663b28fa15262001ed38462002692565b62001edd62001378565b036040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b15801562001f1357600080fd5b505afa15801562001f28573d6000803e3d6000fd5b505050506040513d602081101562001f3f57600080fd5b505162001f8a576040805162461bcd60e51b8152602060048201526014602482015273496e73756666696369656e742066756e64696e6760601b604482015290519081900360640190fd5b62001f9462002ccd565b156200214057600b60009054906101000a90046001600160a01b03166001600160a01b031663e5a6b10f6040518163ffffffff1660e01b815260040160206040518083038186803b15801562001fe957600080fd5b505afa15801562001ffe573d6000803e3d6000fd5b505050506040513d60208110156200201557600080fd5b50516001600160a01b038581169116148015620020c35750620020bf61271062001d64612904600b60009054906101000a90046001600160a01b03166001600160a01b031663a035b1fe6040518163ffffffff1660e01b815260040160206040518083038186803b1580156200208a57600080fd5b505afa1580156200209f573d6000803e3d6000fd5b505050506040513d6020811015620020b657600080fd5b50519062003518565b8510155b620021005760405162461bcd60e51b815260040180806020018281038252603c81526020018062004a72603c913960400191505060405180910390fd5b620021406040518060400160405280601c81526020017f4f66666572207265706c6163656420627920686967686572206269640000000081525062003561565b600b80546001600160a01b0319166001600160a01b038381169190911790915582167f9c00f159b1fa9eaebda7acaf50be0bf3a652277380f907b35cb681bd641a62d3866200218e620021e9565b604080519283526001600160a01b0390911660208301528051918290030190a25050505050565b6009546001600160a01b031690565b60085481565b336000908152600660205260409020805460ff19169115919091179055565b600b546001600160a01b031690565b33600090815260056020526040902060010154156200235b5733600081815260056020908152604080832060018101805460038301805484546001600160a01b03199081168655938890556002909401879055918316909155825163a9059cbb60e01b8152600481019690965260248601819052915191946001600160a01b0390911693849363a9059cbb93604480850194929391928390030190829087803b158015620022a557600080fd5b505af1158015620022ba573d6000803e3d6000fd5b505050506040513d6020811015620022d157600080fd5b505162002322576040805162461bcd60e51b815260206004820152601a60248201527910dbdb1b185d195c985b081d1c985b9cd9995c8819985a5b195960321b604482015290519081900360640190fd5b60408051838152905133917f203627483d943880619f4b7e0cca21dbefd6204b4d85b124eb99540e17ba86dd919081900360200190a250505b565b6200236762002ccd565b8015620023765750600f5460ff165b620023b7576040805162461bcd60e51b8152602060048201526019602482015260008051602062004aae833981519152604482015290519081900360640190fd5b600b60009054906101000a90046001600160a01b03166001600160a01b03166390e64d136040518163ffffffff1660e01b815260040160206040518083038186803b1580156200240657600080fd5b505afa1580156200241b573d6000803e3d6000fd5b505050506040513d60208110156200243257600080fd5b50511562002470576200246a6040518060400160405280600d81526020016c13d999995c88195e1c1a5c9959609a1b81525062003561565b6200235b565b600b60009054906101000a90046001600160a01b03166001600160a01b031663cf42a9276040518163ffffffff1660e01b815260040160206040518083038186803b158015620024bf57600080fd5b505afa158015620024d4573d6000803e3d6000fd5b505050506040513d6020811015620024eb57600080fd5b50511562002528576200246a60405180604001604052806012815260200171139bdd08195b9bdd59da081cdd5c1c1bdc9d60721b81525062003561565b600b54604080516338a86c5760e11b815290516001600160a01b039092169163b28fa15291620025ae918491637150d8ae916004808301926020929190829003018186803b1580156200257a57600080fd5b505afa1580156200258f573d6000803e3d6000fd5b505050506040513d6020811015620025a657600080fd5b505162002692565b620025b862001378565b036040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b158015620025ee57600080fd5b505afa15801562002603573d6000803e3d6000fd5b505050506040513d60208110156200261a57600080fd5b505162002645576200246a604051806060016040528060218152602001620049e46021913962003561565b6040805162461bcd60e51b815260206004820181905260248201527f4163717569736974696f6e20636f6e7465737420756e7375636365737366756c604482015290519081900360640190fd5b6001600160a01b031660009081526020819052604090205490565b600080620026bb8362003731565b90508015620026cc5790506200139a565b620026d6620021b5565b6001600160a01b0316836001600160a01b03161415620026fb575050600a546200139a565b62002759600a546200270c620021b5565b6001600160a01b03166377e071ad866040518263ffffffff1660e01b815260040180826001600160a01b0316815260200191505060206040518083038186803b1580156200208a57600080fd5b9150506200139a565b60045481565b600f5460ff16620027b9576040805162461bcd60e51b8152602060048201526016602482015275436f6e7472616374206973206e6f742061637469766560501b604482015290519081900360640190fd5b6000339050620027dd61271062001d64600d54620027d662001378565b9062003518565b620027e88262002692565b101562002831576040805162461bcd60e51b8152602060048201526012602482015271145d5bdc9d5b481b9bdd081c995858da195960721b604482015290519081900360640190fd5b6200283b62002ccd565b15620029b057600b60009054906101000a90046001600160a01b03166001600160a01b031663cf42a9276040518163ffffffff1660e01b815260040160206040518083038186803b1580156200289057600080fd5b505afa158015620028a5573d6000803e3d6000fd5b505050506040513d6020811015620028bc57600080fd5b50516200299457620028cd62001b31565b600b60009054906101000a90046001600160a01b03166001600160a01b031663cf42a9276040518163ffffffff1660e01b815260040160206040518083038186803b1580156200291c57600080fd5b505afa15801562002931573d6000803e3d6000fd5b505050506040513d60208110156200294857600080fd5b505162002994576040805162461bcd60e51b8152602060048201526015602482015274145d5bdc9d5b481a185cc81b9bdd0819985a5b1959605a1b604482015290519081900360640190fd5b6200299e6200235d565b620029a862002ccd565b15620029b057fe5b620029be81826001620032de565b604080516001600160a01b038316815290517f3b6b79a09e9fd230e8591b65c97236bf7df7a604edf733db0658e66b0e6eb2a99181900360200190a150565b62002a0762002ccd565b801562002a165750600f5460ff165b62002a57576040805162461bcd60e51b8152602060048201526019602482015260008051602062004aae833981519152604482015290519081900360640190fd5b600b5433906001600160a01b0316635ff0cf848262001baa8162002692565b600954604080516395d89b4160e01b815290516060926001600160a01b0316916395d89b41916004808301926000929190829003018186803b15801562002abc57600080fd5b505afa15801562002ad1573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052602081101562002afb57600080fd5b8101908080516040519392919084600160201b82111562002b1b57600080fd5b90830190602082018581111562002b3157600080fd5b8251600160201b81118282018810171562002b4b57600080fd5b82525081516020918201929091019080838360005b8381101562002b7a57818101518382015260200162002b60565b50505050905090810190601f16801562002ba85780820380516001836020036101000a031916815260200191505b506040525050506040516020018080601160fa1b81525060010182805190602001908083836020831062000bec5780518252601f19909201916020918201910162000bcb565b6001600160a01b031660009081526005602052604090206001015490565b600d5481565b6001600160a01b031660009081526006602052604090205460ff161590565b3360008181526001602090815260408083206001600160a01b0387168452909152812054909162000c3a918590620013e6908662003505565b6009546001600160a01b0316331462002c8257600080fd5b62002c8e848462003778565b50505050565b600062002ca2838362003834565b9392505050565b60066020526000908152604090205460ff1681565b600c546001600160a01b031681565b60008062002cda620021e9565b6001600160a01b03161415905090565b62002cf462002ccd565b1562002d42576040805162461bcd60e51b81526020600482015260186024820152772a3432b9329034b99030903832b73234b7339037b33332b960411b604482015290519081900360640190fd5b600954604080516323b872dd60e01b81523360048201523060248201526044810184905290516001600160a01b03909216916323b872dd916064808201926020929091908290030181600087803b15801562002d9d57600080fd5b505af115801562002db2573d6000803e3d6000fd5b505050506040513d602081101562002dc957600080fd5b505162002e15576040805162461bcd60e51b815260206004820152601560248201527414da185c99481d1c985b9cd9995c8819985a5b1959605a1b604482015290519081900360640190fd5b62002e21828262003778565b5050565b600b546001600160a01b031681565b60056020526000908152604090208054600182015460028301546003909301546001600160a01b039283169391921684565b6010805460408051602060026001851615610100026000190190941693909304601f8101849004840282018401909252818152929183018282801562002ef05780601f1062002ec45761010080835404028352916020019162002ef0565b820191906000526020600020905b81548152906001019060200180831162002ed257829003601f168201915b505050505081565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b600f54600090819060ff161562002f6c5760405162461bcd60e51b815260040180806020018281038252603681526020018062004a056036913960400191505060405180910390fd5b62002f78338462003541565b600062002f91600a54856200351890919063ffffffff16565b6009546040805163a9059cbb60e01b81523360048201526024810184905290519293506001600160a01b039091169163a9059cbb916044808201926020929091908290030181600087803b15801562002fe957600080fd5b505af115801562002ffe573d6000803e3d6000fd5b505050506040513d60208110156200301557600080fd5b50516200302157600080fd5b6009546001600160a01b031692509050915091565b6200304062002ccd565b80156200304f5750600f5460ff165b62003090576040805162461bcd60e51b8152602060048201526019602482015260008051602062004aae833981519152604482015290519081900360640190fd5b600b60009054906101000a90046001600160a01b03166001600160a01b0316637150d8ae6040518163ffffffff1660e01b815260040160206040518083038186803b158015620030df57600080fd5b505afa158015620030f4573d6000803e3d6000fd5b505050506040513d60208110156200310b57600080fd5b50516001600160a01b03163314620031555760405162461bcd60e51b815260040180806020018281038252603781526020018062004a3b6037913960400191505060405180910390fd5b6200235b6040518060400160405280601281526020017121b0b731b2b63632b210313c90313abcb2b960711b81525062003561565b6001600160a01b031660009081526005602052604090206002015490565b6000620031b462002ccd565b620031c1576000620031c9565b600f5460ff16155b905090565b6001600160a01b038316620032155760405162461bcd60e51b815260040180806020018281038252602481526020018062004b426024913960400191505060405180910390fd5b6001600160a01b0382166200325c5760405162461bcd60e51b8152600401808060200182810382526022815260200180620049c26022913960400191505060405180910390fd5b6001600160a01b03808416600081815260016020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b8181018281101562000c3e57fe5b620032d983838362003890565b505050565b6000620032eb8462002692565b90506000620032f962001378565b600f805460ff191690559050620033108262002f23565b506000905062003321828462003505565b6009546040805163a9059cbb60e01b81526001600160a01b038a8116600483015260248201859052915193945091169163a9059cbb916044808201926020929091908290030181600087803b1580156200337a57600080fd5b505af11580156200338f573d6000803e3d6000fd5b505050506040513d6020811015620033a657600080fd5b5051620033ec576040805162461bcd60e51b815260206004820152600f60248201526e1d1c985b9cd9995c8819985a5b1959608a1b604482015290519081900360640190fd5b600980546001600160a01b0319166001600160a01b038781169190911791829055600a869055166323b872dd873062003426888662003518565b6040518463ffffffff1660e01b815260040180846001600160a01b03168152602001836001600160a01b031681526020018281526020019350505050602060405180830381600087803b1580156200347d57600080fd5b505af115801562003492573d6000803e3d6000fd5b505050506040513d6020811015620034a957600080fd5b5051620034fd576040805162461bcd60e51b815260206004820152601760248201527f4261636b696e67207472616e73666572206661696c6564000000000000000000604482015290519081900360640190fd5b505050505050565b6000828211156200351257fe5b50900390565b600082620035295750600062000c3e565b50818102818382816200353857fe5b041462000c3e57fe5b62002e21828262003938565b60008183816200355957fe5b049392505050565b600b54604080516338a86c5760e11b815290516000926001600160a01b031691637150d8ae916004808301926020929190829003018186803b158015620035a757600080fd5b505afa158015620035bc573d6000803e3d6000fd5b505050506040513d6020811015620035d357600080fd5b505190506001600160a01b0381167fc88f58ae9feb0742d9422f604dd3c1be6d02818f8dec340c5061f428b554e9753360008562003610620021e9565b60405180856001600160a01b03168152602001841515815260200180602001836001600160a01b03168152602001828103825284818151815260200191508051906020019080838360005b83811015620036755781810151838201526020016200365b565b50505050905090810190601f168015620036a35780820380516001836020036101000a031916815260200191505b509550505050505060405180910390a2600b60009054906101000a90046001600160a01b03166001600160a01b03166341c0e1b56040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156200370457600080fd5b505af115801562003719573d6000803e3d6000fd5b5050600b80546001600160a01b031916905550505050565b60006001600160a01b0382163014156200374e575060016200139a565b6007546001600160a01b03838116911614156200376f57506008546200139a565b5060006200139a565b6200378262002ccd565b15620037d0576040805162461bcd60e51b81526020600482015260186024820152772a3432b9329034b99030903832b73234b7339037b33332b960411b604482015290519081900360640190fd5b600f5460ff1662003828576040805162461bcd60e51b815260206004820152601d60248201527f436f6e7472616374206e6f742061637469766520616e79206d6f72652e000000604482015290519081900360640190fd5b62002e218282620039d3565b6000620038428383620039df565b62003886576040805162461bcd60e51b815260206004820152600f60248201526e151c985b9cd9995c8819985a5b1959608a1b604482015290519081900360640190fd5b62000c3a620021f8565b6200389d838383620039ee565b620038a762002ccd565b8015620038b65750600f5460ff165b15620032d957600b5460408051636240a7d760e11b81526001600160a01b0386811660048301528581166024830152604482018590529151919092169163c4814fae91606480830192600092919082900301818387803b1580156200391a57600080fd5b505af11580156200392f573d6000803e3d6000fd5b50505050505050565b62003944828262003b2c565b6200394e62002ccd565b80156200395d5750600f5460ff165b1562002e2157600b5460408051636240a7d760e11b81526001600160a01b03858116600483015260006024830181905260448301869052925193169263c4814fae9260648084019391929182900301818387803b158015620039be57600080fd5b505af1158015620034fd573d6000803e3d6000fd5b62002e21828262003bff565b600062000c3a338484620032cc565b6001600160a01b03831662003a355760405162461bcd60e51b815260040180806020018281038252602581526020018062004aef6025913960400191505060405180910390fd5b6001600160a01b03821662003a7c5760405162461bcd60e51b81526004018080602001828103825260238152602001806200499f6023913960400191505060405180910390fd5b6001600160a01b03831660009081526020819052604090205462003aa1908262003505565b6001600160a01b03808516600090815260208190526040808220939093559084168152205462003ad29082620032be565b6001600160a01b038084166000818152602081815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b6001600160a01b03821662003b735760405162461bcd60e51b815260040180806020018281038252602181526020018062004ace6021913960400191505060405180910390fd5b60025462003b82908262003505565b6002556001600160a01b03821660009081526020819052604090205462003baa908262003505565b6001600160a01b038316600081815260208181526040808320949094558351858152935191937fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef929081900390910190a35050565b62003c0b828262003c84565b62003c1562002ccd565b801562003c245750600f5460ff165b1562002e2157600b5460408051636240a7d760e11b81526000600482018190526001600160a01b038681166024840152604483018690529251929093169263c4814fae9260648084019382900301818387803b158015620039be57600080fd5b6001600160a01b03821662003ce0576040805162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015290519081900360640190fd5b60025462003cef9082620032be565b6002556001600160a01b03821660009081526020819052604090205462003d179082620032be565b6001600160a01b0383166000818152602081815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050565b604051806080016040528060006001600160a01b03168152602001600081526020016000815260200160006001600160a01b031681525090565b610be98062003db68339019056fe608060405234801561001057600080fd5b50604051610be9380380610be98339818101604052608081101561003357600080fd5b50805160208201516040830151606090930151919290918161008c576040805162461bcd60e51b815260206004820152600d60248201526c696e76616c696420707269636560981b604482015290519081900360640190fd5b600180546001600160a01b03199081163317909155600280546001600160a01b03968716908316179055600380549490951693169290921790925560049190915560005542600555610b06806100e36000396000f3fe608060405234801561001057600080fd5b506004361061012c5760003560e01c8063b1610d7e116100ad578063cf42a92711610071578063cf42a927146102b4578063d7be4e29146102bc578063e5a6b10f146102c4578063fa7f1bae146102cc578063fb286c65146102d45761012c565b8063b1610d7e14610249578063b28fa15214610251578063b5b47f421461026e578063b80777ea14610276578063c4814fae1461027e5761012c565b80635ff0cf84116100f45780635ff0cf84146101c35780637150d8ae146101ef5780638f1b4c6f1461021357806390e64d1314610239578063a035b1fe146102415761012c565b80630c43cd88146101315780631703a0181461014b57806341c0e1b514610153578063448ab4c61461015d5780634b91562e14610197575b600080fd5b6101396102dc565b60408051918252519081900360200190f35b6101396102e3565b61015b6102e9565b005b6101836004803603602081101561017357600080fd5b50356001600160a01b0316610343565b604080519115158252519081900360200190f35b61015b600480360360408110156101ad57600080fd5b506001600160a01b038135169060200135610376565b61015b600480360360408110156101d957600080fd5b506001600160a01b038135169060200135610421565b6101f76104c8565b604080516001600160a01b039092168252519081900360200190f35b6101836004803603602081101561022957600080fd5b50356001600160a01b03166104d7565b6101836104e0565b610139610504565b61013961050a565b6101836004803603602081101561026757600080fd5b5035610511565b61013961064e565b610139610654565b61015b6004803603606081101561029457600080fd5b506001600160a01b0381358116916020810135909116906040013561065a565b6101836106f0565b61018361083b565b6101f76108f4565b610183610903565b610139610927565b6276a70081565b60005481565b6001546001600160a01b03163314610335576040805162461bcd60e51b815260206004820152600a6024820152691b9bdd081c185c995b9d60b21b604482015290519081900360640190fd5b6002546001600160a01b0316ff5b600060015b6001600160a01b03831660009081526008602052604090205460ff16600281111561036f57fe5b1492915050565b6001546001600160a01b031633146103c2576040805162461bcd60e51b815260206004820152600a6024820152691b9bdd081c185c995b9d60b21b604482015290519081900360640190fd5b6103ca610903565b610411576040805162461bcd60e51b81526020600482015260136024820152722a3432903b37ba32903430b99032b73232b21760691b604482015290519081900360640190fd5b61041d6002828461092d565b5050565b6001546001600160a01b0316331461046d576040805162461bcd60e51b815260206004820152600a6024820152691b9bdd081c185c995b9d60b21b604482015290519081900360640190fd5b610475610903565b6104bc576040805162461bcd60e51b81526020600482015260136024820152722a3432903b37ba32903430b99032b73232b21760691b604482015290519081900360640190fd5b61041d6001828461092d565b6002546001600160a01b031681565b60006002610348565b6000806104f86005544261097390919063ffffffff16565b6276a700109150505b90565b60045481565b624f1a0081565b600354600254604080516370a0823160e01b81526001600160a01b03928316600482015290516000939290921691839183916370a0823191602480820192602092909190829003018186803b15801561056957600080fd5b505afa15801561057d573d6000803e3d6000fd5b505050506040513d602081101561059357600080fd5b505160025460015460408051636eb1769f60e11b81526001600160a01b0393841660048201529183166024830152519293506000929185169163dd62ed3e91604480820192602092909190829003018186803b1580156105f257600080fd5b505afa158015610606573d6000803e3d6000fd5b505050506040513d602081101561061c57600080fd5b505160045490915060009061063290879061098a565b90508281111580156106445750818111155b9695505050505050565b60065481565b60055481565b6001546001600160a01b031633146106a6576040805162461bcd60e51b815260206004820152600a6024820152691b9bdd081c185c995b9d60b21b604482015290519081900360640190fd5b6106ae610903565b156106eb576001600160a01b0380841660009081526008602052604080822054928516825290205460ff91821691166106e88282856109af565b50505b505050565b60006106fa610903565b1561080f57600054600154604080516318160ddd60e01b81529051610807926001600160a01b0316916318160ddd916004808301926020929190829003018186803b15801561074857600080fd5b505afa15801561075c573d6000803e3d6000fd5b505050506040513d602081101561077257600080fd5b5051600654600154604080516318160ddd60e01b8152905161080193612710936107fb9391926001600160a01b03909116916318160ddd916004808301926020929190829003018186803b1580156107c957600080fd5b505afa1580156107dd573d6000803e3d6000fd5b505050506040513d60208110156107f357600080fd5b505190610973565b9061098a565b90610ab0565b109050610501565b60005461080761082c600654600754610ac390919063ffffffff16565b6007546108019061271061098a565b6000610845610903565b156108d757600054600154604080516318160ddd60e01b815290516108ce926001600160a01b0316916318160ddd916004808301926020929190829003018186803b15801561089357600080fd5b505afa1580156108a7573d6000803e3d6000fd5b505050506040513d60208110156108bd57600080fd5b50516007546108019061271061098a565b10159050610501565b6000546108ce61082c600654600754610ac390919063ffffffff16565b6003546001600160a01b031681565b60008061091b6005544261097390919063ffffffff16565b624f1a00101591505090565b60075481565b6001600160a01b0381166000908152600860205260409020805460ff811691859182919060ff1916600183600281111561096357fe5b02179055506106e88282866109af565b60008282111561097f57fe5b508082035b92915050565b60008261099957506000610984565b50818102818382816109a757fe5b041461098457fe5b8160028111156109bb57fe5b8360028111156109c757fe5b146106eb5760028360028111156109da57fe5b14156109f5576006546109ed9082610973565b600655610a1a565b6001836002811115610a0357fe5b1415610a1a57600754610a169082610973565b6007555b6002826002811115610a2857fe5b1415610a4357600654610a3b9082610ac3565b600655610a68565b6001826002811115610a5157fe5b1415610a6857600754610a649082610ac3565b6007555b7f8fcc50c2c4edd06d51ae66e9e21ed76b32a1766c57f491788e1aa24a1b58c256600754600654604051808381526020018281526020019250505060405180910390a1505050565b6000818381610abb57fe5b049392505050565b8181018281101561098457fefea264697066735822122003198c9707537ce5959b3e8267a2b8a721cc26a72203a7d67ca0a492033fb5a264736f6c6343000701003345524332303a207472616e7366657220746f20746865207a65726f206164647265737345524332303a20617070726f766520746f20746865207a65726f20616464726573734f6666657220776173206e6f742073756666696369656e746c792066756e6465644173206c6f6e672061732074686520636f6e7472616374206973206163746976652c20796f752061726520626f756e6420746f206974596f7520617265206e6f7420617574686f72697a656420746f2063616e63656c2074686973206163717569736974696f6e206f666665724e6577206f6666657273206d757374206265206174206c6561737420352520686967686572207468616e207468652070656e64696e67206f666665725468657265206973206e6f2070656e64696e67206f666665720000000000000045524332303a206275726e2066726f6d20746865207a65726f206164647265737345524332303a207472616e736665722066726f6d20746865207a65726f20616464726573735468697320636f6e747261637420646f6573206e6f7420726570726573656e7420656e6f7567682065717569747945524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373596f7520617265206e6f7420617574686f72697a656420746f20636f6d706c6574652074686973206163717569736974696f6e206f66666572596f75206e65656420746f20686f6c64206174206c65617374203525206f6620746865206669726d20746f206d616b6520616e206f66666572a2646970667358221220ebdf6e8dc9df34e307523934f7538babecdf0d1305409cf8edc1921aa400166b64736f6c63430007010033",
                        "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH3 0x33A JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6B03ED5F GT PUSH3 0x1C5 JUMPI DUP1 PUSH4 0xA9059CBB GT PUSH3 0xFF JUMPI DUP1 PUSH4 0xC6788BDD GT PUSH3 0xB1 JUMPI DUP1 PUSH4 0xDE0E9A3E GT PUSH3 0x87 JUMPI DUP1 PUSH4 0xDE0E9A3E EQ PUSH3 0x9E1 JUMPI DUP1 PUSH4 0xE1B8C38E EQ PUSH3 0xA24 JUMPI DUP1 PUSH4 0xEB470EBF EQ PUSH3 0xA2E JUMPI DUP1 PUSH4 0xEC6580E2 EQ PUSH3 0xA57 JUMPI PUSH3 0x33A JUMP JUMPDEST DUP1 PUSH4 0xC6788BDD EQ PUSH3 0x940 JUMPI DUP1 PUSH4 0xD5025625 EQ PUSH3 0x9A6 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH3 0x9B0 JUMPI PUSH3 0x33A JUMP JUMPDEST DUP1 PUSH4 0xA9059CBB EQ PUSH3 0x89B JUMPI DUP1 PUSH4 0xB40E80D1 EQ PUSH3 0x8CA JUMPI DUP1 PUSH4 0xBB689472 EQ PUSH3 0x8F3 JUMPI DUP1 PUSH4 0xBC1B1E7C EQ PUSH3 0x8FD JUMPI DUP1 PUSH4 0xBF376C7A EQ PUSH3 0x907 JUMPI DUP1 PUSH4 0xC028DF06 EQ PUSH3 0x936 JUMPI PUSH3 0x33A JUMP JUMPDEST DUP1 PUSH4 0x90CF581C GT PUSH3 0x177 JUMPI DUP1 PUSH4 0x9E8A9A5A GT PUSH3 0x14D JUMPI DUP1 PUSH4 0x9E8A9A5A EQ PUSH3 0x7B0 JUMPI DUP1 PUSH4 0xA3EC1883 EQ PUSH3 0x7BA JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH3 0x7E3 JUMPI DUP1 PUSH4 0xA4C0ED36 EQ PUSH3 0x812 JUMPI PUSH3 0x33A JUMP JUMPDEST DUP1 PUSH4 0x90CF581C EQ PUSH3 0x773 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH3 0x77D JUMPI DUP1 PUSH4 0x9B56D6C9 EQ PUSH3 0x787 JUMPI PUSH3 0x33A JUMP JUMPDEST DUP1 PUSH4 0x6B03ED5F EQ PUSH3 0x6F9 JUMPI DUP1 PUSH4 0x6F4B18DF EQ PUSH3 0x703 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH3 0x70D JUMPI DUP1 PUSH4 0x77E071AD EQ PUSH3 0x736 JUMPI DUP1 PUSH4 0x7DC2CD98 EQ PUSH3 0x75F JUMPI DUP1 PUSH4 0x8FD3AB80 EQ PUSH3 0x769 JUMPI PUSH3 0x33A JUMP JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH3 0x297 JUMPI DUP1 PUSH4 0x41C12A70 GT PUSH3 0x249 JUMPI DUP1 PUSH4 0x58047913 GT PUSH3 0x21F JUMPI DUP1 PUSH4 0x58047913 EQ PUSH3 0x6B9 JUMPI DUP1 PUSH4 0x60918117 EQ PUSH3 0x6C3 JUMPI DUP1 PUSH4 0x6427ED97 EQ PUSH3 0x6CD JUMPI DUP1 PUSH4 0x6467C09A EQ PUSH3 0x6EF JUMPI PUSH3 0x33A JUMP JUMPDEST DUP1 PUSH4 0x41C12A70 EQ PUSH3 0x660 JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH3 0x66A JUMPI DUP1 PUSH4 0x49B210B7 EQ PUSH3 0x68A JUMPI PUSH3 0x33A JUMP JUMPDEST DUP1 PUSH4 0x313CE567 EQ PUSH3 0x52C JUMPI DUP1 PUSH4 0x32A7AE95 EQ PUSH3 0x54C JUMPI DUP1 PUSH4 0x3549788A EQ PUSH3 0x575 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH3 0x57F JUMPI DUP1 PUSH4 0x3BCC45BA EQ PUSH3 0x5AE JUMPI DUP1 PUSH4 0x4000AEA0 EQ PUSH3 0x5D7 JUMPI PUSH3 0x33A JUMP JUMPDEST DUP1 PUSH4 0x141C7068 GT PUSH3 0x2F1 JUMPI DUP1 PUSH4 0x141C7068 EQ PUSH3 0x47B JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH3 0x485 JUMPI DUP1 PUSH4 0x1E3B9DE5 EQ PUSH3 0x48F JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH3 0x4B8 JUMPI DUP1 PUSH4 0x26773DDD EQ PUSH3 0x4F1 JUMPI DUP1 PUSH4 0x2A0A4ED5 EQ PUSH3 0x522 JUMPI PUSH3 0x33A JUMP JUMPDEST DUP1 PUSH4 0x2FB0C5E EQ PUSH3 0x33F JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH3 0x35D JUMPI DUP1 PUSH4 0x832E470 EQ PUSH3 0x3DF JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH3 0x3FB JUMPI DUP1 PUSH4 0xC6F0E5D EQ PUSH3 0x42A JUMPI DUP1 PUSH4 0xCD865EC EQ PUSH3 0x450 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x349 PUSH3 0xA61 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH3 0x367 PUSH3 0xA6A JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP4 MLOAD DUP2 DUP4 ADD MSTORE DUP4 MLOAD SWAP2 SWAP3 DUP4 SWAP3 SWAP1 DUP4 ADD SWAP2 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x3A3 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH3 0x389 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH3 0x3D1 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH3 0x3E9 PUSH3 0xC25 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH3 0x349 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH3 0x413 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH3 0xC2B JUMP JUMPDEST PUSH3 0x434 PUSH3 0xC44 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH3 0x479 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH3 0x468 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH3 0xC53 JUMP JUMPDEST STOP JUMPDEST PUSH3 0x479 PUSH3 0xF37 JUMP JUMPDEST PUSH3 0x3E9 PUSH3 0x1378 JUMP JUMPDEST PUSH3 0x434 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH3 0x4A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH3 0x137E JUMP JUMPDEST PUSH3 0x349 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH3 0x4D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH3 0x139F JUMP JUMPDEST PUSH3 0x479 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH3 0x509 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 ADD CALLDATALOAD AND PUSH3 0x13F6 JUMP JUMPDEST PUSH3 0x434 PUSH3 0x1721 JUMP JUMPDEST PUSH3 0x536 PUSH3 0x1799 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xFF SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH3 0x479 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH3 0x564 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH3 0x17A2 JUMP JUMPDEST PUSH3 0x3E9 PUSH3 0x1A0A JUMP JUMPDEST PUSH3 0x349 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH3 0x597 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH3 0x1A10 JUMP JUMPDEST PUSH3 0x434 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH3 0x5C6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH3 0x1A49 JUMP JUMPDEST PUSH3 0x349 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH3 0x5EF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 CALLDATALOAD AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP2 DUP2 ADD SWAP1 PUSH1 0x60 DUP2 ADD PUSH1 0x40 DUP3 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x20 SHL DUP2 GT ISZERO PUSH3 0x61F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH3 0x632 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH1 0x1 PUSH1 0x20 SHL DUP4 GT OR ISZERO PUSH3 0x654 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP SWAP1 SWAP3 POP SWAP1 POP PUSH3 0x1A6A JUMP JUMPDEST PUSH3 0x479 PUSH3 0x1B31 JUMP JUMPDEST PUSH3 0x479 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH3 0x682 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH3 0x1C0D JUMP JUMPDEST PUSH3 0x479 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH3 0x6A2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH3 0x1C7F JUMP JUMPDEST PUSH3 0x434 PUSH3 0x21B5 JUMP JUMPDEST PUSH3 0x3E9 PUSH3 0x21C4 JUMP JUMPDEST PUSH3 0x479 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH3 0x6E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD ISZERO ISZERO PUSH3 0x21CA JUMP JUMPDEST PUSH3 0x434 PUSH3 0x21E9 JUMP JUMPDEST PUSH3 0x479 PUSH3 0x21F8 JUMP JUMPDEST PUSH3 0x479 PUSH3 0x235D JUMP JUMPDEST PUSH3 0x3E9 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH3 0x725 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH3 0x2692 JUMP JUMPDEST PUSH3 0x3E9 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH3 0x74E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH3 0x26AD JUMP JUMPDEST PUSH3 0x3E9 PUSH3 0x2762 JUMP JUMPDEST PUSH3 0x479 PUSH3 0x2768 JUMP JUMPDEST PUSH3 0x479 PUSH3 0x29FD JUMP JUMPDEST PUSH3 0x367 PUSH3 0x2A76 JUMP JUMPDEST PUSH3 0x3E9 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH3 0x79F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH3 0x2BEE JUMP JUMPDEST PUSH3 0x3E9 PUSH3 0x2C0C JUMP JUMPDEST PUSH3 0x349 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH3 0x7D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH3 0x2C12 JUMP JUMPDEST PUSH3 0x349 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH3 0x7FB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH3 0x2C31 JUMP JUMPDEST PUSH3 0x479 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH3 0x82A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 CALLDATALOAD AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP2 DUP2 ADD SWAP1 PUSH1 0x60 DUP2 ADD PUSH1 0x40 DUP3 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x20 SHL DUP2 GT ISZERO PUSH3 0x85A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH3 0x86D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH1 0x1 PUSH1 0x20 SHL DUP4 GT OR ISZERO PUSH3 0x88F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP SWAP1 SWAP3 POP SWAP1 POP PUSH3 0x2C6A JUMP JUMPDEST PUSH3 0x349 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH3 0x8B3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH3 0x2C94 JUMP JUMPDEST PUSH3 0x349 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH3 0x8E2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH3 0x2CA9 JUMP JUMPDEST PUSH3 0x434 PUSH3 0x2CBE JUMP JUMPDEST PUSH3 0x349 PUSH3 0x2CCD JUMP JUMPDEST PUSH3 0x479 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH3 0x91F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH3 0x2CEA JUMP JUMPDEST PUSH3 0x434 PUSH3 0x2E25 JUMP JUMPDEST PUSH3 0x969 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH3 0x958 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH3 0x2E34 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP5 POP POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH3 0x367 PUSH3 0x2E66 JUMP JUMPDEST PUSH3 0x3E9 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH3 0x9C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 ADD CALLDATALOAD AND PUSH3 0x2EF8 JUMP JUMPDEST PUSH3 0xA01 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH3 0x9F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH3 0x2F23 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP1 MLOAD SWAP2 DUP3 SWAP1 SUB ADD SWAP1 RETURN JUMPDEST PUSH3 0x479 PUSH3 0x3036 JUMP JUMPDEST PUSH3 0x3E9 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH3 0xA46 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH3 0x318A JUMP JUMPDEST PUSH3 0x349 PUSH3 0x31A8 JUMP JUMPDEST PUSH1 0xF SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x6FDDE03 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD PUSH1 0x60 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0x6FDDE03 SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x0 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0xAB0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH3 0xAC5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH1 0x20 DUP2 LT ISZERO PUSH3 0xAEF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD PUSH1 0x40 MLOAD SWAP4 SWAP3 SWAP2 SWAP1 DUP5 PUSH1 0x1 PUSH1 0x20 SHL DUP3 GT ISZERO PUSH3 0xB0F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 DUP4 ADD SWAP1 PUSH1 0x20 DUP3 ADD DUP6 DUP2 GT ISZERO PUSH3 0xB25 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x20 SHL DUP2 GT DUP3 DUP3 ADD DUP9 LT OR ISZERO PUSH3 0xB3F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MSTORE POP DUP2 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0xB6E JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH3 0xB54 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH3 0xB9C JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP PUSH1 0x40 MSTORE POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP1 PUSH10 0x223930B3B3B0B136329 PUSH1 0xB5 SHL DUP2 MSTORE POP PUSH1 0xA ADD DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH3 0xBEC JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x1F NOT SWAP1 SWAP3 ADD SWAP2 PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH3 0xBCB JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH3 0xC3A CALLER DUP5 DUP5 PUSH3 0x31CE JUMP JUMPDEST POP PUSH1 0x1 JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH3 0xC5D PUSH3 0x3D6D JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP3 MLOAD PUSH1 0x80 DUP2 ADD DUP5 MSTORE DUP2 SLOAD DUP6 AND DUP2 MSTORE PUSH1 0x1 DUP3 ADD SLOAD SWAP3 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x2 DUP3 ADD SLOAD SWAP4 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x3 ADD SLOAD SWAP1 SWAP3 AND PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE SWAP1 SWAP2 SWAP1 DUP2 PUSH3 0xCF5 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x139BC818DB185A5B48199BDD5B99 PUSH1 0x92 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH3 0xD54 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C7920636C61696D616E742063616E207265736F6C766520636C61696D00 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST TIMESTAMP PUSH3 0xD70 PUSH1 0x4 SLOAD DUP6 PUSH1 0x40 ADD MLOAD PUSH3 0x32BE SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST GT ISZERO PUSH3 0xDC4 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436C61696D20706572696F64206E6F74206F7665722079657400000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND DUP3 SSTORE PUSH1 0x1 DUP3 ADD DUP6 SWAP1 SSTORE PUSH1 0x2 DUP3 ADD DUP6 SWAP1 SSTORE PUSH1 0x3 SWAP1 SWAP2 ADD DUP1 SLOAD SWAP1 SWAP2 AND SWAP1 SSTORE DUP1 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE DUP5 DUP7 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP9 SWAP1 MSTORE SWAP1 MLOAD SWAP4 DUP7 AND SWAP4 PUSH4 0xA9059CBB SWAP4 PUSH1 0x44 DUP1 DUP5 ADD SWAP5 SWAP4 DUP4 SWAP1 SUB ADD SWAP1 DUP3 SWAP1 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0xE51 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH3 0xE66 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH3 0xE7D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH3 0xECE JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH26 0x10DBDB1B185D195C985B081D1C985B9CD9995C8819985A5B1959 PUSH1 0x32 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH3 0xEE5 DUP6 DUP3 PUSH3 0xEDF DUP9 PUSH3 0x2692 JUMP JUMPDEST PUSH3 0x32CC JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x52A5C2B28BC6EB9712D0CED43463103B486B13CCC9CDA499FD3B2D7B6A74A8EE DUP6 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP JUMP JUMPDEST PUSH3 0xF41 PUSH3 0x2CCD JUMP JUMPDEST DUP1 ISZERO PUSH3 0xF50 JUMPI POP PUSH1 0xF SLOAD PUSH1 0xFF AND JUMPDEST PUSH3 0xF91 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH3 0x4AAE DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0xB SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x38A86C57 PUSH1 0xE1 SHL DUP2 MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0x7150D8AE SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0xFD7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH3 0xFEC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH3 0x1003 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 POP CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ PUSH3 0x1050 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x39 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH3 0x4B66 PUSH1 0x39 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xB PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xD7BE4E29 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x109F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH3 0x10B4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH3 0x10CB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH3 0x111F JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E74206E756D626572206F662079657320766F746573 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0xB SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xB28FA152 PUSH3 0x113B DUP4 PUSH3 0x2692 JUMP JUMPDEST PUSH3 0x1145 PUSH3 0x1378 JUMP JUMPDEST SUB PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x117B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH3 0x1190 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH3 0x11A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH3 0x11FB JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6666657220696E73756666696369656E746C792066756E6465640000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH3 0x12F7 DUP2 PUSH1 0xB PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xE5A6B10F PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x124F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH3 0x1264 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH3 0x127B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0xB SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x501AD8FF PUSH1 0xE1 SHL DUP2 MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 PUSH4 0xA035B1FE SWAP2 PUSH1 0x4 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x12C3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH3 0x12D8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH3 0x12EF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH3 0x32DE JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x40 DUP1 MLOAD CALLER DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 DUP2 DUP4 ADD DUP2 SWAP1 MSTORE PUSH1 0x16 SWAP1 DUP3 ADD MSTORE PUSH22 0x436F6D706C65746564207375636365737366756C6C79 PUSH1 0x50 SHL PUSH1 0xA0 DUP3 ADD MSTORE SWAP1 MLOAD SWAP2 DUP4 AND SWAP2 PUSH32 0xC88F58AE9FEB0742D9422F604DD3C1BE6D02818F8DEC340C5061F428B554E975 SWAP2 DUP2 SWAP1 SUB PUSH1 0xC0 ADD SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD AND JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x13AE DUP5 DUP5 DUP5 PUSH3 0x32CC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP1 DUP6 MSTORE SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 SLOAD PUSH3 0x13EC SWAP2 DUP7 SWAP2 PUSH3 0x13E6 SWAP1 DUP7 PUSH3 0x3505 JUMP JUMPDEST PUSH3 0x31CE JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH3 0x1401 DUP2 PUSH3 0x2C12 JUMP JUMPDEST PUSH3 0x1453 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436C61696D732064697361626C656420666F7220746869732061646472657373 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH3 0x1460 DUP4 PUSH3 0x26AD JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT PUSH3 0x14B1 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x155B9CDD5C1C1BDC9D19590818DBDB1B185D195C985B PUSH1 0x52 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST CALLER PUSH1 0x0 PUSH3 0x14BF DUP5 PUSH3 0x2692 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH3 0x14CF DUP3 DUP6 PUSH3 0x3518 JUMP JUMPDEST SWAP1 POP DUP6 DUP3 PUSH3 0x1525 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436C61696D6564206164647265737320686F6C6473206E6F2073686172657300 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD ISZERO PUSH3 0x1594 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4164647265737320616C726561647920636C61696D6564000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE ADDRESS PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD DUP6 SWAP1 MSTORE SWAP2 MLOAD SWAP2 DUP4 AND SWAP2 PUSH4 0x23B872DD SWAP2 PUSH1 0x64 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x15EE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH3 0x1603 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH3 0x161A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH3 0x166B JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH26 0x10DBDB1B185D195C985B081D1C985B9CD9995C8819985A5B1959 PUSH1 0x32 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x80 DUP2 ADD DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP8 AND DUP1 DUP4 MSTORE PUSH1 0x20 DUP1 DUP5 ADD DUP8 DUP2 MSTORE TIMESTAMP DUP6 DUP8 ADD SWAP1 DUP2 MSTORE DUP14 DUP6 AND PUSH1 0x60 DUP8 ADD SWAP1 DUP2 MSTORE DUP14 DUP7 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 DUP7 MSTORE DUP10 SWAP1 KECCAK256 SWAP8 MLOAD DUP9 SLOAD SWAP1 DUP9 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP2 DUP3 AND OR DUP10 SSTORE SWAP4 MLOAD PUSH1 0x1 DUP10 ADD SSTORE SWAP2 MLOAD PUSH1 0x2 DUP9 ADD SSTORE MLOAD PUSH1 0x3 SWAP1 SWAP7 ADD DUP1 SLOAD SWAP7 SWAP1 SWAP6 AND SWAP6 SWAP1 SWAP2 AND SWAP5 SWAP1 SWAP5 OR SWAP1 SWAP3 SSTORE DUP4 MLOAD DUP8 DUP2 MSTORE SWAP4 MLOAD SWAP1 SWAP4 PUSH32 0x1982CA8958FC8A8176CB52BE509260F4BC5AF7CE04E1533711793F1C56DD5359 SWAP3 SWAP1 DUP3 SWAP1 SUB ADD SWAP1 LOG3 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x172D PUSH3 0x21B5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x2A0A4ED5 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x1766 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH3 0x177B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH3 0x1792 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH3 0x17AC PUSH3 0x1721 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH3 0x1812 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F752063616E6E6F742064656C65746520636C61696D730000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH3 0x181C PUSH3 0x3D6D JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP3 MLOAD PUSH1 0x80 DUP2 ADD DUP5 MSTORE DUP2 SLOAD DUP6 AND DUP2 MSTORE PUSH1 0x1 DUP3 ADD SLOAD SWAP3 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x2 DUP3 ADD SLOAD SWAP4 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x3 ADD SLOAD SWAP1 SWAP3 AND PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE SWAP1 SWAP2 PUSH3 0x18B2 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x139BC818DB185A5B48199BDD5B99 PUSH1 0x92 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND DUP3 SSTORE PUSH1 0x1 DUP3 ADD DUP6 SWAP1 SSTORE PUSH1 0x2 DUP3 ADD DUP6 SWAP1 SSTORE PUSH1 0x3 SWAP1 SWAP2 ADD DUP1 SLOAD SWAP1 SWAP2 AND SWAP1 SSTORE DUP6 MLOAD DUP7 DUP4 ADD MLOAD DUP3 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE SWAP2 DUP7 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE SWAP1 MLOAD SWAP4 DUP6 AND SWAP4 PUSH4 0xA9059CBB SWAP4 PUSH1 0x44 DUP1 DUP5 ADD SWAP5 SWAP4 DUP4 SWAP1 SUB ADD SWAP1 DUP3 SWAP1 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x1941 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH3 0x1956 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH3 0x196D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH3 0x19BE JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH26 0x10DBDB1B185D195C985B081D1C985B9CD9995C8819985A5B1959 PUSH1 0x32 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x20 DUP1 DUP5 ADD MLOAD PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND SWAP4 DUP8 AND SWAP3 PUSH32 0xBB036E629A9F4C0897EE5D48440DFDB36F7E772117723A2ED603A6514244C2D5 SWAP3 DUP3 SWAP1 SUB ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0xE SLOAD DUP2 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 PUSH3 0xC3A SWAP2 DUP6 SWAP1 PUSH3 0x13E6 SWAP1 DUP7 PUSH3 0x32BE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x3 ADD SLOAD AND SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH3 0x1A79 DUP7 DUP7 PUSH3 0x2C94 JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH3 0x1B28 JUMPI DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xA4C0ED36 CALLER DUP8 DUP8 DUP8 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP5 DUP5 DUP3 DUP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP SWAP6 POP POP POP POP POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x1B0E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH3 0x1B23 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH3 0x1B3B PUSH3 0x2CCD JUMP JUMPDEST DUP1 ISZERO PUSH3 0x1B4A JUMPI POP PUSH1 0xF SLOAD PUSH1 0xFF AND JUMPDEST PUSH3 0x1B8B JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH3 0x4AAE DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0xB SLOAD CALLER SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x4B91562E DUP3 PUSH3 0x1BAA DUP2 PUSH3 0x2692 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x1BF1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH3 0x1C06 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH3 0x1C19 CALLER DUP3 PUSH3 0x3541 JUMP JUMPDEST PUSH3 0x1C23 PUSH3 0x21B5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x42966C68 PUSH3 0x1C48 PUSH1 0xA SLOAD DUP5 PUSH3 0x3518 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x1BF1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0xF SLOAD PUSH1 0xFF AND PUSH3 0x1CD7 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416E206163636570746564206F66666572206578697374730000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH3 0x1CE3 PUSH3 0x21B5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x3A98EF39 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x1D1E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH3 0x1D33 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH3 0x1D4A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 POP CALLER PUSH3 0x1D6B PUSH2 0x2710 PUSH3 0x1D64 DUP5 PUSH2 0xBB8 PUSH3 0x3518 JUMP JUMPDEST SWAP1 PUSH3 0x354D JUMP JUMPDEST PUSH3 0x1D75 PUSH3 0x1378 JUMP JUMPDEST LT ISZERO PUSH3 0x1DB4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2E DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH3 0x4B14 PUSH1 0x2E SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x1DC9 PUSH2 0x2710 PUSH3 0x1D64 DUP5 PUSH2 0x1F4 PUSH3 0x3518 JUMP JUMPDEST PUSH3 0x1DD4 DUP3 PUSH3 0x2692 JUMP JUMPDEST LT ISZERO PUSH3 0x1E13 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x39 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH3 0x4B9F PUSH1 0x39 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xC SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH1 0x0 SWAP1 PUSH8 0xDE0B6B3A7640000 SWAP1 DUP3 DUP2 DUP2 DUP2 DUP6 DUP9 DUP4 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH3 0x1E51 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x0 CALLER DUP5 DUP7 PUSH1 0xE SLOAD PUSH1 0x40 MLOAD PUSH3 0x1E68 SWAP1 PUSH3 0x3DA7 JUMP JUMPDEST DUP1 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP5 POP POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 PUSH1 0x0 CREATE DUP1 ISZERO DUP1 ISZERO PUSH3 0x1EB6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xB28FA152 PUSH3 0x1ED3 DUP5 PUSH3 0x2692 JUMP JUMPDEST PUSH3 0x1EDD PUSH3 0x1378 JUMP JUMPDEST SUB PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x1F13 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH3 0x1F28 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH3 0x1F3F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH3 0x1F8A JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x496E73756666696369656E742066756E64696E67 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH3 0x1F94 PUSH3 0x2CCD JUMP JUMPDEST ISZERO PUSH3 0x2140 JUMPI PUSH1 0xB PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xE5A6B10F PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x1FE9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH3 0x1FFE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH3 0x2015 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND SWAP2 AND EQ DUP1 ISZERO PUSH3 0x20C3 JUMPI POP PUSH3 0x20BF PUSH2 0x2710 PUSH3 0x1D64 PUSH2 0x2904 PUSH1 0xB PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xA035B1FE PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x208A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH3 0x209F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH3 0x20B6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 PUSH3 0x3518 JUMP JUMPDEST DUP6 LT ISZERO JUMPDEST PUSH3 0x2100 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x3C DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH3 0x4A72 PUSH1 0x3C SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x2140 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1C DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4F66666572207265706C61636564206279206869676865722062696400000000 DUP2 MSTORE POP PUSH3 0x3561 JUMP JUMPDEST PUSH1 0xB DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SWAP2 SSTORE DUP3 AND PUSH32 0x9C00F159B1FA9EAEBDA7ACAF50BE0BF3A652277380F907B35CB681BD641A62D3 DUP7 PUSH3 0x218E PUSH3 0x21E9 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x20 DUP4 ADD MSTORE DUP1 MLOAD SWAP2 DUP3 SWAP1 SUB ADD SWAP1 LOG2 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD ISZERO PUSH3 0x235B JUMPI CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 DUP2 ADD DUP1 SLOAD PUSH1 0x3 DUP4 ADD DUP1 SLOAD DUP5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND DUP7 SSTORE SWAP4 DUP9 SWAP1 SSTORE PUSH1 0x2 SWAP1 SWAP5 ADD DUP8 SWAP1 SSTORE SWAP2 DUP4 AND SWAP1 SWAP2 SSTORE DUP3 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP7 SWAP1 SWAP7 MSTORE PUSH1 0x24 DUP7 ADD DUP2 SWAP1 MSTORE SWAP2 MLOAD SWAP2 SWAP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP4 DUP5 SWAP4 PUSH4 0xA9059CBB SWAP4 PUSH1 0x44 DUP1 DUP6 ADD SWAP5 SWAP3 SWAP4 SWAP2 SWAP3 DUP4 SWAP1 SUB ADD SWAP1 DUP3 SWAP1 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x22A5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH3 0x22BA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH3 0x22D1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH3 0x2322 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH26 0x10DBDB1B185D195C985B081D1C985B9CD9995C8819985A5B1959 PUSH1 0x32 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP4 DUP2 MSTORE SWAP1 MLOAD CALLER SWAP2 PUSH32 0x203627483D943880619F4B7E0CCA21DBEFD6204B4D85B124EB99540E17BA86DD SWAP2 SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG2 POP POP JUMPDEST JUMP JUMPDEST PUSH3 0x2367 PUSH3 0x2CCD JUMP JUMPDEST DUP1 ISZERO PUSH3 0x2376 JUMPI POP PUSH1 0xF SLOAD PUSH1 0xFF AND JUMPDEST PUSH3 0x23B7 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH3 0x4AAE DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0xB PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x90E64D13 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x2406 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH3 0x241B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH3 0x2432 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD ISZERO PUSH3 0x2470 JUMPI PUSH3 0x246A PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xD DUP2 MSTORE PUSH1 0x20 ADD PUSH13 0x13D999995C88195E1C1A5C9959 PUSH1 0x9A SHL DUP2 MSTORE POP PUSH3 0x3561 JUMP JUMPDEST PUSH3 0x235B JUMP JUMPDEST PUSH1 0xB PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xCF42A927 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x24BF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH3 0x24D4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH3 0x24EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD ISZERO PUSH3 0x2528 JUMPI PUSH3 0x246A PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH18 0x139BDD08195B9BDD59DA081CDD5C1C1BDC9D PUSH1 0x72 SHL DUP2 MSTORE POP PUSH3 0x3561 JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x38A86C57 PUSH1 0xE1 SHL DUP2 MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 PUSH4 0xB28FA152 SWAP2 PUSH3 0x25AE SWAP2 DUP5 SWAP2 PUSH4 0x7150D8AE SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x257A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH3 0x258F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH3 0x25A6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH3 0x2692 JUMP JUMPDEST PUSH3 0x25B8 PUSH3 0x1378 JUMP JUMPDEST SUB PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x25EE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH3 0x2603 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH3 0x261A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH3 0x2645 JUMPI PUSH3 0x246A PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0x49E4 PUSH1 0x21 SWAP2 CODECOPY PUSH3 0x3561 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4163717569736974696F6E20636F6E7465737420756E7375636365737366756C PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH3 0x26BB DUP4 PUSH3 0x3731 JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH3 0x26CC JUMPI SWAP1 POP PUSH3 0x139A JUMP JUMPDEST PUSH3 0x26D6 PUSH3 0x21B5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH3 0x26FB JUMPI POP POP PUSH1 0xA SLOAD PUSH3 0x139A JUMP JUMPDEST PUSH3 0x2759 PUSH1 0xA SLOAD PUSH3 0x270C PUSH3 0x21B5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x77E071AD DUP7 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x208A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 POP POP PUSH3 0x139A JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0xF SLOAD PUSH1 0xFF AND PUSH3 0x27B9 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x436F6E7472616374206973206E6F7420616374697665 PUSH1 0x50 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 CALLER SWAP1 POP PUSH3 0x27DD PUSH2 0x2710 PUSH3 0x1D64 PUSH1 0xD SLOAD PUSH3 0x27D6 PUSH3 0x1378 JUMP JUMPDEST SWAP1 PUSH3 0x3518 JUMP JUMPDEST PUSH3 0x27E8 DUP3 PUSH3 0x2692 JUMP JUMPDEST LT ISZERO PUSH3 0x2831 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x145D5BDC9D5B481B9BDD081C995858DA1959 PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH3 0x283B PUSH3 0x2CCD JUMP JUMPDEST ISZERO PUSH3 0x29B0 JUMPI PUSH1 0xB PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xCF42A927 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x2890 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH3 0x28A5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH3 0x28BC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH3 0x2994 JUMPI PUSH3 0x28CD PUSH3 0x1B31 JUMP JUMPDEST PUSH1 0xB PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xCF42A927 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x291C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH3 0x2931 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH3 0x2948 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH3 0x2994 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x145D5BDC9D5B481A185CC81B9BDD0819985A5B1959 PUSH1 0x5A SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH3 0x299E PUSH3 0x235D JUMP JUMPDEST PUSH3 0x29A8 PUSH3 0x2CCD JUMP JUMPDEST ISZERO PUSH3 0x29B0 JUMPI INVALID JUMPDEST PUSH3 0x29BE DUP2 DUP3 PUSH1 0x1 PUSH3 0x32DE JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND DUP2 MSTORE SWAP1 MLOAD PUSH32 0x3B6B79A09E9FD230E8591B65C97236BF7DF7A604EDF733DB0658E66B0E6EB2A9 SWAP2 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG1 POP JUMP JUMPDEST PUSH3 0x2A07 PUSH3 0x2CCD JUMP JUMPDEST DUP1 ISZERO PUSH3 0x2A16 JUMPI POP PUSH1 0xF SLOAD PUSH1 0xFF AND JUMPDEST PUSH3 0x2A57 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH3 0x4AAE DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0xB SLOAD CALLER SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x5FF0CF84 DUP3 PUSH3 0x1BAA DUP2 PUSH3 0x2692 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x95D89B41 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD PUSH1 0x60 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0x95D89B41 SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x0 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x2ABC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH3 0x2AD1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH1 0x20 DUP2 LT ISZERO PUSH3 0x2AFB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD PUSH1 0x40 MLOAD SWAP4 SWAP3 SWAP2 SWAP1 DUP5 PUSH1 0x1 PUSH1 0x20 SHL DUP3 GT ISZERO PUSH3 0x2B1B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 DUP4 ADD SWAP1 PUSH1 0x20 DUP3 ADD DUP6 DUP2 GT ISZERO PUSH3 0x2B31 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x20 SHL DUP2 GT DUP3 DUP3 ADD DUP9 LT OR ISZERO PUSH3 0x2B4B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MSTORE POP DUP2 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x2B7A JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH3 0x2B60 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH3 0x2BA8 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP PUSH1 0x40 MSTORE POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP1 PUSH1 0x11 PUSH1 0xFA SHL DUP2 MSTORE POP PUSH1 0x1 ADD DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x20 DUP4 LT PUSH3 0xBEC JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x1F NOT SWAP1 SWAP3 ADD SWAP2 PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH3 0xBCB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH1 0xD SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO SWAP1 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 PUSH3 0xC3A SWAP2 DUP6 SWAP1 PUSH3 0x13E6 SWAP1 DUP7 PUSH3 0x3505 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH3 0x2C82 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x2C8E DUP5 DUP5 PUSH3 0x3778 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x2CA2 DUP4 DUP4 PUSH3 0x3834 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0xC SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH3 0x2CDA PUSH3 0x21E9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO SWAP1 POP SWAP1 JUMP JUMPDEST PUSH3 0x2CF4 PUSH3 0x2CCD JUMP JUMPDEST ISZERO PUSH3 0x2D42 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH24 0x2A3432B9329034B99030903832B73234B7339037B33332B9 PUSH1 0x41 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x9 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP5 SWAP1 MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 PUSH4 0x23B872DD SWAP2 PUSH1 0x64 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x2D9D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH3 0x2DB2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH3 0x2DC9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH3 0x2E15 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x14DA185C99481D1C985B9CD9995C8819985A5B1959 PUSH1 0x5A SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH3 0x2E21 DUP3 DUP3 PUSH3 0x3778 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x3 SWAP1 SWAP4 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND SWAP4 SWAP2 SWAP3 AND DUP5 JUMP JUMPDEST PUSH1 0x10 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x2 PUSH1 0x1 DUP6 AND ISZERO PUSH2 0x100 MUL PUSH1 0x0 NOT ADD SWAP1 SWAP5 AND SWAP4 SWAP1 SWAP4 DIV PUSH1 0x1F DUP2 ADD DUP5 SWAP1 DIV DUP5 MUL DUP3 ADD DUP5 ADD SWAP1 SWAP3 MSTORE DUP2 DUP2 MSTORE SWAP3 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH3 0x2EF0 JUMPI DUP1 PUSH1 0x1F LT PUSH3 0x2EC4 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH3 0x2EF0 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH3 0x2ED2 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0xF SLOAD PUSH1 0x0 SWAP1 DUP2 SWAP1 PUSH1 0xFF AND ISZERO PUSH3 0x2F6C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x36 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH3 0x4A05 PUSH1 0x36 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x2F78 CALLER DUP5 PUSH3 0x3541 JUMP JUMPDEST PUSH1 0x0 PUSH3 0x2F91 PUSH1 0xA SLOAD DUP6 PUSH3 0x3518 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP5 SWAP1 MSTORE SWAP1 MLOAD SWAP3 SWAP4 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 PUSH4 0xA9059CBB SWAP2 PUSH1 0x44 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x2FE9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH3 0x2FFE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH3 0x3015 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH3 0x3021 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x9 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP3 POP SWAP1 POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH3 0x3040 PUSH3 0x2CCD JUMP JUMPDEST DUP1 ISZERO PUSH3 0x304F JUMPI POP PUSH1 0xF SLOAD PUSH1 0xFF AND JUMPDEST PUSH3 0x3090 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH3 0x4AAE DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0xB PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x7150D8AE PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x30DF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH3 0x30F4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH3 0x310B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH3 0x3155 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x37 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH3 0x4A3B PUSH1 0x37 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x235B PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH18 0x21B0B731B2B63632B210313C90313ABCB2B9 PUSH1 0x71 SHL DUP2 MSTORE POP PUSH3 0x3561 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH3 0x31B4 PUSH3 0x2CCD JUMP JUMPDEST PUSH3 0x31C1 JUMPI PUSH1 0x0 PUSH3 0x31C9 JUMP JUMPDEST PUSH1 0xF SLOAD PUSH1 0xFF AND ISZERO JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH3 0x3215 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH3 0x4B42 PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH3 0x325C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH3 0x49C2 PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE DUP2 MLOAD DUP6 DUP2 MSTORE SWAP2 MLOAD PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST DUP2 DUP2 ADD DUP3 DUP2 LT ISZERO PUSH3 0xC3E JUMPI INVALID JUMPDEST PUSH3 0x32D9 DUP4 DUP4 DUP4 PUSH3 0x3890 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x32EB DUP5 PUSH3 0x2692 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH3 0x32F9 PUSH3 0x1378 JUMP JUMPDEST PUSH1 0xF DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE SWAP1 POP PUSH3 0x3310 DUP3 PUSH3 0x2F23 JUMP JUMPDEST POP PUSH1 0x0 SWAP1 POP PUSH3 0x3321 DUP3 DUP5 PUSH3 0x3505 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP6 SWAP1 MSTORE SWAP2 MLOAD SWAP4 SWAP5 POP SWAP2 AND SWAP2 PUSH4 0xA9059CBB SWAP2 PUSH1 0x44 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x337A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH3 0x338F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH3 0x33A6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH3 0x33EC JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x1D1C985B9CD9995C8819985A5B1959 PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x9 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND SWAP2 SWAP1 SWAP2 OR SWAP2 DUP3 SWAP1 SSTORE PUSH1 0xA DUP7 SWAP1 SSTORE AND PUSH4 0x23B872DD DUP8 ADDRESS PUSH3 0x3426 DUP9 DUP7 PUSH3 0x3518 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP4 POP POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x347D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH3 0x3492 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH3 0x34A9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH3 0x34FD JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4261636B696E67207472616E73666572206661696C6564000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 GT ISZERO PUSH3 0x3512 JUMPI INVALID JUMPDEST POP SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH3 0x3529 JUMPI POP PUSH1 0x0 PUSH3 0xC3E JUMP JUMPDEST POP DUP2 DUP2 MUL DUP2 DUP4 DUP3 DUP2 PUSH3 0x3538 JUMPI INVALID JUMPDEST DIV EQ PUSH3 0xC3E JUMPI INVALID JUMPDEST PUSH3 0x2E21 DUP3 DUP3 PUSH3 0x3938 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 DUP2 PUSH3 0x3559 JUMPI INVALID JUMPDEST DIV SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x38A86C57 PUSH1 0xE1 SHL DUP2 MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0x7150D8AE SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x35A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH3 0x35BC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH3 0x35D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH32 0xC88F58AE9FEB0742D9422F604DD3C1BE6D02818F8DEC340C5061F428B554E975 CALLER PUSH1 0x0 DUP6 PUSH3 0x3610 PUSH3 0x21E9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP5 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x3675 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH3 0x365B JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH3 0x36A3 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP6 POP POP POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0xB PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x41C0E1B5 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x3704 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH3 0x3719 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0xB DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ADDRESS EQ ISZERO PUSH3 0x374E JUMPI POP PUSH1 0x1 PUSH3 0x139A JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND SWAP2 AND EQ ISZERO PUSH3 0x376F JUMPI POP PUSH1 0x8 SLOAD PUSH3 0x139A JUMP JUMPDEST POP PUSH1 0x0 PUSH3 0x139A JUMP JUMPDEST PUSH3 0x3782 PUSH3 0x2CCD JUMP JUMPDEST ISZERO PUSH3 0x37D0 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH24 0x2A3432B9329034B99030903832B73234B7339037B33332B9 PUSH1 0x41 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0xF SLOAD PUSH1 0xFF AND PUSH3 0x3828 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436F6E7472616374206E6F742061637469766520616E79206D6F72652E000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH3 0x2E21 DUP3 DUP3 PUSH3 0x39D3 JUMP JUMPDEST PUSH1 0x0 PUSH3 0x3842 DUP4 DUP4 PUSH3 0x39DF JUMP JUMPDEST PUSH3 0x3886 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x151C985B9CD9995C8819985A5B1959 PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH3 0xC3A PUSH3 0x21F8 JUMP JUMPDEST PUSH3 0x389D DUP4 DUP4 DUP4 PUSH3 0x39EE JUMP JUMPDEST PUSH3 0x38A7 PUSH3 0x2CCD JUMP JUMPDEST DUP1 ISZERO PUSH3 0x38B6 JUMPI POP PUSH1 0xF SLOAD PUSH1 0xFF AND JUMPDEST ISZERO PUSH3 0x32D9 JUMPI PUSH1 0xB SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x6240A7D7 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE DUP6 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD DUP6 SWAP1 MSTORE SWAP2 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP2 PUSH4 0xC4814FAE SWAP2 PUSH1 0x64 DUP1 DUP4 ADD SWAP3 PUSH1 0x0 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP4 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x391A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH3 0x392F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH3 0x3944 DUP3 DUP3 PUSH3 0x3B2C JUMP JUMPDEST PUSH3 0x394E PUSH3 0x2CCD JUMP JUMPDEST DUP1 ISZERO PUSH3 0x395D JUMPI POP PUSH1 0xF SLOAD PUSH1 0xFF AND JUMPDEST ISZERO PUSH3 0x2E21 JUMPI PUSH1 0xB SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x6240A7D7 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x0 PUSH1 0x24 DUP4 ADD DUP2 SWAP1 MSTORE PUSH1 0x44 DUP4 ADD DUP7 SWAP1 MSTORE SWAP3 MLOAD SWAP4 AND SWAP3 PUSH4 0xC4814FAE SWAP3 PUSH1 0x64 DUP1 DUP5 ADD SWAP4 SWAP2 SWAP3 SWAP2 DUP3 SWAP1 SUB ADD DUP2 DUP4 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x39BE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH3 0x34FD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST PUSH3 0x2E21 DUP3 DUP3 PUSH3 0x3BFF JUMP JUMPDEST PUSH1 0x0 PUSH3 0xC3A CALLER DUP5 DUP5 PUSH3 0x32CC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH3 0x3A35 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH3 0x4AEF PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH3 0x3A7C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH3 0x499F PUSH1 0x23 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH3 0x3AA1 SWAP1 DUP3 PUSH3 0x3505 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP1 DUP5 AND DUP2 MSTORE KECCAK256 SLOAD PUSH3 0x3AD2 SWAP1 DUP3 PUSH3 0x32BE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE DUP1 MLOAD DUP6 DUP2 MSTORE SWAP1 MLOAD SWAP2 SWAP4 SWAP3 DUP8 AND SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 SWAP2 DUP3 SWAP1 SUB ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH3 0x3B73 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH3 0x4ACE PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 SLOAD PUSH3 0x3B82 SWAP1 DUP3 PUSH3 0x3505 JUMP JUMPDEST PUSH1 0x2 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH3 0x3BAA SWAP1 DUP3 PUSH3 0x3505 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE DUP4 MLOAD DUP6 DUP2 MSTORE SWAP4 MLOAD SWAP2 SWAP4 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 SWAP1 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH3 0x3C0B DUP3 DUP3 PUSH3 0x3C84 JUMP JUMPDEST PUSH3 0x3C15 PUSH3 0x2CCD JUMP JUMPDEST DUP1 ISZERO PUSH3 0x3C24 JUMPI POP PUSH1 0xF SLOAD PUSH1 0xFF AND JUMPDEST ISZERO PUSH3 0x2E21 JUMPI PUSH1 0xB SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x6240A7D7 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND PUSH1 0x24 DUP5 ADD MSTORE PUSH1 0x44 DUP4 ADD DUP7 SWAP1 MSTORE SWAP3 MLOAD SWAP3 SWAP1 SWAP4 AND SWAP3 PUSH4 0xC4814FAE SWAP3 PUSH1 0x64 DUP1 DUP5 ADD SWAP4 DUP3 SWAP1 SUB ADD DUP2 DUP4 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x39BE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH3 0x3CE0 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x2 SLOAD PUSH3 0x3CEF SWAP1 DUP3 PUSH3 0x32BE JUMP JUMPDEST PUSH1 0x2 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH3 0x3D17 SWAP1 DUP3 PUSH3 0x32BE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE DUP4 MLOAD DUP6 DUP2 MSTORE SWAP4 MLOAD SWAP3 SWAP4 SWAP2 SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH2 0xBE9 DUP1 PUSH3 0x3DB6 DUP4 CODECOPY ADD SWAP1 JUMP INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0xBE9 CODESIZE SUB DUP1 PUSH2 0xBE9 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE PUSH1 0x80 DUP2 LT ISZERO PUSH2 0x33 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 MLOAD PUSH1 0x20 DUP3 ADD MLOAD PUSH1 0x40 DUP4 ADD MLOAD PUSH1 0x60 SWAP1 SWAP4 ADD MLOAD SWAP2 SWAP3 SWAP1 SWAP2 DUP2 PUSH2 0x8C JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x696E76616C6964207072696365 PUSH1 0x98 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND CALLER OR SWAP1 SWAP2 SSTORE PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP7 DUP8 AND SWAP1 DUP4 AND OR SWAP1 SSTORE PUSH1 0x3 DUP1 SLOAD SWAP5 SWAP1 SWAP6 AND SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP3 SSTORE PUSH1 0x4 SWAP2 SWAP1 SWAP2 SSTORE PUSH1 0x0 SSTORE TIMESTAMP PUSH1 0x5 SSTORE PUSH2 0xB06 DUP1 PUSH2 0xE3 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x12C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xB1610D7E GT PUSH2 0xAD JUMPI DUP1 PUSH4 0xCF42A927 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xCF42A927 EQ PUSH2 0x2B4 JUMPI DUP1 PUSH4 0xD7BE4E29 EQ PUSH2 0x2BC JUMPI DUP1 PUSH4 0xE5A6B10F EQ PUSH2 0x2C4 JUMPI DUP1 PUSH4 0xFA7F1BAE EQ PUSH2 0x2CC JUMPI DUP1 PUSH4 0xFB286C65 EQ PUSH2 0x2D4 JUMPI PUSH2 0x12C JUMP JUMPDEST DUP1 PUSH4 0xB1610D7E EQ PUSH2 0x249 JUMPI DUP1 PUSH4 0xB28FA152 EQ PUSH2 0x251 JUMPI DUP1 PUSH4 0xB5B47F42 EQ PUSH2 0x26E JUMPI DUP1 PUSH4 0xB80777EA EQ PUSH2 0x276 JUMPI DUP1 PUSH4 0xC4814FAE EQ PUSH2 0x27E JUMPI PUSH2 0x12C JUMP JUMPDEST DUP1 PUSH4 0x5FF0CF84 GT PUSH2 0xF4 JUMPI DUP1 PUSH4 0x5FF0CF84 EQ PUSH2 0x1C3 JUMPI DUP1 PUSH4 0x7150D8AE EQ PUSH2 0x1EF JUMPI DUP1 PUSH4 0x8F1B4C6F EQ PUSH2 0x213 JUMPI DUP1 PUSH4 0x90E64D13 EQ PUSH2 0x239 JUMPI DUP1 PUSH4 0xA035B1FE EQ PUSH2 0x241 JUMPI PUSH2 0x12C JUMP JUMPDEST DUP1 PUSH4 0xC43CD88 EQ PUSH2 0x131 JUMPI DUP1 PUSH4 0x1703A018 EQ PUSH2 0x14B JUMPI DUP1 PUSH4 0x41C0E1B5 EQ PUSH2 0x153 JUMPI DUP1 PUSH4 0x448AB4C6 EQ PUSH2 0x15D JUMPI DUP1 PUSH4 0x4B91562E EQ PUSH2 0x197 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x139 PUSH2 0x2DC JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x139 PUSH2 0x2E3 JUMP JUMPDEST PUSH2 0x15B PUSH2 0x2E9 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x183 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x173 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x343 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x15B PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x1AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x376 JUMP JUMPDEST PUSH2 0x15B PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x1D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x421 JUMP JUMPDEST PUSH2 0x1F7 PUSH2 0x4C8 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x183 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x229 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x4D7 JUMP JUMPDEST PUSH2 0x183 PUSH2 0x4E0 JUMP JUMPDEST PUSH2 0x139 PUSH2 0x504 JUMP JUMPDEST PUSH2 0x139 PUSH2 0x50A JUMP JUMPDEST PUSH2 0x183 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x267 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x511 JUMP JUMPDEST PUSH2 0x139 PUSH2 0x64E JUMP JUMPDEST PUSH2 0x139 PUSH2 0x654 JUMP JUMPDEST PUSH2 0x15B PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x294 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH2 0x65A JUMP JUMPDEST PUSH2 0x183 PUSH2 0x6F0 JUMP JUMPDEST PUSH2 0x183 PUSH2 0x83B JUMP JUMPDEST PUSH2 0x1F7 PUSH2 0x8F4 JUMP JUMPDEST PUSH2 0x183 PUSH2 0x903 JUMP JUMPDEST PUSH2 0x139 PUSH2 0x927 JUMP JUMPDEST PUSH3 0x76A700 DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x335 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xA PUSH1 0x24 DUP3 ADD MSTORE PUSH10 0x1B9BDD081C185C995B9D PUSH1 0xB2 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SELFDESTRUCT JUMPDEST PUSH1 0x0 PUSH1 0x1 JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x36F JUMPI INVALID JUMPDEST EQ SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x3C2 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xA PUSH1 0x24 DUP3 ADD MSTORE PUSH10 0x1B9BDD081C185C995B9D PUSH1 0xB2 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x3CA PUSH2 0x903 JUMP JUMPDEST PUSH2 0x411 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x2A3432903B37BA32903430B99032B73232B217 PUSH1 0x69 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x41D PUSH1 0x2 DUP3 DUP5 PUSH2 0x92D JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x46D JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xA PUSH1 0x24 DUP3 ADD MSTORE PUSH10 0x1B9BDD081C185C995B9D PUSH1 0xB2 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x475 PUSH2 0x903 JUMP JUMPDEST PUSH2 0x4BC JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x2A3432903B37BA32903430B99032B73232B217 PUSH1 0x69 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x41D PUSH1 0x1 DUP3 DUP5 PUSH2 0x92D JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH2 0x348 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x4F8 PUSH1 0x5 SLOAD TIMESTAMP PUSH2 0x973 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH3 0x76A700 LT SWAP2 POP POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH3 0x4F1A00 DUP2 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x2 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP4 SWAP3 SWAP1 SWAP3 AND SWAP2 DUP4 SWAP2 DUP4 SWAP2 PUSH4 0x70A08231 SWAP2 PUSH1 0x24 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x569 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x57D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x593 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x2 SLOAD PUSH1 0x1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x6EB1769F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP2 DUP4 AND PUSH1 0x24 DUP4 ADD MSTORE MLOAD SWAP3 SWAP4 POP PUSH1 0x0 SWAP3 SWAP2 DUP6 AND SWAP2 PUSH4 0xDD62ED3E SWAP2 PUSH1 0x44 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x5F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x606 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x61C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x4 SLOAD SWAP1 SWAP2 POP PUSH1 0x0 SWAP1 PUSH2 0x632 SWAP1 DUP8 SWAP1 PUSH2 0x98A JUMP JUMPDEST SWAP1 POP DUP3 DUP2 GT ISZERO DUP1 ISZERO PUSH2 0x644 JUMPI POP DUP2 DUP2 GT ISZERO JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x6A6 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xA PUSH1 0x24 DUP3 ADD MSTORE PUSH10 0x1B9BDD081C185C995B9D PUSH1 0xB2 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x6AE PUSH2 0x903 JUMP JUMPDEST ISZERO PUSH2 0x6EB JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SLOAD SWAP3 DUP6 AND DUP3 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF SWAP2 DUP3 AND SWAP2 AND PUSH2 0x6E8 DUP3 DUP3 DUP6 PUSH2 0x9AF JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6FA PUSH2 0x903 JUMP JUMPDEST ISZERO PUSH2 0x80F JUMPI PUSH1 0x0 SLOAD PUSH1 0x1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x18160DDD PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD PUSH2 0x807 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0x18160DDD SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x748 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x75C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x772 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x6 SLOAD PUSH1 0x1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x18160DDD PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD PUSH2 0x801 SWAP4 PUSH2 0x2710 SWAP4 PUSH2 0x7FB SWAP4 SWAP2 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 PUSH4 0x18160DDD SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x7C9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x7DD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x7F3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 PUSH2 0x973 JUMP JUMPDEST SWAP1 PUSH2 0x98A JUMP JUMPDEST SWAP1 PUSH2 0xAB0 JUMP JUMPDEST LT SWAP1 POP PUSH2 0x501 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x807 PUSH2 0x82C PUSH1 0x6 SLOAD PUSH1 0x7 SLOAD PUSH2 0xAC3 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH2 0x801 SWAP1 PUSH2 0x2710 PUSH2 0x98A JUMP JUMPDEST PUSH1 0x0 PUSH2 0x845 PUSH2 0x903 JUMP JUMPDEST ISZERO PUSH2 0x8D7 JUMPI PUSH1 0x0 SLOAD PUSH1 0x1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x18160DDD PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD PUSH2 0x8CE SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0x18160DDD SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x893 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x8A7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x8BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x7 SLOAD PUSH2 0x801 SWAP1 PUSH2 0x2710 PUSH2 0x98A JUMP JUMPDEST LT ISZERO SWAP1 POP PUSH2 0x501 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x8CE PUSH2 0x82C PUSH1 0x6 SLOAD PUSH1 0x7 SLOAD PUSH2 0xAC3 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x91B PUSH1 0x5 SLOAD TIMESTAMP PUSH2 0x973 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH3 0x4F1A00 LT ISZERO SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF DUP2 AND SWAP2 DUP6 SWAP2 DUP3 SWAP2 SWAP1 PUSH1 0xFF NOT AND PUSH1 0x1 DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x963 JUMPI INVALID JUMPDEST MUL OR SWAP1 SSTORE POP PUSH2 0x6E8 DUP3 DUP3 DUP7 PUSH2 0x9AF JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 GT ISZERO PUSH2 0x97F JUMPI INVALID JUMPDEST POP DUP1 DUP3 SUB JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x999 JUMPI POP PUSH1 0x0 PUSH2 0x984 JUMP JUMPDEST POP DUP2 DUP2 MUL DUP2 DUP4 DUP3 DUP2 PUSH2 0x9A7 JUMPI INVALID JUMPDEST DIV EQ PUSH2 0x984 JUMPI INVALID JUMPDEST DUP2 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x9BB JUMPI INVALID JUMPDEST DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x9C7 JUMPI INVALID JUMPDEST EQ PUSH2 0x6EB JUMPI PUSH1 0x2 DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x9DA JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0x9F5 JUMPI PUSH1 0x6 SLOAD PUSH2 0x9ED SWAP1 DUP3 PUSH2 0x973 JUMP JUMPDEST PUSH1 0x6 SSTORE PUSH2 0xA1A JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xA03 JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0xA1A JUMPI PUSH1 0x7 SLOAD PUSH2 0xA16 SWAP1 DUP3 PUSH2 0x973 JUMP JUMPDEST PUSH1 0x7 SSTORE JUMPDEST PUSH1 0x2 DUP3 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xA28 JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0xA43 JUMPI PUSH1 0x6 SLOAD PUSH2 0xA3B SWAP1 DUP3 PUSH2 0xAC3 JUMP JUMPDEST PUSH1 0x6 SSTORE PUSH2 0xA68 JUMP JUMPDEST PUSH1 0x1 DUP3 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xA51 JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0xA68 JUMPI PUSH1 0x7 SLOAD PUSH2 0xA64 SWAP1 DUP3 PUSH2 0xAC3 JUMP JUMPDEST PUSH1 0x7 SSTORE JUMPDEST PUSH32 0x8FCC50C2C4EDD06D51AE66E9E21ED76B32A1766C57F491788E1AA24A1B58C256 PUSH1 0x7 SLOAD PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 DUP2 PUSH2 0xABB JUMPI INVALID JUMPDEST DIV SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP2 DUP2 ADD DUP3 DUP2 LT ISZERO PUSH2 0x984 JUMPI INVALID INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SUB NOT DUP13 SWAP8 SMOD MSTORE8 PUSH29 0xE5959B3E8267A2B8A721CC26A72203A7D67CA0A492033FB5A264736F6C PUSH4 0x43000701 STOP CALLER GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220746F20746865207A65726F2061 PUSH5 0x6472657373 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH2 0x7070 PUSH19 0x6F766520746F20746865207A65726F20616464 PUSH19 0x6573734F6666657220776173206E6F74207375 PUSH7 0x66696369656E74 PUSH13 0x792066756E6465644173206C6F PUSH15 0x672061732074686520636F6E747261 PUSH4 0x74206973 KECCAK256 PUSH2 0x6374 PUSH10 0x76652C20796F75206172 PUSH6 0x20626F756E64 KECCAK256 PUSH21 0x6F206974596F7520617265206E6F7420617574686F PUSH19 0x697A656420746F2063616E63656C2074686973 KECCAK256 PUSH2 0x6371 PUSH22 0x69736974696F6E206F666665724E6577206F66666572 PUSH20 0x206D757374206265206174206C65617374203525 KECCAK256 PUSH9 0x696768657220746861 PUSH15 0x207468652070656E64696E67206F66 PUSH7 0x65725468657265 KECCAK256 PUSH10 0x73206E6F2070656E6469 PUSH15 0x67206F666665720000000000000045 MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH3 0x75726E KECCAK256 PUSH7 0x726F6D20746865 KECCAK256 PUSH27 0x65726F206164647265737345524332303A207472616E7366657220 PUSH7 0x726F6D20746865 KECCAK256 PUSH27 0x65726F20616464726573735468697320636F6E747261637420646F PUSH6 0x73206E6F7420 PUSH19 0x6570726573656E7420656E6F75676820657175 PUSH10 0x747945524332303A2061 PUSH17 0x70726F76652066726F6D20746865207A65 PUSH19 0x6F2061646472657373596F7520617265206E6F PUSH21 0x20617574686F72697A656420746F20636F6D706C65 PUSH21 0x652074686973206163717569736974696F6E206F66 PUSH7 0x6572596F75206E PUSH6 0x656420746F20 PUSH9 0x6F6C64206174206C65 PUSH2 0x7374 KECCAK256 CALLDATALOAD 0x25 KECCAK256 PUSH16 0x6620746865206669726D20746F206D61 PUSH12 0x6520616E206F66666572A264 PUSH10 0x70667358221220EBDF6E DUP14 0xC9 0xDF CALLVALUE 0xE3 SMOD MSTORE CODECOPY CALLVALUE 0xF7 MSTORE8 DUP12 0xAB 0xEC 0xDF 0xD SGT SDIV BLOCKHASH SWAP13 0xF8 0xED 0xC1 SWAP3 BYTE LOG4 STOP AND PUSH12 0x64736F6C6343000701003300 ",
                        "sourceMap": "3075:2048:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3519:25:4;;;:::i;:::-;;;;;;;;;;;;;;;;;;4687:140;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2689:41;;;:::i;:::-;;;;;;;;;;;;;;;;2860:157:3;;;;;;;;;;;;;;;;-1:-1:-1;2860:157:3;;-1:-1:-1;;;;;2860:157:3;;;;;;:::i;3449:38:5:-;;;:::i;:::-;;;;-1:-1:-1;;;;;3449:38:5;;;;;;;;;;;;;;10776:744;;;;;;;;;;;;;;;;-1:-1:-1;10776:744:5;-1:-1:-1;;;;;10776:744:5;;:::i;:::-;;9669:617:4;;;:::i;1839:100:3:-;;;:::i;9156:126:5:-;;;;;;;;;;;;;;;;-1:-1:-1;9156:126:5;-1:-1:-1;;;;;9156:126:5;;:::i;3488:265:3:-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;3488:265:3;;;;;;;;;;;;;;;;;:::i;8125:1023:5:-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;8125:1023:5;;;;;;;;;;:::i;4307:144:2:-;;;:::i;1667:30:3:-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;11661:514:5;;;;;;;;;;;;;;;;-1:-1:-1;11661:514:5;-1:-1:-1;;;;;11661:514:5;;:::i;3120:32:4:-;;;:::i;4162:206:3:-;;;;;;;;;;;;;;;;-1:-1:-1;4162:206:3;;-1:-1:-1;;;;;4162:206:3;;;;;;:::i;9428:136:5:-;;;;;;;;;;;;;;;;-1:-1:-1;9428:136:5;-1:-1:-1;;;;;9428:136:5;;:::i;6112:303:3:-;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;6112:303:3;;;;;;;;;;;;;;;;;-1:-1:-1;6112:303:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;6112:303:3;;;;;;;;;;-1:-1:-1;6112:303:3;;-1:-1:-1;6112:303:3;-1:-1:-1;6112:303:3;:::i;8486:133:4:-;;;:::i;6862:164::-;;;;;;;;;;;;;;;;-1:-1:-1;6862:164:4;;:::i;7162:1173::-;;;;;;;;;;;;;;;;-1:-1:-1;7162:1173:4;;;;;;-1:-1:-1;;;;;7162:1173:4;;:::i;4978:102::-;;;:::i;3494:35:5:-;;;:::i;5621:103::-;;;;;;;;;;;;;;;;-1:-1:-1;5621:103:5;;;;:::i;12493:97:4:-;;;:::i;10163:427:5:-;;;:::i;8848:479:4:-;;;:::i;2002:119:3:-;;;;;;;;;;;;;;;;-1:-1:-1;2002:119:3;-1:-1:-1;;;;;2002:119:3;;:::i;4459:659:2:-;;;;;;;;;;;;;;;;-1:-1:-1;4459:659:2;-1:-1:-1;;;;;4459:659:2;;:::i;3073:37:5:-;;;:::i;11027:644:4:-;;;:::i;8343:135::-;;;:::i;4835:::-;;;:::i;9290:130:5:-;;;;;;;;;;;;;;;;-1:-1:-1;9290:130:5;-1:-1:-1;;;;;9290:130:5;;:::i;3009:30:4:-;;;:::i;5906:121:5:-;;;;;;;;;;;;;;;;-1:-1:-1;5906:121:5;-1:-1:-1;;;;;5906:121:5;;:::i;4871:216:3:-;;;;;;;;;;;;;;;;-1:-1:-1;4871:216:3;;-1:-1:-1;;;;;4871:216:3;;;;;;:::i;5088:176:4:-;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5088:176:4;;;;;;;;;;;;;;;;;-1:-1:-1;5088:176:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;5088:176:4;;;;;;;;;;-1:-1:-1;5088:176:4;;-1:-1:-1;5088:176:4;-1:-1:-1;5088:176:4;:::i;4147:152:2:-;;;;;;;;;;;;;;;;-1:-1:-1;4147:152:2;;-1:-1:-1;;;;;4147:152:2;;;;;;:::i;3268:48:5:-;;;;;;;;;;;;;;;;-1:-1:-1;3268:48:5;-1:-1:-1;;;;;3268:48:5;;:::i;2893:42:4:-;;;:::i;12598:107::-;;;:::i;5386:221::-;;;;;;;;;;;;;;;;-1:-1:-1;5386:221:4;;-1:-1:-1;;;;;5386:221:4;;;;;;:::i;2860:24::-;;;:::i;3143:39:5:-;;;;;;;;;;;;;;;;-1:-1:-1;3143:39:5;-1:-1:-1;;;;;3143:39:5;;:::i;:::-;;;;-1:-1:-1;;;;;3143:39:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3180:19:2;;;:::i;2570:143:3:-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;2570:143:3;;;;;;;;;;:::i;5902:439:4:-;;;;;;;;;;;;;;;;-1:-1:-1;5902:439:4;;:::i;:::-;;;;-1:-1:-1;;;;;5902:439:4;;;;;;;;;;;;;;;;;;;;;;8627:213;;;:::i;9572:128:5:-;;;;;;;;;;;;;;;;-1:-1:-1;9572:128:5;-1:-1:-1;;;;;9572:128:5;;:::i;10294:107:4:-;;;:::i;3519:25::-;;;;;;:::o;4687:140::-;4803:7;;:14;;;-1:-1:-1;;;4803:14:4;;;;4733:13;;-1:-1:-1;;;;;4803:7:4;;-1:-1:-1;;4803:14:4;;;;;:7;;:14;;;;;;;:7;:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4803:14:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4803:14:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;4803:14:4;;;;;;;;;;;;-1:-1:-1;4803:14:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4772:46;;;;;;-1:-1:-1;;;4772:46:4;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4772:46:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4758:61;;4687:140;:::o;2689:41::-;;;;:::o;2860:157:3:-;2934:4;2951:36;2960:10;2972:7;2981:5;2951:8;:36::i;:::-;-1:-1:-1;3005:4:3;2860:157;;;;;:::o;3449:38:5:-;;;-1:-1:-1;;;;;3449:38:5;;:::o;10776:744::-;10832:18;;:::i;:::-;-1:-1:-1;;;;;;10853:19:5;;;;;;;:6;:19;;;;;;;;;10832:40;;;;;;;;;;;;;-1:-1:-1;10832:40:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10986:42;;;;;-1:-1:-1;;;10986:42:5;;;;;;;;;;;;-1:-1:-1;;;10986:42:5;;;;;;;;;;;;;;;11047:14;;-1:-1:-1;;;;;11047:28:5;11065:10;11047:28;11039:72;;;;;-1:-1:-1;;;11039:72:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;11166:15;11130:32;11150:11;;11130:5;:15;;;:19;;:32;;;;:::i;:::-;:51;;11122:89;;;;;-1:-1:-1;;;11122:89:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;11241:14;;-1:-1:-1;;;;;11273:19:5;;;11222:16;11273:19;;;:6;:19;;;;;;;;11266:26;;-1:-1:-1;;;;;;11266:26:5;;;;;-1:-1:-1;11266:26:5;;;;;;;;;;;;;;;;;;;;;;11311:39;;-1:-1:-1;;;11311:39:5;;;;;;;;;;;;;;;;;:17;;;;-1:-1:-1;;11311:39:5;;;;;11273:19;11311:39;;;;;;;:17;:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;11311:39:5;11303:78;;;;;-1:-1:-1;;;11303:78:5;;;;;;;;;;;;-1:-1:-1;;;11303:78:5;;;;;;;;;;;;;;;11392:56;11402:11;11415:8;11425:22;11435:11;11425:9;:22::i;:::-;11392:9;:56::i;:::-;11464:48;;;;;;;;-1:-1:-1;;;;;11464:48:5;;;;;;;;;;;;;;;;;10776:744;;;;;:::o;9669:617:4:-;12756:13;:11;:13::i;:::-;:23;;;;-1:-1:-1;12773:6:4;;;;12756:23;12748:61;;;;;-1:-1:-1;;;12748:61:4;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;12748:61:4;;;;;;;;;;;;;;;9749:5:::1;::::0;:13:::1;::::0;;-1:-1:-1;;;9749:13:4;;;;9733::::1;::::0;-1:-1:-1;;;;;9749:5:4::1;::::0;:11:::1;::::0;:13:::1;::::0;;::::1;::::0;::::1;::::0;;;;;;;;:5;:13;::::1;;::::0;::::1;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;::::0;::::1;;-1:-1:-1::0;9749:13:4;;-1:-1:-1;;;;;;9781:19:4;::::1;:10;:19;9773:89;;;;-1:-1:-1::0;;;9773:89:4::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9881:5;::::0;:23:::1;::::0;;-1:-1:-1;;;9881:23:4;;;;-1:-1:-1;;;;;9881:5:4;;::::1;::::0;:21:::1;::::0;:23:::1;::::0;;::::1;::::0;::::1;::::0;;;;;;;;;:5;:23;::::1;;::::0;::::1;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;::::0;::::1;;-1:-1:-1::0;9881:23:4;9873:68:::1;;;::::0;;-1:-1:-1;;;9873:68:4;;::::1;;::::0;::::1;::::0;;;;;;;::::1;::::0;;;;;;;;;;;;;::::1;;9960:5;::::0;-1:-1:-1;;;;;9960:5:4::1;:18;9995:16;10005:5:::0;9995:9:::1;:16::i;:::-;9979:13;:11;:13::i;:::-;:32;9960:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;::::0;::::1;;-1:-1:-1::0;9960:52:4;9952:92:::1;;;::::0;;-1:-1:-1;;;9952:92:4;;::::1;;::::0;::::1;::::0;::::1;::::0;;;;::::1;::::0;;;;;;;;;;;;;::::1;;10077:5;::::0;:16:::1;::::0;;-1:-1:-1;;;10077:16:4;;;;10055:54:::1;::::0;10070:5;;-1:-1:-1;;;;;10077:5:4;;::::1;::::0;:14:::1;::::0;:16:::1;::::0;;::::1;::::0;::::1;::::0;;;;;;;;;:5;:16;::::1;;::::0;::::1;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;::::0;::::1;;-1:-1:-1::0;10077:16:4;10095:5:::1;::::0;:13:::1;::::0;;-1:-1:-1;;;10095:13:4;;;;-1:-1:-1;;;;;10095:5:4;;::::1;::::0;:11:::1;::::0;:13:::1;::::0;;::::1;::::0;10077:16:::1;::::0;10095:13;;;;;;;;:5;:13;::::1;;::::0;::::1;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;::::0;::::1;;-1:-1:-1::0;10095:13:4;10055:14:::1;:54::i;:::-;10261:5;::::0;10125:153:::1;::::0;;10170:10:::1;10125:153:::0;;10195:4:::1;10125:153;::::0;::::1;::::0;-1:-1:-1;;;;;10261:5:4;;::::1;10125:153:::0;;;;;;;;;;;::::1;::::0;;;;-1:-1:-1;;;;10125:153:4;;;;;;;::::1;::::0;::::1;::::0;;;;;;;::::1;12820:1;9669:617::o:0;1839:100:3:-;1919:12;;1839:100;:::o;9156:126:5:-;-1:-1:-1;;;;;9246:19:5;;;9219:7;9246:19;;;:6;:19;;;;;:28;;9156:126;;;;:::o;3488:265:3:-;3586:4;3603:36;3613:6;3621:9;3632:6;3603:9;:36::i;:::-;-1:-1:-1;;;;;3679:19:3;;;;;;-1:-1:-1;3679:19:3;;;;;;;;3667:10;3679:31;;;;;;;;;3650:73;;3679:19;;:43;;3715:6;3679:35;:43::i;:::-;3650:8;:73::i;:::-;-1:-1:-1;3741:4:3;3488:265;;;;;:::o;8125:1023:5:-;8217:30;8235:11;8217:17;:30::i;:::-;8209:75;;;;;-1:-1:-1;;;8209:75:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8295:22;8320:33;8338:14;8320:17;:33::i;:::-;8295:58;;8389:1;8372:14;:18;8364:53;;;;;-1:-1:-1;;;8364:53:5;;;;;;;;;;;;-1:-1:-1;;;8364:53:5;;;;;;;;;;;;;;;8447:10;8428:16;8486:22;8496:11;8486:9;:22::i;:::-;8468:40;-1:-1:-1;8519:18:5;8540:27;8468:40;8552:14;8540:11;:27::i;:::-;8519:48;-1:-1:-1;8603:14:5;8637:11;8629:55;;;;;-1:-1:-1;;;8629:55:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;8703:19:5;;;;;;:6;:19;;;;;-1:-1:-1;8703:30:5;;:35;8695:71;;;;;-1:-1:-1;;;8695:71:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;8785:58;;;-1:-1:-1;;;8785:58:5;;-1:-1:-1;;;;;8785:58:5;;;;;;;8825:4;8785:58;;;;;;;;;;;;:21;;;;-1:-1:-1;;8785:58:5;;;;;;;;;;;;;;;-1:-1:-1;8785:21:5;:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;8785:58:5;8777:97;;;;;-1:-1:-1;;;8777:97:5;;;;;;;;;;;;-1:-1:-1;;;8777:97:5;;;;;;;;;;;;;;;8909:172;;;;;;;;-1:-1:-1;;;;;8909:172:5;;;;;;;;;;;;;9011:15;8909:172;;;;;;;;;;;;;;;8887:19;;;-1:-1:-1;8887:19:5;;;:6;:19;;;;;:194;;;;;;;-1:-1:-1;;;;;;8887:194:5;;;;;;;;-1:-1:-1;8887:194:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9099:41;;;;;;;8909:172;;9099:41;;;;;;;;;8125:1023;;;;;;;:::o;4307:144:2:-;4364:7;4404:20;:18;:20::i;:::-;-1:-1:-1;;;;;4391:50:2;;:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4391:52:2;;-1:-1:-1;4307:144:2;:::o;1667:30:3:-;;;;;;:::o;11661:514:5:-;11743:17;:15;:17::i;:::-;-1:-1:-1;;;;;11729:31:5;:10;:31;11721:68;;;;;-1:-1:-1;;;11721:68:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;11800:18;;:::i;:::-;-1:-1:-1;;;;;;11821:19:5;;;;;;;:6;:19;;;;;;;;;11800:40;;;;;;;;;;;;;-1:-1:-1;11800:40:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11906:48;;;;;-1:-1:-1;;;11906:48:5;;;;;;;;;;;;-1:-1:-1;;;11906:48:5;;;;;;;;;;;;;;;-1:-1:-1;;;;;11972:19:5;;;;;;;:6;:19;;;;;;;;11965:26;;-1:-1:-1;;;;;;11965:26:5;;;;;-1:-1:-1;11965:26:5;;;;;;;;;;;;;;;;;;;;;;12028:14;;12044:16;;;;12010:51;;-1:-1:-1;;;12010:51:5;;;;;;;;;;;;;;;:17;;;;-1:-1:-1;;12010:51:5;;;;;11972:19;12010:51;;;;;;;:17;:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;12010:51:5;12002:90;;;;;-1:-1:-1;;;12002:90:5;;;;;;;;;;;;-1:-1:-1;;;12002:90:5;;;;;;;;;;;;;;;12134:14;;12150:16;;;;;12108:59;;;;;;;-1:-1:-1;;;;;12108:59:5;;;;;;;;;;;;;;;11661:514;;;:::o;3120:32:4:-;;;;:::o;4162:206:3:-;4268:10;4242:4;4289:23;;;:11;:23;;;;;;;;-1:-1:-1;;;;;4289:32:3;;;;;;;;;;4242:4;;4259:79;;4289:32;;:48;;4326:10;4289:36;:48::i;9428:136:5:-;-1:-1:-1;;;;;9524:19:5;;;9497:7;9524:19;;;:6;:19;;;;;:32;;;;;9428:136::o;6112:303:3:-;6206:4;6223:12;6238:27;6247:9;6258:6;6238:8;:27::i;:::-;6223:42;;6280:7;6276:107;;;6303:68;;-1:-1:-1;;;6303:68:3;;6346:10;6303:68;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;6303:42:3;;;;;6346:10;6358:6;;6366:4;;;;6303:68;;;;6366:4;;;;6303:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6276:107;6400:7;6112:303;-1:-1:-1;;;;;6112:303:3:o;8486:133:4:-;12756:13;:11;:13::i;:::-;:23;;;;-1:-1:-1;12773:6:4;;;;12756:23;12748:61;;;;;-1:-1:-1;;;12748:61:4;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;12748:61:4;;;;;;;;;;;;;;;8574:5:::1;::::0;8553:10:::1;::::0;-1:-1:-1;;;;;8574:5:4::1;:12;8553:10:::0;8594:16:::1;8553:10:::0;8594:9:::1;:16::i;:::-;8574:37;;;;;;;;;;;;;-1:-1:-1::0;;;;;8574:37:4::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;12820:1;8486:133::o:0;6862:164::-;6910:25;6916:10;6928:6;6910:5;:25::i;:::-;6956:20;:18;:20::i;:::-;-1:-1:-1;;;;;6946:36:4;;6983:34;6994:22;;6983:6;:10;;:34;;;;:::i;:::-;6946:72;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7162:1173;7258:6;;;;7250:43;;;;;-1:-1:-1;;;7250:43:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;7304:19;7334:20;:18;:20::i;:::-;-1:-1:-1;;;;;7326:41:4;;:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;7326:43:4;;-1:-1:-1;7396:10:4;7444:48;7486:5;7444:37;7326:43;3415:4;7444:15;:37::i;:::-;:41;;:48::i;:::-;7427:13;:11;:13::i;:::-;:65;;7419:124;;;;-1:-1:-1;;;7419:124:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7582:39;7615:5;7582:28;:11;3292:3;7582:15;:28::i;:39::-;7562:16;7572:5;7562:9;:16::i;:::-;:59;;7554:129;;;;-1:-1:-1;;;7554:129:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7696:19;;:37;;-1:-1:-1;;;;;7696:19:4;;;;;;7725:7;;7696:19;:37;:19;:37;7725:7;7696:19;;:37;;;;;;;;;;;;;;;;;;;;7747:20;7786:10;7798:8;7808:13;7823:17;;7770:71;;;;;:::i;:::-;-1:-1:-1;;;;;7770:71:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;7770:71:4;;;;;;;;;;;;;;;-1:-1:-1;7747:94:4;-1:-1:-1;;;;;;7860:21:4;;;7898:16;7908:5;7898:9;:16::i;:::-;7882:13;:11;:13::i;:::-;:32;7860:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;7860:55:4;7852:88;;;;;-1:-1:-1;;;7852:88:4;;;;;;;;;;;;-1:-1:-1;;;7852:88:4;;;;;;;;;;;;;;;7955:13;:11;:13::i;:::-;7951:279;;;8005:5;;:16;;;-1:-1:-1;;;8005:16:4;;;;-1:-1:-1;;;;;8005:5:4;;;;:14;;:16;;;;;;;;;;;;;;;:5;:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;8005:16:4;-1:-1:-1;;;;;7993:28:4;;;;;;:98;;;;-1:-1:-1;8042:5:4;;:13;;;-1:-1:-1;;;8042:13:4;;;;:49;;8085:5;;8042:38;;3200:5;;-1:-1:-1;;;;;8042:5:4;;:11;;:13;;;;;;;;;;;;;;:5;:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;8042:13:4;;:17;:38::i;:49::-;8025:13;:66;;7993:98;7985:171;;;;-1:-1:-1;;;7985:171:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8171:47;;;;;;;;;;;;;;;;;;:15;:47::i;:::-;8240:5;:16;;-1:-1:-1;;;;;;8240:16:4;-1:-1:-1;;;;;8240:16:4;;;;;;;;;;8274:53;;;8294:13;8309:17;:15;:17::i;:::-;8274:53;;;;;;-1:-1:-1;;;;;8274:53:4;;;;;;;;;;;;;;;;;7162:1173;;;;;:::o;4978:102::-;5064:7;;-1:-1:-1;;;;;5064:7:4;;4978:102::o;3494:35:5:-;;;;:::o;5621:103::-;5694:10;5677:28;;;;:16;:28;;;;;:39;;-1:-1:-1;;5677:39:5;5708:8;;5677:39;;;;;;5621:103::o;12493:97:4:-;12576:5;;-1:-1:-1;;;;;12576:5:4;;12493:97::o;10163:427:5:-;10214:10;10207:18;;;;:6;:18;;;;;:29;;;:34;10203:380;;10286:10;10258:18;10279;;;:6;:18;;;;;;;;:29;;;;;10348:31;;;;;10395:25;;-1:-1:-1;;;;;;10395:25:5;;;;;;;;;-1:-1:-1;10395:25:5;;;;;;;;;;;;10443:41;;-1:-1:-1;;;10443:41:5;;;;;;;;;;;;;;;;;10279:29;;-1:-1:-1;;;;;10348:31:5;;;;;;-1:-1:-1;;10443:41:5;;;;;10279:18;;10443:41;;;;;;;;;10348:31;10443:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;10443:41:5;10435:80;;;;;-1:-1:-1;;;10435:80:5;;;;;;;;;;;;-1:-1:-1;;;10435:80:5;;;;;;;;;;;;;;;10535:36;;;;;;;;10548:10;;10535:36;;;;;;;;;;10203:380;;;10163:427::o;8848:479:4:-;12756:13;:11;:13::i;:::-;:23;;;;-1:-1:-1;12773:6:4;;;;12756:23;12748:61;;;;;-1:-1:-1;;;12748:61:4;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;12748:61:4;;;;;;;;;;;;;;;8915:5:::1;::::0;:18:::1;::::0;;-1:-1:-1;;;8915:18:4;;;;-1:-1:-1;;;;;8915:5:4;;::::1;::::0;:16:::1;::::0;:18:::1;::::0;;::::1;::::0;::::1;::::0;;;;;;;;;:5;:18;::::1;;::::0;::::1;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;::::0;::::1;;-1:-1:-1::0;8915:18:4;8911:409:::1;;;8950:32;::::0;;;;::::1;::::0;;;::::1;::::0;;-1:-1:-1;;;8950:32:4::1;::::0;::::1;::::0;::::1;::::0;:15:::1;:32::i;:::-;8911:409;;;9004:5;::::0;:23:::1;::::0;;-1:-1:-1;;;9004:23:4;;;;-1:-1:-1;;;;;9004:5:4;;::::1;::::0;:21:::1;::::0;:23:::1;::::0;;::::1;::::0;::::1;::::0;;;;;;;;;:5;:23;::::1;;::::0;::::1;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;::::0;::::1;;-1:-1:-1::0;9004:23:4;9000:320:::1;;;9044:37;::::0;;;;::::1;::::0;;;::::1;::::0;;-1:-1:-1;;;9044:37:4::1;::::0;::::1;::::0;::::1;::::0;:15:::1;:37::i;9000:320::-;9104:5;::::0;9149:13:::1;::::0;;-1:-1:-1;;;9149:13:4;;;;-1:-1:-1;;;;;9104:5:4;;::::1;::::0;:18:::1;::::0;9139:24:::1;::::0;9104:5;;9149:11:::1;::::0;:13:::1;::::0;;::::1;::::0;::::1;::::0;;;;;;;;9104:5;9149:13;::::1;;::::0;::::1;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;::::0;::::1;;-1:-1:-1::0;9149:13:4;9139:9:::1;:24::i;:::-;9123:13;:11;:13::i;:::-;:40;9104:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;::::0;::::1;;-1:-1:-1::0;9104:60:4;9099:221:::1;;9181:52;;;;;;;;;;;;;;;;;;:15;:52::i;9099:221::-;9266:42;::::0;;-1:-1:-1;;;9266:42:4;;::::1;;::::0;::::1;::::0;;;;;;;::::1;::::0;;;;;;;;;;;;;::::1;2002:119:3::0;-1:-1:-1;;;;;2095:18:3;2068:7;2095:18;;;;;;;;;;;;2002:119::o;4459:659:2:-;4540:7;4560:12;4575:39;4599:14;4575:23;:39::i;:::-;4560:54;-1:-1:-1;4629:8:2;;4625:486;;4661:4;-1:-1:-1;4654:11:2;;4625:486;4705:20;:18;:20::i;:::-;-1:-1:-1;;;;;4687:38:2;;;;;;4683:428;;;-1:-1:-1;;4749:22:2;;4742:29;;4683:428;5003:96;5076:22;;5016:20;:18;:20::i;:::-;5003:68;;;-1:-1:-1;;;5003:68:2;;-1:-1:-1;;;;;5003:68:2;;;;;;;;;:52;;;;;;;:68;;;;;;;;;;;;;;;:52;:68;;;;;;;;;;:96;4996:103;;;;;3073:37:5;;;;:::o;11027:644:4:-;11072:6;;;;11064:41;;;;;-1:-1:-1;;;11064:41:4;;;;;;;;;;;;-1:-1:-1;;;11064:41:4;;;;;;;;;;;;;;;11116:17;11136:10;11116:30;;11189:45;11228:5;11189:34;11207:15;;11189:13;:11;:13::i;:::-;:17;;:34::i;:45::-;11165:20;11175:9;11165;:20::i;:::-;:69;;11157:100;;;;;-1:-1:-1;;;11157:100:4;;;;;;;;;;;;-1:-1:-1;;;11157:100:4;;;;;;;;;;;;;;;11274:13;:11;:13::i;:::-;11270:297;;;11309:5;;:23;;;-1:-1:-1;;;11309:23:4;;;;-1:-1:-1;;;;;11309:5:4;;;;:21;;:23;;;;;;;;;;;;;;;:5;:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;11309:23:4;11304:179;;11353:8;:6;:8::i;:::-;11418:5;;:23;;;-1:-1:-1;;;11418:23:4;;;;-1:-1:-1;;;;;11418:5:4;;;;:21;;:23;;;;;;;;;;;;;;;:5;:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;11418:23:4;11410:57;;;;;-1:-1:-1;;;11410:57:4;;;;;;;;;;;;-1:-1:-1;;;11410:57:4;;;;;;;;;;;;;;;11497:20;:18;:20::i;:::-;11541:13;:11;:13::i;:::-;11540:14;11532:23;;;;11579:39;11594:9;11605;11616:1;11579:14;:39::i;:::-;11634:29;;;-1:-1:-1;;;;;11634:29:4;;;;;;;;;;;;;;;11027:644;:::o;8343:135::-;12756:13;:11;:13::i;:::-;:23;;;;-1:-1:-1;12773:6:4;;;;12756:23;12748:61;;;;;-1:-1:-1;;;12748:61:4;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;12748:61:4;;;;;;;;;;;;;;;8432:5:::1;::::0;8411:10:::1;::::0;-1:-1:-1;;;;;8432:5:4::1;:13;8411:10:::0;8453:16:::1;8411:10:::0;8453:9:::1;:16::i;4835:135::-:0;4944:7;;:16;;;-1:-1:-1;;;4944:16:4;;;;4883:13;;-1:-1:-1;;;;;4944:7:4;;-1:-1:-1;;4944:16:4;;;;;:7;;:16;;;;;;;:7;:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4944:16:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4944:16:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;4944:16:4;;;;;;;;;;;;-1:-1:-1;4944:16:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4922:39;;;;;;-1:-1:-1;;;4922:39:4;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4922:39:4;;;;;;;;;;;;9290:130:5;-1:-1:-1;;;;;9382:19:5;9355:7;9382:19;;;:6;:19;;;;;-1:-1:-1;9382:30:5;;;9290:130::o;3009:30:4:-;;;;:::o;5906:121:5:-;-1:-1:-1;;;;;5995:24:5;5970:4;5995:24;;;:16;:24;;;;;;;;5994:25;;5906:121::o;4871:216:3:-;4982:10;4956:4;5003:23;;;:11;:23;;;;;;;;-1:-1:-1;;;;;5003:32:3;;;;;;;;;;4956:4;;4973:84;;5003:32;;:53;;5040:15;5003:36;:53::i;5088:176:4:-;5216:7;;-1:-1:-1;;;;;5216:7:4;5194:10;:30;5186:39;;;;;;5236:20;5243:4;5249:6;5236;:20::i;:::-;5088:176;;;;:::o;4147:152:2:-;4242:4;4266:25;4281:2;4285:5;4266:14;:25::i;:::-;4259:32;4147:152;-1:-1:-1;;;4147:152:2:o;3268:48:5:-;;;;;;;;;;;;;;;:::o;2893:42:4:-;;;-1:-1:-1;;;;;2893:42:4;;:::o;12598:107::-;12642:4;;12666:17;:15;:17::i;:::-;-1:-1:-1;;;;;12666:31:4;;;;12598:107;-1:-1:-1;12598:107:4:o;5386:221::-;12883:13;:11;:13::i;:::-;12882:14;12874:51;;;;;-1:-1:-1;;;12874:51:4;;;;;;;;;;;;-1:-1:-1;;;12874:51:4;;;;;;;;;;;;;;;5480:7:::1;::::0;:55:::1;::::0;;-1:-1:-1;;;5480:55:4;;5501:10:::1;5480:55;::::0;::::1;::::0;5521:4:::1;5480:55:::0;;;;;;;;;;;;-1:-1:-1;;;;;5480:7:4;;::::1;::::0;-1:-1:-1;;5480:55:4;;;;;::::1;::::0;;;;;;;;;-1:-1:-1;5480:7:4;:55;::::1;;::::0;::::1;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;::::0;::::1;;-1:-1:-1::0;5480:55:4;5472:89:::1;;;::::0;;-1:-1:-1;;;5472:89:4;;::::1;;::::0;::::1;::::0;::::1;::::0;;;;-1:-1:-1;;;5472:89:4;;;;;;;;;;;;;::::1;;5572:27;5579:11;5592:6;5572;:27::i;:::-;5386:221:::0;;:::o;2860:24::-;;;-1:-1:-1;;;;;2860:24:4;;:::o;3143:39:5:-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3143:39:5;;;;;;;;:::o;3180:19:2:-;;;;;;;;;;;;;;;-1:-1:-1;;3180:19:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2570:143:3:-;-1:-1:-1;;;;;2678:18:3;;;2651:7;2678:18;;;-1:-1:-1;2678:18:3;;;;;;;;:27;;;;;;;;;;;;;2570:143::o;5902:439:4:-;5988:6;;5950:7;;;;5988:6;;5987:7;5979:74;;;;-1:-1:-1;;;5979:74:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6064:25;6070:10;6082:6;6064:5;:25::i;:::-;6100:23;6126:34;6137:22;;6126:6;:10;;:34;;;;:::i;:::-;6179:7;;:45;;;-1:-1:-1;;;6179:45:4;;6196:10;6179:45;;;;;;;;;;;;;;-1:-1:-1;;;;;;6179:7:4;;;;-1:-1:-1;;6179:45:4;;;;;;;;;;;;;;;-1:-1:-1;6179:7:4;:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6179:45:4;6171:54;;;;;;6252:7;;-1:-1:-1;;;;;6252:7:4;;6262:15;;-1:-1:-1;5902:439:4;-1:-1:-1;;5902:439:4:o;8627:213::-;12756:13;:11;:13::i;:::-;:23;;;;-1:-1:-1;12773:6:4;;;;12756:23;12748:61;;;;;-1:-1:-1;;;12748:61:4;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;12748:61:4;;;;;;;;;;;;;;;8711:5:::1;::::0;:13:::1;::::0;;-1:-1:-1;;;8711:13:4;;;;-1:-1:-1;;;;;8711:5:4;;::::1;::::0;:11:::1;::::0;:13:::1;::::0;;::::1;::::0;::::1;::::0;;;;;;;;;:5;:13;::::1;;::::0;::::1;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;::::0;::::1;;-1:-1:-1::0;8711:13:4;-1:-1:-1;;;;;8697:27:4::1;:10;:27;8689:95;;;;-1:-1:-1::0;;;8689:95:4::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8795:37;::::0;;;;::::1;::::0;;;::::1;::::0;;-1:-1:-1;;;8795:37:4::1;::::0;::::1;::::0;::::1;::::0;:15:::1;:37::i;9572:128:5:-:0;-1:-1:-1;;;;;9663:19:5;9636:7;9663:19;;;:6;:19;;;;;:29;;;;9572:128::o;10294:107:4:-;10338:4;10362:13;:11;:13::i;:::-;:31;;10388:5;10362:31;;;10379:6;;;;10378:7;10362:31;10355:38;;10294:107;:::o;8099:335:3:-;-1:-1:-1;;;;;8192:19:3;;8184:68;;;;-1:-1:-1;;;8184:68:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;8271:21:3;;8263:68;;;;-1:-1:-1;;;8263:68:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;8344:18:3;;;;;;;-1:-1:-1;8344:18:3;;;;;;;;:27;;;;;;;;;;;;;:35;;;8395:31;;;;;;;;;;;;;;;;;8099:335;;;:::o;1424:141:9:-;1508:5;;;1531:6;;;;1524:14;;;3987:152:2;4099:32;4115:4;4121:2;4125:5;4099:15;:32::i;:::-;3987:152;;;:::o;10409:610:4:-;10515:20;10538:19;10548:8;10538:9;:19::i;:::-;10515:42;;10568:21;10592:13;:11;:13::i;:::-;10616:6;:14;;-1:-1:-1;;10616:14:4;;;10568:37;-1:-1:-1;10641:20:4;10648:12;10641:6;:20::i;:::-;-1:-1:-1;10672:17:4;;-1:-1:-1;10692:31:4;:13;10710:12;10692:17;:31::i;:::-;10742:7;;:37;;;-1:-1:-1;;;10742:37:4;;-1:-1:-1;;;;;10742:37:4;;;;;;;;;;;;;;;;;-1:-1:-1;10742:7:4;;;-1:-1:-1;;10742:37:4;;;;;;;;;;;;;;;-1:-1:-1;10742:7:4;:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;10742:37:4;10734:65;;;;;-1:-1:-1;;;10734:65:4;;;;;;;;;;;;-1:-1:-1;;;10734:65:4;;;;;;;;;;;;;;;10810:7;:28;;-1:-1:-1;;;;;;10810:28:4;-1:-1:-1;;;;;10810:28:4;;;;;;;;;;;10849:22;:39;;;10907:7;:20;10928:8;10946:4;10953:29;10849:39;10972:9;10953:18;:29::i;:::-;10907:76;;;-1:-1:-1;;;;;;10907:76:4;;;;;;;-1:-1:-1;;;;;10907:76:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;10907:76:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;10907:76:4;10899:112;;;;;-1:-1:-1;;;10899:112:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;10409:610;;;;;;:::o;1232:123:9:-;1290:7;1322:1;1317;:6;;1310:14;;;;-1:-1:-1;1342:5:9;;;1232:123::o;305:424::-;363:9;609:6;605:47;;-1:-1:-1;639:1:9;632:8;;605:47;-1:-1:-1;668:5:9;;;672:1;668;:5;:1;691:5;;;;;:10;684:18;;;3835:144:2;3943:28;3955:7;3964:6;3943:11;:28::i;818:295:9:-;876:7;1104:1;1100;:5;;;;;;;818:295;-1:-1:-1;;;818:295:9:o;9335:326:4:-;9419:5;;:13;;;-1:-1:-1;;;9419:13:4;;;;9403;;-1:-1:-1;;;;;9419:5:4;;:11;;:13;;;;;;;;;;;;;;:5;:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;9419:13:4;;-1:-1:-1;;;;;;9448:140:4;;;9493:10;9518:5;9538:7;9560:17;:15;:17::i;:::-;9448:140;;;-1:-1:-1;;;;;9448:140:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;9448:140:4;;;;;;;;;-1:-1:-1;9448:140:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9599:5;;:12;;;-1:-1:-1;;;9599:12:4;;;;-1:-1:-1;;;;;9599:5:4;;;;:10;;:12;;;;;:5;;:12;;;;;;;;:5;;:12;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;9622:5:4;:31;;-1:-1:-1;;;;;;9622:31:4;;;-1:-1:-1;;;;9335:326:4:o;3867:327:5:-;3947:7;3997:4;-1:-1:-1;;;;;3971:31:5;;;3967:220;;;-1:-1:-1;4026:1:5;4019:8;;3967:220;4067:23;;-1:-1:-1;;;;;4049:41:5;;;4067:23;;4049:41;4045:142;;;-1:-1:-1;4114:20:5;;4107:27;;4045:142;-1:-1:-1;4174:1:5;4167:8;;5615:183:4;12883:13;:11;:13::i;:::-;12882:14;12874:51;;;;;-1:-1:-1;;;12874:51:4;;;;;;;;;;;;-1:-1:-1;;;12874:51:4;;;;;;;;;;;;;;;5713:6:::1;::::0;::::1;;5705:48;;;::::0;;-1:-1:-1;;;5705:48:4;;::::1;;::::0;::::1;::::0;::::1;::::0;;;;::::1;::::0;;;;;;;;;;;;;::::1;;5764:26;5770:11;5783:6;5764:5;:26::i;9708:217:5:-:0;9794:4;9819:33;9834:9;9845:6;9819:14;:33::i;:::-;9811:61;;;;;-1:-1:-1;;;9811:61:5;;;;;;;;;;;;-1:-1:-1;;;9811:61:5;;;;;;;;;;;;;;;9883:12;:10;:12::i;12007:237:4:-;12104:32;12120:4;12126:2;12130:5;12104:15;:32::i;:::-;12151:13;:11;:13::i;:::-;:23;;;;-1:-1:-1;12168:6:4;;;;12151:23;12147:90;;;12191:5;;:34;;;-1:-1:-1;;;12191:34:4;;-1:-1:-1;;;;;12191:34:4;;;;;;;;;;;;;;;;;;;;;;:5;;;;;:17;;:34;;;;;-1:-1:-1;;12191:34:4;;;;;;;-1:-1:-1;12191:5:4;:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12007:237;;;:::o;12252:233::-;12337:28;12349:7;12358:6;12337:11;:28::i;:::-;12380:13;:11;:13::i;:::-;:23;;;;-1:-1:-1;12397:6:4;;;;12380:23;12376:102;;;12420:5;;:46;;;-1:-1:-1;;;12420:46:4;;-1:-1:-1;;;;;12420:46:4;;;;;;;-1:-1:-1;12420:46:4;;;;;;;;;;;;;;:5;;;:17;;:46;;;;;-1:-1:-1;;12420:46:4;;;;;;-1:-1:-1;12420:5:4;:46;;;;;;;;;;;;;;;;;;;;;;;;;;3683:144:2;3791:28;3803:7;3812:6;3791:11;:28::i;2334:173:3:-;2420:4;2437:40;2447:10;2459:9;2470:6;2437:9;:40::i;5577:437::-;-1:-1:-1;;;;;5683:20:3;;5675:70;;;;-1:-1:-1;;;5675:70:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5764:23:3;;5756:71;;;;-1:-1:-1;;;5756:71:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5860:17:3;;:9;:17;;;;;;;;;;;:29;;5882:6;5860:21;:29::i;:::-;-1:-1:-1;;;;;5840:17:3;;;:9;:17;;;;;;;;;;;:49;;;;5923:20;;;;;;;:32;;5948:6;5923:24;:32::i;:::-;-1:-1:-1;;;;;5900:20:3;;;:9;:20;;;;;;;;;;;;:55;;;;5971:35;;;;;;;5900:20;;5971:35;;;;;;;;;;;;;5577:437;;;:::o;7345:314::-;-1:-1:-1;;;;;7428:21:3;;7420:67;;;;-1:-1:-1;;;7420:67:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7515:12;;:23;;7532:5;7515:16;:23::i;:::-;7500:12;:38;-1:-1:-1;;;;;7570:18:3;;:9;:18;;;;;;;;;;;:29;;7593:5;7570:22;:29::i;:::-;-1:-1:-1;;;;;7549:18:3;;:9;:18;;;;;;;;;;;:50;;;;7615:36;;;;;;;7549:9;;7615:36;;;;;;;;;;;7345:314;;:::o;11679:320:4:-;11764:28;11776:7;11785:6;11764:11;:28::i;:::-;11807:13;:11;:13::i;:::-;:23;;;;-1:-1:-1;11824:6:4;;;;11807:23;11803:189;;;11934:5;;:46;;;-1:-1:-1;;;11934:46:4;;:5;:46;;;;;;-1:-1:-1;;;;;11934:46:4;;;;;;;;;;;;;;;:5;;;;;:17;;:46;;;;;;;;;;:5;;:46;;;;;;;;;;6696:316:3;-1:-1:-1;;;;;6780:21:3;;6772:65;;;;;-1:-1:-1;;;6772:65:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;6865:12;;:24;;6882:6;6865:16;:24::i;:::-;6850:12;:39;-1:-1:-1;;;;;6921:18:3;;:9;:18;;;;;;;;;;;:30;;6944:6;6921:22;:30::i;:::-;-1:-1:-1;;;;;6900:18:3;;:9;:18;;;;;;;;;;;:51;;;;6967:37;;;;;;;6900:18;;:9;;6967:37;;;;;;;;;;6696:316;;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;:::o"
                    },
                    "gasEstimates": {
                        "creation": {
                            "codeDepositCost": "3893800",
                            "executionCost": "infinite",
                            "totalCost": "infinite"
                        },
                        "external": {
                            "acquisitionQuorum()": "1088",
                            "active()": "1057",
                            "allowance(address,address)": "1361",
                            "approve(address,uint256)": "infinite",
                            "balanceOf(address)": "1235",
                            "burn(uint256)": "infinite",
                            "cancelAcquisition()": "infinite",
                            "claimPeriod()": "1132",
                            "claims(address)": "3756",
                            "clearClaim()": "infinite",
                            "completeAcquisition()": "infinite",
                            "contestAcquisition()": "infinite",
                            "customCollateralAddress()": "1172",
                            "customCollateralRate()": "1087",
                            "decimals()": "1059",
                            "declareLost(address,address)": "infinite",
                            "decreaseAllowance(address,uint256)": "infinite",
                            "deleteClaim(address)": "infinite",
                            "getClaimDeleter()": "infinite",
                            "getClaimant(address)": "1268",
                            "getCollateral(address)": "1260",
                            "getCollateralRate(address)": "infinite",
                            "getCollateralType(address)": "1312",
                            "getPendingOffer()": "1170",
                            "getTimeStamp(address)": "1258",
                            "getWrappedContract()": "1104",
                            "increaseAllowance(address,uint256)": "infinite",
                            "initiateAcquisition(uint256,address)": "infinite",
                            "isRecoveryEnabled(address)": "1246",
                            "licenseFeeRecipient()": "1126",
                            "migrate()": "infinite",
                            "migrationQuorum()": "1065",
                            "name()": "infinite",
                            "offer()": "1192",
                            "offerExists()": "1195",
                            "onTokenTransfer(address,uint256,bytes)": "infinite",
                            "recover(address)": "infinite",
                            "recoveryDisabled(address)": "1203",
                            "setRecoverable(bool)": "21207",
                            "symbol()": "infinite",
                            "terms()": "infinite",
                            "totalSupply()": "1066",
                            "transfer(address,uint256)": "infinite",
                            "transferAndCall(address,uint256,bytes)": "infinite",
                            "transferFrom(address,address,uint256)": "infinite",
                            "unwrap(uint256)": "infinite",
                            "unwrapConversionFactor()": "1089",
                            "voteNo()": "infinite",
                            "voteYes()": "infinite",
                            "wasAcquired()": "2078",
                            "wrap(address,uint256)": "infinite"
                        },
                        "internal": {
                            "_burn(address,uint256)": "infinite",
                            "_mint(address,uint256)": "infinite",
                            "_transfer(address,address,uint256)": "infinite"
                        }
                    },
                    "methodIdentifiers": {
                        "acquisitionQuorum()": "3549788a",
                        "active()": "02fb0c5e",
                        "allowance(address,address)": "dd62ed3e",
                        "approve(address,uint256)": "095ea7b3",
                        "balanceOf(address)": "70a08231",
                        "burn(uint256)": "42966c68",
                        "cancelAcquisition()": "e1b8c38e",
                        "claimPeriod()": "7dc2cd98",
                        "claims(address)": "c6788bdd",
                        "clearClaim()": "6b03ed5f",
                        "completeAcquisition()": "141c7068",
                        "contestAcquisition()": "6f4b18df",
                        "customCollateralAddress()": "0c6f0e5d",
                        "customCollateralRate()": "60918117",
                        "decimals()": "313ce567",
                        "declareLost(address,address)": "26773ddd",
                        "decreaseAllowance(address,uint256)": "a457c2d7",
                        "deleteClaim(address)": "32a7ae95",
                        "getClaimDeleter()": "2a0a4ed5",
                        "getClaimant(address)": "1e3b9de5",
                        "getCollateral(address)": "9b56d6c9",
                        "getCollateralRate(address)": "77e071ad",
                        "getCollateralType(address)": "3bcc45ba",
                        "getPendingOffer()": "6467c09a",
                        "getTimeStamp(address)": "eb470ebf",
                        "getWrappedContract()": "58047913",
                        "increaseAllowance(address,uint256)": "39509351",
                        "initiateAcquisition(uint256,address)": "49b210b7",
                        "isRecoveryEnabled(address)": "a3ec1883",
                        "licenseFeeRecipient()": "bb689472",
                        "migrate()": "8fd3ab80",
                        "migrationQuorum()": "9e8a9a5a",
                        "name()": "06fdde03",
                        "offer()": "c028df06",
                        "offerExists()": "bc1b1e7c",
                        "onTokenTransfer(address,uint256,bytes)": "a4c0ed36",
                        "recover(address)": "0cd865ec",
                        "recoveryDisabled(address)": "b40e80d1",
                        "setRecoverable(bool)": "6427ed97",
                        "symbol()": "95d89b41",
                        "terms()": "d5025625",
                        "totalSupply()": "18160ddd",
                        "transfer(address,uint256)": "a9059cbb",
                        "transferAndCall(address,uint256,bytes)": "4000aea0",
                        "transferFrom(address,address,uint256)": "23b872dd",
                        "unwrap(uint256)": "de0e9a3e",
                        "unwrapConversionFactor()": "0832e470",
                        "voteNo()": "41c12a70",
                        "voteYes()": "90cf581c",
                        "wasAcquired()": "ec6580e2",
                        "wrap(address,uint256)": "bf376c7a"
                    }
                },
                "metadata": "{\"compiler\":{\"version\":\"0.7.1+commit.f4a555be\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_terms\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"wrappedToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"quorum\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"lostAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"collateral\",\"type\":\"uint256\"}],\"name\":\"ClaimCleared\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"lostAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"claimant\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"collateral\",\"type\":\"uint256\"}],\"name\":\"ClaimDeleted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"lostAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"claimant\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"name\":\"ClaimMade\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newClaimPeriodInDays\",\"type\":\"uint256\"}],\"name\":\"ClaimPeriodChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"lostAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"claimant\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"collateral\",\"type\":\"uint256\"}],\"name\":\"ClaimResolved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newCustomCollateralAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newCustomCollareralRate\",\"type\":\"uint256\"}],\"name\":\"CustomClaimCollateralChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newContractAddress\",\"type\":\"address\"}],\"name\":\"MigrationSucceeded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"pricePerShare\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"offerContract\",\"type\":\"address\"}],\"name\":\"OfferCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"message\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"offerContract\",\"type\":\"address\"}],\"name\":\"OfferEnded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"acquisitionQuorum\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"active\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cancelAcquisition\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimPeriod\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"claims\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"claimant\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"collateral\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"currencyUsed\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"clearClaim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"completeAcquisition\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"contestAcquisition\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"customCollateralAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"customCollateralRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"collateralType\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"lostAddress\",\"type\":\"address\"}],\"name\":\"declareLost\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"lostAddress\",\"type\":\"address\"}],\"name\":\"deleteClaim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getClaimDeleter\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"lostAddress\",\"type\":\"address\"}],\"name\":\"getClaimant\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"lostAddress\",\"type\":\"address\"}],\"name\":\"getCollateral\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"collateralType\",\"type\":\"address\"}],\"name\":\"getCollateralRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"lostAddress\",\"type\":\"address\"}],\"name\":\"getCollateralType\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPendingOffer\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"lostAddress\",\"type\":\"address\"}],\"name\":\"getTimeStamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getWrappedContract\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"pricePerShare\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"}],\"name\":\"initiateAcquisition\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"isRecoveryEnabled\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"licenseFeeRecipient\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrationQuorum\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"offer\",\"outputs\":[{\"internalType\":\"contract Acquisition\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"offerExists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onTokenTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"lostAddress\",\"type\":\"address\"}],\"name\":\"recover\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"recoveryDisabled\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"enabled\",\"type\":\"bool\"}],\"name\":\"setRecoverable\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"terms\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"unwrap\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unwrapConversionFactor\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"voteNo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"voteYes\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"wasAcquired\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"shareholder\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"wrap\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Benjamin Rickenbacher, b.rickenbacher@intergga.chLuzius Meisser, luzius@meissereconomics.com This is an ERC-20 token representing shares of CompanyName AG that are bound to a shareholder agreement that can be found at the URL defined in the constant 'terms'. The shareholder agreement is partially enforced through this smart contract. The agreement is designed to facilitate a complete acquisition of the firm even if a minority of shareholders disagree with the acquisition, to protect the interest of the minority shareholders by requiring the acquirer to offer the same conditions to everyone when acquiring the company, and to facilitate an update of the shareholder agreement even if a minority of the shareholders that are bound to this agreement disagree. The name \\\"draggable\\\" stems from the convention of calling the right to drag a minority along with a sale of the company \\\"drag-along\\\" rights. The name is chosen to ensure that token holders are aware that they are bound to such an agreement. The percentage of token holders that must agree with an update of the terms is defined by the constant UPDATE_QUORUM. The precentage of yes-votes that is needed to successfully complete an acquisition is defined in the constant ACQUISITION_QUORUM. Note that the update quorum is based on the total number of tokens in circulation. In contrast, the acquisition quorum is based on the number of votes cast during the voting period, not taking into account those who did not bother to vote.\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See `IERC20.allowance`.\"},\"approve(address,uint256)\":{\"details\":\"See `IERC20.approve`. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See `IERC20.balanceOf`.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to `approve` that can be used as a mitigation for problems described in `IERC20.approve`. Emits an `Approval` event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to `approve` that can be used as a mitigation for problems described in `IERC20.approve`. Emits an `Approval` event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"initiateAcquisition(uint256,address)\":{\"details\":\"Function to start drag-along procedure  This can be called by anyone, but there is an upfront payment.\"},\"totalSupply()\":{\"details\":\"See `IERC20.totalSupply`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See `IERC20.transferFrom`. Emits an `Approval` event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of `ERC20`; Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `value`. - the caller must have allowance for `sender`'s tokens of at least `amount`.\"}},\"title\":\"Draggable CompanyName AG Shares\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"burn(uint256)\":{\"notice\":\"Burns both the token itself as well as the wrapped token! If you want to get out of the shareholder agreement, use unwrap after it has been deactivated by a majority vote or acquisition. Burning only works if wrapped token supports burning. Also, the exact meaning of this operation might depend on the circumstances. Burning and reussing the wrapped token does not free the sender from the legal obligations of the shareholder agreement.\"},\"clearClaim()\":{\"notice\":\"Clears a claim after the key has been found again and assigns the collateral to the \\\"lost\\\" address. This is the price an adverse claimer pays for filing a false claim and makes it risky to do so.\"},\"constructor\":{\"notice\":\"Designed to be used with the Crypto Franc as currency token. See also parent constructor.\"},\"declareLost(address,address)\":{\"notice\":\"Anyone can declare that the private key to a certain address was lost by calling declareLost providing a deposit/collateral. There are three possibilities of what can happen with the claim: 1) The claim period expires and the claimant can get the deposit and the shares back by calling recover 2) The \\\"lost\\\" private key is used at any time to call clearClaim. In that case, the claim is deleted and    the deposit sent to the shareholder (the owner of the private key). It is recommended to call recover    whenever someone transfers funds to let claims be resolved automatically when the \\\"lost\\\" private key is    used again. 3) The owner deletes the claim and assigns the deposit to the claimant. This is intended to be used to resolve    disputes. Generally, using this function implies that you have to trust the issuer of the tokens to handle    the situation well. As a rule of thumb, the contract owner should assume the owner of the lost address to be the    rightful owner of the deposit. It is highly recommended that the owner observes the claims made and informs the owners of the claimed addresses whenever a claim is made for their address (this of course is only possible if they are known to the owner, e.g. through a shareholder register). To prevent frontrunning attacks, a claim can only be made if the information revealed when calling \\\"declareLost\\\" was previously commited using the \\\"prepareClaim\\\" function.\"},\"deleteClaim(address)\":{\"notice\":\"This function is to be executed by the claim deleter only in case a dispute needs to be resolved manually.\"},\"getCollateralRate(address)\":{\"notice\":\"Returns the collateral rate for the given collateral type and 0 if that type of collateral is not accepted. By default, only the token itself is accepted at a rate of 1:1. Subclasses should override this method if they want to add additional types of collateral.\"},\"isRecoveryEnabled(address)\":{\"notice\":\"Some users might want to disable claims for their address completely. For example if they use a deep cold storage solution or paper wallet.\"},\"recover(address)\":{\"notice\":\"After the claim period has passed, the claimant can call this function to send the tokens on the lost address as well as the collateral to himself.\"},\"unwrap(uint256)\":{\"notice\":\"Decrease the number of drag-along tokens. The user gets back their shares in return \"},\"wrap(address,uint256)\":{\"notice\":\"Increases the number of drag-along tokens. Requires minter to deposit an equal amount of share tokens \"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"c:/Users/luziu/Documents/aktionariat/contracts/src/DraggableShares.sol\":\"DraggableShares\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"c:/Users/luziu/Documents/aktionariat/contracts/src/Acquisition.sol\":{\"keccak256\":\"0x2a804527c12b009dc8d2580a78a3d1163810b00d5d8f25642813171c6372627f\",\"license\":\"LicenseRef-Aktionariat\",\"urls\":[\"bzz-raw://a8b8a2efe3d409f8f90da295f8f5b29af3967fa457e5e01672bf085250676d98\",\"dweb:/ipfs/QmPdrrCNgYMpcQDy3BAEQKo8Fk6cPLCB4QuHRvHxruG6TU\"]},\"c:/Users/luziu/Documents/aktionariat/contracts/src/DraggableShares.sol\":{\"keccak256\":\"0x499bd2ed415bdc7e50da56415fdc415106cd75744c678ae7695cf731defcf829\",\"license\":\"LicenseRef-Aktionariat\",\"urls\":[\"bzz-raw://816094c15964676cebe374dd8a66fda4df0ba07d4a04bdac4e76882572d2aff1\",\"dweb:/ipfs/QmSa7WgsWTmSujb8GjWEUAbS7UALQwVJpdUpHRjiLn7wL3\"]},\"c:/Users/luziu/Documents/aktionariat/contracts/src/ERC20.sol\":{\"keccak256\":\"0x2fc989a10429560f03d7db1467e541b46c6f50e5c7a71761957016f795325880\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://95f1b0c5f0e807ec78bb8dc61d42627b63acc449c8e31938b84f27299a1fb6e9\",\"dweb:/ipfs/Qmf8cj2hDyNr7eLTFDdYiX3w6oZHtjCDcMBGV33qZNBngy\"]},\"c:/Users/luziu/Documents/aktionariat/contracts/src/ERC20Draggable.sol\":{\"keccak256\":\"0x51f0c088c30bdd5b81c567752600c4fa19f4eddcb9aec0f645fae0371445e073\",\"license\":\"LicenseRef-Aktionariat\",\"urls\":[\"bzz-raw://0e17c52adcd24d03c6cdbff2ef8fc69b61e7d425835c818c8940de046f585b4b\",\"dweb:/ipfs/QmXzFfoLnNJYi8UyxrVgU4CiPU5rKhcUWAVB2jf8XRDKYw\"]},\"c:/Users/luziu/Documents/aktionariat/contracts/src/ERC20Recoverable.sol\":{\"keccak256\":\"0xd5af4f8143b6e02f036d8389b19a59c3c0a7ee00952844dca5ecb039f391170c\",\"license\":\"LicenseRef-Aktionariat\",\"urls\":[\"bzz-raw://11adb0e721764bf6ff35e1dd4d2722d5921d4c89ceb6faea4a18b5ff29fb9f3b\",\"dweb:/ipfs/Qmd9MK19Q2b5DXgYK5GDM9xQ3S33ayVQ8rN6GouD4k8p6N\"]},\"c:/Users/luziu/Documents/aktionariat/contracts/src/IERC20.sol\":{\"keccak256\":\"0x6d0e89e1a724c13cc7dcc7184b8dcf0d46d6b5635b4ec024bb1fb69d36d87444\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40092507190092f77a521113ba3133441c76f63da097e38e587ca6e2603c6eb2\",\"dweb:/ipfs/QmeKTeVB1sND87Miju3k3as6f5cQcgLzbHc7vSREcjyQKC\"]},\"c:/Users/luziu/Documents/aktionariat/contracts/src/IERC677Receiver.sol\":{\"keccak256\":\"0x08574d3d2296c648c53d8175ffc992d22b77b7a2af4f26a3ad30bcfe67a56455\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a15e476ad8295470c052d149ce6ea8593174899a1995ff4ace6d3554fb1928c3\",\"dweb:/ipfs/QmT6wxjVrGALDukRDPi9ktfQ296jFC8o975ronUQNEhKQ9\"]},\"c:/Users/luziu/Documents/aktionariat/contracts/src/IMigratable.sol\":{\"keccak256\":\"0x5212714cd6ce722124bbb8c32282a4cd3b4a37fd9dd224e5ac54d99020c24c1b\",\"license\":\"LicenseRef-Aktionariat\",\"urls\":[\"bzz-raw://338eab542263cf438c99110de0f9b059b2de6894b3e44418e16d1051b4e0fb86\",\"dweb:/ipfs/Qmbs8VNthe4VLYBf3Bv9WFWC2HSNX9LyDLgG5VneXkzHnP\"]},\"c:/Users/luziu/Documents/aktionariat/contracts/src/SafeMath.sol\":{\"keccak256\":\"0x186349cbf7b3f8c5b04eb76e4e5dc9fd4d3c00952afc2e66923abc2947abc9df\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://480ddbf34395198eea8e779632d9f50d22319df148414522d8eed58972444c92\",\"dweb:/ipfs/QmbABPCuzoFN7uhGv2omkAGKSCc5Wh2Kof1ig3jzFTCKAd\"]}},\"version\":1}",
                "userdoc": {
                    "kind": "user",
                    "methods": {
                        "burn(uint256)": {
                            "notice": "Burns both the token itself as well as the wrapped token! If you want to get out of the shareholder agreement, use unwrap after it has been deactivated by a majority vote or acquisition. Burning only works if wrapped token supports burning. Also, the exact meaning of this operation might depend on the circumstances. Burning and reussing the wrapped token does not free the sender from the legal obligations of the shareholder agreement."
                        },
                        "clearClaim()": {
                            "notice": "Clears a claim after the key has been found again and assigns the collateral to the \"lost\" address. This is the price an adverse claimer pays for filing a false claim and makes it risky to do so."
                        },
                        "constructor": {
                            "notice": "Designed to be used with the Crypto Franc as currency token. See also parent constructor."
                        },
                        "declareLost(address,address)": {
                            "notice": "Anyone can declare that the private key to a certain address was lost by calling declareLost providing a deposit/collateral. There are three possibilities of what can happen with the claim: 1) The claim period expires and the claimant can get the deposit and the shares back by calling recover 2) The \"lost\" private key is used at any time to call clearClaim. In that case, the claim is deleted and    the deposit sent to the shareholder (the owner of the private key). It is recommended to call recover    whenever someone transfers funds to let claims be resolved automatically when the \"lost\" private key is    used again. 3) The owner deletes the claim and assigns the deposit to the claimant. This is intended to be used to resolve    disputes. Generally, using this function implies that you have to trust the issuer of the tokens to handle    the situation well. As a rule of thumb, the contract owner should assume the owner of the lost address to be the    rightful owner of the deposit. It is highly recommended that the owner observes the claims made and informs the owners of the claimed addresses whenever a claim is made for their address (this of course is only possible if they are known to the owner, e.g. through a shareholder register). To prevent frontrunning attacks, a claim can only be made if the information revealed when calling \"declareLost\" was previously commited using the \"prepareClaim\" function."
                        },
                        "deleteClaim(address)": {
                            "notice": "This function is to be executed by the claim deleter only in case a dispute needs to be resolved manually."
                        },
                        "getCollateralRate(address)": {
                            "notice": "Returns the collateral rate for the given collateral type and 0 if that type of collateral is not accepted. By default, only the token itself is accepted at a rate of 1:1. Subclasses should override this method if they want to add additional types of collateral."
                        },
                        "isRecoveryEnabled(address)": {
                            "notice": "Some users might want to disable claims for their address completely. For example if they use a deep cold storage solution or paper wallet."
                        },
                        "recover(address)": {
                            "notice": "After the claim period has passed, the claimant can call this function to send the tokens on the lost address as well as the collateral to himself."
                        },
                        "unwrap(uint256)": {
                            "notice": "Decrease the number of drag-along tokens. The user gets back their shares in return "
                        },
                        "wrap(address,uint256)": {
                            "notice": "Increases the number of drag-along tokens. Requires minter to deposit an equal amount of share tokens "
                        }
                    },
                    "version": 1
                }
            },
            "IRecoverable": {
                "abi": [
                    {
                        "inputs": [],
                        "name": "getClaimDeleter",
                        "outputs": [
                            {
                                "internalType": "address",
                                "name": "",
                                "type": "address"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "",
                                "type": "address"
                            }
                        ],
                        "name": "getCollateralRate",
                        "outputs": [
                            {
                                "internalType": "uint256",
                                "name": "",
                                "type": "uint256"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "bool",
                                "name": "",
                                "type": "bool"
                            }
                        ],
                        "name": "setRecoverable",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    }
                ],
                "devdoc": {
                    "kind": "dev",
                    "methods": {},
                    "version": 1
                },
                "evm": {
                    "bytecode": {
                        "linkReferences": {},
                        "object": "",
                        "opcodes": "",
                        "sourceMap": ""
                    },
                    "deployedBytecode": {
                        "immutableReferences": {},
                        "linkReferences": {},
                        "object": "",
                        "opcodes": "",
                        "sourceMap": ""
                    },
                    "gasEstimates": null,
                    "methodIdentifiers": {
                        "getClaimDeleter()": "2a0a4ed5",
                        "getCollateralRate(address)": "77e071ad",
                        "setRecoverable(bool)": "6427ed97"
                    }
                },
                "metadata": "{\"compiler\":{\"version\":\"0.7.1+commit.f4a555be\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"getClaimDeleter\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"getCollateralRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"name\":\"setRecoverable\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"c:/Users/luziu/Documents/aktionariat/contracts/src/DraggableShares.sol\":\"IRecoverable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"c:/Users/luziu/Documents/aktionariat/contracts/src/Acquisition.sol\":{\"keccak256\":\"0x2a804527c12b009dc8d2580a78a3d1163810b00d5d8f25642813171c6372627f\",\"license\":\"LicenseRef-Aktionariat\",\"urls\":[\"bzz-raw://a8b8a2efe3d409f8f90da295f8f5b29af3967fa457e5e01672bf085250676d98\",\"dweb:/ipfs/QmPdrrCNgYMpcQDy3BAEQKo8Fk6cPLCB4QuHRvHxruG6TU\"]},\"c:/Users/luziu/Documents/aktionariat/contracts/src/DraggableShares.sol\":{\"keccak256\":\"0x499bd2ed415bdc7e50da56415fdc415106cd75744c678ae7695cf731defcf829\",\"license\":\"LicenseRef-Aktionariat\",\"urls\":[\"bzz-raw://816094c15964676cebe374dd8a66fda4df0ba07d4a04bdac4e76882572d2aff1\",\"dweb:/ipfs/QmSa7WgsWTmSujb8GjWEUAbS7UALQwVJpdUpHRjiLn7wL3\"]},\"c:/Users/luziu/Documents/aktionariat/contracts/src/ERC20.sol\":{\"keccak256\":\"0x2fc989a10429560f03d7db1467e541b46c6f50e5c7a71761957016f795325880\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://95f1b0c5f0e807ec78bb8dc61d42627b63acc449c8e31938b84f27299a1fb6e9\",\"dweb:/ipfs/Qmf8cj2hDyNr7eLTFDdYiX3w6oZHtjCDcMBGV33qZNBngy\"]},\"c:/Users/luziu/Documents/aktionariat/contracts/src/ERC20Draggable.sol\":{\"keccak256\":\"0x51f0c088c30bdd5b81c567752600c4fa19f4eddcb9aec0f645fae0371445e073\",\"license\":\"LicenseRef-Aktionariat\",\"urls\":[\"bzz-raw://0e17c52adcd24d03c6cdbff2ef8fc69b61e7d425835c818c8940de046f585b4b\",\"dweb:/ipfs/QmXzFfoLnNJYi8UyxrVgU4CiPU5rKhcUWAVB2jf8XRDKYw\"]},\"c:/Users/luziu/Documents/aktionariat/contracts/src/ERC20Recoverable.sol\":{\"keccak256\":\"0xd5af4f8143b6e02f036d8389b19a59c3c0a7ee00952844dca5ecb039f391170c\",\"license\":\"LicenseRef-Aktionariat\",\"urls\":[\"bzz-raw://11adb0e721764bf6ff35e1dd4d2722d5921d4c89ceb6faea4a18b5ff29fb9f3b\",\"dweb:/ipfs/Qmd9MK19Q2b5DXgYK5GDM9xQ3S33ayVQ8rN6GouD4k8p6N\"]},\"c:/Users/luziu/Documents/aktionariat/contracts/src/IERC20.sol\":{\"keccak256\":\"0x6d0e89e1a724c13cc7dcc7184b8dcf0d46d6b5635b4ec024bb1fb69d36d87444\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40092507190092f77a521113ba3133441c76f63da097e38e587ca6e2603c6eb2\",\"dweb:/ipfs/QmeKTeVB1sND87Miju3k3as6f5cQcgLzbHc7vSREcjyQKC\"]},\"c:/Users/luziu/Documents/aktionariat/contracts/src/IERC677Receiver.sol\":{\"keccak256\":\"0x08574d3d2296c648c53d8175ffc992d22b77b7a2af4f26a3ad30bcfe67a56455\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a15e476ad8295470c052d149ce6ea8593174899a1995ff4ace6d3554fb1928c3\",\"dweb:/ipfs/QmT6wxjVrGALDukRDPi9ktfQ296jFC8o975ronUQNEhKQ9\"]},\"c:/Users/luziu/Documents/aktionariat/contracts/src/IMigratable.sol\":{\"keccak256\":\"0x5212714cd6ce722124bbb8c32282a4cd3b4a37fd9dd224e5ac54d99020c24c1b\",\"license\":\"LicenseRef-Aktionariat\",\"urls\":[\"bzz-raw://338eab542263cf438c99110de0f9b059b2de6894b3e44418e16d1051b4e0fb86\",\"dweb:/ipfs/Qmbs8VNthe4VLYBf3Bv9WFWC2HSNX9LyDLgG5VneXkzHnP\"]},\"c:/Users/luziu/Documents/aktionariat/contracts/src/SafeMath.sol\":{\"keccak256\":\"0x186349cbf7b3f8c5b04eb76e4e5dc9fd4d3c00952afc2e66923abc2947abc9df\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://480ddbf34395198eea8e779632d9f50d22319df148414522d8eed58972444c92\",\"dweb:/ipfs/QmbABPCuzoFN7uhGv2omkAGKSCc5Wh2Kof1ig3jzFTCKAd\"]}},\"version\":1}",
                "userdoc": {
                    "kind": "user",
                    "methods": {},
                    "version": 1
                }
            }
        },
        "c:/Users/luziu/Documents/aktionariat/contracts/src/ERC20.sol": {
            "ERC20": {
                "abi": [
                    {
                        "anonymous": false,
                        "inputs": [
                            {
                                "indexed": true,
                                "internalType": "address",
                                "name": "owner",
                                "type": "address"
                            },
                            {
                                "indexed": true,
                                "internalType": "address",
                                "name": "spender",
                                "type": "address"
                            },
                            {
                                "indexed": false,
                                "internalType": "uint256",
                                "name": "value",
                                "type": "uint256"
                            }
                        ],
                        "name": "Approval",
                        "type": "event"
                    },
                    {
                        "anonymous": false,
                        "inputs": [
                            {
                                "indexed": true,
                                "internalType": "address",
                                "name": "from",
                                "type": "address"
                            },
                            {
                                "indexed": true,
                                "internalType": "address",
                                "name": "to",
                                "type": "address"
                            },
                            {
                                "indexed": false,
                                "internalType": "uint256",
                                "name": "value",
                                "type": "uint256"
                            }
                        ],
                        "name": "Transfer",
                        "type": "event"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "owner",
                                "type": "address"
                            },
                            {
                                "internalType": "address",
                                "name": "spender",
                                "type": "address"
                            }
                        ],
                        "name": "allowance",
                        "outputs": [
                            {
                                "internalType": "uint256",
                                "name": "",
                                "type": "uint256"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "spender",
                                "type": "address"
                            },
                            {
                                "internalType": "uint256",
                                "name": "value",
                                "type": "uint256"
                            }
                        ],
                        "name": "approve",
                        "outputs": [
                            {
                                "internalType": "bool",
                                "name": "",
                                "type": "bool"
                            }
                        ],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "account",
                                "type": "address"
                            }
                        ],
                        "name": "balanceOf",
                        "outputs": [
                            {
                                "internalType": "uint256",
                                "name": "",
                                "type": "uint256"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "inputs": [],
                        "name": "decimals",
                        "outputs": [
                            {
                                "internalType": "uint8",
                                "name": "",
                                "type": "uint8"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "spender",
                                "type": "address"
                            },
                            {
                                "internalType": "uint256",
                                "name": "subtractedValue",
                                "type": "uint256"
                            }
                        ],
                        "name": "decreaseAllowance",
                        "outputs": [
                            {
                                "internalType": "bool",
                                "name": "",
                                "type": "bool"
                            }
                        ],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "spender",
                                "type": "address"
                            },
                            {
                                "internalType": "uint256",
                                "name": "addedValue",
                                "type": "uint256"
                            }
                        ],
                        "name": "increaseAllowance",
                        "outputs": [
                            {
                                "internalType": "bool",
                                "name": "",
                                "type": "bool"
                            }
                        ],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "inputs": [],
                        "name": "name",
                        "outputs": [
                            {
                                "internalType": "string",
                                "name": "",
                                "type": "string"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "inputs": [],
                        "name": "symbol",
                        "outputs": [
                            {
                                "internalType": "string",
                                "name": "",
                                "type": "string"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "inputs": [],
                        "name": "totalSupply",
                        "outputs": [
                            {
                                "internalType": "uint256",
                                "name": "",
                                "type": "uint256"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "recipient",
                                "type": "address"
                            },
                            {
                                "internalType": "uint256",
                                "name": "amount",
                                "type": "uint256"
                            }
                        ],
                        "name": "transfer",
                        "outputs": [
                            {
                                "internalType": "bool",
                                "name": "",
                                "type": "bool"
                            }
                        ],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "recipient",
                                "type": "address"
                            },
                            {
                                "internalType": "uint256",
                                "name": "amount",
                                "type": "uint256"
                            },
                            {
                                "internalType": "bytes",
                                "name": "data",
                                "type": "bytes"
                            }
                        ],
                        "name": "transferAndCall",
                        "outputs": [
                            {
                                "internalType": "bool",
                                "name": "",
                                "type": "bool"
                            }
                        ],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "sender",
                                "type": "address"
                            },
                            {
                                "internalType": "address",
                                "name": "recipient",
                                "type": "address"
                            },
                            {
                                "internalType": "uint256",
                                "name": "amount",
                                "type": "uint256"
                            }
                        ],
                        "name": "transferFrom",
                        "outputs": [
                            {
                                "internalType": "bool",
                                "name": "",
                                "type": "bool"
                            }
                        ],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    }
                ],
                "devdoc": {
                    "details": "Implementation of the `IERC20` interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using `_mint`. For a generic mechanism see `ERC20Mintable`. *For a detailed writeup see our guide [How to implement supply mechanisms](https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226).* We have followed general OpenZeppelin guidelines: functions revert instead of returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an `Approval` event is emitted on calls to `transferFrom`. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard `decreaseAllowance` and `increaseAllowance` functions have been added to mitigate the well-known issues around setting allowances. See `IERC20.approve`.",
                    "kind": "dev",
                    "methods": {
                        "allowance(address,address)": {
                            "details": "See `IERC20.allowance`."
                        },
                        "approve(address,uint256)": {
                            "details": "See `IERC20.approve`. Requirements: - `spender` cannot be the zero address."
                        },
                        "balanceOf(address)": {
                            "details": "See `IERC20.balanceOf`."
                        },
                        "decreaseAllowance(address,uint256)": {
                            "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to `approve` that can be used as a mitigation for problems described in `IERC20.approve`. Emits an `Approval` event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
                        },
                        "increaseAllowance(address,uint256)": {
                            "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to `approve` that can be used as a mitigation for problems described in `IERC20.approve`. Emits an `Approval` event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
                        },
                        "totalSupply()": {
                            "details": "See `IERC20.totalSupply`."
                        },
                        "transfer(address,uint256)": {
                            "details": "See `IERC20.transfer`. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
                        },
                        "transferFrom(address,address,uint256)": {
                            "details": "See `IERC20.transferFrom`. Emits an `Approval` event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of `ERC20`; Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `value`. - the caller must have allowance for `sender`'s tokens of at least `amount`."
                        }
                    },
                    "version": 1
                },
                "evm": {
                    "bytecode": {
                        "linkReferences": {},
                        "object": "",
                        "opcodes": "",
                        "sourceMap": ""
                    },
                    "deployedBytecode": {
                        "immutableReferences": {},
                        "linkReferences": {},
                        "object": "",
                        "opcodes": "",
                        "sourceMap": ""
                    },
                    "gasEstimates": null,
                    "methodIdentifiers": {
                        "allowance(address,address)": "dd62ed3e",
                        "approve(address,uint256)": "095ea7b3",
                        "balanceOf(address)": "70a08231",
                        "decimals()": "313ce567",
                        "decreaseAllowance(address,uint256)": "a457c2d7",
                        "increaseAllowance(address,uint256)": "39509351",
                        "name()": "06fdde03",
                        "symbol()": "95d89b41",
                        "totalSupply()": "18160ddd",
                        "transfer(address,uint256)": "a9059cbb",
                        "transferAndCall(address,uint256,bytes)": "4000aea0",
                        "transferFrom(address,address,uint256)": "23b872dd"
                    }
                },
                "metadata": "{\"compiler\":{\"version\":\"0.7.1+commit.f4a555be\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the `IERC20` interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using `_mint`. For a generic mechanism see `ERC20Mintable`. *For a detailed writeup see our guide [How to implement supply mechanisms](https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226).* We have followed general OpenZeppelin guidelines: functions revert instead of returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an `Approval` event is emitted on calls to `transferFrom`. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard `decreaseAllowance` and `increaseAllowance` functions have been added to mitigate the well-known issues around setting allowances. See `IERC20.approve`.\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See `IERC20.allowance`.\"},\"approve(address,uint256)\":{\"details\":\"See `IERC20.approve`. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See `IERC20.balanceOf`.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to `approve` that can be used as a mitigation for problems described in `IERC20.approve`. Emits an `Approval` event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to `approve` that can be used as a mitigation for problems described in `IERC20.approve`. Emits an `Approval` event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"totalSupply()\":{\"details\":\"See `IERC20.totalSupply`.\"},\"transfer(address,uint256)\":{\"details\":\"See `IERC20.transfer`. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See `IERC20.transferFrom`. Emits an `Approval` event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of `ERC20`; Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `value`. - the caller must have allowance for `sender`'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"c:/Users/luziu/Documents/aktionariat/contracts/src/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"c:/Users/luziu/Documents/aktionariat/contracts/src/ERC20.sol\":{\"keccak256\":\"0x2fc989a10429560f03d7db1467e541b46c6f50e5c7a71761957016f795325880\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://95f1b0c5f0e807ec78bb8dc61d42627b63acc449c8e31938b84f27299a1fb6e9\",\"dweb:/ipfs/Qmf8cj2hDyNr7eLTFDdYiX3w6oZHtjCDcMBGV33qZNBngy\"]},\"c:/Users/luziu/Documents/aktionariat/contracts/src/IERC20.sol\":{\"keccak256\":\"0x6d0e89e1a724c13cc7dcc7184b8dcf0d46d6b5635b4ec024bb1fb69d36d87444\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40092507190092f77a521113ba3133441c76f63da097e38e587ca6e2603c6eb2\",\"dweb:/ipfs/QmeKTeVB1sND87Miju3k3as6f5cQcgLzbHc7vSREcjyQKC\"]},\"c:/Users/luziu/Documents/aktionariat/contracts/src/IERC677Receiver.sol\":{\"keccak256\":\"0x08574d3d2296c648c53d8175ffc992d22b77b7a2af4f26a3ad30bcfe67a56455\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a15e476ad8295470c052d149ce6ea8593174899a1995ff4ace6d3554fb1928c3\",\"dweb:/ipfs/QmT6wxjVrGALDukRDPi9ktfQ296jFC8o975ronUQNEhKQ9\"]},\"c:/Users/luziu/Documents/aktionariat/contracts/src/SafeMath.sol\":{\"keccak256\":\"0x186349cbf7b3f8c5b04eb76e4e5dc9fd4d3c00952afc2e66923abc2947abc9df\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://480ddbf34395198eea8e779632d9f50d22319df148414522d8eed58972444c92\",\"dweb:/ipfs/QmbABPCuzoFN7uhGv2omkAGKSCc5Wh2Kof1ig3jzFTCKAd\"]}},\"version\":1}",
                "userdoc": {
                    "kind": "user",
                    "methods": {},
                    "version": 1
                }
            }
        },
        "c:/Users/luziu/Documents/aktionariat/contracts/src/ERC20Draggable.sol": {
            "ERC20Draggable": {
                "abi": [
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "wrappedToken",
                                "type": "address"
                            },
                            {
                                "internalType": "uint256",
                                "name": "migrationQuorumInBIPS_",
                                "type": "uint256"
                            },
                            {
                                "internalType": "uint256",
                                "name": "acquisitionQuorum_",
                                "type": "uint256"
                            }
                        ],
                        "stateMutability": "nonpayable",
                        "type": "constructor"
                    },
                    {
                        "anonymous": false,
                        "inputs": [
                            {
                                "indexed": true,
                                "internalType": "address",
                                "name": "owner",
                                "type": "address"
                            },
                            {
                                "indexed": true,
                                "internalType": "address",
                                "name": "spender",
                                "type": "address"
                            },
                            {
                                "indexed": false,
                                "internalType": "uint256",
                                "name": "value",
                                "type": "uint256"
                            }
                        ],
                        "name": "Approval",
                        "type": "event"
                    },
                    {
                        "anonymous": false,
                        "inputs": [
                            {
                                "indexed": false,
                                "internalType": "address",
                                "name": "newContractAddress",
                                "type": "address"
                            }
                        ],
                        "name": "MigrationSucceeded",
                        "type": "event"
                    },
                    {
                        "anonymous": false,
                        "inputs": [
                            {
                                "indexed": true,
                                "internalType": "address",
                                "name": "buyer",
                                "type": "address"
                            },
                            {
                                "indexed": false,
                                "internalType": "uint256",
                                "name": "pricePerShare",
                                "type": "uint256"
                            },
                            {
                                "indexed": false,
                                "internalType": "address",
                                "name": "offerContract",
                                "type": "address"
                            }
                        ],
                        "name": "OfferCreated",
                        "type": "event"
                    },
                    {
                        "anonymous": false,
                        "inputs": [
                            {
                                "indexed": true,
                                "internalType": "address",
                                "name": "buyer",
                                "type": "address"
                            },
                            {
                                "indexed": false,
                                "internalType": "address",
                                "name": "sender",
                                "type": "address"
                            },
                            {
                                "indexed": false,
                                "internalType": "bool",
                                "name": "success",
                                "type": "bool"
                            },
                            {
                                "indexed": false,
                                "internalType": "string",
                                "name": "message",
                                "type": "string"
                            },
                            {
                                "indexed": false,
                                "internalType": "address",
                                "name": "offerContract",
                                "type": "address"
                            }
                        ],
                        "name": "OfferEnded",
                        "type": "event"
                    },
                    {
                        "anonymous": false,
                        "inputs": [
                            {
                                "indexed": true,
                                "internalType": "address",
                                "name": "from",
                                "type": "address"
                            },
                            {
                                "indexed": true,
                                "internalType": "address",
                                "name": "to",
                                "type": "address"
                            },
                            {
                                "indexed": false,
                                "internalType": "uint256",
                                "name": "value",
                                "type": "uint256"
                            }
                        ],
                        "name": "Transfer",
                        "type": "event"
                    },
                    {
                        "inputs": [],
                        "name": "acquisitionQuorum",
                        "outputs": [
                            {
                                "internalType": "uint256",
                                "name": "",
                                "type": "uint256"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "inputs": [],
                        "name": "active",
                        "outputs": [
                            {
                                "internalType": "bool",
                                "name": "",
                                "type": "bool"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "owner",
                                "type": "address"
                            },
                            {
                                "internalType": "address",
                                "name": "spender",
                                "type": "address"
                            }
                        ],
                        "name": "allowance",
                        "outputs": [
                            {
                                "internalType": "uint256",
                                "name": "",
                                "type": "uint256"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "spender",
                                "type": "address"
                            },
                            {
                                "internalType": "uint256",
                                "name": "value",
                                "type": "uint256"
                            }
                        ],
                        "name": "approve",
                        "outputs": [
                            {
                                "internalType": "bool",
                                "name": "",
                                "type": "bool"
                            }
                        ],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "account",
                                "type": "address"
                            }
                        ],
                        "name": "balanceOf",
                        "outputs": [
                            {
                                "internalType": "uint256",
                                "name": "",
                                "type": "uint256"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "uint256",
                                "name": "amount",
                                "type": "uint256"
                            }
                        ],
                        "name": "burn",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "inputs": [],
                        "name": "cancelAcquisition",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "inputs": [],
                        "name": "completeAcquisition",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "inputs": [],
                        "name": "contestAcquisition",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "inputs": [],
                        "name": "decimals",
                        "outputs": [
                            {
                                "internalType": "uint8",
                                "name": "",
                                "type": "uint8"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "spender",
                                "type": "address"
                            },
                            {
                                "internalType": "uint256",
                                "name": "subtractedValue",
                                "type": "uint256"
                            }
                        ],
                        "name": "decreaseAllowance",
                        "outputs": [
                            {
                                "internalType": "bool",
                                "name": "",
                                "type": "bool"
                            }
                        ],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "inputs": [],
                        "name": "getPendingOffer",
                        "outputs": [
                            {
                                "internalType": "address",
                                "name": "",
                                "type": "address"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "inputs": [],
                        "name": "getWrappedContract",
                        "outputs": [
                            {
                                "internalType": "address",
                                "name": "",
                                "type": "address"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "spender",
                                "type": "address"
                            },
                            {
                                "internalType": "uint256",
                                "name": "addedValue",
                                "type": "uint256"
                            }
                        ],
                        "name": "increaseAllowance",
                        "outputs": [
                            {
                                "internalType": "bool",
                                "name": "",
                                "type": "bool"
                            }
                        ],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "uint256",
                                "name": "pricePerShare",
                                "type": "uint256"
                            },
                            {
                                "internalType": "address",
                                "name": "currency",
                                "type": "address"
                            }
                        ],
                        "name": "initiateAcquisition",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "inputs": [],
                        "name": "licenseFeeRecipient",
                        "outputs": [
                            {
                                "internalType": "address payable",
                                "name": "",
                                "type": "address"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "inputs": [],
                        "name": "migrate",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "inputs": [],
                        "name": "migrationQuorum",
                        "outputs": [
                            {
                                "internalType": "uint256",
                                "name": "",
                                "type": "uint256"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "inputs": [],
                        "name": "name",
                        "outputs": [
                            {
                                "internalType": "string",
                                "name": "",
                                "type": "string"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "inputs": [],
                        "name": "offer",
                        "outputs": [
                            {
                                "internalType": "contract Acquisition",
                                "name": "",
                                "type": "address"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "inputs": [],
                        "name": "offerExists",
                        "outputs": [
                            {
                                "internalType": "bool",
                                "name": "",
                                "type": "bool"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "from",
                                "type": "address"
                            },
                            {
                                "internalType": "uint256",
                                "name": "amount",
                                "type": "uint256"
                            },
                            {
                                "internalType": "bytes",
                                "name": "",
                                "type": "bytes"
                            }
                        ],
                        "name": "onTokenTransfer",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "inputs": [],
                        "name": "symbol",
                        "outputs": [
                            {
                                "internalType": "string",
                                "name": "",
                                "type": "string"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "inputs": [],
                        "name": "totalSupply",
                        "outputs": [
                            {
                                "internalType": "uint256",
                                "name": "",
                                "type": "uint256"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "recipient",
                                "type": "address"
                            },
                            {
                                "internalType": "uint256",
                                "name": "amount",
                                "type": "uint256"
                            }
                        ],
                        "name": "transfer",
                        "outputs": [
                            {
                                "internalType": "bool",
                                "name": "",
                                "type": "bool"
                            }
                        ],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "recipient",
                                "type": "address"
                            },
                            {
                                "internalType": "uint256",
                                "name": "amount",
                                "type": "uint256"
                            },
                            {
                                "internalType": "bytes",
                                "name": "data",
                                "type": "bytes"
                            }
                        ],
                        "name": "transferAndCall",
                        "outputs": [
                            {
                                "internalType": "bool",
                                "name": "",
                                "type": "bool"
                            }
                        ],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "sender",
                                "type": "address"
                            },
                            {
                                "internalType": "address",
                                "name": "recipient",
                                "type": "address"
                            },
                            {
                                "internalType": "uint256",
                                "name": "amount",
                                "type": "uint256"
                            }
                        ],
                        "name": "transferFrom",
                        "outputs": [
                            {
                                "internalType": "bool",
                                "name": "",
                                "type": "bool"
                            }
                        ],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "uint256",
                                "name": "amount",
                                "type": "uint256"
                            }
                        ],
                        "name": "unwrap",
                        "outputs": [
                            {
                                "internalType": "address",
                                "name": "",
                                "type": "address"
                            },
                            {
                                "internalType": "uint256",
                                "name": "",
                                "type": "uint256"
                            }
                        ],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "inputs": [],
                        "name": "unwrapConversionFactor",
                        "outputs": [
                            {
                                "internalType": "uint256",
                                "name": "",
                                "type": "uint256"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "inputs": [],
                        "name": "voteNo",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "inputs": [],
                        "name": "voteYes",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "inputs": [],
                        "name": "wasAcquired",
                        "outputs": [
                            {
                                "internalType": "bool",
                                "name": "",
                                "type": "bool"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "shareholder",
                                "type": "address"
                            },
                            {
                                "internalType": "uint256",
                                "name": "amount",
                                "type": "uint256"
                            }
                        ],
                        "name": "wrap",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    }
                ],
                "devdoc": {
                    "author": "Benjamin Rickenbacher, b.rickenbacher@intergga.chLuzius Meisser, luzius@meissereconomics.com",
                    "details": "These tokens are based on the ERC20 standard and the open-zeppelin library. This is an ERC-20 token representing shares of CompanyName AG that are bound to a shareholder agreement that can be found at the URL defined in the constant 'terms' of the 'DraggableCompanyNameShares' contract. The agreement is partially enforced through the Swiss legal system, and partially enforced through this smart contract. In particular, this smart contract implements a drag-along clause which allows the majority of token holders to force the minority sell their shares along with them in case of an acquisition. That's why the tokens are called \"Draggable CompanyName AG Shares.\"",
                    "kind": "dev",
                    "methods": {
                        "allowance(address,address)": {
                            "details": "See `IERC20.allowance`."
                        },
                        "approve(address,uint256)": {
                            "details": "See `IERC20.approve`. Requirements: - `spender` cannot be the zero address."
                        },
                        "balanceOf(address)": {
                            "details": "See `IERC20.balanceOf`."
                        },
                        "decreaseAllowance(address,uint256)": {
                            "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to `approve` that can be used as a mitigation for problems described in `IERC20.approve`. Emits an `Approval` event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
                        },
                        "increaseAllowance(address,uint256)": {
                            "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to `approve` that can be used as a mitigation for problems described in `IERC20.approve`. Emits an `Approval` event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
                        },
                        "initiateAcquisition(uint256,address)": {
                            "details": "Function to start drag-along procedure  This can be called by anyone, but there is an upfront payment."
                        },
                        "totalSupply()": {
                            "details": "See `IERC20.totalSupply`."
                        },
                        "transfer(address,uint256)": {
                            "details": "See `IERC20.transfer`. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
                        },
                        "transferFrom(address,address,uint256)": {
                            "details": "See `IERC20.transferFrom`. Emits an `Approval` event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of `ERC20`; Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `value`. - the caller must have allowance for `sender`'s tokens of at least `amount`."
                        }
                    },
                    "title": "CompanyName Shareholder Agreement",
                    "version": 1
                },
                "evm": {
                    "bytecode": {
                        "linkReferences": {},
                        "object": "6080604052600160048190556009805460ff191690911790553480156200002557600080fd5b5060405162003c2d38038062003c2d833981810160405260608110156200004b57600080fd5b508051602080830151604093840151600380546001600160a01b03861661010081026001600160a81b031990921691909117909155600680546001600160a01b0319167329fe8914e76da5ce2d90de98a64d0055f199d06d179055600783905560088290558551633a98ef3960e01b815295519495929491939092633a98ef3992600480830193928290030181600087803b158015620000ea57600080fd5b505af1158015620000ff573d6000803e3d6000fd5b505050506040513d60208110156200011657600080fd5b5050505050613b02806200012b6000396000f3fe60806040523480156200001157600080fd5b50600436106200022c5760003560e01c80636f4b18df1162000135578063a9059cbb11620000bd578063c028df061162000087578063c028df06146200065b578063dd62ed3e1462000665578063de0e9a3e1462000696578063e1b8c38e14620006d9578063ec6580e214620006e3576200022c565b8063a9059cbb14620005e9578063bb6894721462000618578063bc1b1e7c1462000622578063bf376c7a146200062c576200022c565b806395d89b4111620000ff57806395d89b41146200051d5780639e8a9a5a1462000527578063a457c2d71462000531578063a4c0ed361462000560576200022c565b80636f4b18df14620004d657806370a0823114620004e05780638fd3ab80146200050957806390cf581c1462000513576200022c565b80633549788a11620001b957806342966c68116200018357806342966c68146200045757806349b210b714620004775780635804791314620004a65780636467c09a14620004cc576200022c565b80633549788a146200038b5780633950935114620003955780634000aea014620003c457806341c12a70146200044d576200022c565b8063141c706811620001fb578063141c7068146200031c57806318160ddd146200032857806323b872dd1462000332578063313ce567146200036b576200022c565b806302fb0c5e146200023157806306fdde03146200024f5780630832e47014620002d1578063095ea7b314620002ed575b600080fd5b6200023b620006ed565b604080519115158252519081900360200190f35b62000259620006f6565b6040805160208082528351818301528351919283929083019185019080838360005b83811015620002955781810151838201526020016200027b565b50505050905090810190601f168015620002c35780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b620002db620008bc565b60408051918252519081900360200190f35b6200023b600480360360408110156200030557600080fd5b506001600160a01b038135169060200135620008c2565b62000326620008db565b005b620002db62000d1c565b6200023b600480360360608110156200034a57600080fd5b506001600160a01b0381358116916020810135909116906040013562000d22565b6200037562000d79565b6040805160ff9092168252519081900360200190f35b620002db62000d82565b6200023b60048036036040811015620003ad57600080fd5b506001600160a01b03813516906020013562000d88565b6200023b60048036036060811015620003dc57600080fd5b6001600160a01b0382351691602081013591810190606081016040820135600160201b8111156200040c57600080fd5b8201836020820111156200041f57600080fd5b803590602001918460018302840111600160201b831117156200044157600080fd5b50909250905062000dc1565b6200032662000e88565b62000326600480360360208110156200046f57600080fd5b503562000f64565b62000326600480360360408110156200048f57600080fd5b50803590602001356001600160a01b031662000fd6565b620004b06200150c565b604080516001600160a01b039092168252519081900360200190f35b620004b062001520565b620003266200152f565b620002db60048036036020811015620004f857600080fd5b50356001600160a01b031662001866565b6200032662001881565b6200032662001b16565b6200025962001b8f565b620002db62001d12565b6200023b600480360360408110156200054957600080fd5b506001600160a01b03813516906020013562001d18565b62000326600480360360608110156200057857600080fd5b6001600160a01b0382351691602081013591810190606081016040820135600160201b811115620005a857600080fd5b820183602082011115620005bb57600080fd5b803590602001918460018302840111600160201b83111715620005dd57600080fd5b50909250905062001d51565b6200023b600480360360408110156200060157600080fd5b506001600160a01b03813516906020013562001d80565b620004b062001d8f565b6200023b62001d9e565b62000326600480360360408110156200064457600080fd5b506001600160a01b03813516906020013562001dbb565b620004b062001efa565b620002db600480360360408110156200067d57600080fd5b506001600160a01b038135811691602001351662001f09565b620006b660048036036020811015620006ae57600080fd5b503562001f34565b604080516001600160a01b03909316835260208301919091528051918290030190f35b6200032662002050565b6200023b620021a4565b60095460ff1681565b6060600360019054906101000a90046001600160a01b03166001600160a01b03166306fdde036040518163ffffffff1660e01b815260040160006040518083038186803b1580156200074757600080fd5b505afa1580156200075c573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405260208110156200078657600080fd5b8101908080516040519392919084600160201b821115620007a657600080fd5b908301906020820185811115620007bc57600080fd5b8251600160201b811182820188101715620007d657600080fd5b82525081516020918201929091019080838360005b8381101562000805578181015183820152602001620007eb565b50505050905090810190601f168015620008335780820380516001836020036101000a031916815260200191505b506040525050506040516020018080690223930b3b3b0b13632960b51b815250600a0182805190602001908083835b60208310620008835780518252601f19909201916020918201910162000862565b6001836020036101000a038019825116818451168082178552505050505050905001915050604051602081830303815290604052905090565b60045481565b6000620008d1338484620021ca565b5060015b92915050565b620008e562001d9e565b8015620008f4575060095460ff165b62000935576040805162461bcd60e51b81526020600482015260196024820152600080516020620039a3833981519152604482015290519081900360640190fd5b600554604080516338a86c5760e11b815290516000926001600160a01b031691637150d8ae916004808301926020929190829003018186803b1580156200097b57600080fd5b505afa15801562000990573d6000803e3d6000fd5b505050506040513d6020811015620009a757600080fd5b50519050336001600160a01b03821614620009f45760405162461bcd60e51b815260040180806020018281038252603981526020018062003a5b6039913960400191505060405180910390fd5b600560009054906101000a90046001600160a01b03166001600160a01b031663d7be4e296040518163ffffffff1660e01b815260040160206040518083038186803b15801562000a4357600080fd5b505afa15801562000a58573d6000803e3d6000fd5b505050506040513d602081101562000a6f57600080fd5b505162000ac3576040805162461bcd60e51b815260206004820181905260248201527f496e73756666696369656e74206e756d626572206f662079657320766f746573604482015290519081900360640190fd5b6005546001600160a01b031663b28fa15262000adf8362001866565b62000ae962000d1c565b036040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b15801562000b1f57600080fd5b505afa15801562000b34573d6000803e3d6000fd5b505050506040513d602081101562000b4b57600080fd5b505162000b9f576040805162461bcd60e51b815260206004820152601b60248201527f4f6666657220696e73756666696369656e746c792066756e6465640000000000604482015290519081900360640190fd5b62000c9b81600560009054906101000a90046001600160a01b03166001600160a01b031663e5a6b10f6040518163ffffffff1660e01b815260040160206040518083038186803b15801562000bf357600080fd5b505afa15801562000c08573d6000803e3d6000fd5b505050506040513d602081101562000c1f57600080fd5b50516005546040805163501ad8ff60e11b815290516001600160a01b039092169163a035b1fe91600480820192602092909190829003018186803b15801562000c6757600080fd5b505afa15801562000c7c573d6000803e3d6000fd5b505050506040513d602081101562000c9357600080fd5b5051620022ba565b60055460408051338152600160208201526001600160a01b039283166060820152608081830181905260169082015275436f6d706c65746564207375636365737366756c6c7960501b60a08201529051918316917fc88f58ae9feb0742d9422f604dd3c1be6d02818f8dec340c5061f428b554e9759181900360c00190a250565b60025490565b600062000d31848484620024ef565b6001600160a01b03841660009081526001602090815260408083203380855292529091205462000d6f91869162000d69908662002598565b620021ca565b5060019392505050565b60035460ff1681565b60085481565b3360008181526001602090815260408083206001600160a01b03871684529091528120549091620008d191859062000d699086620025ab565b60008062000dd0868662001d80565b9050801562000e7f57856001600160a01b031663a4c0ed36338787876040518563ffffffff1660e01b815260040180856001600160a01b03168152602001848152602001806020018281038252848482818152602001925080828437600081840152601f19601f82011690508083019250505095505050505050600060405180830381600087803b15801562000e6557600080fd5b505af115801562000e7a573d6000803e3d6000fd5b505050505b95945050505050565b62000e9262001d9e565b801562000ea1575060095460ff165b62000ee2576040805162461bcd60e51b81526020600482015260196024820152600080516020620039a3833981519152604482015290519081900360640190fd5b60055433906001600160a01b0316634b91562e8262000f018162001866565b6040518363ffffffff1660e01b815260040180836001600160a01b0316815260200182815260200192505050600060405180830381600087803b15801562000f4857600080fd5b505af115801562000f5d573d6000803e3d6000fd5b5050505050565b62000f703382620025b9565b62000f7a6200150c565b6001600160a01b03166342966c6862000f9f600454846200265490919063ffffffff16565b6040518263ffffffff1660e01b815260040180828152602001915050600060405180830381600087803b15801562000f4857600080fd5b60095460ff166200102e576040805162461bcd60e51b815260206004820152601860248201527f416e206163636570746564206f66666572206578697374730000000000000000604482015290519081900360640190fd5b60006200103a6200150c565b6001600160a01b0316633a98ef396040518163ffffffff1660e01b8152600401602060405180830381600087803b1580156200107557600080fd5b505af11580156200108a573d6000803e3d6000fd5b505050506040513d6020811015620010a157600080fd5b5051905033620010c2612710620010bb84610bb862002654565b906200267d565b620010cc62000d1c565b10156200110b5760405162461bcd60e51b815260040180806020018281038252602e81526020018062003a09602e913960400191505060405180910390fd5b62001120612710620010bb846101f462002654565b6200112b8262001866565b10156200116a5760405162461bcd60e51b815260040180806020018281038252603981526020018062003a946039913960400191505060405180910390fd5b6006546040516001600160a01b0390911690600090670de0b6b3a76400009082818181858883f19350505050158015620011a8573d6000803e3d6000fd5b506000338486600854604051620011bf9062002c9c565b80856001600160a01b03168152602001846001600160a01b03168152602001838152602001828152602001945050505050604051809103906000f0801580156200120d573d6000803e3d6000fd5b509050806001600160a01b031663b28fa1526200122a8462001866565b6200123462000d1c565b036040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b1580156200126a57600080fd5b505afa1580156200127f573d6000803e3d6000fd5b505050506040513d60208110156200129657600080fd5b5051620012e1576040805162461bcd60e51b8152602060048201526014602482015273496e73756666696369656e742066756e64696e6760601b604482015290519081900360640190fd5b620012eb62001d9e565b156200149757600560009054906101000a90046001600160a01b03166001600160a01b031663e5a6b10f6040518163ffffffff1660e01b815260040160206040518083038186803b1580156200134057600080fd5b505afa15801562001355573d6000803e3d6000fd5b505050506040513d60208110156200136c57600080fd5b50516001600160a01b0385811691161480156200141a575062001416612710620010bb612904600560009054906101000a90046001600160a01b03166001600160a01b031663a035b1fe6040518163ffffffff1660e01b815260040160206040518083038186803b158015620013e157600080fd5b505afa158015620013f6573d6000803e3d6000fd5b505050506040513d60208110156200140d57600080fd5b50519062002654565b8510155b620014575760405162461bcd60e51b815260040180806020018281038252603c81526020018062003967603c913960400191505060405180910390fd5b620014976040518060400160405280601c81526020017f4f66666572207265706c6163656420627920686967686572206269640000000081525062002691565b600580546001600160a01b0319166001600160a01b038381169190911790915582167f9c00f159b1fa9eaebda7acaf50be0bf3a652277380f907b35cb681bd641a62d386620014e562001520565b604080519283526001600160a01b0390911660208301528051918290030190a25050505050565b60035461010090046001600160a01b031690565b6005546001600160a01b031690565b6200153962001d9e565b801562001548575060095460ff165b62001589576040805162461bcd60e51b81526020600482015260196024820152600080516020620039a3833981519152604482015290519081900360640190fd5b600560009054906101000a90046001600160a01b03166001600160a01b03166390e64d136040518163ffffffff1660e01b815260040160206040518083038186803b158015620015d857600080fd5b505afa158015620015ed573d6000803e3d6000fd5b505050506040513d60208110156200160457600080fd5b50511562001642576200163c6040518060400160405280600d81526020016c13d999995c88195e1c1a5c9959609a1b81525062002691565b62001864565b600560009054906101000a90046001600160a01b03166001600160a01b031663cf42a9276040518163ffffffff1660e01b815260040160206040518083038186803b1580156200169157600080fd5b505afa158015620016a6573d6000803e3d6000fd5b505050506040513d6020811015620016bd57600080fd5b505115620016fa576200163c60405180604001604052806012815260200171139bdd08195b9bdd59da081cdd5c1c1bdc9d60721b81525062002691565b600554604080516338a86c5760e11b815290516001600160a01b039092169163b28fa1529162001780918491637150d8ae916004808301926020929190829003018186803b1580156200174c57600080fd5b505afa15801562001761573d6000803e3d6000fd5b505050506040513d60208110156200177857600080fd5b505162001866565b6200178a62000d1c565b036040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b158015620017c057600080fd5b505afa158015620017d5573d6000803e3d6000fd5b505050506040513d6020811015620017ec57600080fd5b505162001817576200163c604051806060016040528060218152602001620038d96021913962002691565b6040805162461bcd60e51b815260206004820181905260248201527f4163717569736974696f6e20636f6e7465737420756e7375636365737366756c604482015290519081900360640190fd5b565b6001600160a01b031660009081526020819052604090205490565b60095460ff16620018d2576040805162461bcd60e51b8152602060048201526016602482015275436f6e7472616374206973206e6f742061637469766560501b604482015290519081900360640190fd5b6000339050620018f6612710620010bb600754620018ef62000d1c565b9062002654565b620019018262001866565b10156200194a576040805162461bcd60e51b8152602060048201526012602482015271145d5bdc9d5b481b9bdd081c995858da195960721b604482015290519081900360640190fd5b6200195462001d9e565b1562001ac957600560009054906101000a90046001600160a01b03166001600160a01b031663cf42a9276040518163ffffffff1660e01b815260040160206040518083038186803b158015620019a957600080fd5b505afa158015620019be573d6000803e3d6000fd5b505050506040513d6020811015620019d557600080fd5b505162001aad57620019e662000e88565b600560009054906101000a90046001600160a01b03166001600160a01b031663cf42a9276040518163ffffffff1660e01b815260040160206040518083038186803b15801562001a3557600080fd5b505afa15801562001a4a573d6000803e3d6000fd5b505050506040513d602081101562001a6157600080fd5b505162001aad576040805162461bcd60e51b8152602060048201526015602482015274145d5bdc9d5b481a185cc81b9bdd0819985a5b1959605a1b604482015290519081900360640190fd5b62001ab76200152f565b62001ac162001d9e565b1562001ac957fe5b62001ad781826001620022ba565b604080516001600160a01b038316815290517f3b6b79a09e9fd230e8591b65c97236bf7df7a604edf733db0658e66b0e6eb2a99181900360200190a150565b62001b2062001d9e565b801562001b2f575060095460ff165b62001b70576040805162461bcd60e51b81526020600482015260196024820152600080516020620039a3833981519152604482015290519081900360640190fd5b60055433906001600160a01b0316635ff0cf848262000f018162001866565b6060600360019054906101000a90046001600160a01b03166001600160a01b03166395d89b416040518163ffffffff1660e01b815260040160006040518083038186803b15801562001be057600080fd5b505afa15801562001bf5573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052602081101562001c1f57600080fd5b8101908080516040519392919084600160201b82111562001c3f57600080fd5b90830190602082018581111562001c5557600080fd5b8251600160201b81118282018810171562001c6f57600080fd5b82525081516020918201929091019080838360005b8381101562001c9e57818101518382015260200162001c84565b50505050905090810190601f16801562001ccc5780820380516001836020036101000a031916815260200191505b506040525050506040516020018080601160fa1b815250600101828051906020019080838360208310620008835780518252601f19909201916020918201910162000862565b60075481565b3360008181526001602090815260408083206001600160a01b03871684529091528120549091620008d191859062000d69908662002598565b60035461010090046001600160a01b0316331462001d6e57600080fd5b62001d7a848462002861565b50505050565b6000620008d1338484620024ef565b6006546001600160a01b031681565b60008062001dab62001520565b6001600160a01b03161415905090565b62001dc562001d9e565b1562001e13576040805162461bcd60e51b81526020600482015260186024820152772a3432b9329034b99030903832b73234b7339037b33332b960411b604482015290519081900360640190fd5b600354604080516323b872dd60e01b81523360048201523060248201526044810184905290516101009092046001600160a01b0316916323b872dd916064808201926020929091908290030181600087803b15801562001e7257600080fd5b505af115801562001e87573d6000803e3d6000fd5b505050506040513d602081101562001e9e57600080fd5b505162001eea576040805162461bcd60e51b815260206004820152601560248201527414da185c99481d1c985b9cd9995c8819985a5b1959605a1b604482015290519081900360640190fd5b62001ef6828262002861565b5050565b6005546001600160a01b031681565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b600954600090819060ff161562001f7d5760405162461bcd60e51b8152600401808060200182810382526036815260200180620038fa6036913960400191505060405180910390fd5b62001f893384620025b9565b600062001fa2600454856200265490919063ffffffff16565b6003546040805163a9059cbb60e01b81523360048201526024810184905290519293506101009091046001600160a01b03169163a9059cbb916044808201926020929091908290030181600087803b15801562001ffe57600080fd5b505af115801562002013573d6000803e3d6000fd5b505050506040513d60208110156200202a57600080fd5b50516200203657600080fd5b60035461010090046001600160a01b031694909350915050565b6200205a62001d9e565b801562002069575060095460ff165b620020aa576040805162461bcd60e51b81526020600482015260196024820152600080516020620039a3833981519152604482015290519081900360640190fd5b600560009054906101000a90046001600160a01b03166001600160a01b0316637150d8ae6040518163ffffffff1660e01b815260040160206040518083038186803b158015620020f957600080fd5b505afa1580156200210e573d6000803e3d6000fd5b505050506040513d60208110156200212557600080fd5b50516001600160a01b031633146200216f5760405162461bcd60e51b8152600401808060200182810382526037815260200180620039306037913960400191505060405180910390fd5b620018646040518060400160405280601281526020017121b0b731b2b63632b210313c90313abcb2b960711b81525062002691565b6000620021b062001d9e565b620021bd576000620021c5565b60095460ff16155b905090565b6001600160a01b038316620022115760405162461bcd60e51b815260040180806020018281038252602481526020018062003a376024913960400191505060405180910390fd5b6001600160a01b038216620022585760405162461bcd60e51b8152600401808060200182810382526022815260200180620038b76022913960400191505060405180910390fd5b6001600160a01b03808416600081815260016020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b6000620022c78462001866565b90506000620022d562000d1c565b6009805460ff191690559050620022ec8262001f34565b5060009050620022fd828462002598565b6003546040805163a9059cbb60e01b81526001600160a01b038a81166004830152602482018590529151939450610100909204169163a9059cbb916044808201926020929091908290030181600087803b1580156200235b57600080fd5b505af115801562002370573d6000803e3d6000fd5b505050506040513d60208110156200238757600080fd5b5051620023cd576040805162461bcd60e51b815260206004820152600f60248201526e1d1c985b9cd9995c8819985a5b1959608a1b604482015290519081900360640190fd5b60038054610100600160a81b0319166101006001600160a01b03888116820292909217928390556004879055909104166323b872dd873062002410888662002654565b6040518463ffffffff1660e01b815260040180846001600160a01b03168152602001836001600160a01b031681526020018281526020019350505050602060405180830381600087803b1580156200246757600080fd5b505af11580156200247c573d6000803e3d6000fd5b505050506040513d60208110156200249357600080fd5b5051620024e7576040805162461bcd60e51b815260206004820152601760248201527f4261636b696e67207472616e73666572206661696c6564000000000000000000604482015290519081900360640190fd5b505050505050565b620024fc8383836200291d565b6200250662001d9e565b801562002515575060095460ff165b15620025935760055460408051636240a7d760e11b81526001600160a01b0386811660048301528581166024830152604482018590529151919092169163c4814fae91606480830192600092919082900301818387803b1580156200257957600080fd5b505af11580156200258e573d6000803e3d6000fd5b505050505b505050565b600082821115620025a557fe5b50900390565b81810182811015620008d557fe5b620025c5828262002a5b565b620025cf62001d9e565b8015620025de575060095460ff165b1562001ef65760055460408051636240a7d760e11b81526001600160a01b03858116600483015260006024830181905260448301869052925193169263c4814fae9260648084019391929182900301818387803b1580156200263f57600080fd5b505af1158015620024e7573d6000803e3d6000fd5b6000826200266557506000620008d5565b50818102818382816200267457fe5b0414620008d557fe5b60008183816200268957fe5b049392505050565b600554604080516338a86c5760e11b815290516000926001600160a01b031691637150d8ae916004808301926020929190829003018186803b158015620026d757600080fd5b505afa158015620026ec573d6000803e3d6000fd5b505050506040513d60208110156200270357600080fd5b505190506001600160a01b0381167fc88f58ae9feb0742d9422f604dd3c1be6d02818f8dec340c5061f428b554e975336000856200274062001520565b60405180856001600160a01b03168152602001841515815260200180602001836001600160a01b03168152602001828103825284818151815260200191508051906020019080838360005b83811015620027a55781810151838201526020016200278b565b50505050905090810190601f168015620027d35780820380516001836020036101000a031916815260200191505b509550505050505060405180910390a2600560009054906101000a90046001600160a01b03166001600160a01b03166341c0e1b56040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156200283457600080fd5b505af115801562002849573d6000803e3d6000fd5b5050600580546001600160a01b031916905550505050565b6200286b62001d9e565b15620028b9576040805162461bcd60e51b81526020600482015260186024820152772a3432b9329034b99030903832b73234b7339037b33332b960411b604482015290519081900360640190fd5b60095460ff1662002911576040805162461bcd60e51b815260206004820152601d60248201527f436f6e7472616374206e6f742061637469766520616e79206d6f72652e000000604482015290519081900360640190fd5b62001ef6828262002b2e565b6001600160a01b038316620029645760405162461bcd60e51b8152600401808060200182810382526025815260200180620039e46025913960400191505060405180910390fd5b6001600160a01b038216620029ab5760405162461bcd60e51b8152600401808060200182810382526023815260200180620038946023913960400191505060405180910390fd5b6001600160a01b038316600090815260208190526040902054620029d0908262002598565b6001600160a01b03808516600090815260208190526040808220939093559084168152205462002a019082620025ab565b6001600160a01b038084166000818152602081815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b6001600160a01b03821662002aa25760405162461bcd60e51b8152600401808060200182810382526021815260200180620039c36021913960400191505060405180910390fd5b60025462002ab1908262002598565b6002556001600160a01b03821660009081526020819052604090205462002ad9908262002598565b6001600160a01b038316600081815260208181526040808320949094558351858152935191937fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef929081900390910190a35050565b62002b3a828262002bb3565b62002b4462001d9e565b801562002b53575060095460ff165b1562001ef65760055460408051636240a7d760e11b81526000600482018190526001600160a01b038681166024840152604483018690529251929093169263c4814fae9260648084019382900301818387803b1580156200263f57600080fd5b6001600160a01b03821662002c0f576040805162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015290519081900360640190fd5b60025462002c1e9082620025ab565b6002556001600160a01b03821660009081526020819052604090205462002c469082620025ab565b6001600160a01b0383166000818152602081815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050565b610be98062002cab8339019056fe608060405234801561001057600080fd5b50604051610be9380380610be98339818101604052608081101561003357600080fd5b50805160208201516040830151606090930151919290918161008c576040805162461bcd60e51b815260206004820152600d60248201526c696e76616c696420707269636560981b604482015290519081900360640190fd5b600180546001600160a01b03199081163317909155600280546001600160a01b03968716908316179055600380549490951693169290921790925560049190915560005542600555610b06806100e36000396000f3fe608060405234801561001057600080fd5b506004361061012c5760003560e01c8063b1610d7e116100ad578063cf42a92711610071578063cf42a927146102b4578063d7be4e29146102bc578063e5a6b10f146102c4578063fa7f1bae146102cc578063fb286c65146102d45761012c565b8063b1610d7e14610249578063b28fa15214610251578063b5b47f421461026e578063b80777ea14610276578063c4814fae1461027e5761012c565b80635ff0cf84116100f45780635ff0cf84146101c35780637150d8ae146101ef5780638f1b4c6f1461021357806390e64d1314610239578063a035b1fe146102415761012c565b80630c43cd88146101315780631703a0181461014b57806341c0e1b514610153578063448ab4c61461015d5780634b91562e14610197575b600080fd5b6101396102dc565b60408051918252519081900360200190f35b6101396102e3565b61015b6102e9565b005b6101836004803603602081101561017357600080fd5b50356001600160a01b0316610343565b604080519115158252519081900360200190f35b61015b600480360360408110156101ad57600080fd5b506001600160a01b038135169060200135610376565b61015b600480360360408110156101d957600080fd5b506001600160a01b038135169060200135610421565b6101f76104c8565b604080516001600160a01b039092168252519081900360200190f35b6101836004803603602081101561022957600080fd5b50356001600160a01b03166104d7565b6101836104e0565b610139610504565b61013961050a565b6101836004803603602081101561026757600080fd5b5035610511565b61013961064e565b610139610654565b61015b6004803603606081101561029457600080fd5b506001600160a01b0381358116916020810135909116906040013561065a565b6101836106f0565b61018361083b565b6101f76108f4565b610183610903565b610139610927565b6276a70081565b60005481565b6001546001600160a01b03163314610335576040805162461bcd60e51b815260206004820152600a6024820152691b9bdd081c185c995b9d60b21b604482015290519081900360640190fd5b6002546001600160a01b0316ff5b600060015b6001600160a01b03831660009081526008602052604090205460ff16600281111561036f57fe5b1492915050565b6001546001600160a01b031633146103c2576040805162461bcd60e51b815260206004820152600a6024820152691b9bdd081c185c995b9d60b21b604482015290519081900360640190fd5b6103ca610903565b610411576040805162461bcd60e51b81526020600482015260136024820152722a3432903b37ba32903430b99032b73232b21760691b604482015290519081900360640190fd5b61041d6002828461092d565b5050565b6001546001600160a01b0316331461046d576040805162461bcd60e51b815260206004820152600a6024820152691b9bdd081c185c995b9d60b21b604482015290519081900360640190fd5b610475610903565b6104bc576040805162461bcd60e51b81526020600482015260136024820152722a3432903b37ba32903430b99032b73232b21760691b604482015290519081900360640190fd5b61041d6001828461092d565b6002546001600160a01b031681565b60006002610348565b6000806104f86005544261097390919063ffffffff16565b6276a700109150505b90565b60045481565b624f1a0081565b600354600254604080516370a0823160e01b81526001600160a01b03928316600482015290516000939290921691839183916370a0823191602480820192602092909190829003018186803b15801561056957600080fd5b505afa15801561057d573d6000803e3d6000fd5b505050506040513d602081101561059357600080fd5b505160025460015460408051636eb1769f60e11b81526001600160a01b0393841660048201529183166024830152519293506000929185169163dd62ed3e91604480820192602092909190829003018186803b1580156105f257600080fd5b505afa158015610606573d6000803e3d6000fd5b505050506040513d602081101561061c57600080fd5b505160045490915060009061063290879061098a565b90508281111580156106445750818111155b9695505050505050565b60065481565b60055481565b6001546001600160a01b031633146106a6576040805162461bcd60e51b815260206004820152600a6024820152691b9bdd081c185c995b9d60b21b604482015290519081900360640190fd5b6106ae610903565b156106eb576001600160a01b0380841660009081526008602052604080822054928516825290205460ff91821691166106e88282856109af565b50505b505050565b60006106fa610903565b1561080f57600054600154604080516318160ddd60e01b81529051610807926001600160a01b0316916318160ddd916004808301926020929190829003018186803b15801561074857600080fd5b505afa15801561075c573d6000803e3d6000fd5b505050506040513d602081101561077257600080fd5b5051600654600154604080516318160ddd60e01b8152905161080193612710936107fb9391926001600160a01b03909116916318160ddd916004808301926020929190829003018186803b1580156107c957600080fd5b505afa1580156107dd573d6000803e3d6000fd5b505050506040513d60208110156107f357600080fd5b505190610973565b9061098a565b90610ab0565b109050610501565b60005461080761082c600654600754610ac390919063ffffffff16565b6007546108019061271061098a565b6000610845610903565b156108d757600054600154604080516318160ddd60e01b815290516108ce926001600160a01b0316916318160ddd916004808301926020929190829003018186803b15801561089357600080fd5b505afa1580156108a7573d6000803e3d6000fd5b505050506040513d60208110156108bd57600080fd5b50516007546108019061271061098a565b10159050610501565b6000546108ce61082c600654600754610ac390919063ffffffff16565b6003546001600160a01b031681565b60008061091b6005544261097390919063ffffffff16565b624f1a00101591505090565b60075481565b6001600160a01b0381166000908152600860205260409020805460ff811691859182919060ff1916600183600281111561096357fe5b02179055506106e88282866109af565b60008282111561097f57fe5b508082035b92915050565b60008261099957506000610984565b50818102818382816109a757fe5b041461098457fe5b8160028111156109bb57fe5b8360028111156109c757fe5b146106eb5760028360028111156109da57fe5b14156109f5576006546109ed9082610973565b600655610a1a565b6001836002811115610a0357fe5b1415610a1a57600754610a169082610973565b6007555b6002826002811115610a2857fe5b1415610a4357600654610a3b9082610ac3565b600655610a68565b6001826002811115610a5157fe5b1415610a6857600754610a649082610ac3565b6007555b7f8fcc50c2c4edd06d51ae66e9e21ed76b32a1766c57f491788e1aa24a1b58c256600754600654604051808381526020018281526020019250505060405180910390a1505050565b6000818381610abb57fe5b049392505050565b8181018281101561098457fefea264697066735822122003198c9707537ce5959b3e8267a2b8a721cc26a72203a7d67ca0a492033fb5a264736f6c6343000701003345524332303a207472616e7366657220746f20746865207a65726f206164647265737345524332303a20617070726f766520746f20746865207a65726f20616464726573734f6666657220776173206e6f742073756666696369656e746c792066756e6465644173206c6f6e672061732074686520636f6e7472616374206973206163746976652c20796f752061726520626f756e6420746f206974596f7520617265206e6f7420617574686f72697a656420746f2063616e63656c2074686973206163717569736974696f6e206f666665724e6577206f6666657273206d757374206265206174206c6561737420352520686967686572207468616e207468652070656e64696e67206f666665725468657265206973206e6f2070656e64696e67206f666665720000000000000045524332303a206275726e2066726f6d20746865207a65726f206164647265737345524332303a207472616e736665722066726f6d20746865207a65726f20616464726573735468697320636f6e747261637420646f6573206e6f7420726570726573656e7420656e6f7567682065717569747945524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373596f7520617265206e6f7420617574686f72697a656420746f20636f6d706c6574652074686973206163717569736974696f6e206f66666572596f75206e65656420746f20686f6c64206174206c65617374203525206f6620746865206669726d20746f206d616b6520616e206f66666572a2646970667358221220b417774a6998d84d541c65b3534e456ba2af2a8f5007cde884991aa557b5406a64736f6c63430007010033",
                        "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x1 PUSH1 0x4 DUP2 SWAP1 SSTORE PUSH1 0x9 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SWAP2 OR SWAP1 SSTORE CALLVALUE DUP1 ISZERO PUSH3 0x25 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x3C2D CODESIZE SUB DUP1 PUSH3 0x3C2D DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE PUSH1 0x60 DUP2 LT ISZERO PUSH3 0x4B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 MLOAD PUSH1 0x20 DUP1 DUP4 ADD MLOAD PUSH1 0x40 SWAP4 DUP5 ADD MLOAD PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH2 0x100 DUP2 MUL PUSH1 0x1 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x6 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH20 0x29FE8914E76DA5CE2D90DE98A64D0055F199D06D OR SWAP1 SSTORE PUSH1 0x7 DUP4 SWAP1 SSTORE PUSH1 0x8 DUP3 SWAP1 SSTORE DUP6 MLOAD PUSH4 0x3A98EF39 PUSH1 0xE0 SHL DUP2 MSTORE SWAP6 MLOAD SWAP5 SWAP6 SWAP3 SWAP5 SWAP2 SWAP4 SWAP1 SWAP3 PUSH4 0x3A98EF39 SWAP3 PUSH1 0x4 DUP1 DUP4 ADD SWAP4 SWAP3 DUP3 SWAP1 SUB ADD DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0xEA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH3 0xFF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH3 0x116 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP POP POP POP PUSH2 0x3B02 DUP1 PUSH3 0x12B PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH3 0x22C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6F4B18DF GT PUSH3 0x135 JUMPI DUP1 PUSH4 0xA9059CBB GT PUSH3 0xBD JUMPI DUP1 PUSH4 0xC028DF06 GT PUSH3 0x87 JUMPI DUP1 PUSH4 0xC028DF06 EQ PUSH3 0x65B JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH3 0x665 JUMPI DUP1 PUSH4 0xDE0E9A3E EQ PUSH3 0x696 JUMPI DUP1 PUSH4 0xE1B8C38E EQ PUSH3 0x6D9 JUMPI DUP1 PUSH4 0xEC6580E2 EQ PUSH3 0x6E3 JUMPI PUSH3 0x22C JUMP JUMPDEST DUP1 PUSH4 0xA9059CBB EQ PUSH3 0x5E9 JUMPI DUP1 PUSH4 0xBB689472 EQ PUSH3 0x618 JUMPI DUP1 PUSH4 0xBC1B1E7C EQ PUSH3 0x622 JUMPI DUP1 PUSH4 0xBF376C7A EQ PUSH3 0x62C JUMPI PUSH3 0x22C JUMP JUMPDEST DUP1 PUSH4 0x95D89B41 GT PUSH3 0xFF JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH3 0x51D JUMPI DUP1 PUSH4 0x9E8A9A5A EQ PUSH3 0x527 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH3 0x531 JUMPI DUP1 PUSH4 0xA4C0ED36 EQ PUSH3 0x560 JUMPI PUSH3 0x22C JUMP JUMPDEST DUP1 PUSH4 0x6F4B18DF EQ PUSH3 0x4D6 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH3 0x4E0 JUMPI DUP1 PUSH4 0x8FD3AB80 EQ PUSH3 0x509 JUMPI DUP1 PUSH4 0x90CF581C EQ PUSH3 0x513 JUMPI PUSH3 0x22C JUMP JUMPDEST DUP1 PUSH4 0x3549788A GT PUSH3 0x1B9 JUMPI DUP1 PUSH4 0x42966C68 GT PUSH3 0x183 JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH3 0x457 JUMPI DUP1 PUSH4 0x49B210B7 EQ PUSH3 0x477 JUMPI DUP1 PUSH4 0x58047913 EQ PUSH3 0x4A6 JUMPI DUP1 PUSH4 0x6467C09A EQ PUSH3 0x4CC JUMPI PUSH3 0x22C JUMP JUMPDEST DUP1 PUSH4 0x3549788A EQ PUSH3 0x38B JUMPI DUP1 PUSH4 0x39509351 EQ PUSH3 0x395 JUMPI DUP1 PUSH4 0x4000AEA0 EQ PUSH3 0x3C4 JUMPI DUP1 PUSH4 0x41C12A70 EQ PUSH3 0x44D JUMPI PUSH3 0x22C JUMP JUMPDEST DUP1 PUSH4 0x141C7068 GT PUSH3 0x1FB JUMPI DUP1 PUSH4 0x141C7068 EQ PUSH3 0x31C JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH3 0x328 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH3 0x332 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH3 0x36B JUMPI PUSH3 0x22C JUMP JUMPDEST DUP1 PUSH4 0x2FB0C5E EQ PUSH3 0x231 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH3 0x24F JUMPI DUP1 PUSH4 0x832E470 EQ PUSH3 0x2D1 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH3 0x2ED JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x23B PUSH3 0x6ED JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH3 0x259 PUSH3 0x6F6 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP4 MLOAD DUP2 DUP4 ADD MSTORE DUP4 MLOAD SWAP2 SWAP3 DUP4 SWAP3 SWAP1 DUP4 ADD SWAP2 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x295 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH3 0x27B JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH3 0x2C3 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH3 0x2DB PUSH3 0x8BC JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH3 0x23B PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH3 0x305 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH3 0x8C2 JUMP JUMPDEST PUSH3 0x326 PUSH3 0x8DB JUMP JUMPDEST STOP JUMPDEST PUSH3 0x2DB PUSH3 0xD1C JUMP JUMPDEST PUSH3 0x23B PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH3 0x34A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH3 0xD22 JUMP JUMPDEST PUSH3 0x375 PUSH3 0xD79 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xFF SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH3 0x2DB PUSH3 0xD82 JUMP JUMPDEST PUSH3 0x23B PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH3 0x3AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH3 0xD88 JUMP JUMPDEST PUSH3 0x23B PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH3 0x3DC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 CALLDATALOAD AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP2 DUP2 ADD SWAP1 PUSH1 0x60 DUP2 ADD PUSH1 0x40 DUP3 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x20 SHL DUP2 GT ISZERO PUSH3 0x40C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH3 0x41F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH1 0x1 PUSH1 0x20 SHL DUP4 GT OR ISZERO PUSH3 0x441 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP SWAP1 SWAP3 POP SWAP1 POP PUSH3 0xDC1 JUMP JUMPDEST PUSH3 0x326 PUSH3 0xE88 JUMP JUMPDEST PUSH3 0x326 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH3 0x46F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH3 0xF64 JUMP JUMPDEST PUSH3 0x326 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH3 0x48F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH3 0xFD6 JUMP JUMPDEST PUSH3 0x4B0 PUSH3 0x150C JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH3 0x4B0 PUSH3 0x1520 JUMP JUMPDEST PUSH3 0x326 PUSH3 0x152F JUMP JUMPDEST PUSH3 0x2DB PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH3 0x4F8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH3 0x1866 JUMP JUMPDEST PUSH3 0x326 PUSH3 0x1881 JUMP JUMPDEST PUSH3 0x326 PUSH3 0x1B16 JUMP JUMPDEST PUSH3 0x259 PUSH3 0x1B8F JUMP JUMPDEST PUSH3 0x2DB PUSH3 0x1D12 JUMP JUMPDEST PUSH3 0x23B PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH3 0x549 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH3 0x1D18 JUMP JUMPDEST PUSH3 0x326 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH3 0x578 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 CALLDATALOAD AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP2 DUP2 ADD SWAP1 PUSH1 0x60 DUP2 ADD PUSH1 0x40 DUP3 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x20 SHL DUP2 GT ISZERO PUSH3 0x5A8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH3 0x5BB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH1 0x1 PUSH1 0x20 SHL DUP4 GT OR ISZERO PUSH3 0x5DD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP SWAP1 SWAP3 POP SWAP1 POP PUSH3 0x1D51 JUMP JUMPDEST PUSH3 0x23B PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH3 0x601 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH3 0x1D80 JUMP JUMPDEST PUSH3 0x4B0 PUSH3 0x1D8F JUMP JUMPDEST PUSH3 0x23B PUSH3 0x1D9E JUMP JUMPDEST PUSH3 0x326 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH3 0x644 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH3 0x1DBB JUMP JUMPDEST PUSH3 0x4B0 PUSH3 0x1EFA JUMP JUMPDEST PUSH3 0x2DB PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH3 0x67D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 ADD CALLDATALOAD AND PUSH3 0x1F09 JUMP JUMPDEST PUSH3 0x6B6 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH3 0x6AE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH3 0x1F34 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP1 MLOAD SWAP2 DUP3 SWAP1 SUB ADD SWAP1 RETURN JUMPDEST PUSH3 0x326 PUSH3 0x2050 JUMP JUMPDEST PUSH3 0x23B PUSH3 0x21A4 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x6FDDE03 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x747 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH3 0x75C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH1 0x20 DUP2 LT ISZERO PUSH3 0x786 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD PUSH1 0x40 MLOAD SWAP4 SWAP3 SWAP2 SWAP1 DUP5 PUSH1 0x1 PUSH1 0x20 SHL DUP3 GT ISZERO PUSH3 0x7A6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 DUP4 ADD SWAP1 PUSH1 0x20 DUP3 ADD DUP6 DUP2 GT ISZERO PUSH3 0x7BC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x20 SHL DUP2 GT DUP3 DUP3 ADD DUP9 LT OR ISZERO PUSH3 0x7D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MSTORE POP DUP2 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x805 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH3 0x7EB JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH3 0x833 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP PUSH1 0x40 MSTORE POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP1 PUSH10 0x223930B3B3B0B136329 PUSH1 0xB5 SHL DUP2 MSTORE POP PUSH1 0xA ADD DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH3 0x883 JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x1F NOT SWAP1 SWAP3 ADD SWAP2 PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH3 0x862 JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH3 0x8D1 CALLER DUP5 DUP5 PUSH3 0x21CA JUMP JUMPDEST POP PUSH1 0x1 JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x8E5 PUSH3 0x1D9E JUMP JUMPDEST DUP1 ISZERO PUSH3 0x8F4 JUMPI POP PUSH1 0x9 SLOAD PUSH1 0xFF AND JUMPDEST PUSH3 0x935 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH3 0x39A3 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x38A86C57 PUSH1 0xE1 SHL DUP2 MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0x7150D8AE SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x97B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH3 0x990 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH3 0x9A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 POP CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ PUSH3 0x9F4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x39 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH3 0x3A5B PUSH1 0x39 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xD7BE4E29 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0xA43 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH3 0xA58 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH3 0xA6F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH3 0xAC3 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E74206E756D626572206F662079657320766F746573 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xB28FA152 PUSH3 0xADF DUP4 PUSH3 0x1866 JUMP JUMPDEST PUSH3 0xAE9 PUSH3 0xD1C JUMP JUMPDEST SUB PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0xB1F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH3 0xB34 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH3 0xB4B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH3 0xB9F JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6666657220696E73756666696369656E746C792066756E6465640000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH3 0xC9B DUP2 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xE5A6B10F PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0xBF3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH3 0xC08 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH3 0xC1F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x5 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x501AD8FF PUSH1 0xE1 SHL DUP2 MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 PUSH4 0xA035B1FE SWAP2 PUSH1 0x4 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0xC67 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH3 0xC7C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH3 0xC93 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH3 0x22BA JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x40 DUP1 MLOAD CALLER DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 DUP2 DUP4 ADD DUP2 SWAP1 MSTORE PUSH1 0x16 SWAP1 DUP3 ADD MSTORE PUSH22 0x436F6D706C65746564207375636365737366756C6C79 PUSH1 0x50 SHL PUSH1 0xA0 DUP3 ADD MSTORE SWAP1 MLOAD SWAP2 DUP4 AND SWAP2 PUSH32 0xC88F58AE9FEB0742D9422F604DD3C1BE6D02818F8DEC340C5061F428B554E975 SWAP2 DUP2 SWAP1 SUB PUSH1 0xC0 ADD SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH3 0xD31 DUP5 DUP5 DUP5 PUSH3 0x24EF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP1 DUP6 MSTORE SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 SLOAD PUSH3 0xD6F SWAP2 DUP7 SWAP2 PUSH3 0xD69 SWAP1 DUP7 PUSH3 0x2598 JUMP JUMPDEST PUSH3 0x21CA JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 PUSH3 0x8D1 SWAP2 DUP6 SWAP1 PUSH3 0xD69 SWAP1 DUP7 PUSH3 0x25AB JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH3 0xDD0 DUP7 DUP7 PUSH3 0x1D80 JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH3 0xE7F JUMPI DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xA4C0ED36 CALLER DUP8 DUP8 DUP8 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP5 DUP5 DUP3 DUP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP SWAP6 POP POP POP POP POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0xE65 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH3 0xE7A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH3 0xE92 PUSH3 0x1D9E JUMP JUMPDEST DUP1 ISZERO PUSH3 0xEA1 JUMPI POP PUSH1 0x9 SLOAD PUSH1 0xFF AND JUMPDEST PUSH3 0xEE2 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH3 0x39A3 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x5 SLOAD CALLER SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x4B91562E DUP3 PUSH3 0xF01 DUP2 PUSH3 0x1866 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0xF48 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH3 0xF5D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH3 0xF70 CALLER DUP3 PUSH3 0x25B9 JUMP JUMPDEST PUSH3 0xF7A PUSH3 0x150C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x42966C68 PUSH3 0xF9F PUSH1 0x4 SLOAD DUP5 PUSH3 0x2654 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0xF48 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x9 SLOAD PUSH1 0xFF AND PUSH3 0x102E JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416E206163636570746564206F66666572206578697374730000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH3 0x103A PUSH3 0x150C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x3A98EF39 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x1075 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH3 0x108A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH3 0x10A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 POP CALLER PUSH3 0x10C2 PUSH2 0x2710 PUSH3 0x10BB DUP5 PUSH2 0xBB8 PUSH3 0x2654 JUMP JUMPDEST SWAP1 PUSH3 0x267D JUMP JUMPDEST PUSH3 0x10CC PUSH3 0xD1C JUMP JUMPDEST LT ISZERO PUSH3 0x110B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2E DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH3 0x3A09 PUSH1 0x2E SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x1120 PUSH2 0x2710 PUSH3 0x10BB DUP5 PUSH2 0x1F4 PUSH3 0x2654 JUMP JUMPDEST PUSH3 0x112B DUP3 PUSH3 0x1866 JUMP JUMPDEST LT ISZERO PUSH3 0x116A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x39 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH3 0x3A94 PUSH1 0x39 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH1 0x0 SWAP1 PUSH8 0xDE0B6B3A7640000 SWAP1 DUP3 DUP2 DUP2 DUP2 DUP6 DUP9 DUP4 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH3 0x11A8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x0 CALLER DUP5 DUP7 PUSH1 0x8 SLOAD PUSH1 0x40 MLOAD PUSH3 0x11BF SWAP1 PUSH3 0x2C9C JUMP JUMPDEST DUP1 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP5 POP POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 PUSH1 0x0 CREATE DUP1 ISZERO DUP1 ISZERO PUSH3 0x120D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xB28FA152 PUSH3 0x122A DUP5 PUSH3 0x1866 JUMP JUMPDEST PUSH3 0x1234 PUSH3 0xD1C JUMP JUMPDEST SUB PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x126A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH3 0x127F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH3 0x1296 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH3 0x12E1 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x496E73756666696369656E742066756E64696E67 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH3 0x12EB PUSH3 0x1D9E JUMP JUMPDEST ISZERO PUSH3 0x1497 JUMPI PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xE5A6B10F PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x1340 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH3 0x1355 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH3 0x136C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND SWAP2 AND EQ DUP1 ISZERO PUSH3 0x141A JUMPI POP PUSH3 0x1416 PUSH2 0x2710 PUSH3 0x10BB PUSH2 0x2904 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xA035B1FE PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x13E1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH3 0x13F6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH3 0x140D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 PUSH3 0x2654 JUMP JUMPDEST DUP6 LT ISZERO JUMPDEST PUSH3 0x1457 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x3C DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH3 0x3967 PUSH1 0x3C SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x1497 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1C DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4F66666572207265706C61636564206279206869676865722062696400000000 DUP2 MSTORE POP PUSH3 0x2691 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SWAP2 SSTORE DUP3 AND PUSH32 0x9C00F159B1FA9EAEBDA7ACAF50BE0BF3A652277380F907B35CB681BD641A62D3 DUP7 PUSH3 0x14E5 PUSH3 0x1520 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x20 DUP4 ADD MSTORE DUP1 MLOAD SWAP2 DUP3 SWAP1 SUB ADD SWAP1 LOG2 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH3 0x1539 PUSH3 0x1D9E JUMP JUMPDEST DUP1 ISZERO PUSH3 0x1548 JUMPI POP PUSH1 0x9 SLOAD PUSH1 0xFF AND JUMPDEST PUSH3 0x1589 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH3 0x39A3 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x90E64D13 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x15D8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH3 0x15ED JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH3 0x1604 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD ISZERO PUSH3 0x1642 JUMPI PUSH3 0x163C PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xD DUP2 MSTORE PUSH1 0x20 ADD PUSH13 0x13D999995C88195E1C1A5C9959 PUSH1 0x9A SHL DUP2 MSTORE POP PUSH3 0x2691 JUMP JUMPDEST PUSH3 0x1864 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xCF42A927 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x1691 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH3 0x16A6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH3 0x16BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD ISZERO PUSH3 0x16FA JUMPI PUSH3 0x163C PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH18 0x139BDD08195B9BDD59DA081CDD5C1C1BDC9D PUSH1 0x72 SHL DUP2 MSTORE POP PUSH3 0x2691 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x38A86C57 PUSH1 0xE1 SHL DUP2 MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 PUSH4 0xB28FA152 SWAP2 PUSH3 0x1780 SWAP2 DUP5 SWAP2 PUSH4 0x7150D8AE SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x174C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH3 0x1761 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH3 0x1778 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH3 0x1866 JUMP JUMPDEST PUSH3 0x178A PUSH3 0xD1C JUMP JUMPDEST SUB PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x17C0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH3 0x17D5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH3 0x17EC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH3 0x1817 JUMPI PUSH3 0x163C PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0x38D9 PUSH1 0x21 SWAP2 CODECOPY PUSH3 0x2691 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4163717569736974696F6E20636F6E7465737420756E7375636365737366756C PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0xFF AND PUSH3 0x18D2 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x436F6E7472616374206973206E6F7420616374697665 PUSH1 0x50 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 CALLER SWAP1 POP PUSH3 0x18F6 PUSH2 0x2710 PUSH3 0x10BB PUSH1 0x7 SLOAD PUSH3 0x18EF PUSH3 0xD1C JUMP JUMPDEST SWAP1 PUSH3 0x2654 JUMP JUMPDEST PUSH3 0x1901 DUP3 PUSH3 0x1866 JUMP JUMPDEST LT ISZERO PUSH3 0x194A JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x145D5BDC9D5B481B9BDD081C995858DA1959 PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH3 0x1954 PUSH3 0x1D9E JUMP JUMPDEST ISZERO PUSH3 0x1AC9 JUMPI PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xCF42A927 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x19A9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH3 0x19BE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH3 0x19D5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH3 0x1AAD JUMPI PUSH3 0x19E6 PUSH3 0xE88 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xCF42A927 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x1A35 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH3 0x1A4A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH3 0x1A61 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH3 0x1AAD JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x145D5BDC9D5B481A185CC81B9BDD0819985A5B1959 PUSH1 0x5A SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH3 0x1AB7 PUSH3 0x152F JUMP JUMPDEST PUSH3 0x1AC1 PUSH3 0x1D9E JUMP JUMPDEST ISZERO PUSH3 0x1AC9 JUMPI INVALID JUMPDEST PUSH3 0x1AD7 DUP2 DUP3 PUSH1 0x1 PUSH3 0x22BA JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND DUP2 MSTORE SWAP1 MLOAD PUSH32 0x3B6B79A09E9FD230E8591B65C97236BF7DF7A604EDF733DB0658E66B0E6EB2A9 SWAP2 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG1 POP JUMP JUMPDEST PUSH3 0x1B20 PUSH3 0x1D9E JUMP JUMPDEST DUP1 ISZERO PUSH3 0x1B2F JUMPI POP PUSH1 0x9 SLOAD PUSH1 0xFF AND JUMPDEST PUSH3 0x1B70 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH3 0x39A3 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x5 SLOAD CALLER SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x5FF0CF84 DUP3 PUSH3 0xF01 DUP2 PUSH3 0x1866 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x95D89B41 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x1BE0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH3 0x1BF5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH1 0x20 DUP2 LT ISZERO PUSH3 0x1C1F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD PUSH1 0x40 MLOAD SWAP4 SWAP3 SWAP2 SWAP1 DUP5 PUSH1 0x1 PUSH1 0x20 SHL DUP3 GT ISZERO PUSH3 0x1C3F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 DUP4 ADD SWAP1 PUSH1 0x20 DUP3 ADD DUP6 DUP2 GT ISZERO PUSH3 0x1C55 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x20 SHL DUP2 GT DUP3 DUP3 ADD DUP9 LT OR ISZERO PUSH3 0x1C6F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MSTORE POP DUP2 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x1C9E JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH3 0x1C84 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH3 0x1CCC JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP PUSH1 0x40 MSTORE POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP1 PUSH1 0x11 PUSH1 0xFA SHL DUP2 MSTORE POP PUSH1 0x1 ADD DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x20 DUP4 LT PUSH3 0x883 JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x1F NOT SWAP1 SWAP3 ADD SWAP2 PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH3 0x862 JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 PUSH3 0x8D1 SWAP2 DUP6 SWAP1 PUSH3 0xD69 SWAP1 DUP7 PUSH3 0x2598 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH3 0x1D6E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x1D7A DUP5 DUP5 PUSH3 0x2861 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x8D1 CALLER DUP5 DUP5 PUSH3 0x24EF JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH3 0x1DAB PUSH3 0x1520 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO SWAP1 POP SWAP1 JUMP JUMPDEST PUSH3 0x1DC5 PUSH3 0x1D9E JUMP JUMPDEST ISZERO PUSH3 0x1E13 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH24 0x2A3432B9329034B99030903832B73234B7339037B33332B9 PUSH1 0x41 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP5 SWAP1 MSTORE SWAP1 MLOAD PUSH2 0x100 SWAP1 SWAP3 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0x23B872DD SWAP2 PUSH1 0x64 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x1E72 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH3 0x1E87 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH3 0x1E9E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH3 0x1EEA JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x14DA185C99481D1C985B9CD9995C8819985A5B1959 PUSH1 0x5A SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH3 0x1EF6 DUP3 DUP3 PUSH3 0x2861 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0x0 SWAP1 DUP2 SWAP1 PUSH1 0xFF AND ISZERO PUSH3 0x1F7D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x36 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH3 0x38FA PUSH1 0x36 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x1F89 CALLER DUP5 PUSH3 0x25B9 JUMP JUMPDEST PUSH1 0x0 PUSH3 0x1FA2 PUSH1 0x4 SLOAD DUP6 PUSH3 0x2654 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP5 SWAP1 MSTORE SWAP1 MLOAD SWAP3 SWAP4 POP PUSH2 0x100 SWAP1 SWAP2 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0xA9059CBB SWAP2 PUSH1 0x44 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x1FFE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH3 0x2013 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH3 0x202A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH3 0x2036 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x3 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP5 SWAP1 SWAP4 POP SWAP2 POP POP JUMP JUMPDEST PUSH3 0x205A PUSH3 0x1D9E JUMP JUMPDEST DUP1 ISZERO PUSH3 0x2069 JUMPI POP PUSH1 0x9 SLOAD PUSH1 0xFF AND JUMPDEST PUSH3 0x20AA JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH3 0x39A3 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x7150D8AE PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x20F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH3 0x210E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH3 0x2125 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH3 0x216F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x37 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH3 0x3930 PUSH1 0x37 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x1864 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH18 0x21B0B731B2B63632B210313C90313ABCB2B9 PUSH1 0x71 SHL DUP2 MSTORE POP PUSH3 0x2691 JUMP JUMPDEST PUSH1 0x0 PUSH3 0x21B0 PUSH3 0x1D9E JUMP JUMPDEST PUSH3 0x21BD JUMPI PUSH1 0x0 PUSH3 0x21C5 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH3 0x2211 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH3 0x3A37 PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH3 0x2258 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH3 0x38B7 PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE DUP2 MLOAD DUP6 DUP2 MSTORE SWAP2 MLOAD PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x22C7 DUP5 PUSH3 0x1866 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH3 0x22D5 PUSH3 0xD1C JUMP JUMPDEST PUSH1 0x9 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE SWAP1 POP PUSH3 0x22EC DUP3 PUSH3 0x1F34 JUMP JUMPDEST POP PUSH1 0x0 SWAP1 POP PUSH3 0x22FD DUP3 DUP5 PUSH3 0x2598 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP6 SWAP1 MSTORE SWAP2 MLOAD SWAP4 SWAP5 POP PUSH2 0x100 SWAP1 SWAP3 DIV AND SWAP2 PUSH4 0xA9059CBB SWAP2 PUSH1 0x44 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x235B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH3 0x2370 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH3 0x2387 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH3 0x23CD JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x1D1C985B9CD9995C8819985A5B1959 PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT AND PUSH2 0x100 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 DUP2 AND DUP3 MUL SWAP3 SWAP1 SWAP3 OR SWAP3 DUP4 SWAP1 SSTORE PUSH1 0x4 DUP8 SWAP1 SSTORE SWAP1 SWAP2 DIV AND PUSH4 0x23B872DD DUP8 ADDRESS PUSH3 0x2410 DUP9 DUP7 PUSH3 0x2654 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP4 POP POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x2467 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH3 0x247C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH3 0x2493 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH3 0x24E7 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4261636B696E67207472616E73666572206661696C6564000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH3 0x24FC DUP4 DUP4 DUP4 PUSH3 0x291D JUMP JUMPDEST PUSH3 0x2506 PUSH3 0x1D9E JUMP JUMPDEST DUP1 ISZERO PUSH3 0x2515 JUMPI POP PUSH1 0x9 SLOAD PUSH1 0xFF AND JUMPDEST ISZERO PUSH3 0x2593 JUMPI PUSH1 0x5 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x6240A7D7 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE DUP6 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD DUP6 SWAP1 MSTORE SWAP2 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP2 PUSH4 0xC4814FAE SWAP2 PUSH1 0x64 DUP1 DUP4 ADD SWAP3 PUSH1 0x0 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP4 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x2579 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH3 0x258E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 GT ISZERO PUSH3 0x25A5 JUMPI INVALID JUMPDEST POP SWAP1 SUB SWAP1 JUMP JUMPDEST DUP2 DUP2 ADD DUP3 DUP2 LT ISZERO PUSH3 0x8D5 JUMPI INVALID JUMPDEST PUSH3 0x25C5 DUP3 DUP3 PUSH3 0x2A5B JUMP JUMPDEST PUSH3 0x25CF PUSH3 0x1D9E JUMP JUMPDEST DUP1 ISZERO PUSH3 0x25DE JUMPI POP PUSH1 0x9 SLOAD PUSH1 0xFF AND JUMPDEST ISZERO PUSH3 0x1EF6 JUMPI PUSH1 0x5 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x6240A7D7 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x0 PUSH1 0x24 DUP4 ADD DUP2 SWAP1 MSTORE PUSH1 0x44 DUP4 ADD DUP7 SWAP1 MSTORE SWAP3 MLOAD SWAP4 AND SWAP3 PUSH4 0xC4814FAE SWAP3 PUSH1 0x64 DUP1 DUP5 ADD SWAP4 SWAP2 SWAP3 SWAP2 DUP3 SWAP1 SUB ADD DUP2 DUP4 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x263F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH3 0x24E7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH3 0x2665 JUMPI POP PUSH1 0x0 PUSH3 0x8D5 JUMP JUMPDEST POP DUP2 DUP2 MUL DUP2 DUP4 DUP3 DUP2 PUSH3 0x2674 JUMPI INVALID JUMPDEST DIV EQ PUSH3 0x8D5 JUMPI INVALID JUMPDEST PUSH1 0x0 DUP2 DUP4 DUP2 PUSH3 0x2689 JUMPI INVALID JUMPDEST DIV SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x38A86C57 PUSH1 0xE1 SHL DUP2 MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0x7150D8AE SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x26D7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH3 0x26EC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH3 0x2703 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH32 0xC88F58AE9FEB0742D9422F604DD3C1BE6D02818F8DEC340C5061F428B554E975 CALLER PUSH1 0x0 DUP6 PUSH3 0x2740 PUSH3 0x1520 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP5 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x27A5 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH3 0x278B JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH3 0x27D3 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP6 POP POP POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x41C0E1B5 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x2834 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH3 0x2849 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH3 0x286B PUSH3 0x1D9E JUMP JUMPDEST ISZERO PUSH3 0x28B9 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH24 0x2A3432B9329034B99030903832B73234B7339037B33332B9 PUSH1 0x41 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x9 SLOAD PUSH1 0xFF AND PUSH3 0x2911 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436F6E7472616374206E6F742061637469766520616E79206D6F72652E000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH3 0x1EF6 DUP3 DUP3 PUSH3 0x2B2E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH3 0x2964 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH3 0x39E4 PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH3 0x29AB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH3 0x3894 PUSH1 0x23 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH3 0x29D0 SWAP1 DUP3 PUSH3 0x2598 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP1 DUP5 AND DUP2 MSTORE KECCAK256 SLOAD PUSH3 0x2A01 SWAP1 DUP3 PUSH3 0x25AB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE DUP1 MLOAD DUP6 DUP2 MSTORE SWAP1 MLOAD SWAP2 SWAP4 SWAP3 DUP8 AND SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 SWAP2 DUP3 SWAP1 SUB ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH3 0x2AA2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH3 0x39C3 PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 SLOAD PUSH3 0x2AB1 SWAP1 DUP3 PUSH3 0x2598 JUMP JUMPDEST PUSH1 0x2 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH3 0x2AD9 SWAP1 DUP3 PUSH3 0x2598 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE DUP4 MLOAD DUP6 DUP2 MSTORE SWAP4 MLOAD SWAP2 SWAP4 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 SWAP1 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH3 0x2B3A DUP3 DUP3 PUSH3 0x2BB3 JUMP JUMPDEST PUSH3 0x2B44 PUSH3 0x1D9E JUMP JUMPDEST DUP1 ISZERO PUSH3 0x2B53 JUMPI POP PUSH1 0x9 SLOAD PUSH1 0xFF AND JUMPDEST ISZERO PUSH3 0x1EF6 JUMPI PUSH1 0x5 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x6240A7D7 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND PUSH1 0x24 DUP5 ADD MSTORE PUSH1 0x44 DUP4 ADD DUP7 SWAP1 MSTORE SWAP3 MLOAD SWAP3 SWAP1 SWAP4 AND SWAP3 PUSH4 0xC4814FAE SWAP3 PUSH1 0x64 DUP1 DUP5 ADD SWAP4 DUP3 SWAP1 SUB ADD DUP2 DUP4 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x263F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH3 0x2C0F JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x2 SLOAD PUSH3 0x2C1E SWAP1 DUP3 PUSH3 0x25AB JUMP JUMPDEST PUSH1 0x2 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH3 0x2C46 SWAP1 DUP3 PUSH3 0x25AB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE DUP4 MLOAD DUP6 DUP2 MSTORE SWAP4 MLOAD SWAP3 SWAP4 SWAP2 SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0xBE9 DUP1 PUSH3 0x2CAB DUP4 CODECOPY ADD SWAP1 JUMP INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0xBE9 CODESIZE SUB DUP1 PUSH2 0xBE9 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE PUSH1 0x80 DUP2 LT ISZERO PUSH2 0x33 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 MLOAD PUSH1 0x20 DUP3 ADD MLOAD PUSH1 0x40 DUP4 ADD MLOAD PUSH1 0x60 SWAP1 SWAP4 ADD MLOAD SWAP2 SWAP3 SWAP1 SWAP2 DUP2 PUSH2 0x8C JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x696E76616C6964207072696365 PUSH1 0x98 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND CALLER OR SWAP1 SWAP2 SSTORE PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP7 DUP8 AND SWAP1 DUP4 AND OR SWAP1 SSTORE PUSH1 0x3 DUP1 SLOAD SWAP5 SWAP1 SWAP6 AND SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP3 SSTORE PUSH1 0x4 SWAP2 SWAP1 SWAP2 SSTORE PUSH1 0x0 SSTORE TIMESTAMP PUSH1 0x5 SSTORE PUSH2 0xB06 DUP1 PUSH2 0xE3 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x12C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xB1610D7E GT PUSH2 0xAD JUMPI DUP1 PUSH4 0xCF42A927 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xCF42A927 EQ PUSH2 0x2B4 JUMPI DUP1 PUSH4 0xD7BE4E29 EQ PUSH2 0x2BC JUMPI DUP1 PUSH4 0xE5A6B10F EQ PUSH2 0x2C4 JUMPI DUP1 PUSH4 0xFA7F1BAE EQ PUSH2 0x2CC JUMPI DUP1 PUSH4 0xFB286C65 EQ PUSH2 0x2D4 JUMPI PUSH2 0x12C JUMP JUMPDEST DUP1 PUSH4 0xB1610D7E EQ PUSH2 0x249 JUMPI DUP1 PUSH4 0xB28FA152 EQ PUSH2 0x251 JUMPI DUP1 PUSH4 0xB5B47F42 EQ PUSH2 0x26E JUMPI DUP1 PUSH4 0xB80777EA EQ PUSH2 0x276 JUMPI DUP1 PUSH4 0xC4814FAE EQ PUSH2 0x27E JUMPI PUSH2 0x12C JUMP JUMPDEST DUP1 PUSH4 0x5FF0CF84 GT PUSH2 0xF4 JUMPI DUP1 PUSH4 0x5FF0CF84 EQ PUSH2 0x1C3 JUMPI DUP1 PUSH4 0x7150D8AE EQ PUSH2 0x1EF JUMPI DUP1 PUSH4 0x8F1B4C6F EQ PUSH2 0x213 JUMPI DUP1 PUSH4 0x90E64D13 EQ PUSH2 0x239 JUMPI DUP1 PUSH4 0xA035B1FE EQ PUSH2 0x241 JUMPI PUSH2 0x12C JUMP JUMPDEST DUP1 PUSH4 0xC43CD88 EQ PUSH2 0x131 JUMPI DUP1 PUSH4 0x1703A018 EQ PUSH2 0x14B JUMPI DUP1 PUSH4 0x41C0E1B5 EQ PUSH2 0x153 JUMPI DUP1 PUSH4 0x448AB4C6 EQ PUSH2 0x15D JUMPI DUP1 PUSH4 0x4B91562E EQ PUSH2 0x197 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x139 PUSH2 0x2DC JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x139 PUSH2 0x2E3 JUMP JUMPDEST PUSH2 0x15B PUSH2 0x2E9 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x183 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x173 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x343 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x15B PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x1AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x376 JUMP JUMPDEST PUSH2 0x15B PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x1D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x421 JUMP JUMPDEST PUSH2 0x1F7 PUSH2 0x4C8 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x183 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x229 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x4D7 JUMP JUMPDEST PUSH2 0x183 PUSH2 0x4E0 JUMP JUMPDEST PUSH2 0x139 PUSH2 0x504 JUMP JUMPDEST PUSH2 0x139 PUSH2 0x50A JUMP JUMPDEST PUSH2 0x183 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x267 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x511 JUMP JUMPDEST PUSH2 0x139 PUSH2 0x64E JUMP JUMPDEST PUSH2 0x139 PUSH2 0x654 JUMP JUMPDEST PUSH2 0x15B PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x294 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH2 0x65A JUMP JUMPDEST PUSH2 0x183 PUSH2 0x6F0 JUMP JUMPDEST PUSH2 0x183 PUSH2 0x83B JUMP JUMPDEST PUSH2 0x1F7 PUSH2 0x8F4 JUMP JUMPDEST PUSH2 0x183 PUSH2 0x903 JUMP JUMPDEST PUSH2 0x139 PUSH2 0x927 JUMP JUMPDEST PUSH3 0x76A700 DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x335 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xA PUSH1 0x24 DUP3 ADD MSTORE PUSH10 0x1B9BDD081C185C995B9D PUSH1 0xB2 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SELFDESTRUCT JUMPDEST PUSH1 0x0 PUSH1 0x1 JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x36F JUMPI INVALID JUMPDEST EQ SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x3C2 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xA PUSH1 0x24 DUP3 ADD MSTORE PUSH10 0x1B9BDD081C185C995B9D PUSH1 0xB2 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x3CA PUSH2 0x903 JUMP JUMPDEST PUSH2 0x411 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x2A3432903B37BA32903430B99032B73232B217 PUSH1 0x69 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x41D PUSH1 0x2 DUP3 DUP5 PUSH2 0x92D JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x46D JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xA PUSH1 0x24 DUP3 ADD MSTORE PUSH10 0x1B9BDD081C185C995B9D PUSH1 0xB2 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x475 PUSH2 0x903 JUMP JUMPDEST PUSH2 0x4BC JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x2A3432903B37BA32903430B99032B73232B217 PUSH1 0x69 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x41D PUSH1 0x1 DUP3 DUP5 PUSH2 0x92D JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH2 0x348 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x4F8 PUSH1 0x5 SLOAD TIMESTAMP PUSH2 0x973 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH3 0x76A700 LT SWAP2 POP POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH3 0x4F1A00 DUP2 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x2 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP4 SWAP3 SWAP1 SWAP3 AND SWAP2 DUP4 SWAP2 DUP4 SWAP2 PUSH4 0x70A08231 SWAP2 PUSH1 0x24 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x569 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x57D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x593 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x2 SLOAD PUSH1 0x1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x6EB1769F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP2 DUP4 AND PUSH1 0x24 DUP4 ADD MSTORE MLOAD SWAP3 SWAP4 POP PUSH1 0x0 SWAP3 SWAP2 DUP6 AND SWAP2 PUSH4 0xDD62ED3E SWAP2 PUSH1 0x44 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x5F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x606 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x61C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x4 SLOAD SWAP1 SWAP2 POP PUSH1 0x0 SWAP1 PUSH2 0x632 SWAP1 DUP8 SWAP1 PUSH2 0x98A JUMP JUMPDEST SWAP1 POP DUP3 DUP2 GT ISZERO DUP1 ISZERO PUSH2 0x644 JUMPI POP DUP2 DUP2 GT ISZERO JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x6A6 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xA PUSH1 0x24 DUP3 ADD MSTORE PUSH10 0x1B9BDD081C185C995B9D PUSH1 0xB2 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x6AE PUSH2 0x903 JUMP JUMPDEST ISZERO PUSH2 0x6EB JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SLOAD SWAP3 DUP6 AND DUP3 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF SWAP2 DUP3 AND SWAP2 AND PUSH2 0x6E8 DUP3 DUP3 DUP6 PUSH2 0x9AF JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6FA PUSH2 0x903 JUMP JUMPDEST ISZERO PUSH2 0x80F JUMPI PUSH1 0x0 SLOAD PUSH1 0x1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x18160DDD PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD PUSH2 0x807 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0x18160DDD SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x748 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x75C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x772 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x6 SLOAD PUSH1 0x1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x18160DDD PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD PUSH2 0x801 SWAP4 PUSH2 0x2710 SWAP4 PUSH2 0x7FB SWAP4 SWAP2 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 PUSH4 0x18160DDD SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x7C9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x7DD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x7F3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 PUSH2 0x973 JUMP JUMPDEST SWAP1 PUSH2 0x98A JUMP JUMPDEST SWAP1 PUSH2 0xAB0 JUMP JUMPDEST LT SWAP1 POP PUSH2 0x501 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x807 PUSH2 0x82C PUSH1 0x6 SLOAD PUSH1 0x7 SLOAD PUSH2 0xAC3 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH2 0x801 SWAP1 PUSH2 0x2710 PUSH2 0x98A JUMP JUMPDEST PUSH1 0x0 PUSH2 0x845 PUSH2 0x903 JUMP JUMPDEST ISZERO PUSH2 0x8D7 JUMPI PUSH1 0x0 SLOAD PUSH1 0x1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x18160DDD PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD PUSH2 0x8CE SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0x18160DDD SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x893 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x8A7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x8BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x7 SLOAD PUSH2 0x801 SWAP1 PUSH2 0x2710 PUSH2 0x98A JUMP JUMPDEST LT ISZERO SWAP1 POP PUSH2 0x501 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x8CE PUSH2 0x82C PUSH1 0x6 SLOAD PUSH1 0x7 SLOAD PUSH2 0xAC3 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x91B PUSH1 0x5 SLOAD TIMESTAMP PUSH2 0x973 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH3 0x4F1A00 LT ISZERO SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF DUP2 AND SWAP2 DUP6 SWAP2 DUP3 SWAP2 SWAP1 PUSH1 0xFF NOT AND PUSH1 0x1 DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x963 JUMPI INVALID JUMPDEST MUL OR SWAP1 SSTORE POP PUSH2 0x6E8 DUP3 DUP3 DUP7 PUSH2 0x9AF JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 GT ISZERO PUSH2 0x97F JUMPI INVALID JUMPDEST POP DUP1 DUP3 SUB JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x999 JUMPI POP PUSH1 0x0 PUSH2 0x984 JUMP JUMPDEST POP DUP2 DUP2 MUL DUP2 DUP4 DUP3 DUP2 PUSH2 0x9A7 JUMPI INVALID JUMPDEST DIV EQ PUSH2 0x984 JUMPI INVALID JUMPDEST DUP2 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x9BB JUMPI INVALID JUMPDEST DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x9C7 JUMPI INVALID JUMPDEST EQ PUSH2 0x6EB JUMPI PUSH1 0x2 DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x9DA JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0x9F5 JUMPI PUSH1 0x6 SLOAD PUSH2 0x9ED SWAP1 DUP3 PUSH2 0x973 JUMP JUMPDEST PUSH1 0x6 SSTORE PUSH2 0xA1A JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xA03 JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0xA1A JUMPI PUSH1 0x7 SLOAD PUSH2 0xA16 SWAP1 DUP3 PUSH2 0x973 JUMP JUMPDEST PUSH1 0x7 SSTORE JUMPDEST PUSH1 0x2 DUP3 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xA28 JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0xA43 JUMPI PUSH1 0x6 SLOAD PUSH2 0xA3B SWAP1 DUP3 PUSH2 0xAC3 JUMP JUMPDEST PUSH1 0x6 SSTORE PUSH2 0xA68 JUMP JUMPDEST PUSH1 0x1 DUP3 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xA51 JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0xA68 JUMPI PUSH1 0x7 SLOAD PUSH2 0xA64 SWAP1 DUP3 PUSH2 0xAC3 JUMP JUMPDEST PUSH1 0x7 SSTORE JUMPDEST PUSH32 0x8FCC50C2C4EDD06D51AE66E9E21ED76B32A1766C57F491788E1AA24A1B58C256 PUSH1 0x7 SLOAD PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 DUP2 PUSH2 0xABB JUMPI INVALID JUMPDEST DIV SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP2 DUP2 ADD DUP3 DUP2 LT ISZERO PUSH2 0x984 JUMPI INVALID INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SUB NOT DUP13 SWAP8 SMOD MSTORE8 PUSH29 0xE5959B3E8267A2B8A721CC26A72203A7D67CA0A492033FB5A264736F6C PUSH4 0x43000701 STOP CALLER GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220746F20746865207A65726F2061 PUSH5 0x6472657373 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH2 0x7070 PUSH19 0x6F766520746F20746865207A65726F20616464 PUSH19 0x6573734F6666657220776173206E6F74207375 PUSH7 0x66696369656E74 PUSH13 0x792066756E6465644173206C6F PUSH15 0x672061732074686520636F6E747261 PUSH4 0x74206973 KECCAK256 PUSH2 0x6374 PUSH10 0x76652C20796F75206172 PUSH6 0x20626F756E64 KECCAK256 PUSH21 0x6F206974596F7520617265206E6F7420617574686F PUSH19 0x697A656420746F2063616E63656C2074686973 KECCAK256 PUSH2 0x6371 PUSH22 0x69736974696F6E206F666665724E6577206F66666572 PUSH20 0x206D757374206265206174206C65617374203525 KECCAK256 PUSH9 0x696768657220746861 PUSH15 0x207468652070656E64696E67206F66 PUSH7 0x65725468657265 KECCAK256 PUSH10 0x73206E6F2070656E6469 PUSH15 0x67206F666665720000000000000045 MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH3 0x75726E KECCAK256 PUSH7 0x726F6D20746865 KECCAK256 PUSH27 0x65726F206164647265737345524332303A207472616E7366657220 PUSH7 0x726F6D20746865 KECCAK256 PUSH27 0x65726F20616464726573735468697320636F6E747261637420646F PUSH6 0x73206E6F7420 PUSH19 0x6570726573656E7420656E6F75676820657175 PUSH10 0x747945524332303A2061 PUSH17 0x70726F76652066726F6D20746865207A65 PUSH19 0x6F2061646472657373596F7520617265206E6F PUSH21 0x20617574686F72697A656420746F20636F6D706C65 PUSH21 0x652074686973206163717569736974696F6E206F66 PUSH7 0x6572596F75206E PUSH6 0x656420746F20 PUSH9 0x6F6C64206174206C65 PUSH2 0x7374 KECCAK256 CALLDATALOAD 0x25 KECCAK256 PUSH16 0x6620746865206669726D20746F206D61 PUSH12 0x6520616E206F66666572A264 PUSH10 0x70667358221220B41777 0x4A PUSH10 0x98D84D541C65B3534E45 PUSH12 0xA2AF2A8F5007CDE884991AA5 JUMPI 0xB5 BLOCKHASH PUSH11 0x64736F6C63430007010033 ",
                        "sourceMap": "2411:10539:4:-:0;;;2729:1;2689:41;;;;3519:25;;;-1:-1:-1;;3519:25:4;;;;;;4254:425;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4254:425:4;;;;;;;;;;;;1746:8:3;:20;;-1:-1:-1;;;;;4402:30:4;::::1;1746:20:3::0;4402:30:4;::::1;-1:-1:-1::0;;;;;;4402:30:4;;;;;;::::1;::::0;;;4443:19:::1;:64:::0;;-1:-1:-1;;;;;;4443:64:4::1;4465:42;4443:64;::::0;;4536:15:::1;:40:::0;;;4587:17:::1;:38:::0;;;4636:35;;-1:-1:-1;;;4636:35:4;;;;4254:425;;;;;;4402:30;;4636:33:::1;::::0;:35:::1;::::0;;::::1;::::0;4254:425;4636:35;;;;;4388:1;4402:30;4636:35;::::1;;::::0;::::1;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;::::0;::::1;;-1:-1:-1::0;;;;;2411:10539:4;;;;;;"
                    },
                    "deployedBytecode": {
                        "immutableReferences": {},
                        "linkReferences": {},
                        "object": "60806040523480156200001157600080fd5b50600436106200022c5760003560e01c80636f4b18df1162000135578063a9059cbb11620000bd578063c028df061162000087578063c028df06146200065b578063dd62ed3e1462000665578063de0e9a3e1462000696578063e1b8c38e14620006d9578063ec6580e214620006e3576200022c565b8063a9059cbb14620005e9578063bb6894721462000618578063bc1b1e7c1462000622578063bf376c7a146200062c576200022c565b806395d89b4111620000ff57806395d89b41146200051d5780639e8a9a5a1462000527578063a457c2d71462000531578063a4c0ed361462000560576200022c565b80636f4b18df14620004d657806370a0823114620004e05780638fd3ab80146200050957806390cf581c1462000513576200022c565b80633549788a11620001b957806342966c68116200018357806342966c68146200045757806349b210b714620004775780635804791314620004a65780636467c09a14620004cc576200022c565b80633549788a146200038b5780633950935114620003955780634000aea014620003c457806341c12a70146200044d576200022c565b8063141c706811620001fb578063141c7068146200031c57806318160ddd146200032857806323b872dd1462000332578063313ce567146200036b576200022c565b806302fb0c5e146200023157806306fdde03146200024f5780630832e47014620002d1578063095ea7b314620002ed575b600080fd5b6200023b620006ed565b604080519115158252519081900360200190f35b62000259620006f6565b6040805160208082528351818301528351919283929083019185019080838360005b83811015620002955781810151838201526020016200027b565b50505050905090810190601f168015620002c35780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b620002db620008bc565b60408051918252519081900360200190f35b6200023b600480360360408110156200030557600080fd5b506001600160a01b038135169060200135620008c2565b62000326620008db565b005b620002db62000d1c565b6200023b600480360360608110156200034a57600080fd5b506001600160a01b0381358116916020810135909116906040013562000d22565b6200037562000d79565b6040805160ff9092168252519081900360200190f35b620002db62000d82565b6200023b60048036036040811015620003ad57600080fd5b506001600160a01b03813516906020013562000d88565b6200023b60048036036060811015620003dc57600080fd5b6001600160a01b0382351691602081013591810190606081016040820135600160201b8111156200040c57600080fd5b8201836020820111156200041f57600080fd5b803590602001918460018302840111600160201b831117156200044157600080fd5b50909250905062000dc1565b6200032662000e88565b62000326600480360360208110156200046f57600080fd5b503562000f64565b62000326600480360360408110156200048f57600080fd5b50803590602001356001600160a01b031662000fd6565b620004b06200150c565b604080516001600160a01b039092168252519081900360200190f35b620004b062001520565b620003266200152f565b620002db60048036036020811015620004f857600080fd5b50356001600160a01b031662001866565b6200032662001881565b6200032662001b16565b6200025962001b8f565b620002db62001d12565b6200023b600480360360408110156200054957600080fd5b506001600160a01b03813516906020013562001d18565b62000326600480360360608110156200057857600080fd5b6001600160a01b0382351691602081013591810190606081016040820135600160201b811115620005a857600080fd5b820183602082011115620005bb57600080fd5b803590602001918460018302840111600160201b83111715620005dd57600080fd5b50909250905062001d51565b6200023b600480360360408110156200060157600080fd5b506001600160a01b03813516906020013562001d80565b620004b062001d8f565b6200023b62001d9e565b62000326600480360360408110156200064457600080fd5b506001600160a01b03813516906020013562001dbb565b620004b062001efa565b620002db600480360360408110156200067d57600080fd5b506001600160a01b038135811691602001351662001f09565b620006b660048036036020811015620006ae57600080fd5b503562001f34565b604080516001600160a01b03909316835260208301919091528051918290030190f35b6200032662002050565b6200023b620021a4565b60095460ff1681565b6060600360019054906101000a90046001600160a01b03166001600160a01b03166306fdde036040518163ffffffff1660e01b815260040160006040518083038186803b1580156200074757600080fd5b505afa1580156200075c573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405260208110156200078657600080fd5b8101908080516040519392919084600160201b821115620007a657600080fd5b908301906020820185811115620007bc57600080fd5b8251600160201b811182820188101715620007d657600080fd5b82525081516020918201929091019080838360005b8381101562000805578181015183820152602001620007eb565b50505050905090810190601f168015620008335780820380516001836020036101000a031916815260200191505b506040525050506040516020018080690223930b3b3b0b13632960b51b815250600a0182805190602001908083835b60208310620008835780518252601f19909201916020918201910162000862565b6001836020036101000a038019825116818451168082178552505050505050905001915050604051602081830303815290604052905090565b60045481565b6000620008d1338484620021ca565b5060015b92915050565b620008e562001d9e565b8015620008f4575060095460ff165b62000935576040805162461bcd60e51b81526020600482015260196024820152600080516020620039a3833981519152604482015290519081900360640190fd5b600554604080516338a86c5760e11b815290516000926001600160a01b031691637150d8ae916004808301926020929190829003018186803b1580156200097b57600080fd5b505afa15801562000990573d6000803e3d6000fd5b505050506040513d6020811015620009a757600080fd5b50519050336001600160a01b03821614620009f45760405162461bcd60e51b815260040180806020018281038252603981526020018062003a5b6039913960400191505060405180910390fd5b600560009054906101000a90046001600160a01b03166001600160a01b031663d7be4e296040518163ffffffff1660e01b815260040160206040518083038186803b15801562000a4357600080fd5b505afa15801562000a58573d6000803e3d6000fd5b505050506040513d602081101562000a6f57600080fd5b505162000ac3576040805162461bcd60e51b815260206004820181905260248201527f496e73756666696369656e74206e756d626572206f662079657320766f746573604482015290519081900360640190fd5b6005546001600160a01b031663b28fa15262000adf8362001866565b62000ae962000d1c565b036040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b15801562000b1f57600080fd5b505afa15801562000b34573d6000803e3d6000fd5b505050506040513d602081101562000b4b57600080fd5b505162000b9f576040805162461bcd60e51b815260206004820152601b60248201527f4f6666657220696e73756666696369656e746c792066756e6465640000000000604482015290519081900360640190fd5b62000c9b81600560009054906101000a90046001600160a01b03166001600160a01b031663e5a6b10f6040518163ffffffff1660e01b815260040160206040518083038186803b15801562000bf357600080fd5b505afa15801562000c08573d6000803e3d6000fd5b505050506040513d602081101562000c1f57600080fd5b50516005546040805163501ad8ff60e11b815290516001600160a01b039092169163a035b1fe91600480820192602092909190829003018186803b15801562000c6757600080fd5b505afa15801562000c7c573d6000803e3d6000fd5b505050506040513d602081101562000c9357600080fd5b5051620022ba565b60055460408051338152600160208201526001600160a01b039283166060820152608081830181905260169082015275436f6d706c65746564207375636365737366756c6c7960501b60a08201529051918316917fc88f58ae9feb0742d9422f604dd3c1be6d02818f8dec340c5061f428b554e9759181900360c00190a250565b60025490565b600062000d31848484620024ef565b6001600160a01b03841660009081526001602090815260408083203380855292529091205462000d6f91869162000d69908662002598565b620021ca565b5060019392505050565b60035460ff1681565b60085481565b3360008181526001602090815260408083206001600160a01b03871684529091528120549091620008d191859062000d699086620025ab565b60008062000dd0868662001d80565b9050801562000e7f57856001600160a01b031663a4c0ed36338787876040518563ffffffff1660e01b815260040180856001600160a01b03168152602001848152602001806020018281038252848482818152602001925080828437600081840152601f19601f82011690508083019250505095505050505050600060405180830381600087803b15801562000e6557600080fd5b505af115801562000e7a573d6000803e3d6000fd5b505050505b95945050505050565b62000e9262001d9e565b801562000ea1575060095460ff165b62000ee2576040805162461bcd60e51b81526020600482015260196024820152600080516020620039a3833981519152604482015290519081900360640190fd5b60055433906001600160a01b0316634b91562e8262000f018162001866565b6040518363ffffffff1660e01b815260040180836001600160a01b0316815260200182815260200192505050600060405180830381600087803b15801562000f4857600080fd5b505af115801562000f5d573d6000803e3d6000fd5b5050505050565b62000f703382620025b9565b62000f7a6200150c565b6001600160a01b03166342966c6862000f9f600454846200265490919063ffffffff16565b6040518263ffffffff1660e01b815260040180828152602001915050600060405180830381600087803b15801562000f4857600080fd5b60095460ff166200102e576040805162461bcd60e51b815260206004820152601860248201527f416e206163636570746564206f66666572206578697374730000000000000000604482015290519081900360640190fd5b60006200103a6200150c565b6001600160a01b0316633a98ef396040518163ffffffff1660e01b8152600401602060405180830381600087803b1580156200107557600080fd5b505af11580156200108a573d6000803e3d6000fd5b505050506040513d6020811015620010a157600080fd5b5051905033620010c2612710620010bb84610bb862002654565b906200267d565b620010cc62000d1c565b10156200110b5760405162461bcd60e51b815260040180806020018281038252602e81526020018062003a09602e913960400191505060405180910390fd5b62001120612710620010bb846101f462002654565b6200112b8262001866565b10156200116a5760405162461bcd60e51b815260040180806020018281038252603981526020018062003a946039913960400191505060405180910390fd5b6006546040516001600160a01b0390911690600090670de0b6b3a76400009082818181858883f19350505050158015620011a8573d6000803e3d6000fd5b506000338486600854604051620011bf9062002c9c565b80856001600160a01b03168152602001846001600160a01b03168152602001838152602001828152602001945050505050604051809103906000f0801580156200120d573d6000803e3d6000fd5b509050806001600160a01b031663b28fa1526200122a8462001866565b6200123462000d1c565b036040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b1580156200126a57600080fd5b505afa1580156200127f573d6000803e3d6000fd5b505050506040513d60208110156200129657600080fd5b5051620012e1576040805162461bcd60e51b8152602060048201526014602482015273496e73756666696369656e742066756e64696e6760601b604482015290519081900360640190fd5b620012eb62001d9e565b156200149757600560009054906101000a90046001600160a01b03166001600160a01b031663e5a6b10f6040518163ffffffff1660e01b815260040160206040518083038186803b1580156200134057600080fd5b505afa15801562001355573d6000803e3d6000fd5b505050506040513d60208110156200136c57600080fd5b50516001600160a01b0385811691161480156200141a575062001416612710620010bb612904600560009054906101000a90046001600160a01b03166001600160a01b031663a035b1fe6040518163ffffffff1660e01b815260040160206040518083038186803b158015620013e157600080fd5b505afa158015620013f6573d6000803e3d6000fd5b505050506040513d60208110156200140d57600080fd5b50519062002654565b8510155b620014575760405162461bcd60e51b815260040180806020018281038252603c81526020018062003967603c913960400191505060405180910390fd5b620014976040518060400160405280601c81526020017f4f66666572207265706c6163656420627920686967686572206269640000000081525062002691565b600580546001600160a01b0319166001600160a01b038381169190911790915582167f9c00f159b1fa9eaebda7acaf50be0bf3a652277380f907b35cb681bd641a62d386620014e562001520565b604080519283526001600160a01b0390911660208301528051918290030190a25050505050565b60035461010090046001600160a01b031690565b6005546001600160a01b031690565b6200153962001d9e565b801562001548575060095460ff165b62001589576040805162461bcd60e51b81526020600482015260196024820152600080516020620039a3833981519152604482015290519081900360640190fd5b600560009054906101000a90046001600160a01b03166001600160a01b03166390e64d136040518163ffffffff1660e01b815260040160206040518083038186803b158015620015d857600080fd5b505afa158015620015ed573d6000803e3d6000fd5b505050506040513d60208110156200160457600080fd5b50511562001642576200163c6040518060400160405280600d81526020016c13d999995c88195e1c1a5c9959609a1b81525062002691565b62001864565b600560009054906101000a90046001600160a01b03166001600160a01b031663cf42a9276040518163ffffffff1660e01b815260040160206040518083038186803b1580156200169157600080fd5b505afa158015620016a6573d6000803e3d6000fd5b505050506040513d6020811015620016bd57600080fd5b505115620016fa576200163c60405180604001604052806012815260200171139bdd08195b9bdd59da081cdd5c1c1bdc9d60721b81525062002691565b600554604080516338a86c5760e11b815290516001600160a01b039092169163b28fa1529162001780918491637150d8ae916004808301926020929190829003018186803b1580156200174c57600080fd5b505afa15801562001761573d6000803e3d6000fd5b505050506040513d60208110156200177857600080fd5b505162001866565b6200178a62000d1c565b036040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b158015620017c057600080fd5b505afa158015620017d5573d6000803e3d6000fd5b505050506040513d6020811015620017ec57600080fd5b505162001817576200163c604051806060016040528060218152602001620038d96021913962002691565b6040805162461bcd60e51b815260206004820181905260248201527f4163717569736974696f6e20636f6e7465737420756e7375636365737366756c604482015290519081900360640190fd5b565b6001600160a01b031660009081526020819052604090205490565b60095460ff16620018d2576040805162461bcd60e51b8152602060048201526016602482015275436f6e7472616374206973206e6f742061637469766560501b604482015290519081900360640190fd5b6000339050620018f6612710620010bb600754620018ef62000d1c565b9062002654565b620019018262001866565b10156200194a576040805162461bcd60e51b8152602060048201526012602482015271145d5bdc9d5b481b9bdd081c995858da195960721b604482015290519081900360640190fd5b6200195462001d9e565b1562001ac957600560009054906101000a90046001600160a01b03166001600160a01b031663cf42a9276040518163ffffffff1660e01b815260040160206040518083038186803b158015620019a957600080fd5b505afa158015620019be573d6000803e3d6000fd5b505050506040513d6020811015620019d557600080fd5b505162001aad57620019e662000e88565b600560009054906101000a90046001600160a01b03166001600160a01b031663cf42a9276040518163ffffffff1660e01b815260040160206040518083038186803b15801562001a3557600080fd5b505afa15801562001a4a573d6000803e3d6000fd5b505050506040513d602081101562001a6157600080fd5b505162001aad576040805162461bcd60e51b8152602060048201526015602482015274145d5bdc9d5b481a185cc81b9bdd0819985a5b1959605a1b604482015290519081900360640190fd5b62001ab76200152f565b62001ac162001d9e565b1562001ac957fe5b62001ad781826001620022ba565b604080516001600160a01b038316815290517f3b6b79a09e9fd230e8591b65c97236bf7df7a604edf733db0658e66b0e6eb2a99181900360200190a150565b62001b2062001d9e565b801562001b2f575060095460ff165b62001b70576040805162461bcd60e51b81526020600482015260196024820152600080516020620039a3833981519152604482015290519081900360640190fd5b60055433906001600160a01b0316635ff0cf848262000f018162001866565b6060600360019054906101000a90046001600160a01b03166001600160a01b03166395d89b416040518163ffffffff1660e01b815260040160006040518083038186803b15801562001be057600080fd5b505afa15801562001bf5573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052602081101562001c1f57600080fd5b8101908080516040519392919084600160201b82111562001c3f57600080fd5b90830190602082018581111562001c5557600080fd5b8251600160201b81118282018810171562001c6f57600080fd5b82525081516020918201929091019080838360005b8381101562001c9e57818101518382015260200162001c84565b50505050905090810190601f16801562001ccc5780820380516001836020036101000a031916815260200191505b506040525050506040516020018080601160fa1b815250600101828051906020019080838360208310620008835780518252601f19909201916020918201910162000862565b60075481565b3360008181526001602090815260408083206001600160a01b03871684529091528120549091620008d191859062000d69908662002598565b60035461010090046001600160a01b0316331462001d6e57600080fd5b62001d7a848462002861565b50505050565b6000620008d1338484620024ef565b6006546001600160a01b031681565b60008062001dab62001520565b6001600160a01b03161415905090565b62001dc562001d9e565b1562001e13576040805162461bcd60e51b81526020600482015260186024820152772a3432b9329034b99030903832b73234b7339037b33332b960411b604482015290519081900360640190fd5b600354604080516323b872dd60e01b81523360048201523060248201526044810184905290516101009092046001600160a01b0316916323b872dd916064808201926020929091908290030181600087803b15801562001e7257600080fd5b505af115801562001e87573d6000803e3d6000fd5b505050506040513d602081101562001e9e57600080fd5b505162001eea576040805162461bcd60e51b815260206004820152601560248201527414da185c99481d1c985b9cd9995c8819985a5b1959605a1b604482015290519081900360640190fd5b62001ef6828262002861565b5050565b6005546001600160a01b031681565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b600954600090819060ff161562001f7d5760405162461bcd60e51b8152600401808060200182810382526036815260200180620038fa6036913960400191505060405180910390fd5b62001f893384620025b9565b600062001fa2600454856200265490919063ffffffff16565b6003546040805163a9059cbb60e01b81523360048201526024810184905290519293506101009091046001600160a01b03169163a9059cbb916044808201926020929091908290030181600087803b15801562001ffe57600080fd5b505af115801562002013573d6000803e3d6000fd5b505050506040513d60208110156200202a57600080fd5b50516200203657600080fd5b60035461010090046001600160a01b031694909350915050565b6200205a62001d9e565b801562002069575060095460ff165b620020aa576040805162461bcd60e51b81526020600482015260196024820152600080516020620039a3833981519152604482015290519081900360640190fd5b600560009054906101000a90046001600160a01b03166001600160a01b0316637150d8ae6040518163ffffffff1660e01b815260040160206040518083038186803b158015620020f957600080fd5b505afa1580156200210e573d6000803e3d6000fd5b505050506040513d60208110156200212557600080fd5b50516001600160a01b031633146200216f5760405162461bcd60e51b8152600401808060200182810382526037815260200180620039306037913960400191505060405180910390fd5b620018646040518060400160405280601281526020017121b0b731b2b63632b210313c90313abcb2b960711b81525062002691565b6000620021b062001d9e565b620021bd576000620021c5565b60095460ff16155b905090565b6001600160a01b038316620022115760405162461bcd60e51b815260040180806020018281038252602481526020018062003a376024913960400191505060405180910390fd5b6001600160a01b038216620022585760405162461bcd60e51b8152600401808060200182810382526022815260200180620038b76022913960400191505060405180910390fd5b6001600160a01b03808416600081815260016020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b6000620022c78462001866565b90506000620022d562000d1c565b6009805460ff191690559050620022ec8262001f34565b5060009050620022fd828462002598565b6003546040805163a9059cbb60e01b81526001600160a01b038a81166004830152602482018590529151939450610100909204169163a9059cbb916044808201926020929091908290030181600087803b1580156200235b57600080fd5b505af115801562002370573d6000803e3d6000fd5b505050506040513d60208110156200238757600080fd5b5051620023cd576040805162461bcd60e51b815260206004820152600f60248201526e1d1c985b9cd9995c8819985a5b1959608a1b604482015290519081900360640190fd5b60038054610100600160a81b0319166101006001600160a01b03888116820292909217928390556004879055909104166323b872dd873062002410888662002654565b6040518463ffffffff1660e01b815260040180846001600160a01b03168152602001836001600160a01b031681526020018281526020019350505050602060405180830381600087803b1580156200246757600080fd5b505af11580156200247c573d6000803e3d6000fd5b505050506040513d60208110156200249357600080fd5b5051620024e7576040805162461bcd60e51b815260206004820152601760248201527f4261636b696e67207472616e73666572206661696c6564000000000000000000604482015290519081900360640190fd5b505050505050565b620024fc8383836200291d565b6200250662001d9e565b801562002515575060095460ff165b15620025935760055460408051636240a7d760e11b81526001600160a01b0386811660048301528581166024830152604482018590529151919092169163c4814fae91606480830192600092919082900301818387803b1580156200257957600080fd5b505af11580156200258e573d6000803e3d6000fd5b505050505b505050565b600082821115620025a557fe5b50900390565b81810182811015620008d557fe5b620025c5828262002a5b565b620025cf62001d9e565b8015620025de575060095460ff165b1562001ef65760055460408051636240a7d760e11b81526001600160a01b03858116600483015260006024830181905260448301869052925193169263c4814fae9260648084019391929182900301818387803b1580156200263f57600080fd5b505af1158015620024e7573d6000803e3d6000fd5b6000826200266557506000620008d5565b50818102818382816200267457fe5b0414620008d557fe5b60008183816200268957fe5b049392505050565b600554604080516338a86c5760e11b815290516000926001600160a01b031691637150d8ae916004808301926020929190829003018186803b158015620026d757600080fd5b505afa158015620026ec573d6000803e3d6000fd5b505050506040513d60208110156200270357600080fd5b505190506001600160a01b0381167fc88f58ae9feb0742d9422f604dd3c1be6d02818f8dec340c5061f428b554e975336000856200274062001520565b60405180856001600160a01b03168152602001841515815260200180602001836001600160a01b03168152602001828103825284818151815260200191508051906020019080838360005b83811015620027a55781810151838201526020016200278b565b50505050905090810190601f168015620027d35780820380516001836020036101000a031916815260200191505b509550505050505060405180910390a2600560009054906101000a90046001600160a01b03166001600160a01b03166341c0e1b56040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156200283457600080fd5b505af115801562002849573d6000803e3d6000fd5b5050600580546001600160a01b031916905550505050565b6200286b62001d9e565b15620028b9576040805162461bcd60e51b81526020600482015260186024820152772a3432b9329034b99030903832b73234b7339037b33332b960411b604482015290519081900360640190fd5b60095460ff1662002911576040805162461bcd60e51b815260206004820152601d60248201527f436f6e7472616374206e6f742061637469766520616e79206d6f72652e000000604482015290519081900360640190fd5b62001ef6828262002b2e565b6001600160a01b038316620029645760405162461bcd60e51b8152600401808060200182810382526025815260200180620039e46025913960400191505060405180910390fd5b6001600160a01b038216620029ab5760405162461bcd60e51b8152600401808060200182810382526023815260200180620038946023913960400191505060405180910390fd5b6001600160a01b038316600090815260208190526040902054620029d0908262002598565b6001600160a01b03808516600090815260208190526040808220939093559084168152205462002a019082620025ab565b6001600160a01b038084166000818152602081815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b6001600160a01b03821662002aa25760405162461bcd60e51b8152600401808060200182810382526021815260200180620039c36021913960400191505060405180910390fd5b60025462002ab1908262002598565b6002556001600160a01b03821660009081526020819052604090205462002ad9908262002598565b6001600160a01b038316600081815260208181526040808320949094558351858152935191937fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef929081900390910190a35050565b62002b3a828262002bb3565b62002b4462001d9e565b801562002b53575060095460ff165b1562001ef65760055460408051636240a7d760e11b81526000600482018190526001600160a01b038681166024840152604483018690529251929093169263c4814fae9260648084019382900301818387803b1580156200263f57600080fd5b6001600160a01b03821662002c0f576040805162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015290519081900360640190fd5b60025462002c1e9082620025ab565b6002556001600160a01b03821660009081526020819052604090205462002c469082620025ab565b6001600160a01b0383166000818152602081815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050565b610be98062002cab8339019056fe608060405234801561001057600080fd5b50604051610be9380380610be98339818101604052608081101561003357600080fd5b50805160208201516040830151606090930151919290918161008c576040805162461bcd60e51b815260206004820152600d60248201526c696e76616c696420707269636560981b604482015290519081900360640190fd5b600180546001600160a01b03199081163317909155600280546001600160a01b03968716908316179055600380549490951693169290921790925560049190915560005542600555610b06806100e36000396000f3fe608060405234801561001057600080fd5b506004361061012c5760003560e01c8063b1610d7e116100ad578063cf42a92711610071578063cf42a927146102b4578063d7be4e29146102bc578063e5a6b10f146102c4578063fa7f1bae146102cc578063fb286c65146102d45761012c565b8063b1610d7e14610249578063b28fa15214610251578063b5b47f421461026e578063b80777ea14610276578063c4814fae1461027e5761012c565b80635ff0cf84116100f45780635ff0cf84146101c35780637150d8ae146101ef5780638f1b4c6f1461021357806390e64d1314610239578063a035b1fe146102415761012c565b80630c43cd88146101315780631703a0181461014b57806341c0e1b514610153578063448ab4c61461015d5780634b91562e14610197575b600080fd5b6101396102dc565b60408051918252519081900360200190f35b6101396102e3565b61015b6102e9565b005b6101836004803603602081101561017357600080fd5b50356001600160a01b0316610343565b604080519115158252519081900360200190f35b61015b600480360360408110156101ad57600080fd5b506001600160a01b038135169060200135610376565b61015b600480360360408110156101d957600080fd5b506001600160a01b038135169060200135610421565b6101f76104c8565b604080516001600160a01b039092168252519081900360200190f35b6101836004803603602081101561022957600080fd5b50356001600160a01b03166104d7565b6101836104e0565b610139610504565b61013961050a565b6101836004803603602081101561026757600080fd5b5035610511565b61013961064e565b610139610654565b61015b6004803603606081101561029457600080fd5b506001600160a01b0381358116916020810135909116906040013561065a565b6101836106f0565b61018361083b565b6101f76108f4565b610183610903565b610139610927565b6276a70081565b60005481565b6001546001600160a01b03163314610335576040805162461bcd60e51b815260206004820152600a6024820152691b9bdd081c185c995b9d60b21b604482015290519081900360640190fd5b6002546001600160a01b0316ff5b600060015b6001600160a01b03831660009081526008602052604090205460ff16600281111561036f57fe5b1492915050565b6001546001600160a01b031633146103c2576040805162461bcd60e51b815260206004820152600a6024820152691b9bdd081c185c995b9d60b21b604482015290519081900360640190fd5b6103ca610903565b610411576040805162461bcd60e51b81526020600482015260136024820152722a3432903b37ba32903430b99032b73232b21760691b604482015290519081900360640190fd5b61041d6002828461092d565b5050565b6001546001600160a01b0316331461046d576040805162461bcd60e51b815260206004820152600a6024820152691b9bdd081c185c995b9d60b21b604482015290519081900360640190fd5b610475610903565b6104bc576040805162461bcd60e51b81526020600482015260136024820152722a3432903b37ba32903430b99032b73232b21760691b604482015290519081900360640190fd5b61041d6001828461092d565b6002546001600160a01b031681565b60006002610348565b6000806104f86005544261097390919063ffffffff16565b6276a700109150505b90565b60045481565b624f1a0081565b600354600254604080516370a0823160e01b81526001600160a01b03928316600482015290516000939290921691839183916370a0823191602480820192602092909190829003018186803b15801561056957600080fd5b505afa15801561057d573d6000803e3d6000fd5b505050506040513d602081101561059357600080fd5b505160025460015460408051636eb1769f60e11b81526001600160a01b0393841660048201529183166024830152519293506000929185169163dd62ed3e91604480820192602092909190829003018186803b1580156105f257600080fd5b505afa158015610606573d6000803e3d6000fd5b505050506040513d602081101561061c57600080fd5b505160045490915060009061063290879061098a565b90508281111580156106445750818111155b9695505050505050565b60065481565b60055481565b6001546001600160a01b031633146106a6576040805162461bcd60e51b815260206004820152600a6024820152691b9bdd081c185c995b9d60b21b604482015290519081900360640190fd5b6106ae610903565b156106eb576001600160a01b0380841660009081526008602052604080822054928516825290205460ff91821691166106e88282856109af565b50505b505050565b60006106fa610903565b1561080f57600054600154604080516318160ddd60e01b81529051610807926001600160a01b0316916318160ddd916004808301926020929190829003018186803b15801561074857600080fd5b505afa15801561075c573d6000803e3d6000fd5b505050506040513d602081101561077257600080fd5b5051600654600154604080516318160ddd60e01b8152905161080193612710936107fb9391926001600160a01b03909116916318160ddd916004808301926020929190829003018186803b1580156107c957600080fd5b505afa1580156107dd573d6000803e3d6000fd5b505050506040513d60208110156107f357600080fd5b505190610973565b9061098a565b90610ab0565b109050610501565b60005461080761082c600654600754610ac390919063ffffffff16565b6007546108019061271061098a565b6000610845610903565b156108d757600054600154604080516318160ddd60e01b815290516108ce926001600160a01b0316916318160ddd916004808301926020929190829003018186803b15801561089357600080fd5b505afa1580156108a7573d6000803e3d6000fd5b505050506040513d60208110156108bd57600080fd5b50516007546108019061271061098a565b10159050610501565b6000546108ce61082c600654600754610ac390919063ffffffff16565b6003546001600160a01b031681565b60008061091b6005544261097390919063ffffffff16565b624f1a00101591505090565b60075481565b6001600160a01b0381166000908152600860205260409020805460ff811691859182919060ff1916600183600281111561096357fe5b02179055506106e88282866109af565b60008282111561097f57fe5b508082035b92915050565b60008261099957506000610984565b50818102818382816109a757fe5b041461098457fe5b8160028111156109bb57fe5b8360028111156109c757fe5b146106eb5760028360028111156109da57fe5b14156109f5576006546109ed9082610973565b600655610a1a565b6001836002811115610a0357fe5b1415610a1a57600754610a169082610973565b6007555b6002826002811115610a2857fe5b1415610a4357600654610a3b9082610ac3565b600655610a68565b6001826002811115610a5157fe5b1415610a6857600754610a649082610ac3565b6007555b7f8fcc50c2c4edd06d51ae66e9e21ed76b32a1766c57f491788e1aa24a1b58c256600754600654604051808381526020018281526020019250505060405180910390a1505050565b6000818381610abb57fe5b049392505050565b8181018281101561098457fefea264697066735822122003198c9707537ce5959b3e8267a2b8a721cc26a72203a7d67ca0a492033fb5a264736f6c6343000701003345524332303a207472616e7366657220746f20746865207a65726f206164647265737345524332303a20617070726f766520746f20746865207a65726f20616464726573734f6666657220776173206e6f742073756666696369656e746c792066756e6465644173206c6f6e672061732074686520636f6e7472616374206973206163746976652c20796f752061726520626f756e6420746f206974596f7520617265206e6f7420617574686f72697a656420746f2063616e63656c2074686973206163717569736974696f6e206f666665724e6577206f6666657273206d757374206265206174206c6561737420352520686967686572207468616e207468652070656e64696e67206f666665725468657265206973206e6f2070656e64696e67206f666665720000000000000045524332303a206275726e2066726f6d20746865207a65726f206164647265737345524332303a207472616e736665722066726f6d20746865207a65726f20616464726573735468697320636f6e747261637420646f6573206e6f7420726570726573656e7420656e6f7567682065717569747945524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373596f7520617265206e6f7420617574686f72697a656420746f20636f6d706c6574652074686973206163717569736974696f6e206f66666572596f75206e65656420746f20686f6c64206174206c65617374203525206f6620746865206669726d20746f206d616b6520616e206f66666572a2646970667358221220b417774a6998d84d541c65b3534e456ba2af2a8f5007cde884991aa557b5406a64736f6c63430007010033",
                        "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH3 0x22C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6F4B18DF GT PUSH3 0x135 JUMPI DUP1 PUSH4 0xA9059CBB GT PUSH3 0xBD JUMPI DUP1 PUSH4 0xC028DF06 GT PUSH3 0x87 JUMPI DUP1 PUSH4 0xC028DF06 EQ PUSH3 0x65B JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH3 0x665 JUMPI DUP1 PUSH4 0xDE0E9A3E EQ PUSH3 0x696 JUMPI DUP1 PUSH4 0xE1B8C38E EQ PUSH3 0x6D9 JUMPI DUP1 PUSH4 0xEC6580E2 EQ PUSH3 0x6E3 JUMPI PUSH3 0x22C JUMP JUMPDEST DUP1 PUSH4 0xA9059CBB EQ PUSH3 0x5E9 JUMPI DUP1 PUSH4 0xBB689472 EQ PUSH3 0x618 JUMPI DUP1 PUSH4 0xBC1B1E7C EQ PUSH3 0x622 JUMPI DUP1 PUSH4 0xBF376C7A EQ PUSH3 0x62C JUMPI PUSH3 0x22C JUMP JUMPDEST DUP1 PUSH4 0x95D89B41 GT PUSH3 0xFF JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH3 0x51D JUMPI DUP1 PUSH4 0x9E8A9A5A EQ PUSH3 0x527 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH3 0x531 JUMPI DUP1 PUSH4 0xA4C0ED36 EQ PUSH3 0x560 JUMPI PUSH3 0x22C JUMP JUMPDEST DUP1 PUSH4 0x6F4B18DF EQ PUSH3 0x4D6 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH3 0x4E0 JUMPI DUP1 PUSH4 0x8FD3AB80 EQ PUSH3 0x509 JUMPI DUP1 PUSH4 0x90CF581C EQ PUSH3 0x513 JUMPI PUSH3 0x22C JUMP JUMPDEST DUP1 PUSH4 0x3549788A GT PUSH3 0x1B9 JUMPI DUP1 PUSH4 0x42966C68 GT PUSH3 0x183 JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH3 0x457 JUMPI DUP1 PUSH4 0x49B210B7 EQ PUSH3 0x477 JUMPI DUP1 PUSH4 0x58047913 EQ PUSH3 0x4A6 JUMPI DUP1 PUSH4 0x6467C09A EQ PUSH3 0x4CC JUMPI PUSH3 0x22C JUMP JUMPDEST DUP1 PUSH4 0x3549788A EQ PUSH3 0x38B JUMPI DUP1 PUSH4 0x39509351 EQ PUSH3 0x395 JUMPI DUP1 PUSH4 0x4000AEA0 EQ PUSH3 0x3C4 JUMPI DUP1 PUSH4 0x41C12A70 EQ PUSH3 0x44D JUMPI PUSH3 0x22C JUMP JUMPDEST DUP1 PUSH4 0x141C7068 GT PUSH3 0x1FB JUMPI DUP1 PUSH4 0x141C7068 EQ PUSH3 0x31C JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH3 0x328 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH3 0x332 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH3 0x36B JUMPI PUSH3 0x22C JUMP JUMPDEST DUP1 PUSH4 0x2FB0C5E EQ PUSH3 0x231 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH3 0x24F JUMPI DUP1 PUSH4 0x832E470 EQ PUSH3 0x2D1 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH3 0x2ED JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x23B PUSH3 0x6ED JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH3 0x259 PUSH3 0x6F6 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP4 MLOAD DUP2 DUP4 ADD MSTORE DUP4 MLOAD SWAP2 SWAP3 DUP4 SWAP3 SWAP1 DUP4 ADD SWAP2 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x295 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH3 0x27B JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH3 0x2C3 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH3 0x2DB PUSH3 0x8BC JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH3 0x23B PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH3 0x305 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH3 0x8C2 JUMP JUMPDEST PUSH3 0x326 PUSH3 0x8DB JUMP JUMPDEST STOP JUMPDEST PUSH3 0x2DB PUSH3 0xD1C JUMP JUMPDEST PUSH3 0x23B PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH3 0x34A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH3 0xD22 JUMP JUMPDEST PUSH3 0x375 PUSH3 0xD79 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xFF SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH3 0x2DB PUSH3 0xD82 JUMP JUMPDEST PUSH3 0x23B PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH3 0x3AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH3 0xD88 JUMP JUMPDEST PUSH3 0x23B PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH3 0x3DC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 CALLDATALOAD AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP2 DUP2 ADD SWAP1 PUSH1 0x60 DUP2 ADD PUSH1 0x40 DUP3 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x20 SHL DUP2 GT ISZERO PUSH3 0x40C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH3 0x41F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH1 0x1 PUSH1 0x20 SHL DUP4 GT OR ISZERO PUSH3 0x441 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP SWAP1 SWAP3 POP SWAP1 POP PUSH3 0xDC1 JUMP JUMPDEST PUSH3 0x326 PUSH3 0xE88 JUMP JUMPDEST PUSH3 0x326 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH3 0x46F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH3 0xF64 JUMP JUMPDEST PUSH3 0x326 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH3 0x48F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH3 0xFD6 JUMP JUMPDEST PUSH3 0x4B0 PUSH3 0x150C JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH3 0x4B0 PUSH3 0x1520 JUMP JUMPDEST PUSH3 0x326 PUSH3 0x152F JUMP JUMPDEST PUSH3 0x2DB PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH3 0x4F8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH3 0x1866 JUMP JUMPDEST PUSH3 0x326 PUSH3 0x1881 JUMP JUMPDEST PUSH3 0x326 PUSH3 0x1B16 JUMP JUMPDEST PUSH3 0x259 PUSH3 0x1B8F JUMP JUMPDEST PUSH3 0x2DB PUSH3 0x1D12 JUMP JUMPDEST PUSH3 0x23B PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH3 0x549 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH3 0x1D18 JUMP JUMPDEST PUSH3 0x326 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH3 0x578 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 CALLDATALOAD AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP2 DUP2 ADD SWAP1 PUSH1 0x60 DUP2 ADD PUSH1 0x40 DUP3 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x20 SHL DUP2 GT ISZERO PUSH3 0x5A8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH3 0x5BB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH1 0x1 PUSH1 0x20 SHL DUP4 GT OR ISZERO PUSH3 0x5DD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP SWAP1 SWAP3 POP SWAP1 POP PUSH3 0x1D51 JUMP JUMPDEST PUSH3 0x23B PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH3 0x601 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH3 0x1D80 JUMP JUMPDEST PUSH3 0x4B0 PUSH3 0x1D8F JUMP JUMPDEST PUSH3 0x23B PUSH3 0x1D9E JUMP JUMPDEST PUSH3 0x326 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH3 0x644 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH3 0x1DBB JUMP JUMPDEST PUSH3 0x4B0 PUSH3 0x1EFA JUMP JUMPDEST PUSH3 0x2DB PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH3 0x67D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 ADD CALLDATALOAD AND PUSH3 0x1F09 JUMP JUMPDEST PUSH3 0x6B6 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH3 0x6AE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH3 0x1F34 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP1 MLOAD SWAP2 DUP3 SWAP1 SUB ADD SWAP1 RETURN JUMPDEST PUSH3 0x326 PUSH3 0x2050 JUMP JUMPDEST PUSH3 0x23B PUSH3 0x21A4 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x6FDDE03 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x747 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH3 0x75C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH1 0x20 DUP2 LT ISZERO PUSH3 0x786 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD PUSH1 0x40 MLOAD SWAP4 SWAP3 SWAP2 SWAP1 DUP5 PUSH1 0x1 PUSH1 0x20 SHL DUP3 GT ISZERO PUSH3 0x7A6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 DUP4 ADD SWAP1 PUSH1 0x20 DUP3 ADD DUP6 DUP2 GT ISZERO PUSH3 0x7BC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x20 SHL DUP2 GT DUP3 DUP3 ADD DUP9 LT OR ISZERO PUSH3 0x7D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MSTORE POP DUP2 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x805 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH3 0x7EB JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH3 0x833 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP PUSH1 0x40 MSTORE POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP1 PUSH10 0x223930B3B3B0B136329 PUSH1 0xB5 SHL DUP2 MSTORE POP PUSH1 0xA ADD DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH3 0x883 JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x1F NOT SWAP1 SWAP3 ADD SWAP2 PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH3 0x862 JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH3 0x8D1 CALLER DUP5 DUP5 PUSH3 0x21CA JUMP JUMPDEST POP PUSH1 0x1 JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x8E5 PUSH3 0x1D9E JUMP JUMPDEST DUP1 ISZERO PUSH3 0x8F4 JUMPI POP PUSH1 0x9 SLOAD PUSH1 0xFF AND JUMPDEST PUSH3 0x935 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH3 0x39A3 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x38A86C57 PUSH1 0xE1 SHL DUP2 MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0x7150D8AE SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x97B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH3 0x990 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH3 0x9A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 POP CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ PUSH3 0x9F4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x39 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH3 0x3A5B PUSH1 0x39 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xD7BE4E29 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0xA43 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH3 0xA58 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH3 0xA6F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH3 0xAC3 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E74206E756D626572206F662079657320766F746573 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xB28FA152 PUSH3 0xADF DUP4 PUSH3 0x1866 JUMP JUMPDEST PUSH3 0xAE9 PUSH3 0xD1C JUMP JUMPDEST SUB PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0xB1F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH3 0xB34 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH3 0xB4B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH3 0xB9F JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6666657220696E73756666696369656E746C792066756E6465640000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH3 0xC9B DUP2 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xE5A6B10F PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0xBF3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH3 0xC08 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH3 0xC1F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x5 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x501AD8FF PUSH1 0xE1 SHL DUP2 MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 PUSH4 0xA035B1FE SWAP2 PUSH1 0x4 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0xC67 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH3 0xC7C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH3 0xC93 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH3 0x22BA JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x40 DUP1 MLOAD CALLER DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 DUP2 DUP4 ADD DUP2 SWAP1 MSTORE PUSH1 0x16 SWAP1 DUP3 ADD MSTORE PUSH22 0x436F6D706C65746564207375636365737366756C6C79 PUSH1 0x50 SHL PUSH1 0xA0 DUP3 ADD MSTORE SWAP1 MLOAD SWAP2 DUP4 AND SWAP2 PUSH32 0xC88F58AE9FEB0742D9422F604DD3C1BE6D02818F8DEC340C5061F428B554E975 SWAP2 DUP2 SWAP1 SUB PUSH1 0xC0 ADD SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH3 0xD31 DUP5 DUP5 DUP5 PUSH3 0x24EF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP1 DUP6 MSTORE SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 SLOAD PUSH3 0xD6F SWAP2 DUP7 SWAP2 PUSH3 0xD69 SWAP1 DUP7 PUSH3 0x2598 JUMP JUMPDEST PUSH3 0x21CA JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 PUSH3 0x8D1 SWAP2 DUP6 SWAP1 PUSH3 0xD69 SWAP1 DUP7 PUSH3 0x25AB JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH3 0xDD0 DUP7 DUP7 PUSH3 0x1D80 JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH3 0xE7F JUMPI DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xA4C0ED36 CALLER DUP8 DUP8 DUP8 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP5 DUP5 DUP3 DUP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP SWAP6 POP POP POP POP POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0xE65 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH3 0xE7A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH3 0xE92 PUSH3 0x1D9E JUMP JUMPDEST DUP1 ISZERO PUSH3 0xEA1 JUMPI POP PUSH1 0x9 SLOAD PUSH1 0xFF AND JUMPDEST PUSH3 0xEE2 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH3 0x39A3 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x5 SLOAD CALLER SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x4B91562E DUP3 PUSH3 0xF01 DUP2 PUSH3 0x1866 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0xF48 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH3 0xF5D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH3 0xF70 CALLER DUP3 PUSH3 0x25B9 JUMP JUMPDEST PUSH3 0xF7A PUSH3 0x150C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x42966C68 PUSH3 0xF9F PUSH1 0x4 SLOAD DUP5 PUSH3 0x2654 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0xF48 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x9 SLOAD PUSH1 0xFF AND PUSH3 0x102E JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416E206163636570746564206F66666572206578697374730000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH3 0x103A PUSH3 0x150C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x3A98EF39 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x1075 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH3 0x108A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH3 0x10A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 POP CALLER PUSH3 0x10C2 PUSH2 0x2710 PUSH3 0x10BB DUP5 PUSH2 0xBB8 PUSH3 0x2654 JUMP JUMPDEST SWAP1 PUSH3 0x267D JUMP JUMPDEST PUSH3 0x10CC PUSH3 0xD1C JUMP JUMPDEST LT ISZERO PUSH3 0x110B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2E DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH3 0x3A09 PUSH1 0x2E SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x1120 PUSH2 0x2710 PUSH3 0x10BB DUP5 PUSH2 0x1F4 PUSH3 0x2654 JUMP JUMPDEST PUSH3 0x112B DUP3 PUSH3 0x1866 JUMP JUMPDEST LT ISZERO PUSH3 0x116A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x39 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH3 0x3A94 PUSH1 0x39 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH1 0x0 SWAP1 PUSH8 0xDE0B6B3A7640000 SWAP1 DUP3 DUP2 DUP2 DUP2 DUP6 DUP9 DUP4 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH3 0x11A8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x0 CALLER DUP5 DUP7 PUSH1 0x8 SLOAD PUSH1 0x40 MLOAD PUSH3 0x11BF SWAP1 PUSH3 0x2C9C JUMP JUMPDEST DUP1 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP5 POP POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 PUSH1 0x0 CREATE DUP1 ISZERO DUP1 ISZERO PUSH3 0x120D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xB28FA152 PUSH3 0x122A DUP5 PUSH3 0x1866 JUMP JUMPDEST PUSH3 0x1234 PUSH3 0xD1C JUMP JUMPDEST SUB PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x126A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH3 0x127F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH3 0x1296 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH3 0x12E1 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x496E73756666696369656E742066756E64696E67 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH3 0x12EB PUSH3 0x1D9E JUMP JUMPDEST ISZERO PUSH3 0x1497 JUMPI PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xE5A6B10F PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x1340 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH3 0x1355 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH3 0x136C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND SWAP2 AND EQ DUP1 ISZERO PUSH3 0x141A JUMPI POP PUSH3 0x1416 PUSH2 0x2710 PUSH3 0x10BB PUSH2 0x2904 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xA035B1FE PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x13E1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH3 0x13F6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH3 0x140D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 PUSH3 0x2654 JUMP JUMPDEST DUP6 LT ISZERO JUMPDEST PUSH3 0x1457 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x3C DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH3 0x3967 PUSH1 0x3C SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x1497 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1C DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4F66666572207265706C61636564206279206869676865722062696400000000 DUP2 MSTORE POP PUSH3 0x2691 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SWAP2 SSTORE DUP3 AND PUSH32 0x9C00F159B1FA9EAEBDA7ACAF50BE0BF3A652277380F907B35CB681BD641A62D3 DUP7 PUSH3 0x14E5 PUSH3 0x1520 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x20 DUP4 ADD MSTORE DUP1 MLOAD SWAP2 DUP3 SWAP1 SUB ADD SWAP1 LOG2 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH3 0x1539 PUSH3 0x1D9E JUMP JUMPDEST DUP1 ISZERO PUSH3 0x1548 JUMPI POP PUSH1 0x9 SLOAD PUSH1 0xFF AND JUMPDEST PUSH3 0x1589 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH3 0x39A3 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x90E64D13 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x15D8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH3 0x15ED JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH3 0x1604 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD ISZERO PUSH3 0x1642 JUMPI PUSH3 0x163C PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xD DUP2 MSTORE PUSH1 0x20 ADD PUSH13 0x13D999995C88195E1C1A5C9959 PUSH1 0x9A SHL DUP2 MSTORE POP PUSH3 0x2691 JUMP JUMPDEST PUSH3 0x1864 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xCF42A927 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x1691 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH3 0x16A6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH3 0x16BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD ISZERO PUSH3 0x16FA JUMPI PUSH3 0x163C PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH18 0x139BDD08195B9BDD59DA081CDD5C1C1BDC9D PUSH1 0x72 SHL DUP2 MSTORE POP PUSH3 0x2691 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x38A86C57 PUSH1 0xE1 SHL DUP2 MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 PUSH4 0xB28FA152 SWAP2 PUSH3 0x1780 SWAP2 DUP5 SWAP2 PUSH4 0x7150D8AE SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x174C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH3 0x1761 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH3 0x1778 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH3 0x1866 JUMP JUMPDEST PUSH3 0x178A PUSH3 0xD1C JUMP JUMPDEST SUB PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x17C0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH3 0x17D5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH3 0x17EC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH3 0x1817 JUMPI PUSH3 0x163C PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0x38D9 PUSH1 0x21 SWAP2 CODECOPY PUSH3 0x2691 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4163717569736974696F6E20636F6E7465737420756E7375636365737366756C PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0xFF AND PUSH3 0x18D2 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x436F6E7472616374206973206E6F7420616374697665 PUSH1 0x50 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 CALLER SWAP1 POP PUSH3 0x18F6 PUSH2 0x2710 PUSH3 0x10BB PUSH1 0x7 SLOAD PUSH3 0x18EF PUSH3 0xD1C JUMP JUMPDEST SWAP1 PUSH3 0x2654 JUMP JUMPDEST PUSH3 0x1901 DUP3 PUSH3 0x1866 JUMP JUMPDEST LT ISZERO PUSH3 0x194A JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x145D5BDC9D5B481B9BDD081C995858DA1959 PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH3 0x1954 PUSH3 0x1D9E JUMP JUMPDEST ISZERO PUSH3 0x1AC9 JUMPI PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xCF42A927 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x19A9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH3 0x19BE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH3 0x19D5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH3 0x1AAD JUMPI PUSH3 0x19E6 PUSH3 0xE88 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xCF42A927 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x1A35 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH3 0x1A4A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH3 0x1A61 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH3 0x1AAD JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x145D5BDC9D5B481A185CC81B9BDD0819985A5B1959 PUSH1 0x5A SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH3 0x1AB7 PUSH3 0x152F JUMP JUMPDEST PUSH3 0x1AC1 PUSH3 0x1D9E JUMP JUMPDEST ISZERO PUSH3 0x1AC9 JUMPI INVALID JUMPDEST PUSH3 0x1AD7 DUP2 DUP3 PUSH1 0x1 PUSH3 0x22BA JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND DUP2 MSTORE SWAP1 MLOAD PUSH32 0x3B6B79A09E9FD230E8591B65C97236BF7DF7A604EDF733DB0658E66B0E6EB2A9 SWAP2 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG1 POP JUMP JUMPDEST PUSH3 0x1B20 PUSH3 0x1D9E JUMP JUMPDEST DUP1 ISZERO PUSH3 0x1B2F JUMPI POP PUSH1 0x9 SLOAD PUSH1 0xFF AND JUMPDEST PUSH3 0x1B70 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH3 0x39A3 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x5 SLOAD CALLER SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x5FF0CF84 DUP3 PUSH3 0xF01 DUP2 PUSH3 0x1866 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x95D89B41 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x1BE0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH3 0x1BF5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH1 0x20 DUP2 LT ISZERO PUSH3 0x1C1F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD PUSH1 0x40 MLOAD SWAP4 SWAP3 SWAP2 SWAP1 DUP5 PUSH1 0x1 PUSH1 0x20 SHL DUP3 GT ISZERO PUSH3 0x1C3F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 DUP4 ADD SWAP1 PUSH1 0x20 DUP3 ADD DUP6 DUP2 GT ISZERO PUSH3 0x1C55 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x20 SHL DUP2 GT DUP3 DUP3 ADD DUP9 LT OR ISZERO PUSH3 0x1C6F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MSTORE POP DUP2 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x1C9E JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH3 0x1C84 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH3 0x1CCC JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP PUSH1 0x40 MSTORE POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP1 PUSH1 0x11 PUSH1 0xFA SHL DUP2 MSTORE POP PUSH1 0x1 ADD DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x20 DUP4 LT PUSH3 0x883 JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x1F NOT SWAP1 SWAP3 ADD SWAP2 PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH3 0x862 JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 PUSH3 0x8D1 SWAP2 DUP6 SWAP1 PUSH3 0xD69 SWAP1 DUP7 PUSH3 0x2598 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH3 0x1D6E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x1D7A DUP5 DUP5 PUSH3 0x2861 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x8D1 CALLER DUP5 DUP5 PUSH3 0x24EF JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH3 0x1DAB PUSH3 0x1520 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO SWAP1 POP SWAP1 JUMP JUMPDEST PUSH3 0x1DC5 PUSH3 0x1D9E JUMP JUMPDEST ISZERO PUSH3 0x1E13 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH24 0x2A3432B9329034B99030903832B73234B7339037B33332B9 PUSH1 0x41 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP5 SWAP1 MSTORE SWAP1 MLOAD PUSH2 0x100 SWAP1 SWAP3 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0x23B872DD SWAP2 PUSH1 0x64 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x1E72 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH3 0x1E87 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH3 0x1E9E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH3 0x1EEA JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x14DA185C99481D1C985B9CD9995C8819985A5B1959 PUSH1 0x5A SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH3 0x1EF6 DUP3 DUP3 PUSH3 0x2861 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0x0 SWAP1 DUP2 SWAP1 PUSH1 0xFF AND ISZERO PUSH3 0x1F7D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x36 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH3 0x38FA PUSH1 0x36 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x1F89 CALLER DUP5 PUSH3 0x25B9 JUMP JUMPDEST PUSH1 0x0 PUSH3 0x1FA2 PUSH1 0x4 SLOAD DUP6 PUSH3 0x2654 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP5 SWAP1 MSTORE SWAP1 MLOAD SWAP3 SWAP4 POP PUSH2 0x100 SWAP1 SWAP2 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0xA9059CBB SWAP2 PUSH1 0x44 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x1FFE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH3 0x2013 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH3 0x202A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH3 0x2036 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x3 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP5 SWAP1 SWAP4 POP SWAP2 POP POP JUMP JUMPDEST PUSH3 0x205A PUSH3 0x1D9E JUMP JUMPDEST DUP1 ISZERO PUSH3 0x2069 JUMPI POP PUSH1 0x9 SLOAD PUSH1 0xFF AND JUMPDEST PUSH3 0x20AA JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH3 0x39A3 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x7150D8AE PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x20F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH3 0x210E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH3 0x2125 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH3 0x216F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x37 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH3 0x3930 PUSH1 0x37 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x1864 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH18 0x21B0B731B2B63632B210313C90313ABCB2B9 PUSH1 0x71 SHL DUP2 MSTORE POP PUSH3 0x2691 JUMP JUMPDEST PUSH1 0x0 PUSH3 0x21B0 PUSH3 0x1D9E JUMP JUMPDEST PUSH3 0x21BD JUMPI PUSH1 0x0 PUSH3 0x21C5 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH3 0x2211 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH3 0x3A37 PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH3 0x2258 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH3 0x38B7 PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE DUP2 MLOAD DUP6 DUP2 MSTORE SWAP2 MLOAD PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x22C7 DUP5 PUSH3 0x1866 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH3 0x22D5 PUSH3 0xD1C JUMP JUMPDEST PUSH1 0x9 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE SWAP1 POP PUSH3 0x22EC DUP3 PUSH3 0x1F34 JUMP JUMPDEST POP PUSH1 0x0 SWAP1 POP PUSH3 0x22FD DUP3 DUP5 PUSH3 0x2598 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP6 SWAP1 MSTORE SWAP2 MLOAD SWAP4 SWAP5 POP PUSH2 0x100 SWAP1 SWAP3 DIV AND SWAP2 PUSH4 0xA9059CBB SWAP2 PUSH1 0x44 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x235B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH3 0x2370 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH3 0x2387 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH3 0x23CD JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x1D1C985B9CD9995C8819985A5B1959 PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT AND PUSH2 0x100 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 DUP2 AND DUP3 MUL SWAP3 SWAP1 SWAP3 OR SWAP3 DUP4 SWAP1 SSTORE PUSH1 0x4 DUP8 SWAP1 SSTORE SWAP1 SWAP2 DIV AND PUSH4 0x23B872DD DUP8 ADDRESS PUSH3 0x2410 DUP9 DUP7 PUSH3 0x2654 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP4 POP POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x2467 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH3 0x247C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH3 0x2493 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH3 0x24E7 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4261636B696E67207472616E73666572206661696C6564000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH3 0x24FC DUP4 DUP4 DUP4 PUSH3 0x291D JUMP JUMPDEST PUSH3 0x2506 PUSH3 0x1D9E JUMP JUMPDEST DUP1 ISZERO PUSH3 0x2515 JUMPI POP PUSH1 0x9 SLOAD PUSH1 0xFF AND JUMPDEST ISZERO PUSH3 0x2593 JUMPI PUSH1 0x5 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x6240A7D7 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE DUP6 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD DUP6 SWAP1 MSTORE SWAP2 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP2 PUSH4 0xC4814FAE SWAP2 PUSH1 0x64 DUP1 DUP4 ADD SWAP3 PUSH1 0x0 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP4 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x2579 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH3 0x258E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 GT ISZERO PUSH3 0x25A5 JUMPI INVALID JUMPDEST POP SWAP1 SUB SWAP1 JUMP JUMPDEST DUP2 DUP2 ADD DUP3 DUP2 LT ISZERO PUSH3 0x8D5 JUMPI INVALID JUMPDEST PUSH3 0x25C5 DUP3 DUP3 PUSH3 0x2A5B JUMP JUMPDEST PUSH3 0x25CF PUSH3 0x1D9E JUMP JUMPDEST DUP1 ISZERO PUSH3 0x25DE JUMPI POP PUSH1 0x9 SLOAD PUSH1 0xFF AND JUMPDEST ISZERO PUSH3 0x1EF6 JUMPI PUSH1 0x5 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x6240A7D7 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x0 PUSH1 0x24 DUP4 ADD DUP2 SWAP1 MSTORE PUSH1 0x44 DUP4 ADD DUP7 SWAP1 MSTORE SWAP3 MLOAD SWAP4 AND SWAP3 PUSH4 0xC4814FAE SWAP3 PUSH1 0x64 DUP1 DUP5 ADD SWAP4 SWAP2 SWAP3 SWAP2 DUP3 SWAP1 SUB ADD DUP2 DUP4 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x263F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH3 0x24E7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH3 0x2665 JUMPI POP PUSH1 0x0 PUSH3 0x8D5 JUMP JUMPDEST POP DUP2 DUP2 MUL DUP2 DUP4 DUP3 DUP2 PUSH3 0x2674 JUMPI INVALID JUMPDEST DIV EQ PUSH3 0x8D5 JUMPI INVALID JUMPDEST PUSH1 0x0 DUP2 DUP4 DUP2 PUSH3 0x2689 JUMPI INVALID JUMPDEST DIV SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x38A86C57 PUSH1 0xE1 SHL DUP2 MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0x7150D8AE SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x26D7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH3 0x26EC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH3 0x2703 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH32 0xC88F58AE9FEB0742D9422F604DD3C1BE6D02818F8DEC340C5061F428B554E975 CALLER PUSH1 0x0 DUP6 PUSH3 0x2740 PUSH3 0x1520 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP5 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x27A5 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH3 0x278B JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH3 0x27D3 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP6 POP POP POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x41C0E1B5 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x2834 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH3 0x2849 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH3 0x286B PUSH3 0x1D9E JUMP JUMPDEST ISZERO PUSH3 0x28B9 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH24 0x2A3432B9329034B99030903832B73234B7339037B33332B9 PUSH1 0x41 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x9 SLOAD PUSH1 0xFF AND PUSH3 0x2911 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436F6E7472616374206E6F742061637469766520616E79206D6F72652E000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH3 0x1EF6 DUP3 DUP3 PUSH3 0x2B2E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH3 0x2964 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH3 0x39E4 PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH3 0x29AB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH3 0x3894 PUSH1 0x23 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH3 0x29D0 SWAP1 DUP3 PUSH3 0x2598 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP1 DUP5 AND DUP2 MSTORE KECCAK256 SLOAD PUSH3 0x2A01 SWAP1 DUP3 PUSH3 0x25AB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE DUP1 MLOAD DUP6 DUP2 MSTORE SWAP1 MLOAD SWAP2 SWAP4 SWAP3 DUP8 AND SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 SWAP2 DUP3 SWAP1 SUB ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH3 0x2AA2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH3 0x39C3 PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 SLOAD PUSH3 0x2AB1 SWAP1 DUP3 PUSH3 0x2598 JUMP JUMPDEST PUSH1 0x2 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH3 0x2AD9 SWAP1 DUP3 PUSH3 0x2598 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE DUP4 MLOAD DUP6 DUP2 MSTORE SWAP4 MLOAD SWAP2 SWAP4 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 SWAP1 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH3 0x2B3A DUP3 DUP3 PUSH3 0x2BB3 JUMP JUMPDEST PUSH3 0x2B44 PUSH3 0x1D9E JUMP JUMPDEST DUP1 ISZERO PUSH3 0x2B53 JUMPI POP PUSH1 0x9 SLOAD PUSH1 0xFF AND JUMPDEST ISZERO PUSH3 0x1EF6 JUMPI PUSH1 0x5 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x6240A7D7 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND PUSH1 0x24 DUP5 ADD MSTORE PUSH1 0x44 DUP4 ADD DUP7 SWAP1 MSTORE SWAP3 MLOAD SWAP3 SWAP1 SWAP4 AND SWAP3 PUSH4 0xC4814FAE SWAP3 PUSH1 0x64 DUP1 DUP5 ADD SWAP4 DUP3 SWAP1 SUB ADD DUP2 DUP4 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x263F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH3 0x2C0F JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x2 SLOAD PUSH3 0x2C1E SWAP1 DUP3 PUSH3 0x25AB JUMP JUMPDEST PUSH1 0x2 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH3 0x2C46 SWAP1 DUP3 PUSH3 0x25AB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE DUP4 MLOAD DUP6 DUP2 MSTORE SWAP4 MLOAD SWAP3 SWAP4 SWAP2 SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0xBE9 DUP1 PUSH3 0x2CAB DUP4 CODECOPY ADD SWAP1 JUMP INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0xBE9 CODESIZE SUB DUP1 PUSH2 0xBE9 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE PUSH1 0x80 DUP2 LT ISZERO PUSH2 0x33 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 MLOAD PUSH1 0x20 DUP3 ADD MLOAD PUSH1 0x40 DUP4 ADD MLOAD PUSH1 0x60 SWAP1 SWAP4 ADD MLOAD SWAP2 SWAP3 SWAP1 SWAP2 DUP2 PUSH2 0x8C JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x696E76616C6964207072696365 PUSH1 0x98 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND CALLER OR SWAP1 SWAP2 SSTORE PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP7 DUP8 AND SWAP1 DUP4 AND OR SWAP1 SSTORE PUSH1 0x3 DUP1 SLOAD SWAP5 SWAP1 SWAP6 AND SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP3 SSTORE PUSH1 0x4 SWAP2 SWAP1 SWAP2 SSTORE PUSH1 0x0 SSTORE TIMESTAMP PUSH1 0x5 SSTORE PUSH2 0xB06 DUP1 PUSH2 0xE3 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x12C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xB1610D7E GT PUSH2 0xAD JUMPI DUP1 PUSH4 0xCF42A927 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xCF42A927 EQ PUSH2 0x2B4 JUMPI DUP1 PUSH4 0xD7BE4E29 EQ PUSH2 0x2BC JUMPI DUP1 PUSH4 0xE5A6B10F EQ PUSH2 0x2C4 JUMPI DUP1 PUSH4 0xFA7F1BAE EQ PUSH2 0x2CC JUMPI DUP1 PUSH4 0xFB286C65 EQ PUSH2 0x2D4 JUMPI PUSH2 0x12C JUMP JUMPDEST DUP1 PUSH4 0xB1610D7E EQ PUSH2 0x249 JUMPI DUP1 PUSH4 0xB28FA152 EQ PUSH2 0x251 JUMPI DUP1 PUSH4 0xB5B47F42 EQ PUSH2 0x26E JUMPI DUP1 PUSH4 0xB80777EA EQ PUSH2 0x276 JUMPI DUP1 PUSH4 0xC4814FAE EQ PUSH2 0x27E JUMPI PUSH2 0x12C JUMP JUMPDEST DUP1 PUSH4 0x5FF0CF84 GT PUSH2 0xF4 JUMPI DUP1 PUSH4 0x5FF0CF84 EQ PUSH2 0x1C3 JUMPI DUP1 PUSH4 0x7150D8AE EQ PUSH2 0x1EF JUMPI DUP1 PUSH4 0x8F1B4C6F EQ PUSH2 0x213 JUMPI DUP1 PUSH4 0x90E64D13 EQ PUSH2 0x239 JUMPI DUP1 PUSH4 0xA035B1FE EQ PUSH2 0x241 JUMPI PUSH2 0x12C JUMP JUMPDEST DUP1 PUSH4 0xC43CD88 EQ PUSH2 0x131 JUMPI DUP1 PUSH4 0x1703A018 EQ PUSH2 0x14B JUMPI DUP1 PUSH4 0x41C0E1B5 EQ PUSH2 0x153 JUMPI DUP1 PUSH4 0x448AB4C6 EQ PUSH2 0x15D JUMPI DUP1 PUSH4 0x4B91562E EQ PUSH2 0x197 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x139 PUSH2 0x2DC JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x139 PUSH2 0x2E3 JUMP JUMPDEST PUSH2 0x15B PUSH2 0x2E9 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x183 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x173 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x343 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x15B PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x1AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x376 JUMP JUMPDEST PUSH2 0x15B PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x1D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x421 JUMP JUMPDEST PUSH2 0x1F7 PUSH2 0x4C8 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x183 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x229 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x4D7 JUMP JUMPDEST PUSH2 0x183 PUSH2 0x4E0 JUMP JUMPDEST PUSH2 0x139 PUSH2 0x504 JUMP JUMPDEST PUSH2 0x139 PUSH2 0x50A JUMP JUMPDEST PUSH2 0x183 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x267 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x511 JUMP JUMPDEST PUSH2 0x139 PUSH2 0x64E JUMP JUMPDEST PUSH2 0x139 PUSH2 0x654 JUMP JUMPDEST PUSH2 0x15B PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x294 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH2 0x65A JUMP JUMPDEST PUSH2 0x183 PUSH2 0x6F0 JUMP JUMPDEST PUSH2 0x183 PUSH2 0x83B JUMP JUMPDEST PUSH2 0x1F7 PUSH2 0x8F4 JUMP JUMPDEST PUSH2 0x183 PUSH2 0x903 JUMP JUMPDEST PUSH2 0x139 PUSH2 0x927 JUMP JUMPDEST PUSH3 0x76A700 DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x335 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xA PUSH1 0x24 DUP3 ADD MSTORE PUSH10 0x1B9BDD081C185C995B9D PUSH1 0xB2 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SELFDESTRUCT JUMPDEST PUSH1 0x0 PUSH1 0x1 JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x36F JUMPI INVALID JUMPDEST EQ SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x3C2 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xA PUSH1 0x24 DUP3 ADD MSTORE PUSH10 0x1B9BDD081C185C995B9D PUSH1 0xB2 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x3CA PUSH2 0x903 JUMP JUMPDEST PUSH2 0x411 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x2A3432903B37BA32903430B99032B73232B217 PUSH1 0x69 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x41D PUSH1 0x2 DUP3 DUP5 PUSH2 0x92D JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x46D JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xA PUSH1 0x24 DUP3 ADD MSTORE PUSH10 0x1B9BDD081C185C995B9D PUSH1 0xB2 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x475 PUSH2 0x903 JUMP JUMPDEST PUSH2 0x4BC JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x2A3432903B37BA32903430B99032B73232B217 PUSH1 0x69 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x41D PUSH1 0x1 DUP3 DUP5 PUSH2 0x92D JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH2 0x348 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x4F8 PUSH1 0x5 SLOAD TIMESTAMP PUSH2 0x973 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH3 0x76A700 LT SWAP2 POP POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH3 0x4F1A00 DUP2 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x2 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP4 SWAP3 SWAP1 SWAP3 AND SWAP2 DUP4 SWAP2 DUP4 SWAP2 PUSH4 0x70A08231 SWAP2 PUSH1 0x24 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x569 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x57D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x593 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x2 SLOAD PUSH1 0x1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x6EB1769F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP2 DUP4 AND PUSH1 0x24 DUP4 ADD MSTORE MLOAD SWAP3 SWAP4 POP PUSH1 0x0 SWAP3 SWAP2 DUP6 AND SWAP2 PUSH4 0xDD62ED3E SWAP2 PUSH1 0x44 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x5F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x606 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x61C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x4 SLOAD SWAP1 SWAP2 POP PUSH1 0x0 SWAP1 PUSH2 0x632 SWAP1 DUP8 SWAP1 PUSH2 0x98A JUMP JUMPDEST SWAP1 POP DUP3 DUP2 GT ISZERO DUP1 ISZERO PUSH2 0x644 JUMPI POP DUP2 DUP2 GT ISZERO JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x6A6 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xA PUSH1 0x24 DUP3 ADD MSTORE PUSH10 0x1B9BDD081C185C995B9D PUSH1 0xB2 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x6AE PUSH2 0x903 JUMP JUMPDEST ISZERO PUSH2 0x6EB JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SLOAD SWAP3 DUP6 AND DUP3 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF SWAP2 DUP3 AND SWAP2 AND PUSH2 0x6E8 DUP3 DUP3 DUP6 PUSH2 0x9AF JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6FA PUSH2 0x903 JUMP JUMPDEST ISZERO PUSH2 0x80F JUMPI PUSH1 0x0 SLOAD PUSH1 0x1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x18160DDD PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD PUSH2 0x807 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0x18160DDD SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x748 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x75C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x772 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x6 SLOAD PUSH1 0x1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x18160DDD PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD PUSH2 0x801 SWAP4 PUSH2 0x2710 SWAP4 PUSH2 0x7FB SWAP4 SWAP2 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 PUSH4 0x18160DDD SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x7C9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x7DD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x7F3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 PUSH2 0x973 JUMP JUMPDEST SWAP1 PUSH2 0x98A JUMP JUMPDEST SWAP1 PUSH2 0xAB0 JUMP JUMPDEST LT SWAP1 POP PUSH2 0x501 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x807 PUSH2 0x82C PUSH1 0x6 SLOAD PUSH1 0x7 SLOAD PUSH2 0xAC3 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH2 0x801 SWAP1 PUSH2 0x2710 PUSH2 0x98A JUMP JUMPDEST PUSH1 0x0 PUSH2 0x845 PUSH2 0x903 JUMP JUMPDEST ISZERO PUSH2 0x8D7 JUMPI PUSH1 0x0 SLOAD PUSH1 0x1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x18160DDD PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD PUSH2 0x8CE SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0x18160DDD SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x893 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x8A7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x8BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x7 SLOAD PUSH2 0x801 SWAP1 PUSH2 0x2710 PUSH2 0x98A JUMP JUMPDEST LT ISZERO SWAP1 POP PUSH2 0x501 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x8CE PUSH2 0x82C PUSH1 0x6 SLOAD PUSH1 0x7 SLOAD PUSH2 0xAC3 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x91B PUSH1 0x5 SLOAD TIMESTAMP PUSH2 0x973 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH3 0x4F1A00 LT ISZERO SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF DUP2 AND SWAP2 DUP6 SWAP2 DUP3 SWAP2 SWAP1 PUSH1 0xFF NOT AND PUSH1 0x1 DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x963 JUMPI INVALID JUMPDEST MUL OR SWAP1 SSTORE POP PUSH2 0x6E8 DUP3 DUP3 DUP7 PUSH2 0x9AF JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 GT ISZERO PUSH2 0x97F JUMPI INVALID JUMPDEST POP DUP1 DUP3 SUB JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x999 JUMPI POP PUSH1 0x0 PUSH2 0x984 JUMP JUMPDEST POP DUP2 DUP2 MUL DUP2 DUP4 DUP3 DUP2 PUSH2 0x9A7 JUMPI INVALID JUMPDEST DIV EQ PUSH2 0x984 JUMPI INVALID JUMPDEST DUP2 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x9BB JUMPI INVALID JUMPDEST DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x9C7 JUMPI INVALID JUMPDEST EQ PUSH2 0x6EB JUMPI PUSH1 0x2 DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x9DA JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0x9F5 JUMPI PUSH1 0x6 SLOAD PUSH2 0x9ED SWAP1 DUP3 PUSH2 0x973 JUMP JUMPDEST PUSH1 0x6 SSTORE PUSH2 0xA1A JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xA03 JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0xA1A JUMPI PUSH1 0x7 SLOAD PUSH2 0xA16 SWAP1 DUP3 PUSH2 0x973 JUMP JUMPDEST PUSH1 0x7 SSTORE JUMPDEST PUSH1 0x2 DUP3 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xA28 JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0xA43 JUMPI PUSH1 0x6 SLOAD PUSH2 0xA3B SWAP1 DUP3 PUSH2 0xAC3 JUMP JUMPDEST PUSH1 0x6 SSTORE PUSH2 0xA68 JUMP JUMPDEST PUSH1 0x1 DUP3 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xA51 JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0xA68 JUMPI PUSH1 0x7 SLOAD PUSH2 0xA64 SWAP1 DUP3 PUSH2 0xAC3 JUMP JUMPDEST PUSH1 0x7 SSTORE JUMPDEST PUSH32 0x8FCC50C2C4EDD06D51AE66E9E21ED76B32A1766C57F491788E1AA24A1B58C256 PUSH1 0x7 SLOAD PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 DUP2 PUSH2 0xABB JUMPI INVALID JUMPDEST DIV SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP2 DUP2 ADD DUP3 DUP2 LT ISZERO PUSH2 0x984 JUMPI INVALID INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SUB NOT DUP13 SWAP8 SMOD MSTORE8 PUSH29 0xE5959B3E8267A2B8A721CC26A72203A7D67CA0A492033FB5A264736F6C PUSH4 0x43000701 STOP CALLER GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220746F20746865207A65726F2061 PUSH5 0x6472657373 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH2 0x7070 PUSH19 0x6F766520746F20746865207A65726F20616464 PUSH19 0x6573734F6666657220776173206E6F74207375 PUSH7 0x66696369656E74 PUSH13 0x792066756E6465644173206C6F PUSH15 0x672061732074686520636F6E747261 PUSH4 0x74206973 KECCAK256 PUSH2 0x6374 PUSH10 0x76652C20796F75206172 PUSH6 0x20626F756E64 KECCAK256 PUSH21 0x6F206974596F7520617265206E6F7420617574686F PUSH19 0x697A656420746F2063616E63656C2074686973 KECCAK256 PUSH2 0x6371 PUSH22 0x69736974696F6E206F666665724E6577206F66666572 PUSH20 0x206D757374206265206174206C65617374203525 KECCAK256 PUSH9 0x696768657220746861 PUSH15 0x207468652070656E64696E67206F66 PUSH7 0x65725468657265 KECCAK256 PUSH10 0x73206E6F2070656E6469 PUSH15 0x67206F666665720000000000000045 MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH3 0x75726E KECCAK256 PUSH7 0x726F6D20746865 KECCAK256 PUSH27 0x65726F206164647265737345524332303A207472616E7366657220 PUSH7 0x726F6D20746865 KECCAK256 PUSH27 0x65726F20616464726573735468697320636F6E747261637420646F PUSH6 0x73206E6F7420 PUSH19 0x6570726573656E7420656E6F75676820657175 PUSH10 0x747945524332303A2061 PUSH17 0x70726F76652066726F6D20746865207A65 PUSH19 0x6F2061646472657373596F7520617265206E6F PUSH21 0x20617574686F72697A656420746F20636F6D706C65 PUSH21 0x652074686973206163717569736974696F6E206F66 PUSH7 0x6572596F75206E PUSH6 0x656420746F20 PUSH9 0x6F6C64206174206C65 PUSH2 0x7374 KECCAK256 CALLDATALOAD 0x25 KECCAK256 PUSH16 0x6620746865206669726D20746F206D61 PUSH12 0x6520616E206F66666572A264 PUSH10 0x70667358221220B41777 0x4A PUSH10 0x98D84D541C65B3534E45 PUSH12 0xA2AF2A8F5007CDE884991AA5 JUMPI 0xB5 BLOCKHASH PUSH11 0x64736F6C63430007010033 ",
                        "sourceMap": "2411:10539:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3519:25;;;:::i;:::-;;;;;;;;;;;;;;;;;;4687:140;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2689:41;;;:::i;:::-;;;;;;;;;;;;;;;;2860:157:3;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;2860:157:3;;;;;;;;:::i;9669:617:4:-;;;:::i;:::-;;1839:100:3;;;:::i;3488:265::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;3488:265:3;;;;;;;;;;;;;;;;;:::i;1667:30::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;3120:32:4;;;:::i;4162:206:3:-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;4162:206:3;;;;;;;;:::i;6112:303::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;6112:303:3;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;6112:303:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;6112:303:3;;;;;;;;;;-1:-1:-1;6112:303:3;;-1:-1:-1;6112:303:3;-1:-1:-1;6112:303:3;:::i;8486:133:4:-;;;:::i;6862:164::-;;;;;;;;;;;;;;;;-1:-1:-1;6862:164:4;;:::i;7162:1173::-;;;;;;;;;;;;;;;;-1:-1:-1;7162:1173:4;;;;;;-1:-1:-1;;;;;7162:1173:4;;:::i;4978:102::-;;;:::i;:::-;;;;-1:-1:-1;;;;;4978:102:4;;;;;;;;;;;;;;12493:97;;;:::i;8848:479::-;;;:::i;2002:119:3:-;;;;;;;;;;;;;;;;-1:-1:-1;2002:119:3;-1:-1:-1;;;;;2002:119:3;;:::i;11027:644:4:-;;;:::i;8343:135::-;;;:::i;4835:::-;;;:::i;3009:30::-;;;:::i;4871:216:3:-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;4871:216:3;;;;;;;;:::i;5088:176:4:-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5088:176:4;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;5088:176:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;5088:176:4;;;;;;;;;;-1:-1:-1;5088:176:4;;-1:-1:-1;5088:176:4;-1:-1:-1;5088:176:4;:::i;2334:173:3:-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;2334:173:3;;;;;;;;:::i;2893:42:4:-;;;:::i;12598:107::-;;;:::i;5386:221::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;5386:221:4;;;;;;;;:::i;2860:24::-;;;:::i;2570:143:3:-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;2570:143:3;;;;;;;;;;:::i;5902:439:4:-;;;;;;;;;;;;;;;;-1:-1:-1;5902:439:4;;:::i;:::-;;;;-1:-1:-1;;;;;5902:439:4;;;;;;;;;;;;;;;;;;;;;8627:213;;;:::i;10294:107::-;;;:::i;3519:25::-;;;;;;:::o;4687:140::-;4733:13;4803:7;;;;;;;;;-1:-1:-1;;;;;4803:7:4;-1:-1:-1;;;;;4803:12:4;;:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4803:14:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;4803:14:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;4803:14:4;;;;;;-1:-1:-1;4803:14:4;;;;;;;;;;-1:-1:-1;4803:14:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4772:46;;;;;;-1:-1:-1;;;4772:46:4;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4772:46:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4758:61;;4687:140;:::o;2689:41::-;;;;:::o;2860:157:3:-;2934:4;2951:36;2960:10;2972:7;2981:5;2951:8;:36::i;:::-;-1:-1:-1;3005:4:3;2860:157;;;;;:::o;9669:617:4:-;12756:13;:11;:13::i;:::-;:23;;;;-1:-1:-1;12773:6:4;;;;12756:23;12748:61;;;;;-1:-1:-1;;;12748:61:4;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;12748:61:4;;;;;;;;;;;;;;;9749:5:::1;::::0;:13:::1;::::0;;-1:-1:-1;;;9749:13:4;;;;9733::::1;::::0;-1:-1:-1;;;;;9749:5:4::1;::::0;:11:::1;::::0;:13:::1;::::0;;::::1;::::0;::::1;::::0;;;;;;;;:5;:13;::::1;;::::0;::::1;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;::::0;::::1;;-1:-1:-1::0;9749:13:4;;-1:-1:-1;9781:10:4::1;-1:-1:-1::0;;;;;9781:19:4;::::1;;9773:89;;;;-1:-1:-1::0;;;9773:89:4::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9881:5;;;;;;;;;-1:-1:-1::0;;;;;9881:5:4::1;-1:-1:-1::0;;;;;9881:21:4::1;;:23;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;::::0;::::1;;-1:-1:-1::0;9881:23:4;9873:68:::1;;;::::0;;-1:-1:-1;;;9873:68:4;;::::1;;::::0;::::1;::::0;;;;;;;::::1;::::0;;;;;;;;;;;;;::::1;;9960:5;::::0;-1:-1:-1;;;;;9960:5:4::1;:18;9995:16;10005:5:::0;9995:9:::1;:16::i;:::-;9979:13;:11;:13::i;:::-;:32;9960:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;::::0;::::1;;-1:-1:-1::0;9960:52:4;9952:92:::1;;;::::0;;-1:-1:-1;;;9952:92:4;;::::1;;::::0;::::1;::::0;::::1;::::0;;;;::::1;::::0;;;;;;;;;;;;;::::1;;10055:54;10070:5;10077;;;;;;;;;-1:-1:-1::0;;;;;10077:5:4::1;-1:-1:-1::0;;;;;10077:14:4::1;;:16;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;::::0;::::1;;-1:-1:-1::0;10077:16:4;10095:5:::1;::::0;:13:::1;::::0;;-1:-1:-1;;;10095:13:4;;;;-1:-1:-1;;;;;10095:5:4;;::::1;::::0;:11:::1;::::0;:13:::1;::::0;;::::1;::::0;10077:16:::1;::::0;10095:13;;;;;;;;:5;:13;::::1;;::::0;::::1;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;::::0;::::1;;-1:-1:-1::0;10095:13:4;10055:14:::1;:54::i;:::-;10261:5;::::0;10125:153:::1;::::0;;10170:10:::1;10125:153:::0;;10195:4:::1;10125:153;::::0;::::1;::::0;-1:-1:-1;;;;;10261:5:4;;::::1;10125:153:::0;;;;;;;;;;;::::1;::::0;;;;-1:-1:-1;;;10125:153:4;;;;;;;;::::1;::::0;::::1;::::0;;;;;;;::::1;12820:1;9669:617::o:0;1839:100:3:-;1919:12;;1839:100;:::o;3488:265::-;3586:4;3603:36;3613:6;3621:9;3632:6;3603:9;:36::i;:::-;-1:-1:-1;;;;;3679:19:3;;;;;;:11;:19;;;;;;;;3667:10;3679:31;;;;;;;;;3650:73;;3659:6;;3679:43;;3715:6;3679:35;:43::i;:::-;3650:8;:73::i;:::-;-1:-1:-1;3741:4:3;3488:265;;;;;:::o;1667:30::-;;;;;;:::o;3120:32:4:-;;;;:::o;4162:206:3:-;4268:10;4242:4;4289:23;;;:11;:23;;;;;;;;-1:-1:-1;;;;;4289:32:3;;;;;;;;;;4242:4;;4259:79;;4280:7;;4289:48;;4326:10;4289:36;:48::i;6112:303::-;6206:4;6223:12;6238:27;6247:9;6258:6;6238:8;:27::i;:::-;6223:42;;6280:7;6276:107;;;6319:9;-1:-1:-1;;;;;6303:42:3;;6346:10;6358:6;6366:4;;6303:68;;;;;;;;;;;;;-1:-1:-1;;;;;6303:68:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6276:107;6400:7;6112:303;-1:-1:-1;;;;;6112:303:3:o;8486:133:4:-;12756:13;:11;:13::i;:::-;:23;;;;-1:-1:-1;12773:6:4;;;;12756:23;12748:61;;;;;-1:-1:-1;;;12748:61:4;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;12748:61:4;;;;;;;;;;;;;;;8574:5:::1;::::0;8553:10:::1;::::0;-1:-1:-1;;;;;8574:5:4::1;:12;8553:10:::0;8594:16:::1;8553:10:::0;8594:9:::1;:16::i;:::-;8574:37;;;;;;;;;;;;;-1:-1:-1::0;;;;;8574:37:4::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;12820:1;8486:133::o:0;6862:164::-;6910:25;6916:10;6928:6;6910:5;:25::i;:::-;6956:20;:18;:20::i;:::-;-1:-1:-1;;;;;6946:36:4;;6983:34;6994:22;;6983:6;:10;;:34;;;;:::i;:::-;6946:72;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7162:1173;7258:6;;;;7250:43;;;;;-1:-1:-1;;;7250:43:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;7304:19;7334:20;:18;:20::i;:::-;-1:-1:-1;;;;;7326:41:4;;:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;7326:43:4;;-1:-1:-1;7396:10:4;7444:48;7486:5;7444:37;7326:43;3415:4;7444:15;:37::i;:::-;:41;;:48::i;:::-;7427:13;:11;:13::i;:::-;:65;;7419:124;;;;-1:-1:-1;;;7419:124:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7582:39;7615:5;7582:28;:11;3292:3;7582:15;:28::i;:39::-;7562:16;7572:5;7562:9;:16::i;:::-;:59;;7554:129;;;;-1:-1:-1;;;7554:129:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7696:19;;:37;;-1:-1:-1;;;;;7696:19:4;;;;;;7725:7;;7696:19;:37;:19;:37;7725:7;7696:19;;:37;;;;;;;;;;;;;;;;;;;;7747:20;7786:10;7798:8;7808:13;7823:17;;7770:71;;;;;:::i;:::-;;;-1:-1:-1;;;;;7770:71:4;;;;;;-1:-1:-1;;;;;7770:71:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7747:94;;7860:8;-1:-1:-1;;;;;7860:21:4;;7898:16;7908:5;7898:9;:16::i;:::-;7882:13;:11;:13::i;:::-;:32;7860:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;7860:55:4;7852:88;;;;;-1:-1:-1;;;7852:88:4;;;;;;;;;;;;-1:-1:-1;;;7852:88:4;;;;;;;;;;;;;;;7955:13;:11;:13::i;:::-;7951:279;;;8005:5;;;;;;;;;-1:-1:-1;;;;;8005:5:4;-1:-1:-1;;;;;8005:14:4;;:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;8005:16:4;-1:-1:-1;;;;;7993:28:4;;;;;;:98;;;;;8042:49;8085:5;8042:38;3200:5;8042;;;;;;;;;-1:-1:-1;;;;;8042:5:4;-1:-1:-1;;;;;8042:11:4;;:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;8042:13:4;;:17;:38::i;:49::-;8025:13;:66;;7993:98;7985:171;;;;-1:-1:-1;;;7985:171:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8171:47;;;;;;;;;;;;;;;;;;:15;:47::i;:::-;8240:5;:16;;-1:-1:-1;;;;;;8240:16:4;-1:-1:-1;;;;;8240:16:4;;;;;;;;;;8274:53;;;8294:13;8309:17;:15;:17::i;:::-;8274:53;;;;;;-1:-1:-1;;;;;8274:53:4;;;;;;;;;;;;;;;;7162:1173;;;;;:::o;4978:102::-;5064:7;;;;;-1:-1:-1;;;;;5064:7:4;;4978:102::o;12493:97::-;12576:5;;-1:-1:-1;;;;;12576:5:4;12493:97;:::o;8848:479::-;12756:13;:11;:13::i;:::-;:23;;;;-1:-1:-1;12773:6:4;;;;12756:23;12748:61;;;;;-1:-1:-1;;;12748:61:4;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;12748:61:4;;;;;;;;;;;;;;;8915:5:::1;;;;;;;;;-1:-1:-1::0;;;;;8915:5:4::1;-1:-1:-1::0;;;;;8915:16:4::1;;:18;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;::::0;::::1;;-1:-1:-1::0;8915:18:4;8911:409:::1;;;8950:32;;;;;;;;;;;;;;-1:-1:-1::0;;;8950:32:4::1;;::::0;:15:::1;:32::i;:::-;8911:409;;;9004:5;;;;;;;;;-1:-1:-1::0;;;;;9004:5:4::1;-1:-1:-1::0;;;;;9004:21:4::1;;:23;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;::::0;::::1;;-1:-1:-1::0;9004:23:4;9000:320:::1;;;9044:37;;;;;;;;;;;;;;-1:-1:-1::0;;;9044:37:4::1;;::::0;:15:::1;:37::i;9000:320::-;9104:5;::::0;9149:13:::1;::::0;;-1:-1:-1;;;9149:13:4;;;;-1:-1:-1;;;;;9104:5:4;;::::1;::::0;:18:::1;::::0;9139:24:::1;::::0;9104:5;;9149:11:::1;::::0;:13:::1;::::0;;::::1;::::0;::::1;::::0;;;;;;;;9104:5;9149:13;::::1;;::::0;::::1;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;::::0;::::1;;-1:-1:-1::0;9149:13:4;9139:9:::1;:24::i;:::-;9123:13;:11;:13::i;:::-;:40;9104:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;::::0;::::1;;-1:-1:-1::0;9104:60:4;9099:221:::1;;9181:52;;;;;;;;;;;;;;;;;;:15;:52::i;9099:221::-;9266:42;::::0;;-1:-1:-1;;;9266:42:4;;::::1;;::::0;::::1;::::0;;;;;;;::::1;::::0;;;;;;;;;;;;;::::1;9099:221;8848:479::o:0;2002:119:3:-;-1:-1:-1;;;;;2095:18:3;2068:7;2095:18;;;;;;;;;;;;2002:119::o;11027:644:4:-;11072:6;;;;11064:41;;;;;-1:-1:-1;;;11064:41:4;;;;;;;;;;;;-1:-1:-1;;;11064:41:4;;;;;;;;;;;;;;;11116:17;11136:10;11116:30;;11189:45;11228:5;11189:34;11207:15;;11189:13;:11;:13::i;:::-;:17;;:34::i;:45::-;11165:20;11175:9;11165;:20::i;:::-;:69;;11157:100;;;;;-1:-1:-1;;;11157:100:4;;;;;;;;;;;;-1:-1:-1;;;11157:100:4;;;;;;;;;;;;;;;11274:13;:11;:13::i;:::-;11270:297;;;11309:5;;;;;;;;;-1:-1:-1;;;;;11309:5:4;-1:-1:-1;;;;;11309:21:4;;:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;11309:23:4;11304:179;;11353:8;:6;:8::i;:::-;11418:5;;;;;;;;;-1:-1:-1;;;;;11418:5:4;-1:-1:-1;;;;;11418:21:4;;:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;11418:23:4;11410:57;;;;;-1:-1:-1;;;11410:57:4;;;;;;;;;;;;-1:-1:-1;;;11410:57:4;;;;;;;;;;;;;;;11497:20;:18;:20::i;:::-;11541:13;:11;:13::i;:::-;11540:14;11532:23;;;;11579:39;11594:9;11605;11616:1;11579:14;:39::i;:::-;11634:29;;;-1:-1:-1;;;;;11634:29:4;;;;;;;;;;;;;;;11027:644;:::o;8343:135::-;12756:13;:11;:13::i;:::-;:23;;;;-1:-1:-1;12773:6:4;;;;12756:23;12748:61;;;;;-1:-1:-1;;;12748:61:4;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;12748:61:4;;;;;;;;;;;;;;;8432:5:::1;::::0;8411:10:::1;::::0;-1:-1:-1;;;;;8432:5:4::1;:13;8411:10:::0;8453:16:::1;8411:10:::0;8453:9:::1;:16::i;4835:135::-:0;4883:13;4944:7;;;;;;;;;-1:-1:-1;;;;;4944:7:4;-1:-1:-1;;;;;4944:14:4;;:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4944:16:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;4944:16:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;4944:16:4;;;;;;-1:-1:-1;4944:16:4;;;;;;;;;;-1:-1:-1;4944:16:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4922:39;;;;;;-1:-1:-1;;;4922:39:4;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4922:39:4;;;;;;;;;;;;3009:30;;;;:::o;4871:216:3:-;4982:10;4956:4;5003:23;;;:11;:23;;;;;;;;-1:-1:-1;;;;;5003:32:3;;;;;;;;;;4956:4;;4973:84;;4994:7;;5003:53;;5040:15;5003:36;:53::i;5088:176:4:-;5216:7;;;;;-1:-1:-1;;;;;5216:7:4;5194:10;:30;5186:39;;;;;;5236:20;5243:4;5249:6;5236;:20::i;:::-;5088:176;;;;:::o;2334:173:3:-;2420:4;2437:40;2447:10;2459:9;2470:6;2437:9;:40::i;2893:42:4:-;;;-1:-1:-1;;;;;2893:42:4;;:::o;12598:107::-;12642:4;;12666:17;:15;:17::i;:::-;-1:-1:-1;;;;;12666:31:4;;;12659:38;;12598:107;:::o;5386:221::-;12883:13;:11;:13::i;:::-;12882:14;12874:51;;;;;-1:-1:-1;;;12874:51:4;;;;;;;;;;;;-1:-1:-1;;;12874:51:4;;;;;;;;;;;;;;;5480:7:::1;::::0;:55:::1;::::0;;-1:-1:-1;;;5480:55:4;;5501:10:::1;5480:55;::::0;::::1;::::0;5521:4:::1;5480:55:::0;;;;;;;;;;;;:7:::1;::::0;;::::1;-1:-1:-1::0;;;;;5480:7:4::1;::::0;:20:::1;::::0;:55;;;;;::::1;::::0;;;;;;;;;-1:-1:-1;5480:7:4;:55;::::1;;::::0;::::1;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;::::0;::::1;;-1:-1:-1::0;5480:55:4;5472:89:::1;;;::::0;;-1:-1:-1;;;5472:89:4;;::::1;;::::0;::::1;::::0;::::1;::::0;;;;-1:-1:-1;;;5472:89:4;;;;;;;;;;;;;::::1;;5572:27;5579:11;5592:6;5572;:27::i;:::-;5386:221:::0;;:::o;2860:24::-;;;-1:-1:-1;;;;;2860:24:4;;:::o;2570:143:3:-;-1:-1:-1;;;;;2678:18:3;;;2651:7;2678:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;2570:143::o;5902:439:4:-;5988:6;;5950:7;;;;5988:6;;5987:7;5979:74;;;;-1:-1:-1;;;5979:74:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6064:25;6070:10;6082:6;6064:5;:25::i;:::-;6100:23;6126:34;6137:22;;6126:6;:10;;:34;;;;:::i;:::-;6179:7;;:45;;;-1:-1:-1;;;6179:45:4;;6196:10;6179:45;;;;;;;;;;;;;;-1:-1:-1;6179:7:4;;;;-1:-1:-1;;;;;6179:7:4;;:16;;:45;;;;;;;;;;;;;;;-1:-1:-1;6179:7:4;:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6179:45:4;6171:54;;;;;;6252:7;;;;;-1:-1:-1;;;;;6252:7:4;;6262:15;;-1:-1:-1;5902:439:4;-1:-1:-1;;5902:439:4:o;8627:213::-;12756:13;:11;:13::i;:::-;:23;;;;-1:-1:-1;12773:6:4;;;;12756:23;12748:61;;;;;-1:-1:-1;;;12748:61:4;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;12748:61:4;;;;;;;;;;;;;;;8711:5:::1;;;;;;;;;-1:-1:-1::0;;;;;8711:5:4::1;-1:-1:-1::0;;;;;8711:11:4::1;;:13;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;::::0;::::1;;-1:-1:-1::0;8711:13:4;-1:-1:-1;;;;;8697:27:4::1;:10;:27;8689:95;;;;-1:-1:-1::0;;;8689:95:4::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8795:37;;;;;;;;;;;;;;-1:-1:-1::0;;;8795:37:4::1;;::::0;:15:::1;:37::i;10294:107::-:0;10338:4;10362:13;:11;:13::i;:::-;:31;;10388:5;10362:31;;;10379:6;;;;10378:7;10362:31;10355:38;;10294:107;:::o;8099:335:3:-;-1:-1:-1;;;;;8192:19:3;;8184:68;;;;-1:-1:-1;;;8184:68:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;8271:21:3;;8263:68;;;;-1:-1:-1;;;8263:68:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;8344:18:3;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:35;;;8395:31;;;;;;;;;;;;;;;;;8099:335;;;:::o;10409:610:4:-;10515:20;10538:19;10548:8;10538:9;:19::i;:::-;10515:42;;10568:21;10592:13;:11;:13::i;:::-;10616:6;:14;;-1:-1:-1;;10616:14:4;;;10568:37;-1:-1:-1;10641:20:4;10648:12;10641:6;:20::i;:::-;-1:-1:-1;10672:17:4;;-1:-1:-1;10692:31:4;:13;10710:12;10692:17;:31::i;:::-;10742:7;;:37;;;-1:-1:-1;;;10742:37:4;;-1:-1:-1;;;;;10742:37:4;;;;;;;;;;;;;;;10672:51;;-1:-1:-1;10742:7:4;;;;;;:16;;:37;;;;;;;;;;;;;;;-1:-1:-1;10742:7:4;:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;10742:37:4;10734:65;;;;;-1:-1:-1;;;10734:65:4;;;;;;;;;;;;-1:-1:-1;;;10734:65:4;;;;;;;;;;;;;;;10810:7;:28;;-1:-1:-1;;;;;;10810:28:4;;-1:-1:-1;;;;;10810:28:4;;;;;;;;;;;;;10849:22;:39;;;10907:7;;;;:20;10928:8;10946:4;10953:29;10849:39;10972:9;10953:18;:29::i;:::-;10907:76;;;;;;;;;;;;;-1:-1:-1;;;;;10907:76:4;;;;;;-1:-1:-1;;;;;10907:76:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;10907:76:4;10899:112;;;;;-1:-1:-1;;;10899:112:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;10409:610;;;;;;:::o;12007:237::-;12104:32;12120:4;12126:2;12130:5;12104:15;:32::i;:::-;12151:13;:11;:13::i;:::-;:23;;;;-1:-1:-1;12168:6:4;;;;12151:23;12147:90;;;12191:5;;:34;;;-1:-1:-1;;;12191:34:4;;-1:-1:-1;;;;;12191:34:4;;;;;;;;;;;;;;;;;;;;;;:5;;;;;:17;;:34;;;;;:5;;:34;;;;;;;:5;;:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12147:90;12007:237;;;:::o;1232:123:9:-;1290:7;1322:1;1317;:6;;1310:14;;;;-1:-1:-1;1342:5:9;;;1232:123::o;1424:141::-;1508:5;;;1531:6;;;;1524:14;;;12252:233:4;12337:28;12349:7;12358:6;12337:11;:28::i;:::-;12380:13;:11;:13::i;:::-;:23;;;;-1:-1:-1;12397:6:4;;;;12380:23;12376:102;;;12420:5;;:46;;;-1:-1:-1;;;12420:46:4;;-1:-1:-1;;;;;12420:46:4;;;;;;;:5;:46;;;;;;;;;;;;;;:5;;;:17;;:46;;;;;:5;;:46;;;;;;:5;;:46;;;;;;;;;;;;;;;;;;;;;;;;;;305:424:9;363:9;609:6;605:47;;-1:-1:-1;639:1:9;632:8;;605:47;-1:-1:-1;668:5:9;;;672:1;668;:5;:1;691:5;;;;;:10;684:18;;;818:295;876:7;1104:1;1100;:5;;;;;;;818:295;-1:-1:-1;;;818:295:9:o;9335:326:4:-;9419:5;;:13;;;-1:-1:-1;;;9419:13:4;;;;9403;;-1:-1:-1;;;;;9419:5:4;;:11;;:13;;;;;;;;;;;;;;:5;:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;9419:13:4;;-1:-1:-1;;;;;;9448:140:4;;;9493:10;9518:5;9538:7;9560:17;:15;:17::i;:::-;9448:140;;;;-1:-1:-1;;;;;9448:140:4;;;;;;;;;;;;;;;;-1:-1:-1;;;;;9448:140:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9599:5;;;;;;;;;-1:-1:-1;;;;;9599:5:4;-1:-1:-1;;;;;9599:10:4;;:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;9622:5:4;:31;;-1:-1:-1;;;;;;9622:31:4;;;-1:-1:-1;;;;9335:326:4:o;5615:183::-;12883:13;:11;:13::i;:::-;12882:14;12874:51;;;;;-1:-1:-1;;;12874:51:4;;;;;;;;;;;;-1:-1:-1;;;12874:51:4;;;;;;;;;;;;;;;5713:6:::1;::::0;::::1;;5705:48;;;::::0;;-1:-1:-1;;;5705:48:4;;::::1;;::::0;::::1;::::0;::::1;::::0;;;;::::1;::::0;;;;;;;;;;;;;::::1;;5764:26;5770:11;5783:6;5764:5;:26::i;5577:437:3:-:0;-1:-1:-1;;;;;5683:20:3;;5675:70;;;;-1:-1:-1;;;5675:70:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5764:23:3;;5756:71;;;;-1:-1:-1;;;5756:71:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5860:17:3;;:9;:17;;;;;;;;;;;:29;;5882:6;5860:21;:29::i;:::-;-1:-1:-1;;;;;5840:17:3;;;:9;:17;;;;;;;;;;;:49;;;;5923:20;;;;;;;:32;;5948:6;5923:24;:32::i;:::-;-1:-1:-1;;;;;5900:20:3;;;:9;:20;;;;;;;;;;;;:55;;;;5971:35;;;;;;;5900:20;;5971:35;;;;;;;;;;;;;5577:437;;;:::o;7345:314::-;-1:-1:-1;;;;;7428:21:3;;7420:67;;;;-1:-1:-1;;;7420:67:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7515:12;;:23;;7532:5;7515:16;:23::i;:::-;7500:12;:38;-1:-1:-1;;;;;7570:18:3;;:9;:18;;;;;;;;;;;:29;;7593:5;7570:22;:29::i;:::-;-1:-1:-1;;;;;7549:18:3;;:9;:18;;;;;;;;;;;:50;;;;7615:36;;;;;;;7549:9;;7615:36;;;;;;;;;;;7345:314;;:::o;11679:320:4:-;11764:28;11776:7;11785:6;11764:11;:28::i;:::-;11807:13;:11;:13::i;:::-;:23;;;;-1:-1:-1;11824:6:4;;;;11807:23;11803:189;;;11934:5;;:46;;;-1:-1:-1;;;11934:46:4;;:5;:46;;;;;;-1:-1:-1;;;;;11934:46:4;;;;;;;;;;;;;;;:5;;;;;:17;;:46;;;;;;;;;;:5;;:46;;;;;;;;;;6696:316:3;-1:-1:-1;;;;;6780:21:3;;6772:65;;;;;-1:-1:-1;;;6772:65:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;6865:12;;:24;;6882:6;6865:16;:24::i;:::-;6850:12;:39;-1:-1:-1;;;;;6921:18:3;;:9;:18;;;;;;;;;;;:30;;6944:6;6921:22;:30::i;:::-;-1:-1:-1;;;;;6900:18:3;;:9;:18;;;;;;;;;;;:51;;;;6967:37;;;;;;;6900:18;;:9;;6967:37;;;;;;;;;;6696:316;;:::o;-1:-1:-1:-;;;;;;;;:::o"
                    },
                    "gasEstimates": {
                        "creation": {
                            "codeDepositCost": "3021200",
                            "executionCost": "infinite",
                            "totalCost": "infinite"
                        },
                        "external": {
                            "acquisitionQuorum()": "1044",
                            "active()": "1057",
                            "allowance(address,address)": "1316",
                            "approve(address,uint256)": "infinite",
                            "balanceOf(address)": "1213",
                            "burn(uint256)": "infinite",
                            "cancelAcquisition()": "infinite",
                            "completeAcquisition()": "infinite",
                            "contestAcquisition()": "infinite",
                            "decimals()": "1125",
                            "decreaseAllowance(address,uint256)": "infinite",
                            "getPendingOffer()": "1148",
                            "getWrappedContract()": "1137",
                            "increaseAllowance(address,uint256)": "infinite",
                            "initiateAcquisition(uint256,address)": "infinite",
                            "licenseFeeRecipient()": "1104",
                            "migrate()": "infinite",
                            "migrationQuorum()": "1065",
                            "name()": "infinite",
                            "offer()": "1081",
                            "offerExists()": "1173",
                            "onTokenTransfer(address,uint256,bytes)": "infinite",
                            "symbol()": "infinite",
                            "totalSupply()": "1066",
                            "transfer(address,uint256)": "infinite",
                            "transferAndCall(address,uint256,bytes)": "infinite",
                            "transferFrom(address,address,uint256)": "infinite",
                            "unwrap(uint256)": "infinite",
                            "unwrapConversionFactor()": "1089",
                            "voteNo()": "infinite",
                            "voteYes()": "infinite",
                            "wasAcquired()": "2078",
                            "wrap(address,uint256)": "infinite"
                        },
                        "internal": {
                            "_burn(address,uint256)": "infinite",
                            "_mint(address,uint256)": "infinite",
                            "_transfer(address,address,uint256)": "infinite",
                            "dowrap(address,uint256)": "infinite",
                            "invertHoldings(address,address,uint256)": "infinite",
                            "killAcquisition(string memory)": "infinite"
                        }
                    },
                    "methodIdentifiers": {
                        "acquisitionQuorum()": "3549788a",
                        "active()": "02fb0c5e",
                        "allowance(address,address)": "dd62ed3e",
                        "approve(address,uint256)": "095ea7b3",
                        "balanceOf(address)": "70a08231",
                        "burn(uint256)": "42966c68",
                        "cancelAcquisition()": "e1b8c38e",
                        "completeAcquisition()": "141c7068",
                        "contestAcquisition()": "6f4b18df",
                        "decimals()": "313ce567",
                        "decreaseAllowance(address,uint256)": "a457c2d7",
                        "getPendingOffer()": "6467c09a",
                        "getWrappedContract()": "58047913",
                        "increaseAllowance(address,uint256)": "39509351",
                        "initiateAcquisition(uint256,address)": "49b210b7",
                        "licenseFeeRecipient()": "bb689472",
                        "migrate()": "8fd3ab80",
                        "migrationQuorum()": "9e8a9a5a",
                        "name()": "06fdde03",
                        "offer()": "c028df06",
                        "offerExists()": "bc1b1e7c",
                        "onTokenTransfer(address,uint256,bytes)": "a4c0ed36",
                        "symbol()": "95d89b41",
                        "totalSupply()": "18160ddd",
                        "transfer(address,uint256)": "a9059cbb",
                        "transferAndCall(address,uint256,bytes)": "4000aea0",
                        "transferFrom(address,address,uint256)": "23b872dd",
                        "unwrap(uint256)": "de0e9a3e",
                        "unwrapConversionFactor()": "0832e470",
                        "voteNo()": "41c12a70",
                        "voteYes()": "90cf581c",
                        "wasAcquired()": "ec6580e2",
                        "wrap(address,uint256)": "bf376c7a"
                    }
                },
                "metadata": "{\"compiler\":{\"version\":\"0.7.1+commit.f4a555be\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"wrappedToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"migrationQuorumInBIPS_\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"acquisitionQuorum_\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newContractAddress\",\"type\":\"address\"}],\"name\":\"MigrationSucceeded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"pricePerShare\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"offerContract\",\"type\":\"address\"}],\"name\":\"OfferCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"message\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"offerContract\",\"type\":\"address\"}],\"name\":\"OfferEnded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"acquisitionQuorum\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"active\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cancelAcquisition\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"completeAcquisition\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"contestAcquisition\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPendingOffer\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getWrappedContract\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"pricePerShare\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"}],\"name\":\"initiateAcquisition\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"licenseFeeRecipient\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrationQuorum\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"offer\",\"outputs\":[{\"internalType\":\"contract Acquisition\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"offerExists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onTokenTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"unwrap\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unwrapConversionFactor\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"voteNo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"voteYes\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"wasAcquired\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"shareholder\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"wrap\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Benjamin Rickenbacher, b.rickenbacher@intergga.chLuzius Meisser, luzius@meissereconomics.com\",\"details\":\"These tokens are based on the ERC20 standard and the open-zeppelin library. This is an ERC-20 token representing shares of CompanyName AG that are bound to a shareholder agreement that can be found at the URL defined in the constant 'terms' of the 'DraggableCompanyNameShares' contract. The agreement is partially enforced through the Swiss legal system, and partially enforced through this smart contract. In particular, this smart contract implements a drag-along clause which allows the majority of token holders to force the minority sell their shares along with them in case of an acquisition. That's why the tokens are called \\\"Draggable CompanyName AG Shares.\\\"\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See `IERC20.allowance`.\"},\"approve(address,uint256)\":{\"details\":\"See `IERC20.approve`. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See `IERC20.balanceOf`.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to `approve` that can be used as a mitigation for problems described in `IERC20.approve`. Emits an `Approval` event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to `approve` that can be used as a mitigation for problems described in `IERC20.approve`. Emits an `Approval` event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"initiateAcquisition(uint256,address)\":{\"details\":\"Function to start drag-along procedure  This can be called by anyone, but there is an upfront payment.\"},\"totalSupply()\":{\"details\":\"See `IERC20.totalSupply`.\"},\"transfer(address,uint256)\":{\"details\":\"See `IERC20.transfer`. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See `IERC20.transferFrom`. Emits an `Approval` event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of `ERC20`; Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `value`. - the caller must have allowance for `sender`'s tokens of at least `amount`.\"}},\"title\":\"CompanyName Shareholder Agreement\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"burn(uint256)\":{\"notice\":\"Burns both the token itself as well as the wrapped token! If you want to get out of the shareholder agreement, use unwrap after it has been deactivated by a majority vote or acquisition. Burning only works if wrapped token supports burning. Also, the exact meaning of this operation might depend on the circumstances. Burning and reussing the wrapped token does not free the sender from the legal obligations of the shareholder agreement.\"},\"constructor\":{\"notice\":\"CurrencyAddress specifies the currency used in acquisitions. The currency must be an ERC-20 token that returns true on successful transfers and throws an exception or returns false on failure. It can only be updated later if the currency supports the IMigratable interface.\"},\"unwrap(uint256)\":{\"notice\":\"Decrease the number of drag-along tokens. The user gets back their shares in return \"},\"wrap(address,uint256)\":{\"notice\":\"Increases the number of drag-along tokens. Requires minter to deposit an equal amount of share tokens \"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"c:/Users/luziu/Documents/aktionariat/contracts/src/ERC20Draggable.sol\":\"ERC20Draggable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"c:/Users/luziu/Documents/aktionariat/contracts/src/Acquisition.sol\":{\"keccak256\":\"0x2a804527c12b009dc8d2580a78a3d1163810b00d5d8f25642813171c6372627f\",\"license\":\"LicenseRef-Aktionariat\",\"urls\":[\"bzz-raw://a8b8a2efe3d409f8f90da295f8f5b29af3967fa457e5e01672bf085250676d98\",\"dweb:/ipfs/QmPdrrCNgYMpcQDy3BAEQKo8Fk6cPLCB4QuHRvHxruG6TU\"]},\"c:/Users/luziu/Documents/aktionariat/contracts/src/ERC20.sol\":{\"keccak256\":\"0x2fc989a10429560f03d7db1467e541b46c6f50e5c7a71761957016f795325880\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://95f1b0c5f0e807ec78bb8dc61d42627b63acc449c8e31938b84f27299a1fb6e9\",\"dweb:/ipfs/Qmf8cj2hDyNr7eLTFDdYiX3w6oZHtjCDcMBGV33qZNBngy\"]},\"c:/Users/luziu/Documents/aktionariat/contracts/src/ERC20Draggable.sol\":{\"keccak256\":\"0x51f0c088c30bdd5b81c567752600c4fa19f4eddcb9aec0f645fae0371445e073\",\"license\":\"LicenseRef-Aktionariat\",\"urls\":[\"bzz-raw://0e17c52adcd24d03c6cdbff2ef8fc69b61e7d425835c818c8940de046f585b4b\",\"dweb:/ipfs/QmXzFfoLnNJYi8UyxrVgU4CiPU5rKhcUWAVB2jf8XRDKYw\"]},\"c:/Users/luziu/Documents/aktionariat/contracts/src/IERC20.sol\":{\"keccak256\":\"0x6d0e89e1a724c13cc7dcc7184b8dcf0d46d6b5635b4ec024bb1fb69d36d87444\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40092507190092f77a521113ba3133441c76f63da097e38e587ca6e2603c6eb2\",\"dweb:/ipfs/QmeKTeVB1sND87Miju3k3as6f5cQcgLzbHc7vSREcjyQKC\"]},\"c:/Users/luziu/Documents/aktionariat/contracts/src/IERC677Receiver.sol\":{\"keccak256\":\"0x08574d3d2296c648c53d8175ffc992d22b77b7a2af4f26a3ad30bcfe67a56455\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a15e476ad8295470c052d149ce6ea8593174899a1995ff4ace6d3554fb1928c3\",\"dweb:/ipfs/QmT6wxjVrGALDukRDPi9ktfQ296jFC8o975ronUQNEhKQ9\"]},\"c:/Users/luziu/Documents/aktionariat/contracts/src/IMigratable.sol\":{\"keccak256\":\"0x5212714cd6ce722124bbb8c32282a4cd3b4a37fd9dd224e5ac54d99020c24c1b\",\"license\":\"LicenseRef-Aktionariat\",\"urls\":[\"bzz-raw://338eab542263cf438c99110de0f9b059b2de6894b3e44418e16d1051b4e0fb86\",\"dweb:/ipfs/Qmbs8VNthe4VLYBf3Bv9WFWC2HSNX9LyDLgG5VneXkzHnP\"]},\"c:/Users/luziu/Documents/aktionariat/contracts/src/SafeMath.sol\":{\"keccak256\":\"0x186349cbf7b3f8c5b04eb76e4e5dc9fd4d3c00952afc2e66923abc2947abc9df\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://480ddbf34395198eea8e779632d9f50d22319df148414522d8eed58972444c92\",\"dweb:/ipfs/QmbABPCuzoFN7uhGv2omkAGKSCc5Wh2Kof1ig3jzFTCKAd\"]}},\"version\":1}",
                "userdoc": {
                    "kind": "user",
                    "methods": {
                        "burn(uint256)": {
                            "notice": "Burns both the token itself as well as the wrapped token! If you want to get out of the shareholder agreement, use unwrap after it has been deactivated by a majority vote or acquisition. Burning only works if wrapped token supports burning. Also, the exact meaning of this operation might depend on the circumstances. Burning and reussing the wrapped token does not free the sender from the legal obligations of the shareholder agreement."
                        },
                        "constructor": {
                            "notice": "CurrencyAddress specifies the currency used in acquisitions. The currency must be an ERC-20 token that returns true on successful transfers and throws an exception or returns false on failure. It can only be updated later if the currency supports the IMigratable interface."
                        },
                        "unwrap(uint256)": {
                            "notice": "Decrease the number of drag-along tokens. The user gets back their shares in return "
                        },
                        "wrap(address,uint256)": {
                            "notice": "Increases the number of drag-along tokens. Requires minter to deposit an equal amount of share tokens "
                        }
                    },
                    "version": 1
                }
            },
            "IBurnable": {
                "abi": [
                    {
                        "inputs": [
                            {
                                "internalType": "uint256",
                                "name": "",
                                "type": "uint256"
                            }
                        ],
                        "name": "burn",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    }
                ],
                "devdoc": {
                    "kind": "dev",
                    "methods": {},
                    "version": 1
                },
                "evm": {
                    "bytecode": {
                        "linkReferences": {},
                        "object": "",
                        "opcodes": "",
                        "sourceMap": ""
                    },
                    "deployedBytecode": {
                        "immutableReferences": {},
                        "linkReferences": {},
                        "object": "",
                        "opcodes": "",
                        "sourceMap": ""
                    },
                    "gasEstimates": null,
                    "methodIdentifiers": {
                        "burn(uint256)": "42966c68"
                    }
                },
                "metadata": "{\"compiler\":{\"version\":\"0.7.1+commit.f4a555be\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"c:/Users/luziu/Documents/aktionariat/contracts/src/ERC20Draggable.sol\":\"IBurnable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"c:/Users/luziu/Documents/aktionariat/contracts/src/Acquisition.sol\":{\"keccak256\":\"0x2a804527c12b009dc8d2580a78a3d1163810b00d5d8f25642813171c6372627f\",\"license\":\"LicenseRef-Aktionariat\",\"urls\":[\"bzz-raw://a8b8a2efe3d409f8f90da295f8f5b29af3967fa457e5e01672bf085250676d98\",\"dweb:/ipfs/QmPdrrCNgYMpcQDy3BAEQKo8Fk6cPLCB4QuHRvHxruG6TU\"]},\"c:/Users/luziu/Documents/aktionariat/contracts/src/ERC20.sol\":{\"keccak256\":\"0x2fc989a10429560f03d7db1467e541b46c6f50e5c7a71761957016f795325880\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://95f1b0c5f0e807ec78bb8dc61d42627b63acc449c8e31938b84f27299a1fb6e9\",\"dweb:/ipfs/Qmf8cj2hDyNr7eLTFDdYiX3w6oZHtjCDcMBGV33qZNBngy\"]},\"c:/Users/luziu/Documents/aktionariat/contracts/src/ERC20Draggable.sol\":{\"keccak256\":\"0x51f0c088c30bdd5b81c567752600c4fa19f4eddcb9aec0f645fae0371445e073\",\"license\":\"LicenseRef-Aktionariat\",\"urls\":[\"bzz-raw://0e17c52adcd24d03c6cdbff2ef8fc69b61e7d425835c818c8940de046f585b4b\",\"dweb:/ipfs/QmXzFfoLnNJYi8UyxrVgU4CiPU5rKhcUWAVB2jf8XRDKYw\"]},\"c:/Users/luziu/Documents/aktionariat/contracts/src/IERC20.sol\":{\"keccak256\":\"0x6d0e89e1a724c13cc7dcc7184b8dcf0d46d6b5635b4ec024bb1fb69d36d87444\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40092507190092f77a521113ba3133441c76f63da097e38e587ca6e2603c6eb2\",\"dweb:/ipfs/QmeKTeVB1sND87Miju3k3as6f5cQcgLzbHc7vSREcjyQKC\"]},\"c:/Users/luziu/Documents/aktionariat/contracts/src/IERC677Receiver.sol\":{\"keccak256\":\"0x08574d3d2296c648c53d8175ffc992d22b77b7a2af4f26a3ad30bcfe67a56455\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a15e476ad8295470c052d149ce6ea8593174899a1995ff4ace6d3554fb1928c3\",\"dweb:/ipfs/QmT6wxjVrGALDukRDPi9ktfQ296jFC8o975ronUQNEhKQ9\"]},\"c:/Users/luziu/Documents/aktionariat/contracts/src/IMigratable.sol\":{\"keccak256\":\"0x5212714cd6ce722124bbb8c32282a4cd3b4a37fd9dd224e5ac54d99020c24c1b\",\"license\":\"LicenseRef-Aktionariat\",\"urls\":[\"bzz-raw://338eab542263cf438c99110de0f9b059b2de6894b3e44418e16d1051b4e0fb86\",\"dweb:/ipfs/Qmbs8VNthe4VLYBf3Bv9WFWC2HSNX9LyDLgG5VneXkzHnP\"]},\"c:/Users/luziu/Documents/aktionariat/contracts/src/SafeMath.sol\":{\"keccak256\":\"0x186349cbf7b3f8c5b04eb76e4e5dc9fd4d3c00952afc2e66923abc2947abc9df\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://480ddbf34395198eea8e779632d9f50d22319df148414522d8eed58972444c92\",\"dweb:/ipfs/QmbABPCuzoFN7uhGv2omkAGKSCc5Wh2Kof1ig3jzFTCKAd\"]}},\"version\":1}",
                "userdoc": {
                    "kind": "user",
                    "methods": {},
                    "version": 1
                }
            },
            "IShares": {
                "abi": [
                    {
                        "inputs": [],
                        "name": "totalShares",
                        "outputs": [
                            {
                                "internalType": "uint256",
                                "name": "",
                                "type": "uint256"
                            }
                        ],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    }
                ],
                "devdoc": {
                    "kind": "dev",
                    "methods": {},
                    "version": 1
                },
                "evm": {
                    "bytecode": {
                        "linkReferences": {},
                        "object": "",
                        "opcodes": "",
                        "sourceMap": ""
                    },
                    "deployedBytecode": {
                        "immutableReferences": {},
                        "linkReferences": {},
                        "object": "",
                        "opcodes": "",
                        "sourceMap": ""
                    },
                    "gasEstimates": null,
                    "methodIdentifiers": {
                        "totalShares()": "3a98ef39"
                    }
                },
                "metadata": "{\"compiler\":{\"version\":\"0.7.1+commit.f4a555be\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"totalShares\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"c:/Users/luziu/Documents/aktionariat/contracts/src/ERC20Draggable.sol\":\"IShares\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"c:/Users/luziu/Documents/aktionariat/contracts/src/Acquisition.sol\":{\"keccak256\":\"0x2a804527c12b009dc8d2580a78a3d1163810b00d5d8f25642813171c6372627f\",\"license\":\"LicenseRef-Aktionariat\",\"urls\":[\"bzz-raw://a8b8a2efe3d409f8f90da295f8f5b29af3967fa457e5e01672bf085250676d98\",\"dweb:/ipfs/QmPdrrCNgYMpcQDy3BAEQKo8Fk6cPLCB4QuHRvHxruG6TU\"]},\"c:/Users/luziu/Documents/aktionariat/contracts/src/ERC20.sol\":{\"keccak256\":\"0x2fc989a10429560f03d7db1467e541b46c6f50e5c7a71761957016f795325880\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://95f1b0c5f0e807ec78bb8dc61d42627b63acc449c8e31938b84f27299a1fb6e9\",\"dweb:/ipfs/Qmf8cj2hDyNr7eLTFDdYiX3w6oZHtjCDcMBGV33qZNBngy\"]},\"c:/Users/luziu/Documents/aktionariat/contracts/src/ERC20Draggable.sol\":{\"keccak256\":\"0x51f0c088c30bdd5b81c567752600c4fa19f4eddcb9aec0f645fae0371445e073\",\"license\":\"LicenseRef-Aktionariat\",\"urls\":[\"bzz-raw://0e17c52adcd24d03c6cdbff2ef8fc69b61e7d425835c818c8940de046f585b4b\",\"dweb:/ipfs/QmXzFfoLnNJYi8UyxrVgU4CiPU5rKhcUWAVB2jf8XRDKYw\"]},\"c:/Users/luziu/Documents/aktionariat/contracts/src/IERC20.sol\":{\"keccak256\":\"0x6d0e89e1a724c13cc7dcc7184b8dcf0d46d6b5635b4ec024bb1fb69d36d87444\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40092507190092f77a521113ba3133441c76f63da097e38e587ca6e2603c6eb2\",\"dweb:/ipfs/QmeKTeVB1sND87Miju3k3as6f5cQcgLzbHc7vSREcjyQKC\"]},\"c:/Users/luziu/Documents/aktionariat/contracts/src/IERC677Receiver.sol\":{\"keccak256\":\"0x08574d3d2296c648c53d8175ffc992d22b77b7a2af4f26a3ad30bcfe67a56455\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a15e476ad8295470c052d149ce6ea8593174899a1995ff4ace6d3554fb1928c3\",\"dweb:/ipfs/QmT6wxjVrGALDukRDPi9ktfQ296jFC8o975ronUQNEhKQ9\"]},\"c:/Users/luziu/Documents/aktionariat/contracts/src/IMigratable.sol\":{\"keccak256\":\"0x5212714cd6ce722124bbb8c32282a4cd3b4a37fd9dd224e5ac54d99020c24c1b\",\"license\":\"LicenseRef-Aktionariat\",\"urls\":[\"bzz-raw://338eab542263cf438c99110de0f9b059b2de6894b3e44418e16d1051b4e0fb86\",\"dweb:/ipfs/Qmbs8VNthe4VLYBf3Bv9WFWC2HSNX9LyDLgG5VneXkzHnP\"]},\"c:/Users/luziu/Documents/aktionariat/contracts/src/SafeMath.sol\":{\"keccak256\":\"0x186349cbf7b3f8c5b04eb76e4e5dc9fd4d3c00952afc2e66923abc2947abc9df\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://480ddbf34395198eea8e779632d9f50d22319df148414522d8eed58972444c92\",\"dweb:/ipfs/QmbABPCuzoFN7uhGv2omkAGKSCc5Wh2Kof1ig3jzFTCKAd\"]}},\"version\":1}",
                "userdoc": {
                    "kind": "user",
                    "methods": {},
                    "version": 1
                }
            }
        },
        "c:/Users/luziu/Documents/aktionariat/contracts/src/ERC20Recoverable.sol": {
            "ERC20Recoverable": {
                "abi": [
                    {
                        "anonymous": false,
                        "inputs": [
                            {
                                "indexed": true,
                                "internalType": "address",
                                "name": "owner",
                                "type": "address"
                            },
                            {
                                "indexed": true,
                                "internalType": "address",
                                "name": "spender",
                                "type": "address"
                            },
                            {
                                "indexed": false,
                                "internalType": "uint256",
                                "name": "value",
                                "type": "uint256"
                            }
                        ],
                        "name": "Approval",
                        "type": "event"
                    },
                    {
                        "anonymous": false,
                        "inputs": [
                            {
                                "indexed": true,
                                "internalType": "address",
                                "name": "lostAddress",
                                "type": "address"
                            },
                            {
                                "indexed": false,
                                "internalType": "uint256",
                                "name": "collateral",
                                "type": "uint256"
                            }
                        ],
                        "name": "ClaimCleared",
                        "type": "event"
                    },
                    {
                        "anonymous": false,
                        "inputs": [
                            {
                                "indexed": true,
                                "internalType": "address",
                                "name": "lostAddress",
                                "type": "address"
                            },
                            {
                                "indexed": true,
                                "internalType": "address",
                                "name": "claimant",
                                "type": "address"
                            },
                            {
                                "indexed": false,
                                "internalType": "uint256",
                                "name": "collateral",
                                "type": "uint256"
                            }
                        ],
                        "name": "ClaimDeleted",
                        "type": "event"
                    },
                    {
                        "anonymous": false,
                        "inputs": [
                            {
                                "indexed": true,
                                "internalType": "address",
                                "name": "lostAddress",
                                "type": "address"
                            },
                            {
                                "indexed": true,
                                "internalType": "address",
                                "name": "claimant",
                                "type": "address"
                            },
                            {
                                "indexed": false,
                                "internalType": "uint256",
                                "name": "balance",
                                "type": "uint256"
                            }
                        ],
                        "name": "ClaimMade",
                        "type": "event"
                    },
                    {
                        "anonymous": false,
                        "inputs": [
                            {
                                "indexed": false,
                                "internalType": "uint256",
                                "name": "newClaimPeriodInDays",
                                "type": "uint256"
                            }
                        ],
                        "name": "ClaimPeriodChanged",
                        "type": "event"
                    },
                    {
                        "anonymous": false,
                        "inputs": [
                            {
                                "indexed": true,
                                "internalType": "address",
                                "name": "lostAddress",
                                "type": "address"
                            },
                            {
                                "indexed": true,
                                "internalType": "address",
                                "name": "claimant",
                                "type": "address"
                            },
                            {
                                "indexed": false,
                                "internalType": "uint256",
                                "name": "collateral",
                                "type": "uint256"
                            }
                        ],
                        "name": "ClaimResolved",
                        "type": "event"
                    },
                    {
                        "anonymous": false,
                        "inputs": [
                            {
                                "indexed": false,
                                "internalType": "address",
                                "name": "newCustomCollateralAddress",
                                "type": "address"
                            },
                            {
                                "indexed": false,
                                "internalType": "uint256",
                                "name": "newCustomCollareralRate",
                                "type": "uint256"
                            }
                        ],
                        "name": "CustomClaimCollateralChanged",
                        "type": "event"
                    },
                    {
                        "anonymous": false,
                        "inputs": [
                            {
                                "indexed": true,
                                "internalType": "address",
                                "name": "from",
                                "type": "address"
                            },
                            {
                                "indexed": true,
                                "internalType": "address",
                                "name": "to",
                                "type": "address"
                            },
                            {
                                "indexed": false,
                                "internalType": "uint256",
                                "name": "value",
                                "type": "uint256"
                            }
                        ],
                        "name": "Transfer",
                        "type": "event"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "owner",
                                "type": "address"
                            },
                            {
                                "internalType": "address",
                                "name": "spender",
                                "type": "address"
                            }
                        ],
                        "name": "allowance",
                        "outputs": [
                            {
                                "internalType": "uint256",
                                "name": "",
                                "type": "uint256"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "spender",
                                "type": "address"
                            },
                            {
                                "internalType": "uint256",
                                "name": "value",
                                "type": "uint256"
                            }
                        ],
                        "name": "approve",
                        "outputs": [
                            {
                                "internalType": "bool",
                                "name": "",
                                "type": "bool"
                            }
                        ],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "account",
                                "type": "address"
                            }
                        ],
                        "name": "balanceOf",
                        "outputs": [
                            {
                                "internalType": "uint256",
                                "name": "",
                                "type": "uint256"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "inputs": [],
                        "name": "claimPeriod",
                        "outputs": [
                            {
                                "internalType": "uint256",
                                "name": "",
                                "type": "uint256"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "",
                                "type": "address"
                            }
                        ],
                        "name": "claims",
                        "outputs": [
                            {
                                "internalType": "address",
                                "name": "claimant",
                                "type": "address"
                            },
                            {
                                "internalType": "uint256",
                                "name": "collateral",
                                "type": "uint256"
                            },
                            {
                                "internalType": "uint256",
                                "name": "timestamp",
                                "type": "uint256"
                            },
                            {
                                "internalType": "address",
                                "name": "currencyUsed",
                                "type": "address"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "inputs": [],
                        "name": "clearClaim",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "inputs": [],
                        "name": "customCollateralAddress",
                        "outputs": [
                            {
                                "internalType": "address",
                                "name": "",
                                "type": "address"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "inputs": [],
                        "name": "customCollateralRate",
                        "outputs": [
                            {
                                "internalType": "uint256",
                                "name": "",
                                "type": "uint256"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "inputs": [],
                        "name": "decimals",
                        "outputs": [
                            {
                                "internalType": "uint8",
                                "name": "",
                                "type": "uint8"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "collateralType",
                                "type": "address"
                            },
                            {
                                "internalType": "address",
                                "name": "lostAddress",
                                "type": "address"
                            }
                        ],
                        "name": "declareLost",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "spender",
                                "type": "address"
                            },
                            {
                                "internalType": "uint256",
                                "name": "subtractedValue",
                                "type": "uint256"
                            }
                        ],
                        "name": "decreaseAllowance",
                        "outputs": [
                            {
                                "internalType": "bool",
                                "name": "",
                                "type": "bool"
                            }
                        ],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "lostAddress",
                                "type": "address"
                            }
                        ],
                        "name": "deleteClaim",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "inputs": [],
                        "name": "getClaimDeleter",
                        "outputs": [
                            {
                                "internalType": "address",
                                "name": "",
                                "type": "address"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "lostAddress",
                                "type": "address"
                            }
                        ],
                        "name": "getClaimant",
                        "outputs": [
                            {
                                "internalType": "address",
                                "name": "",
                                "type": "address"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "lostAddress",
                                "type": "address"
                            }
                        ],
                        "name": "getCollateral",
                        "outputs": [
                            {
                                "internalType": "uint256",
                                "name": "",
                                "type": "uint256"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "collateralType",
                                "type": "address"
                            }
                        ],
                        "name": "getCollateralRate",
                        "outputs": [
                            {
                                "internalType": "uint256",
                                "name": "",
                                "type": "uint256"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "lostAddress",
                                "type": "address"
                            }
                        ],
                        "name": "getCollateralType",
                        "outputs": [
                            {
                                "internalType": "address",
                                "name": "",
                                "type": "address"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "lostAddress",
                                "type": "address"
                            }
                        ],
                        "name": "getTimeStamp",
                        "outputs": [
                            {
                                "internalType": "uint256",
                                "name": "",
                                "type": "uint256"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "spender",
                                "type": "address"
                            },
                            {
                                "internalType": "uint256",
                                "name": "addedValue",
                                "type": "uint256"
                            }
                        ],
                        "name": "increaseAllowance",
                        "outputs": [
                            {
                                "internalType": "bool",
                                "name": "",
                                "type": "bool"
                            }
                        ],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "target",
                                "type": "address"
                            }
                        ],
                        "name": "isRecoveryEnabled",
                        "outputs": [
                            {
                                "internalType": "bool",
                                "name": "",
                                "type": "bool"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "inputs": [],
                        "name": "name",
                        "outputs": [
                            {
                                "internalType": "string",
                                "name": "",
                                "type": "string"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "lostAddress",
                                "type": "address"
                            }
                        ],
                        "name": "recover",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "",
                                "type": "address"
                            }
                        ],
                        "name": "recoveryDisabled",
                        "outputs": [
                            {
                                "internalType": "bool",
                                "name": "",
                                "type": "bool"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "bool",
                                "name": "enabled",
                                "type": "bool"
                            }
                        ],
                        "name": "setRecoverable",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "inputs": [],
                        "name": "symbol",
                        "outputs": [
                            {
                                "internalType": "string",
                                "name": "",
                                "type": "string"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "inputs": [],
                        "name": "totalSupply",
                        "outputs": [
                            {
                                "internalType": "uint256",
                                "name": "",
                                "type": "uint256"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "recipient",
                                "type": "address"
                            },
                            {
                                "internalType": "uint256",
                                "name": "amount",
                                "type": "uint256"
                            }
                        ],
                        "name": "transfer",
                        "outputs": [
                            {
                                "internalType": "bool",
                                "name": "",
                                "type": "bool"
                            }
                        ],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "recipient",
                                "type": "address"
                            },
                            {
                                "internalType": "uint256",
                                "name": "amount",
                                "type": "uint256"
                            },
                            {
                                "internalType": "bytes",
                                "name": "data",
                                "type": "bytes"
                            }
                        ],
                        "name": "transferAndCall",
                        "outputs": [
                            {
                                "internalType": "bool",
                                "name": "",
                                "type": "bool"
                            }
                        ],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "sender",
                                "type": "address"
                            },
                            {
                                "internalType": "address",
                                "name": "recipient",
                                "type": "address"
                            },
                            {
                                "internalType": "uint256",
                                "name": "amount",
                                "type": "uint256"
                            }
                        ],
                        "name": "transferFrom",
                        "outputs": [
                            {
                                "internalType": "bool",
                                "name": "",
                                "type": "bool"
                            }
                        ],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    }
                ],
                "devdoc": {
                    "kind": "dev",
                    "methods": {
                        "allowance(address,address)": {
                            "details": "See `IERC20.allowance`."
                        },
                        "approve(address,uint256)": {
                            "details": "See `IERC20.approve`. Requirements: - `spender` cannot be the zero address."
                        },
                        "balanceOf(address)": {
                            "details": "See `IERC20.balanceOf`."
                        },
                        "decreaseAllowance(address,uint256)": {
                            "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to `approve` that can be used as a mitigation for problems described in `IERC20.approve`. Emits an `Approval` event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
                        },
                        "increaseAllowance(address,uint256)": {
                            "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to `approve` that can be used as a mitigation for problems described in `IERC20.approve`. Emits an `Approval` event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
                        },
                        "totalSupply()": {
                            "details": "See `IERC20.totalSupply`."
                        },
                        "transfer(address,uint256)": {
                            "details": "See `IERC20.transfer`. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
                        },
                        "transferFrom(address,address,uint256)": {
                            "details": "See `IERC20.transferFrom`. Emits an `Approval` event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of `ERC20`; Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `value`. - the caller must have allowance for `sender`'s tokens of at least `amount`."
                        }
                    },
                    "title": "Recoverable In case of tokens that represent real-world assets such as shares of a company, one needs a way to handle lost private keys. With physical certificates, courts can declare share certificates as invalid so the company can issue replacements. Here, we want a solution that does not depend on third parties to resolve such cases. Instead, when someone has lost a private key, he can use the declareLost function to post a deposit and claim that the shares assigned to a specific address are lost. To prevent front running, a commit reveal scheme is used. If he actually is the owner of the shares, he needs to wait for a certain period and can then reclaim the lost shares as well as the deposit. If he is an attacker trying to claim shares belonging to someone else, he risks losing the deposit as it can be claimed at anytime by the rightful owner. Furthermore, if \"getClaimDeleter\" is defined in the subclass, the returned address is allowed to delete claims, returning the collateral. This can help to prevent obvious cases of abuse of the claim function.",
                    "version": 1
                },
                "evm": {
                    "bytecode": {
                        "linkReferences": {},
                        "object": "",
                        "opcodes": "",
                        "sourceMap": ""
                    },
                    "deployedBytecode": {
                        "immutableReferences": {},
                        "linkReferences": {},
                        "object": "",
                        "opcodes": "",
                        "sourceMap": ""
                    },
                    "gasEstimates": null,
                    "methodIdentifiers": {
                        "allowance(address,address)": "dd62ed3e",
                        "approve(address,uint256)": "095ea7b3",
                        "balanceOf(address)": "70a08231",
                        "claimPeriod()": "7dc2cd98",
                        "claims(address)": "c6788bdd",
                        "clearClaim()": "6b03ed5f",
                        "customCollateralAddress()": "0c6f0e5d",
                        "customCollateralRate()": "60918117",
                        "decimals()": "313ce567",
                        "declareLost(address,address)": "26773ddd",
                        "decreaseAllowance(address,uint256)": "a457c2d7",
                        "deleteClaim(address)": "32a7ae95",
                        "getClaimDeleter()": "2a0a4ed5",
                        "getClaimant(address)": "1e3b9de5",
                        "getCollateral(address)": "9b56d6c9",
                        "getCollateralRate(address)": "77e071ad",
                        "getCollateralType(address)": "3bcc45ba",
                        "getTimeStamp(address)": "eb470ebf",
                        "increaseAllowance(address,uint256)": "39509351",
                        "isRecoveryEnabled(address)": "a3ec1883",
                        "name()": "06fdde03",
                        "recover(address)": "0cd865ec",
                        "recoveryDisabled(address)": "b40e80d1",
                        "setRecoverable(bool)": "6427ed97",
                        "symbol()": "95d89b41",
                        "totalSupply()": "18160ddd",
                        "transfer(address,uint256)": "a9059cbb",
                        "transferAndCall(address,uint256,bytes)": "4000aea0",
                        "transferFrom(address,address,uint256)": "23b872dd"
                    }
                },
                "metadata": "{\"compiler\":{\"version\":\"0.7.1+commit.f4a555be\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"lostAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"collateral\",\"type\":\"uint256\"}],\"name\":\"ClaimCleared\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"lostAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"claimant\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"collateral\",\"type\":\"uint256\"}],\"name\":\"ClaimDeleted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"lostAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"claimant\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"name\":\"ClaimMade\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newClaimPeriodInDays\",\"type\":\"uint256\"}],\"name\":\"ClaimPeriodChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"lostAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"claimant\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"collateral\",\"type\":\"uint256\"}],\"name\":\"ClaimResolved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newCustomCollateralAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newCustomCollareralRate\",\"type\":\"uint256\"}],\"name\":\"CustomClaimCollateralChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimPeriod\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"claims\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"claimant\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"collateral\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"currencyUsed\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"clearClaim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"customCollateralAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"customCollateralRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"collateralType\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"lostAddress\",\"type\":\"address\"}],\"name\":\"declareLost\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"lostAddress\",\"type\":\"address\"}],\"name\":\"deleteClaim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getClaimDeleter\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"lostAddress\",\"type\":\"address\"}],\"name\":\"getClaimant\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"lostAddress\",\"type\":\"address\"}],\"name\":\"getCollateral\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"collateralType\",\"type\":\"address\"}],\"name\":\"getCollateralRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"lostAddress\",\"type\":\"address\"}],\"name\":\"getCollateralType\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"lostAddress\",\"type\":\"address\"}],\"name\":\"getTimeStamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"isRecoveryEnabled\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"lostAddress\",\"type\":\"address\"}],\"name\":\"recover\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"recoveryDisabled\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"enabled\",\"type\":\"bool\"}],\"name\":\"setRecoverable\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See `IERC20.allowance`.\"},\"approve(address,uint256)\":{\"details\":\"See `IERC20.approve`. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See `IERC20.balanceOf`.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to `approve` that can be used as a mitigation for problems described in `IERC20.approve`. Emits an `Approval` event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to `approve` that can be used as a mitigation for problems described in `IERC20.approve`. Emits an `Approval` event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"totalSupply()\":{\"details\":\"See `IERC20.totalSupply`.\"},\"transfer(address,uint256)\":{\"details\":\"See `IERC20.transfer`. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See `IERC20.transferFrom`. Emits an `Approval` event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of `ERC20`; Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `value`. - the caller must have allowance for `sender`'s tokens of at least `amount`.\"}},\"title\":\"Recoverable In case of tokens that represent real-world assets such as shares of a company, one needs a way to handle lost private keys. With physical certificates, courts can declare share certificates as invalid so the company can issue replacements. Here, we want a solution that does not depend on third parties to resolve such cases. Instead, when someone has lost a private key, he can use the declareLost function to post a deposit and claim that the shares assigned to a specific address are lost. To prevent front running, a commit reveal scheme is used. If he actually is the owner of the shares, he needs to wait for a certain period and can then reclaim the lost shares as well as the deposit. If he is an attacker trying to claim shares belonging to someone else, he risks losing the deposit as it can be claimed at anytime by the rightful owner. Furthermore, if \\\"getClaimDeleter\\\" is defined in the subclass, the returned address is allowed to delete claims, returning the collateral. This can help to prevent obvious cases of abuse of the claim function.\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"clearClaim()\":{\"notice\":\"Clears a claim after the key has been found again and assigns the collateral to the \\\"lost\\\" address. This is the price an adverse claimer pays for filing a false claim and makes it risky to do so.\"},\"declareLost(address,address)\":{\"notice\":\"Anyone can declare that the private key to a certain address was lost by calling declareLost providing a deposit/collateral. There are three possibilities of what can happen with the claim: 1) The claim period expires and the claimant can get the deposit and the shares back by calling recover 2) The \\\"lost\\\" private key is used at any time to call clearClaim. In that case, the claim is deleted and    the deposit sent to the shareholder (the owner of the private key). It is recommended to call recover    whenever someone transfers funds to let claims be resolved automatically when the \\\"lost\\\" private key is    used again. 3) The owner deletes the claim and assigns the deposit to the claimant. This is intended to be used to resolve    disputes. Generally, using this function implies that you have to trust the issuer of the tokens to handle    the situation well. As a rule of thumb, the contract owner should assume the owner of the lost address to be the    rightful owner of the deposit. It is highly recommended that the owner observes the claims made and informs the owners of the claimed addresses whenever a claim is made for their address (this of course is only possible if they are known to the owner, e.g. through a shareholder register). To prevent frontrunning attacks, a claim can only be made if the information revealed when calling \\\"declareLost\\\" was previously commited using the \\\"prepareClaim\\\" function.\"},\"deleteClaim(address)\":{\"notice\":\"This function is to be executed by the claim deleter only in case a dispute needs to be resolved manually.\"},\"getCollateralRate(address)\":{\"notice\":\"Returns the collateral rate for the given collateral type and 0 if that type of collateral is not accepted. By default, only the token itself is accepted at a rate of 1:1. Subclasses should override this method if they want to add additional types of collateral.\"},\"isRecoveryEnabled(address)\":{\"notice\":\"Some users might want to disable claims for their address completely. For example if they use a deep cold storage solution or paper wallet.\"},\"recover(address)\":{\"notice\":\"After the claim period has passed, the claimant can call this function to send the tokens on the lost address as well as the collateral to himself.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"c:/Users/luziu/Documents/aktionariat/contracts/src/ERC20Recoverable.sol\":\"ERC20Recoverable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"c:/Users/luziu/Documents/aktionariat/contracts/src/ERC20.sol\":{\"keccak256\":\"0x2fc989a10429560f03d7db1467e541b46c6f50e5c7a71761957016f795325880\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://95f1b0c5f0e807ec78bb8dc61d42627b63acc449c8e31938b84f27299a1fb6e9\",\"dweb:/ipfs/Qmf8cj2hDyNr7eLTFDdYiX3w6oZHtjCDcMBGV33qZNBngy\"]},\"c:/Users/luziu/Documents/aktionariat/contracts/src/ERC20Recoverable.sol\":{\"keccak256\":\"0xd5af4f8143b6e02f036d8389b19a59c3c0a7ee00952844dca5ecb039f391170c\",\"license\":\"LicenseRef-Aktionariat\",\"urls\":[\"bzz-raw://11adb0e721764bf6ff35e1dd4d2722d5921d4c89ceb6faea4a18b5ff29fb9f3b\",\"dweb:/ipfs/Qmd9MK19Q2b5DXgYK5GDM9xQ3S33ayVQ8rN6GouD4k8p6N\"]},\"c:/Users/luziu/Documents/aktionariat/contracts/src/IERC20.sol\":{\"keccak256\":\"0x6d0e89e1a724c13cc7dcc7184b8dcf0d46d6b5635b4ec024bb1fb69d36d87444\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40092507190092f77a521113ba3133441c76f63da097e38e587ca6e2603c6eb2\",\"dweb:/ipfs/QmeKTeVB1sND87Miju3k3as6f5cQcgLzbHc7vSREcjyQKC\"]},\"c:/Users/luziu/Documents/aktionariat/contracts/src/IERC677Receiver.sol\":{\"keccak256\":\"0x08574d3d2296c648c53d8175ffc992d22b77b7a2af4f26a3ad30bcfe67a56455\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a15e476ad8295470c052d149ce6ea8593174899a1995ff4ace6d3554fb1928c3\",\"dweb:/ipfs/QmT6wxjVrGALDukRDPi9ktfQ296jFC8o975ronUQNEhKQ9\"]},\"c:/Users/luziu/Documents/aktionariat/contracts/src/SafeMath.sol\":{\"keccak256\":\"0x186349cbf7b3f8c5b04eb76e4e5dc9fd4d3c00952afc2e66923abc2947abc9df\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://480ddbf34395198eea8e779632d9f50d22319df148414522d8eed58972444c92\",\"dweb:/ipfs/QmbABPCuzoFN7uhGv2omkAGKSCc5Wh2Kof1ig3jzFTCKAd\"]}},\"version\":1}",
                "userdoc": {
                    "kind": "user",
                    "methods": {
                        "clearClaim()": {
                            "notice": "Clears a claim after the key has been found again and assigns the collateral to the \"lost\" address. This is the price an adverse claimer pays for filing a false claim and makes it risky to do so."
                        },
                        "declareLost(address,address)": {
                            "notice": "Anyone can declare that the private key to a certain address was lost by calling declareLost providing a deposit/collateral. There are three possibilities of what can happen with the claim: 1) The claim period expires and the claimant can get the deposit and the shares back by calling recover 2) The \"lost\" private key is used at any time to call clearClaim. In that case, the claim is deleted and    the deposit sent to the shareholder (the owner of the private key). It is recommended to call recover    whenever someone transfers funds to let claims be resolved automatically when the \"lost\" private key is    used again. 3) The owner deletes the claim and assigns the deposit to the claimant. This is intended to be used to resolve    disputes. Generally, using this function implies that you have to trust the issuer of the tokens to handle    the situation well. As a rule of thumb, the contract owner should assume the owner of the lost address to be the    rightful owner of the deposit. It is highly recommended that the owner observes the claims made and informs the owners of the claimed addresses whenever a claim is made for their address (this of course is only possible if they are known to the owner, e.g. through a shareholder register). To prevent frontrunning attacks, a claim can only be made if the information revealed when calling \"declareLost\" was previously commited using the \"prepareClaim\" function."
                        },
                        "deleteClaim(address)": {
                            "notice": "This function is to be executed by the claim deleter only in case a dispute needs to be resolved manually."
                        },
                        "getCollateralRate(address)": {
                            "notice": "Returns the collateral rate for the given collateral type and 0 if that type of collateral is not accepted. By default, only the token itself is accepted at a rate of 1:1. Subclasses should override this method if they want to add additional types of collateral."
                        },
                        "isRecoveryEnabled(address)": {
                            "notice": "Some users might want to disable claims for their address completely. For example if they use a deep cold storage solution or paper wallet."
                        },
                        "recover(address)": {
                            "notice": "After the claim period has passed, the claimant can call this function to send the tokens on the lost address as well as the collateral to himself."
                        }
                    },
                    "version": 1
                }
            }
        },
        "c:/Users/luziu/Documents/aktionariat/contracts/src/IERC20.sol": {
            "IERC20": {
                "abi": [
                    {
                        "anonymous": false,
                        "inputs": [
                            {
                                "indexed": true,
                                "internalType": "address",
                                "name": "owner",
                                "type": "address"
                            },
                            {
                                "indexed": true,
                                "internalType": "address",
                                "name": "spender",
                                "type": "address"
                            },
                            {
                                "indexed": false,
                                "internalType": "uint256",
                                "name": "value",
                                "type": "uint256"
                            }
                        ],
                        "name": "Approval",
                        "type": "event"
                    },
                    {
                        "anonymous": false,
                        "inputs": [
                            {
                                "indexed": true,
                                "internalType": "address",
                                "name": "from",
                                "type": "address"
                            },
                            {
                                "indexed": true,
                                "internalType": "address",
                                "name": "to",
                                "type": "address"
                            },
                            {
                                "indexed": false,
                                "internalType": "uint256",
                                "name": "value",
                                "type": "uint256"
                            }
                        ],
                        "name": "Transfer",
                        "type": "event"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "owner",
                                "type": "address"
                            },
                            {
                                "internalType": "address",
                                "name": "spender",
                                "type": "address"
                            }
                        ],
                        "name": "allowance",
                        "outputs": [
                            {
                                "internalType": "uint256",
                                "name": "",
                                "type": "uint256"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "spender",
                                "type": "address"
                            },
                            {
                                "internalType": "uint256",
                                "name": "amount",
                                "type": "uint256"
                            }
                        ],
                        "name": "approve",
                        "outputs": [
                            {
                                "internalType": "bool",
                                "name": "",
                                "type": "bool"
                            }
                        ],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "account",
                                "type": "address"
                            }
                        ],
                        "name": "balanceOf",
                        "outputs": [
                            {
                                "internalType": "uint256",
                                "name": "",
                                "type": "uint256"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "inputs": [],
                        "name": "decimals",
                        "outputs": [
                            {
                                "internalType": "uint8",
                                "name": "",
                                "type": "uint8"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "inputs": [],
                        "name": "name",
                        "outputs": [
                            {
                                "internalType": "string",
                                "name": "",
                                "type": "string"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "inputs": [],
                        "name": "symbol",
                        "outputs": [
                            {
                                "internalType": "string",
                                "name": "",
                                "type": "string"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "inputs": [],
                        "name": "totalSupply",
                        "outputs": [
                            {
                                "internalType": "uint256",
                                "name": "",
                                "type": "uint256"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "recipient",
                                "type": "address"
                            },
                            {
                                "internalType": "uint256",
                                "name": "amount",
                                "type": "uint256"
                            }
                        ],
                        "name": "transfer",
                        "outputs": [
                            {
                                "internalType": "bool",
                                "name": "",
                                "type": "bool"
                            }
                        ],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "sender",
                                "type": "address"
                            },
                            {
                                "internalType": "address",
                                "name": "recipient",
                                "type": "address"
                            },
                            {
                                "internalType": "uint256",
                                "name": "amount",
                                "type": "uint256"
                            }
                        ],
                        "name": "transferFrom",
                        "outputs": [
                            {
                                "internalType": "bool",
                                "name": "",
                                "type": "bool"
                            }
                        ],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    }
                ],
                "devdoc": {
                    "details": "Interface of the ERC20 standard as defined in the EIP. Does not include the optional functions; to access them see `ERC20Detailed`.",
                    "events": {
                        "Approval(address,address,uint256)": {
                            "details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to `approve`. `value` is the new allowance."
                        },
                        "Transfer(address,address,uint256)": {
                            "details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
                        }
                    },
                    "kind": "dev",
                    "methods": {
                        "allowance(address,address)": {
                            "details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through `transferFrom`. This is zero by default. This value changes when `approve` or `transferFrom` are called."
                        },
                        "approve(address,uint256)": {
                            "details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. > Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an `Approval` event."
                        },
                        "balanceOf(address)": {
                            "details": "Returns the amount of tokens owned by `account`."
                        },
                        "totalSupply()": {
                            "details": "Returns the amount of tokens in existence."
                        },
                        "transfer(address,uint256)": {
                            "details": "Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a `Transfer` event."
                        },
                        "transferFrom(address,address,uint256)": {
                            "details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a `Transfer` event."
                        }
                    },
                    "version": 1
                },
                "evm": {
                    "bytecode": {
                        "linkReferences": {},
                        "object": "",
                        "opcodes": "",
                        "sourceMap": ""
                    },
                    "deployedBytecode": {
                        "immutableReferences": {},
                        "linkReferences": {},
                        "object": "",
                        "opcodes": "",
                        "sourceMap": ""
                    },
                    "gasEstimates": null,
                    "methodIdentifiers": {
                        "allowance(address,address)": "dd62ed3e",
                        "approve(address,uint256)": "095ea7b3",
                        "balanceOf(address)": "70a08231",
                        "decimals()": "313ce567",
                        "name()": "06fdde03",
                        "symbol()": "95d89b41",
                        "totalSupply()": "18160ddd",
                        "transfer(address,uint256)": "a9059cbb",
                        "transferFrom(address,address,uint256)": "23b872dd"
                    }
                },
                "metadata": "{\"compiler\":{\"version\":\"0.7.1+commit.f4a555be\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP. Does not include the optional functions; to access them see `ERC20Detailed`.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to `approve`. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through `transferFrom`. This is zero by default. This value changes when `approve` or `transferFrom` are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. > Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an `Approval` event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a `Transfer` event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a `Transfer` event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"c:/Users/luziu/Documents/aktionariat/contracts/src/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"c:/Users/luziu/Documents/aktionariat/contracts/src/IERC20.sol\":{\"keccak256\":\"0x6d0e89e1a724c13cc7dcc7184b8dcf0d46d6b5635b4ec024bb1fb69d36d87444\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40092507190092f77a521113ba3133441c76f63da097e38e587ca6e2603c6eb2\",\"dweb:/ipfs/QmeKTeVB1sND87Miju3k3as6f5cQcgLzbHc7vSREcjyQKC\"]}},\"version\":1}",
                "userdoc": {
                    "kind": "user",
                    "methods": {},
                    "version": 1
                }
            }
        },
        "c:/Users/luziu/Documents/aktionariat/contracts/src/IERC677Receiver.sol": {
            "IERC677Receiver": {
                "abi": [
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "from",
                                "type": "address"
                            },
                            {
                                "internalType": "uint256",
                                "name": "amount",
                                "type": "uint256"
                            },
                            {
                                "internalType": "bytes",
                                "name": "data",
                                "type": "bytes"
                            }
                        ],
                        "name": "onTokenTransfer",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    }
                ],
                "devdoc": {
                    "kind": "dev",
                    "methods": {},
                    "version": 1
                },
                "evm": {
                    "bytecode": {
                        "linkReferences": {},
                        "object": "",
                        "opcodes": "",
                        "sourceMap": ""
                    },
                    "deployedBytecode": {
                        "immutableReferences": {},
                        "linkReferences": {},
                        "object": "",
                        "opcodes": "",
                        "sourceMap": ""
                    },
                    "gasEstimates": null,
                    "methodIdentifiers": {
                        "onTokenTransfer(address,uint256,bytes)": "a4c0ed36"
                    }
                },
                "metadata": "{\"compiler\":{\"version\":\"0.7.1+commit.f4a555be\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onTokenTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"c:/Users/luziu/Documents/aktionariat/contracts/src/IERC677Receiver.sol\":\"IERC677Receiver\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"c:/Users/luziu/Documents/aktionariat/contracts/src/IERC677Receiver.sol\":{\"keccak256\":\"0x08574d3d2296c648c53d8175ffc992d22b77b7a2af4f26a3ad30bcfe67a56455\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a15e476ad8295470c052d149ce6ea8593174899a1995ff4ace6d3554fb1928c3\",\"dweb:/ipfs/QmT6wxjVrGALDukRDPi9ktfQ296jFC8o975ronUQNEhKQ9\"]}},\"version\":1}",
                "userdoc": {
                    "kind": "user",
                    "methods": {},
                    "version": 1
                }
            }
        },
        "c:/Users/luziu/Documents/aktionariat/contracts/src/IMigratable.sol": {
            "IMigratable": {
                "abi": [
                    {
                        "inputs": [],
                        "name": "migrationToContract",
                        "outputs": [
                            {
                                "internalType": "address",
                                "name": "",
                                "type": "address"
                            }
                        ],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    }
                ],
                "devdoc": {
                    "kind": "dev",
                    "methods": {},
                    "version": 1
                },
                "evm": {
                    "bytecode": {
                        "linkReferences": {},
                        "object": "",
                        "opcodes": "",
                        "sourceMap": ""
                    },
                    "deployedBytecode": {
                        "immutableReferences": {},
                        "linkReferences": {},
                        "object": "",
                        "opcodes": "",
                        "sourceMap": ""
                    },
                    "gasEstimates": null,
                    "methodIdentifiers": {
                        "migrationToContract()": "ee5554d3"
                    }
                },
                "metadata": "{\"compiler\":{\"version\":\"0.7.1+commit.f4a555be\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"migrationToContract\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"c:/Users/luziu/Documents/aktionariat/contracts/src/IMigratable.sol\":\"IMigratable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"c:/Users/luziu/Documents/aktionariat/contracts/src/IMigratable.sol\":{\"keccak256\":\"0x5212714cd6ce722124bbb8c32282a4cd3b4a37fd9dd224e5ac54d99020c24c1b\",\"license\":\"LicenseRef-Aktionariat\",\"urls\":[\"bzz-raw://338eab542263cf438c99110de0f9b059b2de6894b3e44418e16d1051b4e0fb86\",\"dweb:/ipfs/Qmbs8VNthe4VLYBf3Bv9WFWC2HSNX9LyDLgG5VneXkzHnP\"]}},\"version\":1}",
                "userdoc": {
                    "kind": "user",
                    "methods": {},
                    "version": 1
                }
            }
        },
        "c:/Users/luziu/Documents/aktionariat/contracts/src/SafeMath.sol": {
            "SafeMath": {
                "abi": [],
                "devdoc": {
                    "details": "Math operations with safety checks that throw on error",
                    "kind": "dev",
                    "methods": {},
                    "title": "SafeMath",
                    "version": 1
                },
                "evm": {
                    "bytecode": {
                        "linkReferences": {},
                        "object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212204214dd0a060ef8c621db4cb65793468a55cc371ee942524ed8530de2bde59e5f64736f6c63430007010033",
                        "opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 TIMESTAMP EQ 0xDD EXP MOD 0xE 0xF8 0xC6 0x21 0xDB 0x4C 0xB6 JUMPI SWAP4 CHAINID DUP11 SSTORE 0xCC CALLDATACOPY 0x1E 0xE9 TIMESTAMP MSTORE 0x4E 0xD8 MSTORE8 0xD 0xE2 0xBD 0xE5 SWAP15 0x5F PUSH5 0x736F6C6343 STOP SMOD ADD STOP CALLER ",
                        "sourceMap": "212:1356:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
                    },
                    "deployedBytecode": {
                        "immutableReferences": {},
                        "linkReferences": {},
                        "object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212204214dd0a060ef8c621db4cb65793468a55cc371ee942524ed8530de2bde59e5f64736f6c63430007010033",
                        "opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 TIMESTAMP EQ 0xDD EXP MOD 0xE 0xF8 0xC6 0x21 0xDB 0x4C 0xB6 JUMPI SWAP4 CHAINID DUP11 SSTORE 0xCC CALLDATACOPY 0x1E 0xE9 TIMESTAMP MSTORE 0x4E 0xD8 MSTORE8 0xD 0xE2 0xBD 0xE5 SWAP15 0x5F PUSH5 0x736F6C6343 STOP SMOD ADD STOP CALLER ",
                        "sourceMap": "212:1356:9:-:0;;;;;;;;"
                    },
                    "gasEstimates": {
                        "creation": {
                            "codeDepositCost": "17200",
                            "executionCost": "97",
                            "totalCost": "17297"
                        },
                        "internal": {
                            "add(uint256,uint256)": "infinite",
                            "div(uint256,uint256)": "infinite",
                            "mul(uint256,uint256)": "infinite",
                            "sub(uint256,uint256)": "infinite"
                        }
                    },
                    "methodIdentifiers": {}
                },
                "metadata": "{\"compiler\":{\"version\":\"0.7.1+commit.f4a555be\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Math operations with safety checks that throw on error\",\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeMath\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"c:/Users/luziu/Documents/aktionariat/contracts/src/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"c:/Users/luziu/Documents/aktionariat/contracts/src/SafeMath.sol\":{\"keccak256\":\"0x186349cbf7b3f8c5b04eb76e4e5dc9fd4d3c00952afc2e66923abc2947abc9df\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://480ddbf34395198eea8e779632d9f50d22319df148414522d8eed58972444c92\",\"dweb:/ipfs/QmbABPCuzoFN7uhGv2omkAGKSCc5Wh2Kof1ig3jzFTCKAd\"]}},\"version\":1}",
                "userdoc": {
                    "kind": "user",
                    "methods": {},
                    "version": 1
                }
            }
        }
    },
    "sources": {
        "c:/Users/luziu/Documents/aktionariat/contracts/src/Acquisition.sol": {
            "ast": {
                "absolutePath": "c:/Users/luziu/Documents/aktionariat/contracts/src/Acquisition.sol",
                "exportedSymbols": {
                    "Acquisition": [
                        491
                    ]
                },
                "id": 492,
                "license": "LicenseRef-Aktionariat",
                "nodeType": "SourceUnit",
                "nodes": [
                    {
                        "id": 1,
                        "literals": [
                            "solidity",
                            ">=",
                            "0.7"
                        ],
                        "nodeType": "PragmaDirective",
                        "src": "1336:22:0"
                    },
                    {
                        "absolutePath": "c:/Users/luziu/Documents/aktionariat/contracts/src/SafeMath.sol",
                        "file": "./SafeMath.sol",
                        "id": 2,
                        "nodeType": "ImportDirective",
                        "scope": 492,
                        "sourceUnit": 2929,
                        "src": "1362:24:0",
                        "symbolAliases": [],
                        "unitAlias": ""
                    },
                    {
                        "absolutePath": "c:/Users/luziu/Documents/aktionariat/contracts/src/IERC20.sol",
                        "file": "./IERC20.sol",
                        "id": 3,
                        "nodeType": "ImportDirective",
                        "scope": 492,
                        "sourceUnit": 2810,
                        "src": "1388:22:0",
                        "symbolAliases": [],
                        "unitAlias": ""
                    },
                    {
                        "abstract": false,
                        "baseContracts": [],
                        "contractDependencies": [],
                        "contractKind": "contract",
                        "documentation": {
                            "id": 4,
                            "nodeType": "StructuredDocumentation",
                            "src": "1414:161:0",
                            "text": " @title Acquisition Attempt\n @author Benjamin Rickenbacher, b.rickenbacher@intergga.ch\n @author Luzius Meisser, luzius@meissereconomics.com"
                        },
                        "fullyImplemented": true,
                        "id": 491,
                        "linearizedBaseContracts": [
                            491
                        ],
                        "name": "Acquisition",
                        "nodeType": "ContractDefinition",
                        "nodes": [
                            {
                                "id": 7,
                                "libraryName": {
                                    "id": 5,
                                    "name": "SafeMath",
                                    "nodeType": "UserDefinedTypeName",
                                    "referencedDeclaration": 2928,
                                    "src": "1615:8:0",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_SafeMath_$2928",
                                        "typeString": "library SafeMath"
                                    }
                                },
                                "nodeType": "UsingForDirective",
                                "src": "1609:27:0",
                                "typeName": {
                                    "id": 6,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "1628:7:0",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                    }
                                }
                            },
                            {
                                "constant": true,
                                "functionSelector": "b1610d7e",
                                "id": 10,
                                "mutability": "constant",
                                "name": "VOTING_PERIOD",
                                "nodeType": "VariableDeclaration",
                                "scope": 491,
                                "src": "1644:47:0",
                                "stateVariable": true,
                                "storageLocation": "default",
                                "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                },
                                "typeName": {
                                    "id": 8,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "1644:7:0",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                    }
                                },
                                "value": {
                                    "hexValue": "3630",
                                    "id": 9,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "1684:7:0",
                                    "subdenomination": "days",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_rational_5184000_by_1",
                                        "typeString": "int_const 5184000"
                                    },
                                    "value": "60"
                                },
                                "visibility": "public"
                            },
                            {
                                "constant": true,
                                "functionSelector": "0c43cd88",
                                "id": 13,
                                "mutability": "constant",
                                "name": "VALIDITY_PERIOD",
                                "nodeType": "VariableDeclaration",
                                "scope": 491,
                                "src": "1719:49:0",
                                "stateVariable": true,
                                "storageLocation": "default",
                                "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                },
                                "typeName": {
                                    "id": 11,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "1719:7:0",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                    }
                                },
                                "value": {
                                    "hexValue": "3930",
                                    "id": 12,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "1761:7:0",
                                    "subdenomination": "days",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_rational_7776000_by_1",
                                        "typeString": "int_const 7776000"
                                    },
                                    "value": "90"
                                },
                                "visibility": "public"
                            },
                            {
                                "constant": false,
                                "functionSelector": "1703a018",
                                "id": 15,
                                "mutability": "mutable",
                                "name": "quorum",
                                "nodeType": "VariableDeclaration",
                                "scope": 491,
                                "src": "1796:21:0",
                                "stateVariable": true,
                                "storageLocation": "default",
                                "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                },
                                "typeName": {
                                    "id": 14,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "1796:7:0",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                    }
                                },
                                "visibility": "public"
                            },
                            {
                                "constant": false,
                                "id": 17,
                                "mutability": "mutable",
                                "name": "parent",
                                "nodeType": "VariableDeclaration",
                                "scope": 491,
                                "src": "1913:22:0",
                                "stateVariable": true,
                                "storageLocation": "default",
                                "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                },
                                "typeName": {
                                    "id": 16,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "1913:7:0",
                                    "stateMutability": "nonpayable",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                    }
                                },
                                "visibility": "private"
                            },
                            {
                                "constant": false,
                                "functionSelector": "7150d8ae",
                                "id": 19,
                                "mutability": "mutable",
                                "name": "buyer",
                                "nodeType": "VariableDeclaration",
                                "scope": 491,
                                "src": "1993:28:0",
                                "stateVariable": true,
                                "storageLocation": "default",
                                "typeDescriptions": {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                },
                                "typeName": {
                                    "id": 18,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "1993:15:0",
                                    "stateMutability": "payable",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_address_payable",
                                        "typeString": "address payable"
                                    }
                                },
                                "visibility": "public"
                            },
                            {
                                "constant": false,
                                "functionSelector": "e5a6b10f",
                                "id": 21,
                                "mutability": "mutable",
                                "name": "currency",
                                "nodeType": "VariableDeclaration",
                                "scope": 491,
                                "src": "2089:23:0",
                                "stateVariable": true,
                                "storageLocation": "default",
                                "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                },
                                "typeName": {
                                    "id": 20,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "2089:7:0",
                                    "stateMutability": "nonpayable",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                    }
                                },
                                "visibility": "public"
                            },
                            {
                                "constant": false,
                                "functionSelector": "a035b1fe",
                                "id": 23,
                                "mutability": "mutable",
                                "name": "price",
                                "nodeType": "VariableDeclaration",
                                "scope": 491,
                                "src": "2119:20:0",
                                "stateVariable": true,
                                "storageLocation": "default",
                                "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                },
                                "typeName": {
                                    "id": 22,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "2119:7:0",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                    }
                                },
                                "visibility": "public"
                            },
                            {
                                "constant": false,
                                "functionSelector": "b80777ea",
                                "id": 25,
                                "mutability": "mutable",
                                "name": "timestamp",
                                "nodeType": "VariableDeclaration",
                                "scope": 491,
                                "src": "2207:24:0",
                                "stateVariable": true,
                                "storageLocation": "default",
                                "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                },
                                "typeName": {
                                    "id": 24,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "2207:7:0",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                    }
                                },
                                "visibility": "public"
                            },
                            {
                                "constant": false,
                                "functionSelector": "b5b47f42",
                                "id": 27,
                                "mutability": "mutable",
                                "name": "noVotes",
                                "nodeType": "VariableDeclaration",
                                "scope": 491,
                                "src": "2333:22:0",
                                "stateVariable": true,
                                "storageLocation": "default",
                                "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                },
                                "typeName": {
                                    "id": 26,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "2333:7:0",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                    }
                                },
                                "visibility": "public"
                            },
                            {
                                "constant": false,
                                "functionSelector": "fb286c65",
                                "id": 29,
                                "mutability": "mutable",
                                "name": "yesVotes",
                                "nodeType": "VariableDeclaration",
                                "scope": 491,
                                "src": "2424:23:0",
                                "stateVariable": true,
                                "storageLocation": "default",
                                "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                },
                                "typeName": {
                                    "id": 28,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "2424:7:0",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                    }
                                },
                                "visibility": "public"
                            },
                            {
                                "canonicalName": "Acquisition.Vote",
                                "id": 33,
                                "members": [
                                    {
                                        "id": 30,
                                        "name": "NONE",
                                        "nodeType": "EnumValue",
                                        "src": "2530:4:0"
                                    },
                                    {
                                        "id": 31,
                                        "name": "YES",
                                        "nodeType": "EnumValue",
                                        "src": "2536:3:0"
                                    },
                                    {
                                        "id": 32,
                                        "name": "NO",
                                        "nodeType": "EnumValue",
                                        "src": "2541:2:0"
                                    }
                                ],
                                "name": "Vote",
                                "nodeType": "EnumDefinition",
                                "src": "2518:27:0"
                            },
                            {
                                "constant": false,
                                "id": 37,
                                "mutability": "mutable",
                                "name": "votes",
                                "nodeType": "VariableDeclaration",
                                "scope": 491,
                                "src": "2636:39:0",
                                "stateVariable": true,
                                "storageLocation": "default",
                                "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_enum$_Vote_$33_$",
                                    "typeString": "mapping(address => enum Acquisition.Vote)"
                                },
                                "typeName": {
                                    "id": 36,
                                    "keyType": {
                                        "id": 34,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "2645:7:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "nodeType": "Mapping",
                                    "src": "2636:25:0",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_address_$_t_enum$_Vote_$33_$",
                                        "typeString": "mapping(address => enum Acquisition.Vote)"
                                    },
                                    "valueType": {
                                        "id": 35,
                                        "name": "Vote",
                                        "nodeType": "UserDefinedTypeName",
                                        "referencedDeclaration": 33,
                                        "src": "2656:4:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_enum$_Vote_$33",
                                            "typeString": "enum Acquisition.Vote"
                                        }
                                    }
                                },
                                "visibility": "private"
                            },
                            {
                                "anonymous": false,
                                "id": 43,
                                "name": "VotesChanged",
                                "nodeType": "EventDefinition",
                                "parameters": {
                                    "id": 42,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 39,
                                            "indexed": false,
                                            "mutability": "mutable",
                                            "name": "newYesVotes",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 43,
                                            "src": "2732:19:0",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            },
                                            "typeName": {
                                                "id": 38,
                                                "name": "uint256",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "2732:7:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            },
                                            "visibility": "internal"
                                        },
                                        {
                                            "constant": false,
                                            "id": 41,
                                            "indexed": false,
                                            "mutability": "mutable",
                                            "name": "newNoVotes",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 43,
                                            "src": "2753:18:0",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            },
                                            "typeName": {
                                                "id": 40,
                                                "name": "uint256",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "2753:7:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "2731:41:0"
                                },
                                "src": "2713:60:0"
                            },
                            {
                                "body": {
                                    "id": 87,
                                    "nodeType": "Block",
                                    "src": "2870:231:0",
                                    "statements": [
                                        {
                                            "expression": {
                                                "arguments": [
                                                    {
                                                        "commonType": {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        },
                                                        "id": 57,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "leftExpression": {
                                                            "id": 55,
                                                            "name": "price_",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 49,
                                                            "src": "2889:6:0",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_uint256",
                                                                "typeString": "uint256"
                                                            }
                                                        },
                                                        "nodeType": "BinaryOperation",
                                                        "operator": ">",
                                                        "rightExpression": {
                                                            "hexValue": "30",
                                                            "id": 56,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": true,
                                                            "kind": "number",
                                                            "lValueRequested": false,
                                                            "nodeType": "Literal",
                                                            "src": "2898:1:0",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_rational_0_by_1",
                                                                "typeString": "int_const 0"
                                                            },
                                                            "value": "0"
                                                        },
                                                        "src": "2889:10:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_bool",
                                                            "typeString": "bool"
                                                        }
                                                    },
                                                    {
                                                        "hexValue": "696e76616c6964207072696365",
                                                        "id": 58,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": true,
                                                        "kind": "string",
                                                        "lValueRequested": false,
                                                        "nodeType": "Literal",
                                                        "src": "2901:15:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_stringliteral_67f3816c2c3c9d26e2c2164d44f506222f0a5a80a1dd5d735b15247affdd74e5",
                                                            "typeString": "literal_string \"invalid price\""
                                                        },
                                                        "value": "invalid price"
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_bool",
                                                            "typeString": "bool"
                                                        },
                                                        {
                                                            "typeIdentifier": "t_stringliteral_67f3816c2c3c9d26e2c2164d44f506222f0a5a80a1dd5d735b15247affdd74e5",
                                                            "typeString": "literal_string \"invalid price\""
                                                        }
                                                    ],
                                                    "id": 54,
                                                    "name": "require",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [
                                                        -18,
                                                        -18
                                                    ],
                                                    "referencedDeclaration": -18,
                                                    "src": "2881:7:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                                        "typeString": "function (bool,string memory) pure"
                                                    }
                                                },
                                                "id": 59,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "2881:36:0",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_tuple$__$",
                                                    "typeString": "tuple()"
                                                }
                                            },
                                            "id": 60,
                                            "nodeType": "ExpressionStatement",
                                            "src": "2881:36:0"
                                        },
                                        {
                                            "expression": {
                                                "id": 64,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftHandSide": {
                                                    "id": 61,
                                                    "name": "parent",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 17,
                                                    "src": "2928:6:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_address",
                                                        "typeString": "address"
                                                    }
                                                },
                                                "nodeType": "Assignment",
                                                "operator": "=",
                                                "rightHandSide": {
                                                    "expression": {
                                                        "id": 62,
                                                        "name": "msg",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": -15,
                                                        "src": "2937:3:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_magic_message",
                                                            "typeString": "msg"
                                                        }
                                                    },
                                                    "id": 63,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "memberName": "sender",
                                                    "nodeType": "MemberAccess",
                                                    "src": "2937:10:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_address_payable",
                                                        "typeString": "address payable"
                                                    }
                                                },
                                                "src": "2928:19:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            "id": 65,
                                            "nodeType": "ExpressionStatement",
                                            "src": "2928:19:0"
                                        },
                                        {
                                            "expression": {
                                                "id": 68,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftHandSide": {
                                                    "id": 66,
                                                    "name": "buyer",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 19,
                                                    "src": "2958:5:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_address_payable",
                                                        "typeString": "address payable"
                                                    }
                                                },
                                                "nodeType": "Assignment",
                                                "operator": "=",
                                                "rightHandSide": {
                                                    "id": 67,
                                                    "name": "buyer_",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 45,
                                                    "src": "2966:6:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_address_payable",
                                                        "typeString": "address payable"
                                                    }
                                                },
                                                "src": "2958:14:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address_payable",
                                                    "typeString": "address payable"
                                                }
                                            },
                                            "id": 69,
                                            "nodeType": "ExpressionStatement",
                                            "src": "2958:14:0"
                                        },
                                        {
                                            "expression": {
                                                "id": 72,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftHandSide": {
                                                    "id": 70,
                                                    "name": "currency",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 21,
                                                    "src": "2983:8:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_address",
                                                        "typeString": "address"
                                                    }
                                                },
                                                "nodeType": "Assignment",
                                                "operator": "=",
                                                "rightHandSide": {
                                                    "id": 71,
                                                    "name": "currency_",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 47,
                                                    "src": "2994:9:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_address",
                                                        "typeString": "address"
                                                    }
                                                },
                                                "src": "2983:20:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            "id": 73,
                                            "nodeType": "ExpressionStatement",
                                            "src": "2983:20:0"
                                        },
                                        {
                                            "expression": {
                                                "id": 76,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftHandSide": {
                                                    "id": 74,
                                                    "name": "price",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 23,
                                                    "src": "3014:5:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    }
                                                },
                                                "nodeType": "Assignment",
                                                "operator": "=",
                                                "rightHandSide": {
                                                    "id": 75,
                                                    "name": "price_",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 49,
                                                    "src": "3022:6:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    }
                                                },
                                                "src": "3014:14:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            },
                                            "id": 77,
                                            "nodeType": "ExpressionStatement",
                                            "src": "3014:14:0"
                                        },
                                        {
                                            "expression": {
                                                "id": 80,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftHandSide": {
                                                    "id": 78,
                                                    "name": "quorum",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 15,
                                                    "src": "3039:6:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    }
                                                },
                                                "nodeType": "Assignment",
                                                "operator": "=",
                                                "rightHandSide": {
                                                    "id": 79,
                                                    "name": "quorum_",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 51,
                                                    "src": "3048:7:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    }
                                                },
                                                "src": "3039:16:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            },
                                            "id": 81,
                                            "nodeType": "ExpressionStatement",
                                            "src": "3039:16:0"
                                        },
                                        {
                                            "expression": {
                                                "id": 85,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftHandSide": {
                                                    "id": 82,
                                                    "name": "timestamp",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 25,
                                                    "src": "3066:9:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    }
                                                },
                                                "nodeType": "Assignment",
                                                "operator": "=",
                                                "rightHandSide": {
                                                    "expression": {
                                                        "id": 83,
                                                        "name": "block",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": -4,
                                                        "src": "3078:5:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_magic_block",
                                                            "typeString": "block"
                                                        }
                                                    },
                                                    "id": 84,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "memberName": "timestamp",
                                                    "nodeType": "MemberAccess",
                                                    "src": "3078:15:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    }
                                                },
                                                "src": "3066:27:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            },
                                            "id": 86,
                                            "nodeType": "ExpressionStatement",
                                            "src": "3066:27:0"
                                        }
                                    ]
                                },
                                "id": 88,
                                "implemented": true,
                                "kind": "constructor",
                                "modifiers": [],
                                "name": "",
                                "nodeType": "FunctionDefinition",
                                "parameters": {
                                    "id": 52,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 45,
                                            "mutability": "mutable",
                                            "name": "buyer_",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 88,
                                            "src": "2794:22:0",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address_payable",
                                                "typeString": "address payable"
                                            },
                                            "typeName": {
                                                "id": 44,
                                                "name": "address",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "2794:15:0",
                                                "stateMutability": "payable",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address_payable",
                                                    "typeString": "address payable"
                                                }
                                            },
                                            "visibility": "internal"
                                        },
                                        {
                                            "constant": false,
                                            "id": 47,
                                            "mutability": "mutable",
                                            "name": "currency_",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 88,
                                            "src": "2818:17:0",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            },
                                            "typeName": {
                                                "id": 46,
                                                "name": "address",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "2818:7:0",
                                                "stateMutability": "nonpayable",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            "visibility": "internal"
                                        },
                                        {
                                            "constant": false,
                                            "id": 49,
                                            "mutability": "mutable",
                                            "name": "price_",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 88,
                                            "src": "2837:14:0",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            },
                                            "typeName": {
                                                "id": 48,
                                                "name": "uint256",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "2837:7:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            },
                                            "visibility": "internal"
                                        },
                                        {
                                            "constant": false,
                                            "id": 51,
                                            "mutability": "mutable",
                                            "name": "quorum_",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 88,
                                            "src": "2853:15:0",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            },
                                            "typeName": {
                                                "id": 50,
                                                "name": "uint256",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "2853:7:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "2793:76:0"
                                },
                                "returnParameters": {
                                    "id": 53,
                                    "nodeType": "ParameterList",
                                    "parameters": [],
                                    "src": "2870:0:0"
                                },
                                "scope": 491,
                                "src": "2781:320:0",
                                "stateMutability": "nonpayable",
                                "virtual": false,
                                "visibility": "public"
                            },
                            {
                                "body": {
                                    "id": 131,
                                    "nodeType": "Block",
                                    "src": "3183:300:0",
                                    "statements": [
                                        {
                                            "assignments": [
                                                96
                                            ],
                                            "declarations": [
                                                {
                                                    "constant": false,
                                                    "id": 96,
                                                    "mutability": "mutable",
                                                    "name": "cur",
                                                    "nodeType": "VariableDeclaration",
                                                    "scope": 131,
                                                    "src": "3194:10:0",
                                                    "stateVariable": false,
                                                    "storageLocation": "default",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_contract$_IERC20_$2809",
                                                        "typeString": "contract IERC20"
                                                    },
                                                    "typeName": {
                                                        "id": 95,
                                                        "name": "IERC20",
                                                        "nodeType": "UserDefinedTypeName",
                                                        "referencedDeclaration": 2809,
                                                        "src": "3194:6:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_contract$_IERC20_$2809",
                                                            "typeString": "contract IERC20"
                                                        }
                                                    },
                                                    "visibility": "internal"
                                                }
                                            ],
                                            "id": 100,
                                            "initialValue": {
                                                "arguments": [
                                                    {
                                                        "id": 98,
                                                        "name": "currency",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 21,
                                                        "src": "3214:8:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        }
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        }
                                                    ],
                                                    "id": 97,
                                                    "name": "IERC20",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 2809,
                                                    "src": "3207:6:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_type$_t_contract$_IERC20_$2809_$",
                                                        "typeString": "type(contract IERC20)"
                                                    }
                                                },
                                                "id": 99,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "typeConversion",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "3207:16:0",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_contract$_IERC20_$2809",
                                                    "typeString": "contract IERC20"
                                                }
                                            },
                                            "nodeType": "VariableDeclarationStatement",
                                            "src": "3194:29:0"
                                        },
                                        {
                                            "assignments": [
                                                102
                                            ],
                                            "declarations": [
                                                {
                                                    "constant": false,
                                                    "id": 102,
                                                    "mutability": "mutable",
                                                    "name": "buyerBalance",
                                                    "nodeType": "VariableDeclaration",
                                                    "scope": 131,
                                                    "src": "3234:20:0",
                                                    "stateVariable": false,
                                                    "storageLocation": "default",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    },
                                                    "typeName": {
                                                        "id": 101,
                                                        "name": "uint256",
                                                        "nodeType": "ElementaryTypeName",
                                                        "src": "3234:7:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        }
                                                    },
                                                    "visibility": "internal"
                                                }
                                            ],
                                            "id": 107,
                                            "initialValue": {
                                                "arguments": [
                                                    {
                                                        "id": 105,
                                                        "name": "buyer",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 19,
                                                        "src": "3271:5:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_address_payable",
                                                            "typeString": "address payable"
                                                        }
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_address_payable",
                                                            "typeString": "address payable"
                                                        }
                                                    ],
                                                    "expression": {
                                                        "id": 103,
                                                        "name": "cur",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 96,
                                                        "src": "3257:3:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_contract$_IERC20_$2809",
                                                            "typeString": "contract IERC20"
                                                        }
                                                    },
                                                    "id": 104,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "memberName": "balanceOf",
                                                    "nodeType": "MemberAccess",
                                                    "referencedDeclaration": 2748,
                                                    "src": "3257:13:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                                        "typeString": "function (address) view external returns (uint256)"
                                                    }
                                                },
                                                "id": 106,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "3257:20:0",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            },
                                            "nodeType": "VariableDeclarationStatement",
                                            "src": "3234:43:0"
                                        },
                                        {
                                            "assignments": [
                                                109
                                            ],
                                            "declarations": [
                                                {
                                                    "constant": false,
                                                    "id": 109,
                                                    "mutability": "mutable",
                                                    "name": "buyerAllowance",
                                                    "nodeType": "VariableDeclaration",
                                                    "scope": 131,
                                                    "src": "3288:22:0",
                                                    "stateVariable": false,
                                                    "storageLocation": "default",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    },
                                                    "typeName": {
                                                        "id": 108,
                                                        "name": "uint256",
                                                        "nodeType": "ElementaryTypeName",
                                                        "src": "3288:7:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        }
                                                    },
                                                    "visibility": "internal"
                                                }
                                            ],
                                            "id": 115,
                                            "initialValue": {
                                                "arguments": [
                                                    {
                                                        "id": 112,
                                                        "name": "buyer",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 19,
                                                        "src": "3327:5:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_address_payable",
                                                            "typeString": "address payable"
                                                        }
                                                    },
                                                    {
                                                        "id": 113,
                                                        "name": "parent",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 17,
                                                        "src": "3334:6:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        }
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_address_payable",
                                                            "typeString": "address payable"
                                                        },
                                                        {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        }
                                                    ],
                                                    "expression": {
                                                        "id": 110,
                                                        "name": "cur",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 96,
                                                        "src": "3313:3:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_contract$_IERC20_$2809",
                                                            "typeString": "contract IERC20"
                                                        }
                                                    },
                                                    "id": 111,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "memberName": "allowance",
                                                    "nodeType": "MemberAccess",
                                                    "referencedDeclaration": 2768,
                                                    "src": "3313:13:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
                                                        "typeString": "function (address,address) view external returns (uint256)"
                                                    }
                                                },
                                                "id": 114,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "3313:28:0",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            },
                                            "nodeType": "VariableDeclarationStatement",
                                            "src": "3288:53:0"
                                        },
                                        {
                                            "assignments": [
                                                117
                                            ],
                                            "declarations": [
                                                {
                                                    "constant": false,
                                                    "id": 117,
                                                    "mutability": "mutable",
                                                    "name": "xchfNeeded",
                                                    "nodeType": "VariableDeclaration",
                                                    "scope": 131,
                                                    "src": "3352:18:0",
                                                    "stateVariable": false,
                                                    "storageLocation": "default",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    },
                                                    "typeName": {
                                                        "id": 116,
                                                        "name": "uint256",
                                                        "nodeType": "ElementaryTypeName",
                                                        "src": "3352:7:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        }
                                                    },
                                                    "visibility": "internal"
                                                }
                                            ],
                                            "id": 122,
                                            "initialValue": {
                                                "arguments": [
                                                    {
                                                        "id": 120,
                                                        "name": "price",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 23,
                                                        "src": "3393:5:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        }
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        }
                                                    ],
                                                    "expression": {
                                                        "id": 118,
                                                        "name": "sharesToAcquire",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 90,
                                                        "src": "3373:15:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        }
                                                    },
                                                    "id": 119,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "memberName": "mul",
                                                    "nodeType": "MemberAccess",
                                                    "referencedDeclaration": 2866,
                                                    "src": "3373:19:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                                                    }
                                                },
                                                "id": 121,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "3373:26:0",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            },
                                            "nodeType": "VariableDeclarationStatement",
                                            "src": "3352:47:0"
                                        },
                                        {
                                            "expression": {
                                                "commonType": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                },
                                                "id": 129,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftExpression": {
                                                    "commonType": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    },
                                                    "id": 125,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "leftExpression": {
                                                        "id": 123,
                                                        "name": "xchfNeeded",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 117,
                                                        "src": "3417:10:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        }
                                                    },
                                                    "nodeType": "BinaryOperation",
                                                    "operator": "<=",
                                                    "rightExpression": {
                                                        "id": 124,
                                                        "name": "buyerBalance",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 102,
                                                        "src": "3431:12:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        }
                                                    },
                                                    "src": "3417:26:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_bool",
                                                        "typeString": "bool"
                                                    }
                                                },
                                                "nodeType": "BinaryOperation",
                                                "operator": "&&",
                                                "rightExpression": {
                                                    "commonType": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    },
                                                    "id": 128,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "leftExpression": {
                                                        "id": 126,
                                                        "name": "xchfNeeded",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 117,
                                                        "src": "3447:10:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        }
                                                    },
                                                    "nodeType": "BinaryOperation",
                                                    "operator": "<=",
                                                    "rightExpression": {
                                                        "id": 127,
                                                        "name": "buyerAllowance",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 109,
                                                        "src": "3461:14:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        }
                                                    },
                                                    "src": "3447:28:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_bool",
                                                        "typeString": "bool"
                                                    }
                                                },
                                                "src": "3417:58:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            },
                                            "functionReturnParameters": 94,
                                            "id": 130,
                                            "nodeType": "Return",
                                            "src": "3410:65:0"
                                        }
                                    ]
                                },
                                "functionSelector": "b28fa152",
                                "id": 132,
                                "implemented": true,
                                "kind": "function",
                                "modifiers": [],
                                "name": "isWellFunded",
                                "nodeType": "FunctionDefinition",
                                "parameters": {
                                    "id": 91,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 90,
                                            "mutability": "mutable",
                                            "name": "sharesToAcquire",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 132,
                                            "src": "3131:23:0",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            },
                                            "typeName": {
                                                "id": 89,
                                                "name": "uint256",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "3131:7:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "3130:25:0"
                                },
                                "returnParameters": {
                                    "id": 94,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 93,
                                            "mutability": "mutable",
                                            "name": "",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 132,
                                            "src": "3177:4:0",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_bool",
                                                "typeString": "bool"
                                            },
                                            "typeName": {
                                                "id": 92,
                                                "name": "bool",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "3177:4:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "3176:6:0"
                                },
                                "scope": 491,
                                "src": "3109:374:0",
                                "stateMutability": "view",
                                "virtual": false,
                                "visibility": "public"
                            },
                            {
                                "body": {
                                    "id": 169,
                                    "nodeType": "Block",
                                    "src": "3545:381:0",
                                    "statements": [
                                        {
                                            "condition": {
                                                "arguments": [],
                                                "expression": {
                                                    "argumentTypes": [],
                                                    "id": 137,
                                                    "name": "isVotingOpen",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 340,
                                                    "src": "3560:12:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                                                        "typeString": "function () view returns (bool)"
                                                    }
                                                },
                                                "id": 138,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "3560:14:0",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            },
                                            "falseBody": {
                                                "id": 167,
                                                "nodeType": "Block",
                                                "src": "3776:143:0",
                                                "statements": [
                                                    {
                                                        "expression": {
                                                            "commonType": {
                                                                "typeIdentifier": "t_uint256",
                                                                "typeString": "uint256"
                                                            },
                                                            "id": 165,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": false,
                                                            "lValueRequested": false,
                                                            "leftExpression": {
                                                                "arguments": [
                                                                    {
                                                                        "arguments": [
                                                                            {
                                                                                "id": 161,
                                                                                "name": "noVotes",
                                                                                "nodeType": "Identifier",
                                                                                "overloadedDeclarations": [],
                                                                                "referencedDeclaration": 27,
                                                                                "src": "3888:7:0",
                                                                                "typeDescriptions": {
                                                                                    "typeIdentifier": "t_uint256",
                                                                                    "typeString": "uint256"
                                                                                }
                                                                            }
                                                                        ],
                                                                        "expression": {
                                                                            "argumentTypes": [
                                                                                {
                                                                                    "typeIdentifier": "t_uint256",
                                                                                    "typeString": "uint256"
                                                                                }
                                                                            ],
                                                                            "expression": {
                                                                                "id": 159,
                                                                                "name": "yesVotes",
                                                                                "nodeType": "Identifier",
                                                                                "overloadedDeclarations": [],
                                                                                "referencedDeclaration": 29,
                                                                                "src": "3875:8:0",
                                                                                "typeDescriptions": {
                                                                                    "typeIdentifier": "t_uint256",
                                                                                    "typeString": "uint256"
                                                                                }
                                                                            },
                                                                            "id": 160,
                                                                            "isConstant": false,
                                                                            "isLValue": false,
                                                                            "isPure": false,
                                                                            "lValueRequested": false,
                                                                            "memberName": "add",
                                                                            "nodeType": "MemberAccess",
                                                                            "referencedDeclaration": 2927,
                                                                            "src": "3875:12:0",
                                                                            "typeDescriptions": {
                                                                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                                                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                                                                            }
                                                                        },
                                                                        "id": 162,
                                                                        "isConstant": false,
                                                                        "isLValue": false,
                                                                        "isPure": false,
                                                                        "kind": "functionCall",
                                                                        "lValueRequested": false,
                                                                        "names": [],
                                                                        "nodeType": "FunctionCall",
                                                                        "src": "3875:21:0",
                                                                        "tryCall": false,
                                                                        "typeDescriptions": {
                                                                            "typeIdentifier": "t_uint256",
                                                                            "typeString": "uint256"
                                                                        }
                                                                    }
                                                                ],
                                                                "expression": {
                                                                    "argumentTypes": [
                                                                        {
                                                                            "typeIdentifier": "t_uint256",
                                                                            "typeString": "uint256"
                                                                        }
                                                                    ],
                                                                    "expression": {
                                                                        "arguments": [
                                                                            {
                                                                                "hexValue": "3130303030",
                                                                                "id": 156,
                                                                                "isConstant": false,
                                                                                "isLValue": false,
                                                                                "isPure": true,
                                                                                "kind": "number",
                                                                                "lValueRequested": false,
                                                                                "nodeType": "Literal",
                                                                                "src": "3864:5:0",
                                                                                "typeDescriptions": {
                                                                                    "typeIdentifier": "t_rational_10000_by_1",
                                                                                    "typeString": "int_const 10000"
                                                                                },
                                                                                "value": "10000"
                                                                            }
                                                                        ],
                                                                        "expression": {
                                                                            "argumentTypes": [
                                                                                {
                                                                                    "typeIdentifier": "t_rational_10000_by_1",
                                                                                    "typeString": "int_const 10000"
                                                                                }
                                                                            ],
                                                                            "expression": {
                                                                                "id": 154,
                                                                                "name": "yesVotes",
                                                                                "nodeType": "Identifier",
                                                                                "overloadedDeclarations": [],
                                                                                "referencedDeclaration": 29,
                                                                                "src": "3851:8:0",
                                                                                "typeDescriptions": {
                                                                                    "typeIdentifier": "t_uint256",
                                                                                    "typeString": "uint256"
                                                                                }
                                                                            },
                                                                            "id": 155,
                                                                            "isConstant": false,
                                                                            "isLValue": false,
                                                                            "isPure": false,
                                                                            "lValueRequested": false,
                                                                            "memberName": "mul",
                                                                            "nodeType": "MemberAccess",
                                                                            "referencedDeclaration": 2866,
                                                                            "src": "3851:12:0",
                                                                            "typeDescriptions": {
                                                                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                                                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                                                                            }
                                                                        },
                                                                        "id": 157,
                                                                        "isConstant": false,
                                                                        "isLValue": false,
                                                                        "isPure": false,
                                                                        "kind": "functionCall",
                                                                        "lValueRequested": false,
                                                                        "names": [],
                                                                        "nodeType": "FunctionCall",
                                                                        "src": "3851:19:0",
                                                                        "tryCall": false,
                                                                        "typeDescriptions": {
                                                                            "typeIdentifier": "t_uint256",
                                                                            "typeString": "uint256"
                                                                        }
                                                                    },
                                                                    "id": 158,
                                                                    "isConstant": false,
                                                                    "isLValue": false,
                                                                    "isPure": false,
                                                                    "lValueRequested": false,
                                                                    "memberName": "div",
                                                                    "nodeType": "MemberAccess",
                                                                    "referencedDeclaration": 2881,
                                                                    "src": "3851:23:0",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                                                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                                                                    }
                                                                },
                                                                "id": 163,
                                                                "isConstant": false,
                                                                "isLValue": false,
                                                                "isPure": false,
                                                                "kind": "functionCall",
                                                                "lValueRequested": false,
                                                                "names": [],
                                                                "nodeType": "FunctionCall",
                                                                "src": "3851:46:0",
                                                                "tryCall": false,
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_uint256",
                                                                    "typeString": "uint256"
                                                                }
                                                            },
                                                            "nodeType": "BinaryOperation",
                                                            "operator": ">=",
                                                            "rightExpression": {
                                                                "id": 164,
                                                                "name": "quorum",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [],
                                                                "referencedDeclaration": 15,
                                                                "src": "3901:6:0",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_uint256",
                                                                    "typeString": "uint256"
                                                                }
                                                            },
                                                            "src": "3851:56:0",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_bool",
                                                                "typeString": "bool"
                                                            }
                                                        },
                                                        "functionReturnParameters": 136,
                                                        "id": 166,
                                                        "nodeType": "Return",
                                                        "src": "3844:63:0"
                                                    }
                                                ]
                                            },
                                            "id": 168,
                                            "nodeType": "IfStatement",
                                            "src": "3556:363:0",
                                            "trueBody": {
                                                "id": 153,
                                                "nodeType": "Block",
                                                "src": "3576:194:0",
                                                "statements": [
                                                    {
                                                        "expression": {
                                                            "commonType": {
                                                                "typeIdentifier": "t_uint256",
                                                                "typeString": "uint256"
                                                            },
                                                            "id": 151,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": false,
                                                            "lValueRequested": false,
                                                            "leftExpression": {
                                                                "arguments": [
                                                                    {
                                                                        "arguments": [],
                                                                        "expression": {
                                                                            "argumentTypes": [],
                                                                            "expression": {
                                                                                "arguments": [
                                                                                    {
                                                                                        "id": 145,
                                                                                        "name": "parent",
                                                                                        "nodeType": "Identifier",
                                                                                        "overloadedDeclarations": [],
                                                                                        "referencedDeclaration": 17,
                                                                                        "src": "3726:6:0",
                                                                                        "typeDescriptions": {
                                                                                            "typeIdentifier": "t_address",
                                                                                            "typeString": "address"
                                                                                        }
                                                                                    }
                                                                                ],
                                                                                "expression": {
                                                                                    "argumentTypes": [
                                                                                        {
                                                                                            "typeIdentifier": "t_address",
                                                                                            "typeString": "address"
                                                                                        }
                                                                                    ],
                                                                                    "id": 144,
                                                                                    "name": "IERC20",
                                                                                    "nodeType": "Identifier",
                                                                                    "overloadedDeclarations": [],
                                                                                    "referencedDeclaration": 2809,
                                                                                    "src": "3719:6:0",
                                                                                    "typeDescriptions": {
                                                                                        "typeIdentifier": "t_type$_t_contract$_IERC20_$2809_$",
                                                                                        "typeString": "type(contract IERC20)"
                                                                                    }
                                                                                },
                                                                                "id": 146,
                                                                                "isConstant": false,
                                                                                "isLValue": false,
                                                                                "isPure": false,
                                                                                "kind": "typeConversion",
                                                                                "lValueRequested": false,
                                                                                "names": [],
                                                                                "nodeType": "FunctionCall",
                                                                                "src": "3719:14:0",
                                                                                "tryCall": false,
                                                                                "typeDescriptions": {
                                                                                    "typeIdentifier": "t_contract$_IERC20_$2809",
                                                                                    "typeString": "contract IERC20"
                                                                                }
                                                                            },
                                                                            "id": 147,
                                                                            "isConstant": false,
                                                                            "isLValue": false,
                                                                            "isPure": false,
                                                                            "lValueRequested": false,
                                                                            "memberName": "totalSupply",
                                                                            "nodeType": "MemberAccess",
                                                                            "referencedDeclaration": 2740,
                                                                            "src": "3719:26:0",
                                                                            "typeDescriptions": {
                                                                                "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                                                                                "typeString": "function () view external returns (uint256)"
                                                                            }
                                                                        },
                                                                        "id": 148,
                                                                        "isConstant": false,
                                                                        "isLValue": false,
                                                                        "isPure": false,
                                                                        "kind": "functionCall",
                                                                        "lValueRequested": false,
                                                                        "names": [],
                                                                        "nodeType": "FunctionCall",
                                                                        "src": "3719:28:0",
                                                                        "tryCall": false,
                                                                        "typeDescriptions": {
                                                                            "typeIdentifier": "t_uint256",
                                                                            "typeString": "uint256"
                                                                        }
                                                                    }
                                                                ],
                                                                "expression": {
                                                                    "argumentTypes": [
                                                                        {
                                                                            "typeIdentifier": "t_uint256",
                                                                            "typeString": "uint256"
                                                                        }
                                                                    ],
                                                                    "expression": {
                                                                        "arguments": [
                                                                            {
                                                                                "hexValue": "3130303030",
                                                                                "id": 141,
                                                                                "isConstant": false,
                                                                                "isLValue": false,
                                                                                "isPure": true,
                                                                                "kind": "number",
                                                                                "lValueRequested": false,
                                                                                "nodeType": "Literal",
                                                                                "src": "3708:5:0",
                                                                                "typeDescriptions": {
                                                                                    "typeIdentifier": "t_rational_10000_by_1",
                                                                                    "typeString": "int_const 10000"
                                                                                },
                                                                                "value": "10000"
                                                                            }
                                                                        ],
                                                                        "expression": {
                                                                            "argumentTypes": [
                                                                                {
                                                                                    "typeIdentifier": "t_rational_10000_by_1",
                                                                                    "typeString": "int_const 10000"
                                                                                }
                                                                            ],
                                                                            "expression": {
                                                                                "id": 139,
                                                                                "name": "yesVotes",
                                                                                "nodeType": "Identifier",
                                                                                "overloadedDeclarations": [],
                                                                                "referencedDeclaration": 29,
                                                                                "src": "3695:8:0",
                                                                                "typeDescriptions": {
                                                                                    "typeIdentifier": "t_uint256",
                                                                                    "typeString": "uint256"
                                                                                }
                                                                            },
                                                                            "id": 140,
                                                                            "isConstant": false,
                                                                            "isLValue": false,
                                                                            "isPure": false,
                                                                            "lValueRequested": false,
                                                                            "memberName": "mul",
                                                                            "nodeType": "MemberAccess",
                                                                            "referencedDeclaration": 2866,
                                                                            "src": "3695:12:0",
                                                                            "typeDescriptions": {
                                                                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                                                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                                                                            }
                                                                        },
                                                                        "id": 142,
                                                                        "isConstant": false,
                                                                        "isLValue": false,
                                                                        "isPure": false,
                                                                        "kind": "functionCall",
                                                                        "lValueRequested": false,
                                                                        "names": [],
                                                                        "nodeType": "FunctionCall",
                                                                        "src": "3695:19:0",
                                                                        "tryCall": false,
                                                                        "typeDescriptions": {
                                                                            "typeIdentifier": "t_uint256",
                                                                            "typeString": "uint256"
                                                                        }
                                                                    },
                                                                    "id": 143,
                                                                    "isConstant": false,
                                                                    "isLValue": false,
                                                                    "isPure": false,
                                                                    "lValueRequested": false,
                                                                    "memberName": "div",
                                                                    "nodeType": "MemberAccess",
                                                                    "referencedDeclaration": 2881,
                                                                    "src": "3695:23:0",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                                                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                                                                    }
                                                                },
                                                                "id": 149,
                                                                "isConstant": false,
                                                                "isLValue": false,
                                                                "isPure": false,
                                                                "kind": "functionCall",
                                                                "lValueRequested": false,
                                                                "names": [],
                                                                "nodeType": "FunctionCall",
                                                                "src": "3695:53:0",
                                                                "tryCall": false,
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_uint256",
                                                                    "typeString": "uint256"
                                                                }
                                                            },
                                                            "nodeType": "BinaryOperation",
                                                            "operator": ">=",
                                                            "rightExpression": {
                                                                "id": 150,
                                                                "name": "quorum",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [],
                                                                "referencedDeclaration": 15,
                                                                "src": "3752:6:0",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_uint256",
                                                                    "typeString": "uint256"
                                                                }
                                                            },
                                                            "src": "3695:63:0",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_bool",
                                                                "typeString": "bool"
                                                            }
                                                        },
                                                        "functionReturnParameters": 136,
                                                        "id": 152,
                                                        "nodeType": "Return",
                                                        "src": "3688:70:0"
                                                    }
                                                ]
                                            }
                                        }
                                    ]
                                },
                                "functionSelector": "d7be4e29",
                                "id": 170,
                                "implemented": true,
                                "kind": "function",
                                "modifiers": [],
                                "name": "isQuorumReached",
                                "nodeType": "FunctionDefinition",
                                "parameters": {
                                    "id": 133,
                                    "nodeType": "ParameterList",
                                    "parameters": [],
                                    "src": "3515:2:0"
                                },
                                "returnParameters": {
                                    "id": 136,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 135,
                                            "mutability": "mutable",
                                            "name": "",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 170,
                                            "src": "3539:4:0",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_bool",
                                                "typeString": "bool"
                                            },
                                            "typeName": {
                                                "id": 134,
                                                "name": "bool",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "3539:4:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "3538:6:0"
                                },
                                "scope": 491,
                                "src": "3491:435:0",
                                "stateMutability": "view",
                                "virtual": false,
                                "visibility": "public"
                            },
                            {
                                "body": {
                                    "id": 215,
                                    "nodeType": "Block",
                                    "src": "3988:412:0",
                                    "statements": [
                                        {
                                            "condition": {
                                                "arguments": [],
                                                "expression": {
                                                    "argumentTypes": [],
                                                    "id": 175,
                                                    "name": "isVotingOpen",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 340,
                                                    "src": "4003:12:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                                                        "typeString": "function () view returns (bool)"
                                                    }
                                                },
                                                "id": 176,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "4003:14:0",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            },
                                            "falseBody": {
                                                "id": 213,
                                                "nodeType": "Block",
                                                "src": "4252:141:0",
                                                "statements": [
                                                    {
                                                        "expression": {
                                                            "commonType": {
                                                                "typeIdentifier": "t_uint256",
                                                                "typeString": "uint256"
                                                            },
                                                            "id": 211,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": false,
                                                            "lValueRequested": false,
                                                            "leftExpression": {
                                                                "arguments": [
                                                                    {
                                                                        "arguments": [
                                                                            {
                                                                                "id": 207,
                                                                                "name": "noVotes",
                                                                                "nodeType": "Identifier",
                                                                                "overloadedDeclarations": [],
                                                                                "referencedDeclaration": 27,
                                                                                "src": "4363:7:0",
                                                                                "typeDescriptions": {
                                                                                    "typeIdentifier": "t_uint256",
                                                                                    "typeString": "uint256"
                                                                                }
                                                                            }
                                                                        ],
                                                                        "expression": {
                                                                            "argumentTypes": [
                                                                                {
                                                                                    "typeIdentifier": "t_uint256",
                                                                                    "typeString": "uint256"
                                                                                }
                                                                            ],
                                                                            "expression": {
                                                                                "id": 205,
                                                                                "name": "yesVotes",
                                                                                "nodeType": "Identifier",
                                                                                "overloadedDeclarations": [],
                                                                                "referencedDeclaration": 29,
                                                                                "src": "4350:8:0",
                                                                                "typeDescriptions": {
                                                                                    "typeIdentifier": "t_uint256",
                                                                                    "typeString": "uint256"
                                                                                }
                                                                            },
                                                                            "id": 206,
                                                                            "isConstant": false,
                                                                            "isLValue": false,
                                                                            "isPure": false,
                                                                            "lValueRequested": false,
                                                                            "memberName": "add",
                                                                            "nodeType": "MemberAccess",
                                                                            "referencedDeclaration": 2927,
                                                                            "src": "4350:12:0",
                                                                            "typeDescriptions": {
                                                                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                                                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                                                                            }
                                                                        },
                                                                        "id": 208,
                                                                        "isConstant": false,
                                                                        "isLValue": false,
                                                                        "isPure": false,
                                                                        "kind": "functionCall",
                                                                        "lValueRequested": false,
                                                                        "names": [],
                                                                        "nodeType": "FunctionCall",
                                                                        "src": "4350:21:0",
                                                                        "tryCall": false,
                                                                        "typeDescriptions": {
                                                                            "typeIdentifier": "t_uint256",
                                                                            "typeString": "uint256"
                                                                        }
                                                                    }
                                                                ],
                                                                "expression": {
                                                                    "argumentTypes": [
                                                                        {
                                                                            "typeIdentifier": "t_uint256",
                                                                            "typeString": "uint256"
                                                                        }
                                                                    ],
                                                                    "expression": {
                                                                        "arguments": [
                                                                            {
                                                                                "hexValue": "3130303030",
                                                                                "id": 202,
                                                                                "isConstant": false,
                                                                                "isLValue": false,
                                                                                "isPure": true,
                                                                                "kind": "number",
                                                                                "lValueRequested": false,
                                                                                "nodeType": "Literal",
                                                                                "src": "4339:5:0",
                                                                                "typeDescriptions": {
                                                                                    "typeIdentifier": "t_rational_10000_by_1",
                                                                                    "typeString": "int_const 10000"
                                                                                },
                                                                                "value": "10000"
                                                                            }
                                                                        ],
                                                                        "expression": {
                                                                            "argumentTypes": [
                                                                                {
                                                                                    "typeIdentifier": "t_rational_10000_by_1",
                                                                                    "typeString": "int_const 10000"
                                                                                }
                                                                            ],
                                                                            "expression": {
                                                                                "id": 200,
                                                                                "name": "yesVotes",
                                                                                "nodeType": "Identifier",
                                                                                "overloadedDeclarations": [],
                                                                                "referencedDeclaration": 29,
                                                                                "src": "4326:8:0",
                                                                                "typeDescriptions": {
                                                                                    "typeIdentifier": "t_uint256",
                                                                                    "typeString": "uint256"
                                                                                }
                                                                            },
                                                                            "id": 201,
                                                                            "isConstant": false,
                                                                            "isLValue": false,
                                                                            "isPure": false,
                                                                            "lValueRequested": false,
                                                                            "memberName": "mul",
                                                                            "nodeType": "MemberAccess",
                                                                            "referencedDeclaration": 2866,
                                                                            "src": "4326:12:0",
                                                                            "typeDescriptions": {
                                                                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                                                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                                                                            }
                                                                        },
                                                                        "id": 203,
                                                                        "isConstant": false,
                                                                        "isLValue": false,
                                                                        "isPure": false,
                                                                        "kind": "functionCall",
                                                                        "lValueRequested": false,
                                                                        "names": [],
                                                                        "nodeType": "FunctionCall",
                                                                        "src": "4326:19:0",
                                                                        "tryCall": false,
                                                                        "typeDescriptions": {
                                                                            "typeIdentifier": "t_uint256",
                                                                            "typeString": "uint256"
                                                                        }
                                                                    },
                                                                    "id": 204,
                                                                    "isConstant": false,
                                                                    "isLValue": false,
                                                                    "isPure": false,
                                                                    "lValueRequested": false,
                                                                    "memberName": "div",
                                                                    "nodeType": "MemberAccess",
                                                                    "referencedDeclaration": 2881,
                                                                    "src": "4326:23:0",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                                                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                                                                    }
                                                                },
                                                                "id": 209,
                                                                "isConstant": false,
                                                                "isLValue": false,
                                                                "isPure": false,
                                                                "kind": "functionCall",
                                                                "lValueRequested": false,
                                                                "names": [],
                                                                "nodeType": "FunctionCall",
                                                                "src": "4326:46:0",
                                                                "tryCall": false,
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_uint256",
                                                                    "typeString": "uint256"
                                                                }
                                                            },
                                                            "nodeType": "BinaryOperation",
                                                            "operator": "<",
                                                            "rightExpression": {
                                                                "id": 210,
                                                                "name": "quorum",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [],
                                                                "referencedDeclaration": 15,
                                                                "src": "4375:6:0",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_uint256",
                                                                    "typeString": "uint256"
                                                                }
                                                            },
                                                            "src": "4326:55:0",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_bool",
                                                                "typeString": "bool"
                                                            }
                                                        },
                                                        "functionReturnParameters": 174,
                                                        "id": 212,
                                                        "nodeType": "Return",
                                                        "src": "4319:62:0"
                                                    }
                                                ]
                                            },
                                            "id": 214,
                                            "nodeType": "IfStatement",
                                            "src": "3999:394:0",
                                            "trueBody": {
                                                "id": 199,
                                                "nodeType": "Block",
                                                "src": "4019:227:0",
                                                "statements": [
                                                    {
                                                        "expression": {
                                                            "commonType": {
                                                                "typeIdentifier": "t_uint256",
                                                                "typeString": "uint256"
                                                            },
                                                            "id": 197,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": false,
                                                            "lValueRequested": false,
                                                            "leftExpression": {
                                                                "arguments": [
                                                                    {
                                                                        "arguments": [],
                                                                        "expression": {
                                                                            "argumentTypes": [],
                                                                            "expression": {
                                                                                "arguments": [
                                                                                    {
                                                                                        "id": 191,
                                                                                        "name": "parent",
                                                                                        "nodeType": "Identifier",
                                                                                        "overloadedDeclarations": [],
                                                                                        "referencedDeclaration": 17,
                                                                                        "src": "4203:6:0",
                                                                                        "typeDescriptions": {
                                                                                            "typeIdentifier": "t_address",
                                                                                            "typeString": "address"
                                                                                        }
                                                                                    }
                                                                                ],
                                                                                "expression": {
                                                                                    "argumentTypes": [
                                                                                        {
                                                                                            "typeIdentifier": "t_address",
                                                                                            "typeString": "address"
                                                                                        }
                                                                                    ],
                                                                                    "id": 190,
                                                                                    "name": "IERC20",
                                                                                    "nodeType": "Identifier",
                                                                                    "overloadedDeclarations": [],
                                                                                    "referencedDeclaration": 2809,
                                                                                    "src": "4196:6:0",
                                                                                    "typeDescriptions": {
                                                                                        "typeIdentifier": "t_type$_t_contract$_IERC20_$2809_$",
                                                                                        "typeString": "type(contract IERC20)"
                                                                                    }
                                                                                },
                                                                                "id": 192,
                                                                                "isConstant": false,
                                                                                "isLValue": false,
                                                                                "isPure": false,
                                                                                "kind": "typeConversion",
                                                                                "lValueRequested": false,
                                                                                "names": [],
                                                                                "nodeType": "FunctionCall",
                                                                                "src": "4196:14:0",
                                                                                "tryCall": false,
                                                                                "typeDescriptions": {
                                                                                    "typeIdentifier": "t_contract$_IERC20_$2809",
                                                                                    "typeString": "contract IERC20"
                                                                                }
                                                                            },
                                                                            "id": 193,
                                                                            "isConstant": false,
                                                                            "isLValue": false,
                                                                            "isPure": false,
                                                                            "lValueRequested": false,
                                                                            "memberName": "totalSupply",
                                                                            "nodeType": "MemberAccess",
                                                                            "referencedDeclaration": 2740,
                                                                            "src": "4196:26:0",
                                                                            "typeDescriptions": {
                                                                                "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                                                                                "typeString": "function () view external returns (uint256)"
                                                                            }
                                                                        },
                                                                        "id": 194,
                                                                        "isConstant": false,
                                                                        "isLValue": false,
                                                                        "isPure": false,
                                                                        "kind": "functionCall",
                                                                        "lValueRequested": false,
                                                                        "names": [],
                                                                        "nodeType": "FunctionCall",
                                                                        "src": "4196:28:0",
                                                                        "tryCall": false,
                                                                        "typeDescriptions": {
                                                                            "typeIdentifier": "t_uint256",
                                                                            "typeString": "uint256"
                                                                        }
                                                                    }
                                                                ],
                                                                "expression": {
                                                                    "argumentTypes": [
                                                                        {
                                                                            "typeIdentifier": "t_uint256",
                                                                            "typeString": "uint256"
                                                                        }
                                                                    ],
                                                                    "expression": {
                                                                        "arguments": [
                                                                            {
                                                                                "hexValue": "3130303030",
                                                                                "id": 187,
                                                                                "isConstant": false,
                                                                                "isLValue": false,
                                                                                "isPure": true,
                                                                                "kind": "number",
                                                                                "lValueRequested": false,
                                                                                "nodeType": "Literal",
                                                                                "src": "4185:5:0",
                                                                                "typeDescriptions": {
                                                                                    "typeIdentifier": "t_rational_10000_by_1",
                                                                                    "typeString": "int_const 10000"
                                                                                },
                                                                                "value": "10000"
                                                                            }
                                                                        ],
                                                                        "expression": {
                                                                            "argumentTypes": [
                                                                                {
                                                                                    "typeIdentifier": "t_rational_10000_by_1",
                                                                                    "typeString": "int_const 10000"
                                                                                }
                                                                            ],
                                                                            "expression": {
                                                                                "components": [
                                                                                    {
                                                                                        "arguments": [
                                                                                            {
                                                                                                "id": 183,
                                                                                                "name": "noVotes",
                                                                                                "nodeType": "Identifier",
                                                                                                "overloadedDeclarations": [],
                                                                                                "referencedDeclaration": 27,
                                                                                                "src": "4171:7:0",
                                                                                                "typeDescriptions": {
                                                                                                    "typeIdentifier": "t_uint256",
                                                                                                    "typeString": "uint256"
                                                                                                }
                                                                                            }
                                                                                        ],
                                                                                        "expression": {
                                                                                            "argumentTypes": [
                                                                                                {
                                                                                                    "typeIdentifier": "t_uint256",
                                                                                                    "typeString": "uint256"
                                                                                                }
                                                                                            ],
                                                                                            "expression": {
                                                                                                "arguments": [],
                                                                                                "expression": {
                                                                                                    "argumentTypes": [],
                                                                                                    "expression": {
                                                                                                        "arguments": [
                                                                                                            {
                                                                                                                "id": 178,
                                                                                                                "name": "parent",
                                                                                                                "nodeType": "Identifier",
                                                                                                                "overloadedDeclarations": [],
                                                                                                                "referencedDeclaration": 17,
                                                                                                                "src": "4145:6:0",
                                                                                                                "typeDescriptions": {
                                                                                                                    "typeIdentifier": "t_address",
                                                                                                                    "typeString": "address"
                                                                                                                }
                                                                                                            }
                                                                                                        ],
                                                                                                        "expression": {
                                                                                                            "argumentTypes": [
                                                                                                                {
                                                                                                                    "typeIdentifier": "t_address",
                                                                                                                    "typeString": "address"
                                                                                                                }
                                                                                                            ],
                                                                                                            "id": 177,
                                                                                                            "name": "IERC20",
                                                                                                            "nodeType": "Identifier",
                                                                                                            "overloadedDeclarations": [],
                                                                                                            "referencedDeclaration": 2809,
                                                                                                            "src": "4138:6:0",
                                                                                                            "typeDescriptions": {
                                                                                                                "typeIdentifier": "t_type$_t_contract$_IERC20_$2809_$",
                                                                                                                "typeString": "type(contract IERC20)"
                                                                                                            }
                                                                                                        },
                                                                                                        "id": 179,
                                                                                                        "isConstant": false,
                                                                                                        "isLValue": false,
                                                                                                        "isPure": false,
                                                                                                        "kind": "typeConversion",
                                                                                                        "lValueRequested": false,
                                                                                                        "names": [],
                                                                                                        "nodeType": "FunctionCall",
                                                                                                        "src": "4138:14:0",
                                                                                                        "tryCall": false,
                                                                                                        "typeDescriptions": {
                                                                                                            "typeIdentifier": "t_contract$_IERC20_$2809",
                                                                                                            "typeString": "contract IERC20"
                                                                                                        }
                                                                                                    },
                                                                                                    "id": 180,
                                                                                                    "isConstant": false,
                                                                                                    "isLValue": false,
                                                                                                    "isPure": false,
                                                                                                    "lValueRequested": false,
                                                                                                    "memberName": "totalSupply",
                                                                                                    "nodeType": "MemberAccess",
                                                                                                    "referencedDeclaration": 2740,
                                                                                                    "src": "4138:26:0",
                                                                                                    "typeDescriptions": {
                                                                                                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                                                                                                        "typeString": "function () view external returns (uint256)"
                                                                                                    }
                                                                                                },
                                                                                                "id": 181,
                                                                                                "isConstant": false,
                                                                                                "isLValue": false,
                                                                                                "isPure": false,
                                                                                                "kind": "functionCall",
                                                                                                "lValueRequested": false,
                                                                                                "names": [],
                                                                                                "nodeType": "FunctionCall",
                                                                                                "src": "4138:28:0",
                                                                                                "tryCall": false,
                                                                                                "typeDescriptions": {
                                                                                                    "typeIdentifier": "t_uint256",
                                                                                                    "typeString": "uint256"
                                                                                                }
                                                                                            },
                                                                                            "id": 182,
                                                                                            "isConstant": false,
                                                                                            "isLValue": false,
                                                                                            "isPure": false,
                                                                                            "lValueRequested": false,
                                                                                            "memberName": "sub",
                                                                                            "nodeType": "MemberAccess",
                                                                                            "referencedDeclaration": 2902,
                                                                                            "src": "4138:32:0",
                                                                                            "typeDescriptions": {
                                                                                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                                                                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                                                                                            }
                                                                                        },
                                                                                        "id": 184,
                                                                                        "isConstant": false,
                                                                                        "isLValue": false,
                                                                                        "isPure": false,
                                                                                        "kind": "functionCall",
                                                                                        "lValueRequested": false,
                                                                                        "names": [],
                                                                                        "nodeType": "FunctionCall",
                                                                                        "src": "4138:41:0",
                                                                                        "tryCall": false,
                                                                                        "typeDescriptions": {
                                                                                            "typeIdentifier": "t_uint256",
                                                                                            "typeString": "uint256"
                                                                                        }
                                                                                    }
                                                                                ],
                                                                                "id": 185,
                                                                                "isConstant": false,
                                                                                "isInlineArray": false,
                                                                                "isLValue": false,
                                                                                "isPure": false,
                                                                                "lValueRequested": false,
                                                                                "nodeType": "TupleExpression",
                                                                                "src": "4137:43:0",
                                                                                "typeDescriptions": {
                                                                                    "typeIdentifier": "t_uint256",
                                                                                    "typeString": "uint256"
                                                                                }
                                                                            },
                                                                            "id": 186,
                                                                            "isConstant": false,
                                                                            "isLValue": false,
                                                                            "isPure": false,
                                                                            "lValueRequested": false,
                                                                            "memberName": "mul",
                                                                            "nodeType": "MemberAccess",
                                                                            "referencedDeclaration": 2866,
                                                                            "src": "4137:47:0",
                                                                            "typeDescriptions": {
                                                                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                                                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                                                                            }
                                                                        },
                                                                        "id": 188,
                                                                        "isConstant": false,
                                                                        "isLValue": false,
                                                                        "isPure": false,
                                                                        "kind": "functionCall",
                                                                        "lValueRequested": false,
                                                                        "names": [],
                                                                        "nodeType": "FunctionCall",
                                                                        "src": "4137:54:0",
                                                                        "tryCall": false,
                                                                        "typeDescriptions": {
                                                                            "typeIdentifier": "t_uint256",
                                                                            "typeString": "uint256"
                                                                        }
                                                                    },
                                                                    "id": 189,
                                                                    "isConstant": false,
                                                                    "isLValue": false,
                                                                    "isPure": false,
                                                                    "lValueRequested": false,
                                                                    "memberName": "div",
                                                                    "nodeType": "MemberAccess",
                                                                    "referencedDeclaration": 2881,
                                                                    "src": "4137:58:0",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                                                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                                                                    }
                                                                },
                                                                "id": 195,
                                                                "isConstant": false,
                                                                "isLValue": false,
                                                                "isPure": false,
                                                                "kind": "functionCall",
                                                                "lValueRequested": false,
                                                                "names": [],
                                                                "nodeType": "FunctionCall",
                                                                "src": "4137:88:0",
                                                                "tryCall": false,
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_uint256",
                                                                    "typeString": "uint256"
                                                                }
                                                            },
                                                            "nodeType": "BinaryOperation",
                                                            "operator": "<",
                                                            "rightExpression": {
                                                                "id": 196,
                                                                "name": "quorum",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [],
                                                                "referencedDeclaration": 15,
                                                                "src": "4228:6:0",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_uint256",
                                                                    "typeString": "uint256"
                                                                }
                                                            },
                                                            "src": "4137:97:0",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_bool",
                                                                "typeString": "bool"
                                                            }
                                                        },
                                                        "functionReturnParameters": 174,
                                                        "id": 198,
                                                        "nodeType": "Return",
                                                        "src": "4130:104:0"
                                                    }
                                                ]
                                            }
                                        }
                                    ]
                                },
                                "functionSelector": "cf42a927",
                                "id": 216,
                                "implemented": true,
                                "kind": "function",
                                "modifiers": [],
                                "name": "quorumHasFailed",
                                "nodeType": "FunctionDefinition",
                                "parameters": {
                                    "id": 171,
                                    "nodeType": "ParameterList",
                                    "parameters": [],
                                    "src": "3958:2:0"
                                },
                                "returnParameters": {
                                    "id": 174,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 173,
                                            "mutability": "mutable",
                                            "name": "",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 216,
                                            "src": "3982:4:0",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_bool",
                                                "typeString": "bool"
                                            },
                                            "typeName": {
                                                "id": 172,
                                                "name": "bool",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "3982:4:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "3981:6:0"
                                },
                                "scope": 491,
                                "src": "3934:466:0",
                                "stateMutability": "view",
                                "virtual": false,
                                "visibility": "public"
                            },
                            {
                                "body": {
                                    "id": 249,
                                    "nodeType": "Block",
                                    "src": "4490:184:0",
                                    "statements": [
                                        {
                                            "condition": {
                                                "arguments": [],
                                                "expression": {
                                                    "argumentTypes": [],
                                                    "id": 227,
                                                    "name": "isVotingOpen",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 340,
                                                    "src": "4505:12:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                                                        "typeString": "function () view returns (bool)"
                                                    }
                                                },
                                                "id": 228,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "4505:14:0",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            },
                                            "id": 248,
                                            "nodeType": "IfStatement",
                                            "src": "4501:166:0",
                                            "trueBody": {
                                                "id": 247,
                                                "nodeType": "Block",
                                                "src": "4521:146:0",
                                                "statements": [
                                                    {
                                                        "assignments": [
                                                            230
                                                        ],
                                                        "declarations": [
                                                            {
                                                                "constant": false,
                                                                "id": 230,
                                                                "mutability": "mutable",
                                                                "name": "fromVoting",
                                                                "nodeType": "VariableDeclaration",
                                                                "scope": 247,
                                                                "src": "4536:15:0",
                                                                "stateVariable": false,
                                                                "storageLocation": "default",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_enum$_Vote_$33",
                                                                    "typeString": "enum Acquisition.Vote"
                                                                },
                                                                "typeName": {
                                                                    "id": 229,
                                                                    "name": "Vote",
                                                                    "nodeType": "UserDefinedTypeName",
                                                                    "referencedDeclaration": 33,
                                                                    "src": "4536:4:0",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_enum$_Vote_$33",
                                                                        "typeString": "enum Acquisition.Vote"
                                                                    }
                                                                },
                                                                "visibility": "internal"
                                                            }
                                                        ],
                                                        "id": 234,
                                                        "initialValue": {
                                                            "baseExpression": {
                                                                "id": 231,
                                                                "name": "votes",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [],
                                                                "referencedDeclaration": 37,
                                                                "src": "4554:5:0",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_mapping$_t_address_$_t_enum$_Vote_$33_$",
                                                                    "typeString": "mapping(address => enum Acquisition.Vote)"
                                                                }
                                                            },
                                                            "id": 233,
                                                            "indexExpression": {
                                                                "id": 232,
                                                                "name": "from",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [],
                                                                "referencedDeclaration": 218,
                                                                "src": "4560:4:0",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_address",
                                                                    "typeString": "address"
                                                                }
                                                            },
                                                            "isConstant": false,
                                                            "isLValue": true,
                                                            "isPure": false,
                                                            "lValueRequested": false,
                                                            "nodeType": "IndexAccess",
                                                            "src": "4554:11:0",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_enum$_Vote_$33",
                                                                "typeString": "enum Acquisition.Vote"
                                                            }
                                                        },
                                                        "nodeType": "VariableDeclarationStatement",
                                                        "src": "4536:29:0"
                                                    },
                                                    {
                                                        "assignments": [
                                                            236
                                                        ],
                                                        "declarations": [
                                                            {
                                                                "constant": false,
                                                                "id": 236,
                                                                "mutability": "mutable",
                                                                "name": "toVoting",
                                                                "nodeType": "VariableDeclaration",
                                                                "scope": 247,
                                                                "src": "4580:13:0",
                                                                "stateVariable": false,
                                                                "storageLocation": "default",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_enum$_Vote_$33",
                                                                    "typeString": "enum Acquisition.Vote"
                                                                },
                                                                "typeName": {
                                                                    "id": 235,
                                                                    "name": "Vote",
                                                                    "nodeType": "UserDefinedTypeName",
                                                                    "referencedDeclaration": 33,
                                                                    "src": "4580:4:0",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_enum$_Vote_$33",
                                                                        "typeString": "enum Acquisition.Vote"
                                                                    }
                                                                },
                                                                "visibility": "internal"
                                                            }
                                                        ],
                                                        "id": 240,
                                                        "initialValue": {
                                                            "baseExpression": {
                                                                "id": 237,
                                                                "name": "votes",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [],
                                                                "referencedDeclaration": 37,
                                                                "src": "4596:5:0",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_mapping$_t_address_$_t_enum$_Vote_$33_$",
                                                                    "typeString": "mapping(address => enum Acquisition.Vote)"
                                                                }
                                                            },
                                                            "id": 239,
                                                            "indexExpression": {
                                                                "id": 238,
                                                                "name": "to",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [],
                                                                "referencedDeclaration": 220,
                                                                "src": "4602:2:0",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_address",
                                                                    "typeString": "address"
                                                                }
                                                            },
                                                            "isConstant": false,
                                                            "isLValue": true,
                                                            "isPure": false,
                                                            "lValueRequested": false,
                                                            "nodeType": "IndexAccess",
                                                            "src": "4596:9:0",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_enum$_Vote_$33",
                                                                "typeString": "enum Acquisition.Vote"
                                                            }
                                                        },
                                                        "nodeType": "VariableDeclarationStatement",
                                                        "src": "4580:25:0"
                                                    },
                                                    {
                                                        "expression": {
                                                            "arguments": [
                                                                {
                                                                    "id": 242,
                                                                    "name": "fromVoting",
                                                                    "nodeType": "Identifier",
                                                                    "overloadedDeclarations": [],
                                                                    "referencedDeclaration": 230,
                                                                    "src": "4627:10:0",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_enum$_Vote_$33",
                                                                        "typeString": "enum Acquisition.Vote"
                                                                    }
                                                                },
                                                                {
                                                                    "id": 243,
                                                                    "name": "toVoting",
                                                                    "nodeType": "Identifier",
                                                                    "overloadedDeclarations": [],
                                                                    "referencedDeclaration": 236,
                                                                    "src": "4639:8:0",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_enum$_Vote_$33",
                                                                        "typeString": "enum Acquisition.Vote"
                                                                    }
                                                                },
                                                                {
                                                                    "id": 244,
                                                                    "name": "value",
                                                                    "nodeType": "Identifier",
                                                                    "overloadedDeclarations": [],
                                                                    "referencedDeclaration": 222,
                                                                    "src": "4649:5:0",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_uint256",
                                                                        "typeString": "uint256"
                                                                    }
                                                                }
                                                            ],
                                                            "expression": {
                                                                "argumentTypes": [
                                                                    {
                                                                        "typeIdentifier": "t_enum$_Vote_$33",
                                                                        "typeString": "enum Acquisition.Vote"
                                                                    },
                                                                    {
                                                                        "typeIdentifier": "t_enum$_Vote_$33",
                                                                        "typeString": "enum Acquisition.Vote"
                                                                    },
                                                                    {
                                                                        "typeIdentifier": "t_uint256",
                                                                        "typeString": "uint256"
                                                                    }
                                                                ],
                                                                "id": 241,
                                                                "name": "update",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [],
                                                                "referencedDeclaration": 322,
                                                                "src": "4620:6:0",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_function_internal_nonpayable$_t_enum$_Vote_$33_$_t_enum$_Vote_$33_$_t_uint256_$returns$__$",
                                                                    "typeString": "function (enum Acquisition.Vote,enum Acquisition.Vote,uint256)"
                                                                }
                                                            },
                                                            "id": 245,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": false,
                                                            "kind": "functionCall",
                                                            "lValueRequested": false,
                                                            "names": [],
                                                            "nodeType": "FunctionCall",
                                                            "src": "4620:35:0",
                                                            "tryCall": false,
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_tuple$__$",
                                                                "typeString": "tuple()"
                                                            }
                                                        },
                                                        "id": 246,
                                                        "nodeType": "ExpressionStatement",
                                                        "src": "4620:35:0"
                                                    }
                                                ]
                                            }
                                        }
                                    ]
                                },
                                "functionSelector": "c4814fae",
                                "id": 250,
                                "implemented": true,
                                "kind": "function",
                                "modifiers": [
                                    {
                                        "arguments": [],
                                        "id": 225,
                                        "modifierName": {
                                            "id": 224,
                                            "name": "parentOnly",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 490,
                                            "src": "4477:10:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_modifier$__$",
                                                "typeString": "modifier ()"
                                            }
                                        },
                                        "nodeType": "ModifierInvocation",
                                        "src": "4477:12:0"
                                    }
                                ],
                                "name": "adjustVotes",
                                "nodeType": "FunctionDefinition",
                                "parameters": {
                                    "id": 223,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 218,
                                            "mutability": "mutable",
                                            "name": "from",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 250,
                                            "src": "4429:12:0",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            },
                                            "typeName": {
                                                "id": 217,
                                                "name": "address",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "4429:7:0",
                                                "stateMutability": "nonpayable",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            "visibility": "internal"
                                        },
                                        {
                                            "constant": false,
                                            "id": 220,
                                            "mutability": "mutable",
                                            "name": "to",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 250,
                                            "src": "4443:10:0",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            },
                                            "typeName": {
                                                "id": 219,
                                                "name": "address",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "4443:7:0",
                                                "stateMutability": "nonpayable",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            "visibility": "internal"
                                        },
                                        {
                                            "constant": false,
                                            "id": 222,
                                            "mutability": "mutable",
                                            "name": "value",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 250,
                                            "src": "4455:13:0",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            },
                                            "typeName": {
                                                "id": 221,
                                                "name": "uint256",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "4455:7:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "4428:41:0"
                                },
                                "returnParameters": {
                                    "id": 226,
                                    "nodeType": "ParameterList",
                                    "parameters": [],
                                    "src": "4490:0:0"
                                },
                                "scope": 491,
                                "src": "4408:266:0",
                                "stateMutability": "nonpayable",
                                "virtual": false,
                                "visibility": "public"
                            },
                            {
                                "body": {
                                    "id": 321,
                                    "nodeType": "Block",
                                    "src": "4756:518:0",
                                    "statements": [
                                        {
                                            "condition": {
                                                "commonType": {
                                                    "typeIdentifier": "t_enum$_Vote_$33",
                                                    "typeString": "enum Acquisition.Vote"
                                                },
                                                "id": 261,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftExpression": {
                                                    "id": 259,
                                                    "name": "previousVote",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 252,
                                                    "src": "4771:12:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_enum$_Vote_$33",
                                                        "typeString": "enum Acquisition.Vote"
                                                    }
                                                },
                                                "nodeType": "BinaryOperation",
                                                "operator": "!=",
                                                "rightExpression": {
                                                    "id": 260,
                                                    "name": "newVote",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 254,
                                                    "src": "4787:7:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_enum$_Vote_$33",
                                                        "typeString": "enum Acquisition.Vote"
                                                    }
                                                },
                                                "src": "4771:23:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            },
                                            "id": 320,
                                            "nodeType": "IfStatement",
                                            "src": "4767:500:0",
                                            "trueBody": {
                                                "id": 319,
                                                "nodeType": "Block",
                                                "src": "4796:471:0",
                                                "statements": [
                                                    {
                                                        "condition": {
                                                            "commonType": {
                                                                "typeIdentifier": "t_enum$_Vote_$33",
                                                                "typeString": "enum Acquisition.Vote"
                                                            },
                                                            "id": 265,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": false,
                                                            "lValueRequested": false,
                                                            "leftExpression": {
                                                                "id": 262,
                                                                "name": "previousVote",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [],
                                                                "referencedDeclaration": 252,
                                                                "src": "4815:12:0",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_enum$_Vote_$33",
                                                                    "typeString": "enum Acquisition.Vote"
                                                                }
                                                            },
                                                            "nodeType": "BinaryOperation",
                                                            "operator": "==",
                                                            "rightExpression": {
                                                                "expression": {
                                                                    "id": 263,
                                                                    "name": "Vote",
                                                                    "nodeType": "Identifier",
                                                                    "overloadedDeclarations": [],
                                                                    "referencedDeclaration": 33,
                                                                    "src": "4831:4:0",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_type$_t_enum$_Vote_$33_$",
                                                                        "typeString": "type(enum Acquisition.Vote)"
                                                                    }
                                                                },
                                                                "id": 264,
                                                                "isConstant": false,
                                                                "isLValue": false,
                                                                "isPure": true,
                                                                "lValueRequested": false,
                                                                "memberName": "NO",
                                                                "nodeType": "MemberAccess",
                                                                "src": "4831:7:0",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_enum$_Vote_$33",
                                                                    "typeString": "enum Acquisition.Vote"
                                                                }
                                                            },
                                                            "src": "4815:23:0",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_bool",
                                                                "typeString": "bool"
                                                            }
                                                        },
                                                        "falseBody": {
                                                            "condition": {
                                                                "commonType": {
                                                                    "typeIdentifier": "t_enum$_Vote_$33",
                                                                    "typeString": "enum Acquisition.Vote"
                                                                },
                                                                "id": 277,
                                                                "isConstant": false,
                                                                "isLValue": false,
                                                                "isPure": false,
                                                                "lValueRequested": false,
                                                                "leftExpression": {
                                                                    "id": 274,
                                                                    "name": "previousVote",
                                                                    "nodeType": "Identifier",
                                                                    "overloadedDeclarations": [],
                                                                    "referencedDeclaration": 252,
                                                                    "src": "4914:12:0",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_enum$_Vote_$33",
                                                                        "typeString": "enum Acquisition.Vote"
                                                                    }
                                                                },
                                                                "nodeType": "BinaryOperation",
                                                                "operator": "==",
                                                                "rightExpression": {
                                                                    "expression": {
                                                                        "id": 275,
                                                                        "name": "Vote",
                                                                        "nodeType": "Identifier",
                                                                        "overloadedDeclarations": [],
                                                                        "referencedDeclaration": 33,
                                                                        "src": "4930:4:0",
                                                                        "typeDescriptions": {
                                                                            "typeIdentifier": "t_type$_t_enum$_Vote_$33_$",
                                                                            "typeString": "type(enum Acquisition.Vote)"
                                                                        }
                                                                    },
                                                                    "id": 276,
                                                                    "isConstant": false,
                                                                    "isLValue": false,
                                                                    "isPure": true,
                                                                    "lValueRequested": false,
                                                                    "memberName": "YES",
                                                                    "nodeType": "MemberAccess",
                                                                    "src": "4930:8:0",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_enum$_Vote_$33",
                                                                        "typeString": "enum Acquisition.Vote"
                                                                    }
                                                                },
                                                                "src": "4914:24:0",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_bool",
                                                                    "typeString": "bool"
                                                                }
                                                            },
                                                            "id": 286,
                                                            "nodeType": "IfStatement",
                                                            "src": "4910:96:0",
                                                            "trueBody": {
                                                                "id": 285,
                                                                "nodeType": "Block",
                                                                "src": "4940:66:0",
                                                                "statements": [
                                                                    {
                                                                        "expression": {
                                                                            "id": 283,
                                                                            "isConstant": false,
                                                                            "isLValue": false,
                                                                            "isPure": false,
                                                                            "lValueRequested": false,
                                                                            "leftHandSide": {
                                                                                "id": 278,
                                                                                "name": "yesVotes",
                                                                                "nodeType": "Identifier",
                                                                                "overloadedDeclarations": [],
                                                                                "referencedDeclaration": 29,
                                                                                "src": "4959:8:0",
                                                                                "typeDescriptions": {
                                                                                    "typeIdentifier": "t_uint256",
                                                                                    "typeString": "uint256"
                                                                                }
                                                                            },
                                                                            "nodeType": "Assignment",
                                                                            "operator": "=",
                                                                            "rightHandSide": {
                                                                                "arguments": [
                                                                                    {
                                                                                        "id": 281,
                                                                                        "name": "votes_",
                                                                                        "nodeType": "Identifier",
                                                                                        "overloadedDeclarations": [],
                                                                                        "referencedDeclaration": 256,
                                                                                        "src": "4983:6:0",
                                                                                        "typeDescriptions": {
                                                                                            "typeIdentifier": "t_uint256",
                                                                                            "typeString": "uint256"
                                                                                        }
                                                                                    }
                                                                                ],
                                                                                "expression": {
                                                                                    "argumentTypes": [
                                                                                        {
                                                                                            "typeIdentifier": "t_uint256",
                                                                                            "typeString": "uint256"
                                                                                        }
                                                                                    ],
                                                                                    "expression": {
                                                                                        "id": 279,
                                                                                        "name": "yesVotes",
                                                                                        "nodeType": "Identifier",
                                                                                        "overloadedDeclarations": [],
                                                                                        "referencedDeclaration": 29,
                                                                                        "src": "4970:8:0",
                                                                                        "typeDescriptions": {
                                                                                            "typeIdentifier": "t_uint256",
                                                                                            "typeString": "uint256"
                                                                                        }
                                                                                    },
                                                                                    "id": 280,
                                                                                    "isConstant": false,
                                                                                    "isLValue": false,
                                                                                    "isPure": false,
                                                                                    "lValueRequested": false,
                                                                                    "memberName": "sub",
                                                                                    "nodeType": "MemberAccess",
                                                                                    "referencedDeclaration": 2902,
                                                                                    "src": "4970:12:0",
                                                                                    "typeDescriptions": {
                                                                                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                                                                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                                                                                    }
                                                                                },
                                                                                "id": 282,
                                                                                "isConstant": false,
                                                                                "isLValue": false,
                                                                                "isPure": false,
                                                                                "kind": "functionCall",
                                                                                "lValueRequested": false,
                                                                                "names": [],
                                                                                "nodeType": "FunctionCall",
                                                                                "src": "4970:20:0",
                                                                                "tryCall": false,
                                                                                "typeDescriptions": {
                                                                                    "typeIdentifier": "t_uint256",
                                                                                    "typeString": "uint256"
                                                                                }
                                                                            },
                                                                            "src": "4959:31:0",
                                                                            "typeDescriptions": {
                                                                                "typeIdentifier": "t_uint256",
                                                                                "typeString": "uint256"
                                                                            }
                                                                        },
                                                                        "id": 284,
                                                                        "nodeType": "ExpressionStatement",
                                                                        "src": "4959:31:0"
                                                                    }
                                                                ]
                                                            }
                                                        },
                                                        "id": 287,
                                                        "nodeType": "IfStatement",
                                                        "src": "4811:195:0",
                                                        "trueBody": {
                                                            "id": 273,
                                                            "nodeType": "Block",
                                                            "src": "4840:64:0",
                                                            "statements": [
                                                                {
                                                                    "expression": {
                                                                        "id": 271,
                                                                        "isConstant": false,
                                                                        "isLValue": false,
                                                                        "isPure": false,
                                                                        "lValueRequested": false,
                                                                        "leftHandSide": {
                                                                            "id": 266,
                                                                            "name": "noVotes",
                                                                            "nodeType": "Identifier",
                                                                            "overloadedDeclarations": [],
                                                                            "referencedDeclaration": 27,
                                                                            "src": "4859:7:0",
                                                                            "typeDescriptions": {
                                                                                "typeIdentifier": "t_uint256",
                                                                                "typeString": "uint256"
                                                                            }
                                                                        },
                                                                        "nodeType": "Assignment",
                                                                        "operator": "=",
                                                                        "rightHandSide": {
                                                                            "arguments": [
                                                                                {
                                                                                    "id": 269,
                                                                                    "name": "votes_",
                                                                                    "nodeType": "Identifier",
                                                                                    "overloadedDeclarations": [],
                                                                                    "referencedDeclaration": 256,
                                                                                    "src": "4881:6:0",
                                                                                    "typeDescriptions": {
                                                                                        "typeIdentifier": "t_uint256",
                                                                                        "typeString": "uint256"
                                                                                    }
                                                                                }
                                                                            ],
                                                                            "expression": {
                                                                                "argumentTypes": [
                                                                                    {
                                                                                        "typeIdentifier": "t_uint256",
                                                                                        "typeString": "uint256"
                                                                                    }
                                                                                ],
                                                                                "expression": {
                                                                                    "id": 267,
                                                                                    "name": "noVotes",
                                                                                    "nodeType": "Identifier",
                                                                                    "overloadedDeclarations": [],
                                                                                    "referencedDeclaration": 27,
                                                                                    "src": "4869:7:0",
                                                                                    "typeDescriptions": {
                                                                                        "typeIdentifier": "t_uint256",
                                                                                        "typeString": "uint256"
                                                                                    }
                                                                                },
                                                                                "id": 268,
                                                                                "isConstant": false,
                                                                                "isLValue": false,
                                                                                "isPure": false,
                                                                                "lValueRequested": false,
                                                                                "memberName": "sub",
                                                                                "nodeType": "MemberAccess",
                                                                                "referencedDeclaration": 2902,
                                                                                "src": "4869:11:0",
                                                                                "typeDescriptions": {
                                                                                    "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                                                                    "typeString": "function (uint256,uint256) pure returns (uint256)"
                                                                                }
                                                                            },
                                                                            "id": 270,
                                                                            "isConstant": false,
                                                                            "isLValue": false,
                                                                            "isPure": false,
                                                                            "kind": "functionCall",
                                                                            "lValueRequested": false,
                                                                            "names": [],
                                                                            "nodeType": "FunctionCall",
                                                                            "src": "4869:19:0",
                                                                            "tryCall": false,
                                                                            "typeDescriptions": {
                                                                                "typeIdentifier": "t_uint256",
                                                                                "typeString": "uint256"
                                                                            }
                                                                        },
                                                                        "src": "4859:29:0",
                                                                        "typeDescriptions": {
                                                                            "typeIdentifier": "t_uint256",
                                                                            "typeString": "uint256"
                                                                        }
                                                                    },
                                                                    "id": 272,
                                                                    "nodeType": "ExpressionStatement",
                                                                    "src": "4859:29:0"
                                                                }
                                                            ]
                                                        }
                                                    },
                                                    {
                                                        "condition": {
                                                            "commonType": {
                                                                "typeIdentifier": "t_enum$_Vote_$33",
                                                                "typeString": "enum Acquisition.Vote"
                                                            },
                                                            "id": 291,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": false,
                                                            "lValueRequested": false,
                                                            "leftExpression": {
                                                                "id": 288,
                                                                "name": "newVote",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [],
                                                                "referencedDeclaration": 254,
                                                                "src": "5024:7:0",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_enum$_Vote_$33",
                                                                    "typeString": "enum Acquisition.Vote"
                                                                }
                                                            },
                                                            "nodeType": "BinaryOperation",
                                                            "operator": "==",
                                                            "rightExpression": {
                                                                "expression": {
                                                                    "id": 289,
                                                                    "name": "Vote",
                                                                    "nodeType": "Identifier",
                                                                    "overloadedDeclarations": [],
                                                                    "referencedDeclaration": 33,
                                                                    "src": "5035:4:0",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_type$_t_enum$_Vote_$33_$",
                                                                        "typeString": "type(enum Acquisition.Vote)"
                                                                    }
                                                                },
                                                                "id": 290,
                                                                "isConstant": false,
                                                                "isLValue": false,
                                                                "isPure": true,
                                                                "lValueRequested": false,
                                                                "memberName": "NO",
                                                                "nodeType": "MemberAccess",
                                                                "src": "5035:7:0",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_enum$_Vote_$33",
                                                                    "typeString": "enum Acquisition.Vote"
                                                                }
                                                            },
                                                            "src": "5024:18:0",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_bool",
                                                                "typeString": "bool"
                                                            }
                                                        },
                                                        "falseBody": {
                                                            "condition": {
                                                                "commonType": {
                                                                    "typeIdentifier": "t_enum$_Vote_$33",
                                                                    "typeString": "enum Acquisition.Vote"
                                                                },
                                                                "id": 303,
                                                                "isConstant": false,
                                                                "isLValue": false,
                                                                "isPure": false,
                                                                "lValueRequested": false,
                                                                "leftExpression": {
                                                                    "id": 300,
                                                                    "name": "newVote",
                                                                    "nodeType": "Identifier",
                                                                    "overloadedDeclarations": [],
                                                                    "referencedDeclaration": 254,
                                                                    "src": "5118:7:0",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_enum$_Vote_$33",
                                                                        "typeString": "enum Acquisition.Vote"
                                                                    }
                                                                },
                                                                "nodeType": "BinaryOperation",
                                                                "operator": "==",
                                                                "rightExpression": {
                                                                    "expression": {
                                                                        "id": 301,
                                                                        "name": "Vote",
                                                                        "nodeType": "Identifier",
                                                                        "overloadedDeclarations": [],
                                                                        "referencedDeclaration": 33,
                                                                        "src": "5129:4:0",
                                                                        "typeDescriptions": {
                                                                            "typeIdentifier": "t_type$_t_enum$_Vote_$33_$",
                                                                            "typeString": "type(enum Acquisition.Vote)"
                                                                        }
                                                                    },
                                                                    "id": 302,
                                                                    "isConstant": false,
                                                                    "isLValue": false,
                                                                    "isPure": true,
                                                                    "lValueRequested": false,
                                                                    "memberName": "YES",
                                                                    "nodeType": "MemberAccess",
                                                                    "src": "5129:8:0",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_enum$_Vote_$33",
                                                                        "typeString": "enum Acquisition.Vote"
                                                                    }
                                                                },
                                                                "src": "5118:19:0",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_bool",
                                                                    "typeString": "bool"
                                                                }
                                                            },
                                                            "id": 312,
                                                            "nodeType": "IfStatement",
                                                            "src": "5114:91:0",
                                                            "trueBody": {
                                                                "id": 311,
                                                                "nodeType": "Block",
                                                                "src": "5139:66:0",
                                                                "statements": [
                                                                    {
                                                                        "expression": {
                                                                            "id": 309,
                                                                            "isConstant": false,
                                                                            "isLValue": false,
                                                                            "isPure": false,
                                                                            "lValueRequested": false,
                                                                            "leftHandSide": {
                                                                                "id": 304,
                                                                                "name": "yesVotes",
                                                                                "nodeType": "Identifier",
                                                                                "overloadedDeclarations": [],
                                                                                "referencedDeclaration": 29,
                                                                                "src": "5158:8:0",
                                                                                "typeDescriptions": {
                                                                                    "typeIdentifier": "t_uint256",
                                                                                    "typeString": "uint256"
                                                                                }
                                                                            },
                                                                            "nodeType": "Assignment",
                                                                            "operator": "=",
                                                                            "rightHandSide": {
                                                                                "arguments": [
                                                                                    {
                                                                                        "id": 307,
                                                                                        "name": "votes_",
                                                                                        "nodeType": "Identifier",
                                                                                        "overloadedDeclarations": [],
                                                                                        "referencedDeclaration": 256,
                                                                                        "src": "5182:6:0",
                                                                                        "typeDescriptions": {
                                                                                            "typeIdentifier": "t_uint256",
                                                                                            "typeString": "uint256"
                                                                                        }
                                                                                    }
                                                                                ],
                                                                                "expression": {
                                                                                    "argumentTypes": [
                                                                                        {
                                                                                            "typeIdentifier": "t_uint256",
                                                                                            "typeString": "uint256"
                                                                                        }
                                                                                    ],
                                                                                    "expression": {
                                                                                        "id": 305,
                                                                                        "name": "yesVotes",
                                                                                        "nodeType": "Identifier",
                                                                                        "overloadedDeclarations": [],
                                                                                        "referencedDeclaration": 29,
                                                                                        "src": "5169:8:0",
                                                                                        "typeDescriptions": {
                                                                                            "typeIdentifier": "t_uint256",
                                                                                            "typeString": "uint256"
                                                                                        }
                                                                                    },
                                                                                    "id": 306,
                                                                                    "isConstant": false,
                                                                                    "isLValue": false,
                                                                                    "isPure": false,
                                                                                    "lValueRequested": false,
                                                                                    "memberName": "add",
                                                                                    "nodeType": "MemberAccess",
                                                                                    "referencedDeclaration": 2927,
                                                                                    "src": "5169:12:0",
                                                                                    "typeDescriptions": {
                                                                                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                                                                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                                                                                    }
                                                                                },
                                                                                "id": 308,
                                                                                "isConstant": false,
                                                                                "isLValue": false,
                                                                                "isPure": false,
                                                                                "kind": "functionCall",
                                                                                "lValueRequested": false,
                                                                                "names": [],
                                                                                "nodeType": "FunctionCall",
                                                                                "src": "5169:20:0",
                                                                                "tryCall": false,
                                                                                "typeDescriptions": {
                                                                                    "typeIdentifier": "t_uint256",
                                                                                    "typeString": "uint256"
                                                                                }
                                                                            },
                                                                            "src": "5158:31:0",
                                                                            "typeDescriptions": {
                                                                                "typeIdentifier": "t_uint256",
                                                                                "typeString": "uint256"
                                                                            }
                                                                        },
                                                                        "id": 310,
                                                                        "nodeType": "ExpressionStatement",
                                                                        "src": "5158:31:0"
                                                                    }
                                                                ]
                                                            }
                                                        },
                                                        "id": 313,
                                                        "nodeType": "IfStatement",
                                                        "src": "5020:185:0",
                                                        "trueBody": {
                                                            "id": 299,
                                                            "nodeType": "Block",
                                                            "src": "5044:64:0",
                                                            "statements": [
                                                                {
                                                                    "expression": {
                                                                        "id": 297,
                                                                        "isConstant": false,
                                                                        "isLValue": false,
                                                                        "isPure": false,
                                                                        "lValueRequested": false,
                                                                        "leftHandSide": {
                                                                            "id": 292,
                                                                            "name": "noVotes",
                                                                            "nodeType": "Identifier",
                                                                            "overloadedDeclarations": [],
                                                                            "referencedDeclaration": 27,
                                                                            "src": "5063:7:0",
                                                                            "typeDescriptions": {
                                                                                "typeIdentifier": "t_uint256",
                                                                                "typeString": "uint256"
                                                                            }
                                                                        },
                                                                        "nodeType": "Assignment",
                                                                        "operator": "=",
                                                                        "rightHandSide": {
                                                                            "arguments": [
                                                                                {
                                                                                    "id": 295,
                                                                                    "name": "votes_",
                                                                                    "nodeType": "Identifier",
                                                                                    "overloadedDeclarations": [],
                                                                                    "referencedDeclaration": 256,
                                                                                    "src": "5085:6:0",
                                                                                    "typeDescriptions": {
                                                                                        "typeIdentifier": "t_uint256",
                                                                                        "typeString": "uint256"
                                                                                    }
                                                                                }
                                                                            ],
                                                                            "expression": {
                                                                                "argumentTypes": [
                                                                                    {
                                                                                        "typeIdentifier": "t_uint256",
                                                                                        "typeString": "uint256"
                                                                                    }
                                                                                ],
                                                                                "expression": {
                                                                                    "id": 293,
                                                                                    "name": "noVotes",
                                                                                    "nodeType": "Identifier",
                                                                                    "overloadedDeclarations": [],
                                                                                    "referencedDeclaration": 27,
                                                                                    "src": "5073:7:0",
                                                                                    "typeDescriptions": {
                                                                                        "typeIdentifier": "t_uint256",
                                                                                        "typeString": "uint256"
                                                                                    }
                                                                                },
                                                                                "id": 294,
                                                                                "isConstant": false,
                                                                                "isLValue": false,
                                                                                "isPure": false,
                                                                                "lValueRequested": false,
                                                                                "memberName": "add",
                                                                                "nodeType": "MemberAccess",
                                                                                "referencedDeclaration": 2927,
                                                                                "src": "5073:11:0",
                                                                                "typeDescriptions": {
                                                                                    "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                                                                    "typeString": "function (uint256,uint256) pure returns (uint256)"
                                                                                }
                                                                            },
                                                                            "id": 296,
                                                                            "isConstant": false,
                                                                            "isLValue": false,
                                                                            "isPure": false,
                                                                            "kind": "functionCall",
                                                                            "lValueRequested": false,
                                                                            "names": [],
                                                                            "nodeType": "FunctionCall",
                                                                            "src": "5073:19:0",
                                                                            "tryCall": false,
                                                                            "typeDescriptions": {
                                                                                "typeIdentifier": "t_uint256",
                                                                                "typeString": "uint256"
                                                                            }
                                                                        },
                                                                        "src": "5063:29:0",
                                                                        "typeDescriptions": {
                                                                            "typeIdentifier": "t_uint256",
                                                                            "typeString": "uint256"
                                                                        }
                                                                    },
                                                                    "id": 298,
                                                                    "nodeType": "ExpressionStatement",
                                                                    "src": "5063:29:0"
                                                                }
                                                            ]
                                                        }
                                                    },
                                                    {
                                                        "eventCall": {
                                                            "arguments": [
                                                                {
                                                                    "id": 315,
                                                                    "name": "yesVotes",
                                                                    "nodeType": "Identifier",
                                                                    "overloadedDeclarations": [],
                                                                    "referencedDeclaration": 29,
                                                                    "src": "5237:8:0",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_uint256",
                                                                        "typeString": "uint256"
                                                                    }
                                                                },
                                                                {
                                                                    "id": 316,
                                                                    "name": "noVotes",
                                                                    "nodeType": "Identifier",
                                                                    "overloadedDeclarations": [],
                                                                    "referencedDeclaration": 27,
                                                                    "src": "5247:7:0",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_uint256",
                                                                        "typeString": "uint256"
                                                                    }
                                                                }
                                                            ],
                                                            "expression": {
                                                                "argumentTypes": [
                                                                    {
                                                                        "typeIdentifier": "t_uint256",
                                                                        "typeString": "uint256"
                                                                    },
                                                                    {
                                                                        "typeIdentifier": "t_uint256",
                                                                        "typeString": "uint256"
                                                                    }
                                                                ],
                                                                "id": 314,
                                                                "name": "VotesChanged",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [],
                                                                "referencedDeclaration": 43,
                                                                "src": "5224:12:0",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                                                                    "typeString": "function (uint256,uint256)"
                                                                }
                                                            },
                                                            "id": 317,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": false,
                                                            "kind": "functionCall",
                                                            "lValueRequested": false,
                                                            "names": [],
                                                            "nodeType": "FunctionCall",
                                                            "src": "5224:31:0",
                                                            "tryCall": false,
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_tuple$__$",
                                                                "typeString": "tuple()"
                                                            }
                                                        },
                                                        "id": 318,
                                                        "nodeType": "EmitStatement",
                                                        "src": "5219:36:0"
                                                    }
                                                ]
                                            }
                                        }
                                    ]
                                },
                                "id": 322,
                                "implemented": true,
                                "kind": "function",
                                "modifiers": [],
                                "name": "update",
                                "nodeType": "FunctionDefinition",
                                "parameters": {
                                    "id": 257,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 252,
                                            "mutability": "mutable",
                                            "name": "previousVote",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 322,
                                            "src": "4698:17:0",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_enum$_Vote_$33",
                                                "typeString": "enum Acquisition.Vote"
                                            },
                                            "typeName": {
                                                "id": 251,
                                                "name": "Vote",
                                                "nodeType": "UserDefinedTypeName",
                                                "referencedDeclaration": 33,
                                                "src": "4698:4:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_enum$_Vote_$33",
                                                    "typeString": "enum Acquisition.Vote"
                                                }
                                            },
                                            "visibility": "internal"
                                        },
                                        {
                                            "constant": false,
                                            "id": 254,
                                            "mutability": "mutable",
                                            "name": "newVote",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 322,
                                            "src": "4717:12:0",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_enum$_Vote_$33",
                                                "typeString": "enum Acquisition.Vote"
                                            },
                                            "typeName": {
                                                "id": 253,
                                                "name": "Vote",
                                                "nodeType": "UserDefinedTypeName",
                                                "referencedDeclaration": 33,
                                                "src": "4717:4:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_enum$_Vote_$33",
                                                    "typeString": "enum Acquisition.Vote"
                                                }
                                            },
                                            "visibility": "internal"
                                        },
                                        {
                                            "constant": false,
                                            "id": 256,
                                            "mutability": "mutable",
                                            "name": "votes_",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 322,
                                            "src": "4731:14:0",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            },
                                            "typeName": {
                                                "id": 255,
                                                "name": "uint256",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "4731:7:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "4697:49:0"
                                },
                                "returnParameters": {
                                    "id": 258,
                                    "nodeType": "ParameterList",
                                    "parameters": [],
                                    "src": "4756:0:0"
                                },
                                "scope": 491,
                                "src": "4682:592:0",
                                "stateMutability": "nonpayable",
                                "virtual": false,
                                "visibility": "internal"
                            },
                            {
                                "body": {
                                    "id": 339,
                                    "nodeType": "Block",
                                    "src": "5333:101:0",
                                    "statements": [
                                        {
                                            "assignments": [
                                                328
                                            ],
                                            "declarations": [
                                                {
                                                    "constant": false,
                                                    "id": 328,
                                                    "mutability": "mutable",
                                                    "name": "age",
                                                    "nodeType": "VariableDeclaration",
                                                    "scope": 339,
                                                    "src": "5344:11:0",
                                                    "stateVariable": false,
                                                    "storageLocation": "default",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    },
                                                    "typeName": {
                                                        "id": 327,
                                                        "name": "uint256",
                                                        "nodeType": "ElementaryTypeName",
                                                        "src": "5344:7:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        }
                                                    },
                                                    "visibility": "internal"
                                                }
                                            ],
                                            "id": 334,
                                            "initialValue": {
                                                "arguments": [
                                                    {
                                                        "id": 332,
                                                        "name": "timestamp",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 25,
                                                        "src": "5378:9:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        }
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        }
                                                    ],
                                                    "expression": {
                                                        "expression": {
                                                            "id": 329,
                                                            "name": "block",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": -4,
                                                            "src": "5358:5:0",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_magic_block",
                                                                "typeString": "block"
                                                            }
                                                        },
                                                        "id": 330,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "memberName": "timestamp",
                                                        "nodeType": "MemberAccess",
                                                        "src": "5358:15:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        }
                                                    },
                                                    "id": 331,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "memberName": "sub",
                                                    "nodeType": "MemberAccess",
                                                    "referencedDeclaration": 2902,
                                                    "src": "5358:19:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                                                    }
                                                },
                                                "id": 333,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "5358:30:0",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            },
                                            "nodeType": "VariableDeclarationStatement",
                                            "src": "5344:44:0"
                                        },
                                        {
                                            "expression": {
                                                "commonType": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                },
                                                "id": 337,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftExpression": {
                                                    "id": 335,
                                                    "name": "age",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 328,
                                                    "src": "5406:3:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    }
                                                },
                                                "nodeType": "BinaryOperation",
                                                "operator": "<=",
                                                "rightExpression": {
                                                    "id": 336,
                                                    "name": "VOTING_PERIOD",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 10,
                                                    "src": "5413:13:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    }
                                                },
                                                "src": "5406:20:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            },
                                            "functionReturnParameters": 326,
                                            "id": 338,
                                            "nodeType": "Return",
                                            "src": "5399:27:0"
                                        }
                                    ]
                                },
                                "functionSelector": "fa7f1bae",
                                "id": 340,
                                "implemented": true,
                                "kind": "function",
                                "modifiers": [],
                                "name": "isVotingOpen",
                                "nodeType": "FunctionDefinition",
                                "parameters": {
                                    "id": 323,
                                    "nodeType": "ParameterList",
                                    "parameters": [],
                                    "src": "5303:2:0"
                                },
                                "returnParameters": {
                                    "id": 326,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 325,
                                            "mutability": "mutable",
                                            "name": "",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 340,
                                            "src": "5327:4:0",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_bool",
                                                "typeString": "bool"
                                            },
                                            "typeName": {
                                                "id": 324,
                                                "name": "bool",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "5327:4:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "5326:6:0"
                                },
                                "scope": 491,
                                "src": "5282:152:0",
                                "stateMutability": "view",
                                "virtual": false,
                                "visibility": "public"
                            },
                            {
                                "body": {
                                    "id": 357,
                                    "nodeType": "Block",
                                    "src": "5491:102:0",
                                    "statements": [
                                        {
                                            "assignments": [
                                                346
                                            ],
                                            "declarations": [
                                                {
                                                    "constant": false,
                                                    "id": 346,
                                                    "mutability": "mutable",
                                                    "name": "age",
                                                    "nodeType": "VariableDeclaration",
                                                    "scope": 357,
                                                    "src": "5502:11:0",
                                                    "stateVariable": false,
                                                    "storageLocation": "default",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    },
                                                    "typeName": {
                                                        "id": 345,
                                                        "name": "uint256",
                                                        "nodeType": "ElementaryTypeName",
                                                        "src": "5502:7:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        }
                                                    },
                                                    "visibility": "internal"
                                                }
                                            ],
                                            "id": 352,
                                            "initialValue": {
                                                "arguments": [
                                                    {
                                                        "id": 350,
                                                        "name": "timestamp",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 25,
                                                        "src": "5536:9:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        }
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        }
                                                    ],
                                                    "expression": {
                                                        "expression": {
                                                            "id": 347,
                                                            "name": "block",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": -4,
                                                            "src": "5516:5:0",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_magic_block",
                                                                "typeString": "block"
                                                            }
                                                        },
                                                        "id": 348,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "memberName": "timestamp",
                                                        "nodeType": "MemberAccess",
                                                        "src": "5516:15:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        }
                                                    },
                                                    "id": 349,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "memberName": "sub",
                                                    "nodeType": "MemberAccess",
                                                    "referencedDeclaration": 2902,
                                                    "src": "5516:19:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                                                    }
                                                },
                                                "id": 351,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "5516:30:0",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            },
                                            "nodeType": "VariableDeclarationStatement",
                                            "src": "5502:44:0"
                                        },
                                        {
                                            "expression": {
                                                "commonType": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                },
                                                "id": 355,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftExpression": {
                                                    "id": 353,
                                                    "name": "age",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 346,
                                                    "src": "5564:3:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    }
                                                },
                                                "nodeType": "BinaryOperation",
                                                "operator": ">",
                                                "rightExpression": {
                                                    "id": 354,
                                                    "name": "VALIDITY_PERIOD",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 13,
                                                    "src": "5570:15:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    }
                                                },
                                                "src": "5564:21:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            },
                                            "functionReturnParameters": 344,
                                            "id": 356,
                                            "nodeType": "Return",
                                            "src": "5557:28:0"
                                        }
                                    ]
                                },
                                "functionSelector": "90e64d13",
                                "id": 358,
                                "implemented": true,
                                "kind": "function",
                                "modifiers": [],
                                "name": "hasExpired",
                                "nodeType": "FunctionDefinition",
                                "parameters": {
                                    "id": 341,
                                    "nodeType": "ParameterList",
                                    "parameters": [],
                                    "src": "5461:2:0"
                                },
                                "returnParameters": {
                                    "id": 344,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 343,
                                            "mutability": "mutable",
                                            "name": "",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 358,
                                            "src": "5485:4:0",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_bool",
                                                "typeString": "bool"
                                            },
                                            "typeName": {
                                                "id": 342,
                                                "name": "bool",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "5485:4:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "5484:6:0"
                                },
                                "scope": 491,
                                "src": "5442:151:0",
                                "stateMutability": "view",
                                "virtual": false,
                                "visibility": "public"
                            },
                            {
                                "body": {
                                    "id": 367,
                                    "nodeType": "Block",
                                    "src": "5623:77:0",
                                    "statements": [
                                        {
                                            "expression": {
                                                "arguments": [
                                                    {
                                                        "arguments": [],
                                                        "expression": {
                                                            "argumentTypes": [],
                                                            "id": 361,
                                                            "name": "isVotingOpen",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 340,
                                                            "src": "5642:12:0",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                                                                "typeString": "function () view returns (bool)"
                                                            }
                                                        },
                                                        "id": 362,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "kind": "functionCall",
                                                        "lValueRequested": false,
                                                        "names": [],
                                                        "nodeType": "FunctionCall",
                                                        "src": "5642:14:0",
                                                        "tryCall": false,
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_bool",
                                                            "typeString": "bool"
                                                        }
                                                    },
                                                    {
                                                        "hexValue": "54686520766f74652068617320656e6465642e",
                                                        "id": 363,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": true,
                                                        "kind": "string",
                                                        "lValueRequested": false,
                                                        "nodeType": "Literal",
                                                        "src": "5658:21:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_stringliteral_ededb1ea91fec7b34023c24a03d26a9b90b4a69c8472ec59f58426228576d721",
                                                            "typeString": "literal_string \"The vote has ended.\""
                                                        },
                                                        "value": "The vote has ended."
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_bool",
                                                            "typeString": "bool"
                                                        },
                                                        {
                                                            "typeIdentifier": "t_stringliteral_ededb1ea91fec7b34023c24a03d26a9b90b4a69c8472ec59f58426228576d721",
                                                            "typeString": "literal_string \"The vote has ended.\""
                                                        }
                                                    ],
                                                    "id": 360,
                                                    "name": "require",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [
                                                        -18,
                                                        -18
                                                    ],
                                                    "referencedDeclaration": -18,
                                                    "src": "5634:7:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                                        "typeString": "function (bool,string memory) pure"
                                                    }
                                                },
                                                "id": 364,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "5634:46:0",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_tuple$__$",
                                                    "typeString": "tuple()"
                                                }
                                            },
                                            "id": 365,
                                            "nodeType": "ExpressionStatement",
                                            "src": "5634:46:0"
                                        },
                                        {
                                            "id": 366,
                                            "nodeType": "PlaceholderStatement",
                                            "src": "5691:1:0"
                                        }
                                    ]
                                },
                                "id": 368,
                                "name": "votingOpen",
                                "nodeType": "ModifierDefinition",
                                "parameters": {
                                    "id": 359,
                                    "nodeType": "ParameterList",
                                    "parameters": [],
                                    "src": "5620:2:0"
                                },
                                "src": "5601:99:0",
                                "virtual": false,
                                "visibility": "internal"
                            },
                            {
                                "body": {
                                    "id": 386,
                                    "nodeType": "Block",
                                    "src": "5790:49:0",
                                    "statements": [
                                        {
                                            "expression": {
                                                "arguments": [
                                                    {
                                                        "expression": {
                                                            "id": 380,
                                                            "name": "Vote",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 33,
                                                            "src": "5806:4:0",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_type$_t_enum$_Vote_$33_$",
                                                                "typeString": "type(enum Acquisition.Vote)"
                                                            }
                                                        },
                                                        "id": 381,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": true,
                                                        "lValueRequested": false,
                                                        "memberName": "YES",
                                                        "nodeType": "MemberAccess",
                                                        "src": "5806:8:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_enum$_Vote_$33",
                                                            "typeString": "enum Acquisition.Vote"
                                                        }
                                                    },
                                                    {
                                                        "id": 382,
                                                        "name": "votes_",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 372,
                                                        "src": "5816:6:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        }
                                                    },
                                                    {
                                                        "id": 383,
                                                        "name": "sender",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 370,
                                                        "src": "5824:6:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        }
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_enum$_Vote_$33",
                                                            "typeString": "enum Acquisition.Vote"
                                                        },
                                                        {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        },
                                                        {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        }
                                                    ],
                                                    "id": 379,
                                                    "name": "vote",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 438,
                                                    "src": "5801:4:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_function_internal_nonpayable$_t_enum$_Vote_$33_$_t_uint256_$_t_address_$returns$__$",
                                                        "typeString": "function (enum Acquisition.Vote,uint256,address)"
                                                    }
                                                },
                                                "id": 384,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "5801:30:0",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_tuple$__$",
                                                    "typeString": "tuple()"
                                                }
                                            },
                                            "id": 385,
                                            "nodeType": "ExpressionStatement",
                                            "src": "5801:30:0"
                                        }
                                    ]
                                },
                                "functionSelector": "5ff0cf84",
                                "id": 387,
                                "implemented": true,
                                "kind": "function",
                                "modifiers": [
                                    {
                                        "arguments": [],
                                        "id": 375,
                                        "modifierName": {
                                            "id": 374,
                                            "name": "parentOnly",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 490,
                                            "src": "5764:10:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_modifier$__$",
                                                "typeString": "modifier ()"
                                            }
                                        },
                                        "nodeType": "ModifierInvocation",
                                        "src": "5764:12:0"
                                    },
                                    {
                                        "arguments": [],
                                        "id": 377,
                                        "modifierName": {
                                            "id": 376,
                                            "name": "votingOpen",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 368,
                                            "src": "5777:10:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_modifier$__$",
                                                "typeString": "modifier ()"
                                            }
                                        },
                                        "nodeType": "ModifierInvocation",
                                        "src": "5777:12:0"
                                    }
                                ],
                                "name": "voteYes",
                                "nodeType": "FunctionDefinition",
                                "parameters": {
                                    "id": 373,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 370,
                                            "mutability": "mutable",
                                            "name": "sender",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 387,
                                            "src": "5725:14:0",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            },
                                            "typeName": {
                                                "id": 369,
                                                "name": "address",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "5725:7:0",
                                                "stateMutability": "nonpayable",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            "visibility": "internal"
                                        },
                                        {
                                            "constant": false,
                                            "id": 372,
                                            "mutability": "mutable",
                                            "name": "votes_",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 387,
                                            "src": "5741:14:0",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            },
                                            "typeName": {
                                                "id": 371,
                                                "name": "uint256",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "5741:7:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "5724:32:0"
                                },
                                "returnParameters": {
                                    "id": 378,
                                    "nodeType": "ParameterList",
                                    "parameters": [],
                                    "src": "5790:0:0"
                                },
                                "scope": 491,
                                "src": "5708:131:0",
                                "stateMutability": "nonpayable",
                                "virtual": false,
                                "visibility": "public"
                            },
                            {
                                "body": {
                                    "id": 405,
                                    "nodeType": "Block",
                                    "src": "5928:48:0",
                                    "statements": [
                                        {
                                            "expression": {
                                                "arguments": [
                                                    {
                                                        "expression": {
                                                            "id": 399,
                                                            "name": "Vote",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 33,
                                                            "src": "5944:4:0",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_type$_t_enum$_Vote_$33_$",
                                                                "typeString": "type(enum Acquisition.Vote)"
                                                            }
                                                        },
                                                        "id": 400,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": true,
                                                        "lValueRequested": false,
                                                        "memberName": "NO",
                                                        "nodeType": "MemberAccess",
                                                        "src": "5944:7:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_enum$_Vote_$33",
                                                            "typeString": "enum Acquisition.Vote"
                                                        }
                                                    },
                                                    {
                                                        "id": 401,
                                                        "name": "votes_",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 391,
                                                        "src": "5953:6:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        }
                                                    },
                                                    {
                                                        "id": 402,
                                                        "name": "sender",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 389,
                                                        "src": "5961:6:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        }
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_enum$_Vote_$33",
                                                            "typeString": "enum Acquisition.Vote"
                                                        },
                                                        {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        },
                                                        {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        }
                                                    ],
                                                    "id": 398,
                                                    "name": "vote",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 438,
                                                    "src": "5939:4:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_function_internal_nonpayable$_t_enum$_Vote_$33_$_t_uint256_$_t_address_$returns$__$",
                                                        "typeString": "function (enum Acquisition.Vote,uint256,address)"
                                                    }
                                                },
                                                "id": 403,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "5939:29:0",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_tuple$__$",
                                                    "typeString": "tuple()"
                                                }
                                            },
                                            "id": 404,
                                            "nodeType": "ExpressionStatement",
                                            "src": "5939:29:0"
                                        }
                                    ]
                                },
                                "functionSelector": "4b91562e",
                                "id": 406,
                                "implemented": true,
                                "kind": "function",
                                "modifiers": [
                                    {
                                        "arguments": [],
                                        "id": 394,
                                        "modifierName": {
                                            "id": 393,
                                            "name": "parentOnly",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 490,
                                            "src": "5902:10:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_modifier$__$",
                                                "typeString": "modifier ()"
                                            }
                                        },
                                        "nodeType": "ModifierInvocation",
                                        "src": "5902:12:0"
                                    },
                                    {
                                        "arguments": [],
                                        "id": 396,
                                        "modifierName": {
                                            "id": 395,
                                            "name": "votingOpen",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 368,
                                            "src": "5915:10:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_modifier$__$",
                                                "typeString": "modifier ()"
                                            }
                                        },
                                        "nodeType": "ModifierInvocation",
                                        "src": "5915:12:0"
                                    }
                                ],
                                "name": "voteNo",
                                "nodeType": "FunctionDefinition",
                                "parameters": {
                                    "id": 392,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 389,
                                            "mutability": "mutable",
                                            "name": "sender",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 406,
                                            "src": "5863:14:0",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            },
                                            "typeName": {
                                                "id": 388,
                                                "name": "address",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "5863:7:0",
                                                "stateMutability": "nonpayable",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            "visibility": "internal"
                                        },
                                        {
                                            "constant": false,
                                            "id": 391,
                                            "mutability": "mutable",
                                            "name": "votes_",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 406,
                                            "src": "5879:14:0",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            },
                                            "typeName": {
                                                "id": 390,
                                                "name": "uint256",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "5879:7:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "5862:32:0"
                                },
                                "returnParameters": {
                                    "id": 397,
                                    "nodeType": "ParameterList",
                                    "parameters": [],
                                    "src": "5928:0:0"
                                },
                                "scope": 491,
                                "src": "5847:129:0",
                                "stateMutability": "nonpayable",
                                "virtual": false,
                                "visibility": "public"
                            },
                            {
                                "body": {
                                    "id": 437,
                                    "nodeType": "Block",
                                    "src": "6052:165:0",
                                    "statements": [
                                        {
                                            "assignments": [
                                                416
                                            ],
                                            "declarations": [
                                                {
                                                    "constant": false,
                                                    "id": 416,
                                                    "mutability": "mutable",
                                                    "name": "previousVote",
                                                    "nodeType": "VariableDeclaration",
                                                    "scope": 437,
                                                    "src": "6063:17:0",
                                                    "stateVariable": false,
                                                    "storageLocation": "default",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_enum$_Vote_$33",
                                                        "typeString": "enum Acquisition.Vote"
                                                    },
                                                    "typeName": {
                                                        "id": 415,
                                                        "name": "Vote",
                                                        "nodeType": "UserDefinedTypeName",
                                                        "referencedDeclaration": 33,
                                                        "src": "6063:4:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_enum$_Vote_$33",
                                                            "typeString": "enum Acquisition.Vote"
                                                        }
                                                    },
                                                    "visibility": "internal"
                                                }
                                            ],
                                            "id": 420,
                                            "initialValue": {
                                                "baseExpression": {
                                                    "id": 417,
                                                    "name": "votes",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 37,
                                                    "src": "6083:5:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_mapping$_t_address_$_t_enum$_Vote_$33_$",
                                                        "typeString": "mapping(address => enum Acquisition.Vote)"
                                                    }
                                                },
                                                "id": 419,
                                                "indexExpression": {
                                                    "id": 418,
                                                    "name": "voter",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 412,
                                                    "src": "6089:5:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_address",
                                                        "typeString": "address"
                                                    }
                                                },
                                                "isConstant": false,
                                                "isLValue": true,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "nodeType": "IndexAccess",
                                                "src": "6083:12:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_enum$_Vote_$33",
                                                    "typeString": "enum Acquisition.Vote"
                                                }
                                            },
                                            "nodeType": "VariableDeclarationStatement",
                                            "src": "6063:32:0"
                                        },
                                        {
                                            "assignments": [
                                                422
                                            ],
                                            "declarations": [
                                                {
                                                    "constant": false,
                                                    "id": 422,
                                                    "mutability": "mutable",
                                                    "name": "newVote",
                                                    "nodeType": "VariableDeclaration",
                                                    "scope": 437,
                                                    "src": "6106:12:0",
                                                    "stateVariable": false,
                                                    "storageLocation": "default",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_enum$_Vote_$33",
                                                        "typeString": "enum Acquisition.Vote"
                                                    },
                                                    "typeName": {
                                                        "id": 421,
                                                        "name": "Vote",
                                                        "nodeType": "UserDefinedTypeName",
                                                        "referencedDeclaration": 33,
                                                        "src": "6106:4:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_enum$_Vote_$33",
                                                            "typeString": "enum Acquisition.Vote"
                                                        }
                                                    },
                                                    "visibility": "internal"
                                                }
                                            ],
                                            "id": 424,
                                            "initialValue": {
                                                "id": 423,
                                                "name": "yesOrNo",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 408,
                                                "src": "6121:7:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_enum$_Vote_$33",
                                                    "typeString": "enum Acquisition.Vote"
                                                }
                                            },
                                            "nodeType": "VariableDeclarationStatement",
                                            "src": "6106:22:0"
                                        },
                                        {
                                            "expression": {
                                                "id": 429,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftHandSide": {
                                                    "baseExpression": {
                                                        "id": 425,
                                                        "name": "votes",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 37,
                                                        "src": "6139:5:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_mapping$_t_address_$_t_enum$_Vote_$33_$",
                                                            "typeString": "mapping(address => enum Acquisition.Vote)"
                                                        }
                                                    },
                                                    "id": 427,
                                                    "indexExpression": {
                                                        "id": 426,
                                                        "name": "voter",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 412,
                                                        "src": "6145:5:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        }
                                                    },
                                                    "isConstant": false,
                                                    "isLValue": true,
                                                    "isPure": false,
                                                    "lValueRequested": true,
                                                    "nodeType": "IndexAccess",
                                                    "src": "6139:12:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_enum$_Vote_$33",
                                                        "typeString": "enum Acquisition.Vote"
                                                    }
                                                },
                                                "nodeType": "Assignment",
                                                "operator": "=",
                                                "rightHandSide": {
                                                    "id": 428,
                                                    "name": "newVote",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 422,
                                                    "src": "6154:7:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_enum$_Vote_$33",
                                                        "typeString": "enum Acquisition.Vote"
                                                    }
                                                },
                                                "src": "6139:22:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_enum$_Vote_$33",
                                                    "typeString": "enum Acquisition.Vote"
                                                }
                                            },
                                            "id": 430,
                                            "nodeType": "ExpressionStatement",
                                            "src": "6139:22:0"
                                        },
                                        {
                                            "expression": {
                                                "arguments": [
                                                    {
                                                        "id": 432,
                                                        "name": "previousVote",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 416,
                                                        "src": "6179:12:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_enum$_Vote_$33",
                                                            "typeString": "enum Acquisition.Vote"
                                                        }
                                                    },
                                                    {
                                                        "id": 433,
                                                        "name": "newVote",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 422,
                                                        "src": "6193:7:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_enum$_Vote_$33",
                                                            "typeString": "enum Acquisition.Vote"
                                                        }
                                                    },
                                                    {
                                                        "id": 434,
                                                        "name": "votes_",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 410,
                                                        "src": "6202:6:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        }
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_enum$_Vote_$33",
                                                            "typeString": "enum Acquisition.Vote"
                                                        },
                                                        {
                                                            "typeIdentifier": "t_enum$_Vote_$33",
                                                            "typeString": "enum Acquisition.Vote"
                                                        },
                                                        {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        }
                                                    ],
                                                    "id": 431,
                                                    "name": "update",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 322,
                                                    "src": "6172:6:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_function_internal_nonpayable$_t_enum$_Vote_$33_$_t_enum$_Vote_$33_$_t_uint256_$returns$__$",
                                                        "typeString": "function (enum Acquisition.Vote,enum Acquisition.Vote,uint256)"
                                                    }
                                                },
                                                "id": 435,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "6172:37:0",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_tuple$__$",
                                                    "typeString": "tuple()"
                                                }
                                            },
                                            "id": 436,
                                            "nodeType": "ExpressionStatement",
                                            "src": "6172:37:0"
                                        }
                                    ]
                                },
                                "id": 438,
                                "implemented": true,
                                "kind": "function",
                                "modifiers": [],
                                "name": "vote",
                                "nodeType": "FunctionDefinition",
                                "parameters": {
                                    "id": 413,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 408,
                                            "mutability": "mutable",
                                            "name": "yesOrNo",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 438,
                                            "src": "5998:12:0",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_enum$_Vote_$33",
                                                "typeString": "enum Acquisition.Vote"
                                            },
                                            "typeName": {
                                                "id": 407,
                                                "name": "Vote",
                                                "nodeType": "UserDefinedTypeName",
                                                "referencedDeclaration": 33,
                                                "src": "5998:4:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_enum$_Vote_$33",
                                                    "typeString": "enum Acquisition.Vote"
                                                }
                                            },
                                            "visibility": "internal"
                                        },
                                        {
                                            "constant": false,
                                            "id": 410,
                                            "mutability": "mutable",
                                            "name": "votes_",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 438,
                                            "src": "6012:14:0",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            },
                                            "typeName": {
                                                "id": 409,
                                                "name": "uint256",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "6012:7:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            },
                                            "visibility": "internal"
                                        },
                                        {
                                            "constant": false,
                                            "id": 412,
                                            "mutability": "mutable",
                                            "name": "voter",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 438,
                                            "src": "6028:13:0",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            },
                                            "typeName": {
                                                "id": 411,
                                                "name": "address",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "6028:7:0",
                                                "stateMutability": "nonpayable",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "5997:45:0"
                                },
                                "returnParameters": {
                                    "id": 414,
                                    "nodeType": "ParameterList",
                                    "parameters": [],
                                    "src": "6052:0:0"
                                },
                                "scope": 491,
                                "src": "5984:233:0",
                                "stateMutability": "nonpayable",
                                "virtual": false,
                                "visibility": "internal"
                            },
                            {
                                "body": {
                                    "id": 452,
                                    "nodeType": "Block",
                                    "src": "6288:50:0",
                                    "statements": [
                                        {
                                            "expression": {
                                                "commonType": {
                                                    "typeIdentifier": "t_enum$_Vote_$33",
                                                    "typeString": "enum Acquisition.Vote"
                                                },
                                                "id": 450,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftExpression": {
                                                    "baseExpression": {
                                                        "id": 445,
                                                        "name": "votes",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 37,
                                                        "src": "6306:5:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_mapping$_t_address_$_t_enum$_Vote_$33_$",
                                                            "typeString": "mapping(address => enum Acquisition.Vote)"
                                                        }
                                                    },
                                                    "id": 447,
                                                    "indexExpression": {
                                                        "id": 446,
                                                        "name": "voter",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 440,
                                                        "src": "6312:5:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        }
                                                    },
                                                    "isConstant": false,
                                                    "isLValue": true,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "nodeType": "IndexAccess",
                                                    "src": "6306:12:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_enum$_Vote_$33",
                                                        "typeString": "enum Acquisition.Vote"
                                                    }
                                                },
                                                "nodeType": "BinaryOperation",
                                                "operator": "==",
                                                "rightExpression": {
                                                    "expression": {
                                                        "id": 448,
                                                        "name": "Vote",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 33,
                                                        "src": "6322:4:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_type$_t_enum$_Vote_$33_$",
                                                            "typeString": "type(enum Acquisition.Vote)"
                                                        }
                                                    },
                                                    "id": 449,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "lValueRequested": false,
                                                    "memberName": "YES",
                                                    "nodeType": "MemberAccess",
                                                    "src": "6322:8:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_enum$_Vote_$33",
                                                        "typeString": "enum Acquisition.Vote"
                                                    }
                                                },
                                                "src": "6306:24:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            },
                                            "functionReturnParameters": 444,
                                            "id": 451,
                                            "nodeType": "Return",
                                            "src": "6299:31:0"
                                        }
                                    ]
                                },
                                "functionSelector": "448ab4c6",
                                "id": 453,
                                "implemented": true,
                                "kind": "function",
                                "modifiers": [],
                                "name": "hasVotedYes",
                                "nodeType": "FunctionDefinition",
                                "parameters": {
                                    "id": 441,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 440,
                                            "mutability": "mutable",
                                            "name": "voter",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 453,
                                            "src": "6246:13:0",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            },
                                            "typeName": {
                                                "id": 439,
                                                "name": "address",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "6246:7:0",
                                                "stateMutability": "nonpayable",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "6245:15:0"
                                },
                                "returnParameters": {
                                    "id": 444,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 443,
                                            "mutability": "mutable",
                                            "name": "",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 453,
                                            "src": "6282:4:0",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_bool",
                                                "typeString": "bool"
                                            },
                                            "typeName": {
                                                "id": 442,
                                                "name": "bool",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "6282:4:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "6281:6:0"
                                },
                                "scope": 491,
                                "src": "6225:113:0",
                                "stateMutability": "view",
                                "virtual": false,
                                "visibility": "public"
                            },
                            {
                                "body": {
                                    "id": 467,
                                    "nodeType": "Block",
                                    "src": "6408:49:0",
                                    "statements": [
                                        {
                                            "expression": {
                                                "commonType": {
                                                    "typeIdentifier": "t_enum$_Vote_$33",
                                                    "typeString": "enum Acquisition.Vote"
                                                },
                                                "id": 465,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftExpression": {
                                                    "baseExpression": {
                                                        "id": 460,
                                                        "name": "votes",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 37,
                                                        "src": "6426:5:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_mapping$_t_address_$_t_enum$_Vote_$33_$",
                                                            "typeString": "mapping(address => enum Acquisition.Vote)"
                                                        }
                                                    },
                                                    "id": 462,
                                                    "indexExpression": {
                                                        "id": 461,
                                                        "name": "voter",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 455,
                                                        "src": "6432:5:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        }
                                                    },
                                                    "isConstant": false,
                                                    "isLValue": true,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "nodeType": "IndexAccess",
                                                    "src": "6426:12:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_enum$_Vote_$33",
                                                        "typeString": "enum Acquisition.Vote"
                                                    }
                                                },
                                                "nodeType": "BinaryOperation",
                                                "operator": "==",
                                                "rightExpression": {
                                                    "expression": {
                                                        "id": 463,
                                                        "name": "Vote",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 33,
                                                        "src": "6442:4:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_type$_t_enum$_Vote_$33_$",
                                                            "typeString": "type(enum Acquisition.Vote)"
                                                        }
                                                    },
                                                    "id": 464,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "lValueRequested": false,
                                                    "memberName": "NO",
                                                    "nodeType": "MemberAccess",
                                                    "src": "6442:7:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_enum$_Vote_$33",
                                                        "typeString": "enum Acquisition.Vote"
                                                    }
                                                },
                                                "src": "6426:23:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            },
                                            "functionReturnParameters": 459,
                                            "id": 466,
                                            "nodeType": "Return",
                                            "src": "6419:30:0"
                                        }
                                    ]
                                },
                                "functionSelector": "8f1b4c6f",
                                "id": 468,
                                "implemented": true,
                                "kind": "function",
                                "modifiers": [],
                                "name": "hasVotedNo",
                                "nodeType": "FunctionDefinition",
                                "parameters": {
                                    "id": 456,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 455,
                                            "mutability": "mutable",
                                            "name": "voter",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 468,
                                            "src": "6366:13:0",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            },
                                            "typeName": {
                                                "id": 454,
                                                "name": "address",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "6366:7:0",
                                                "stateMutability": "nonpayable",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "6365:15:0"
                                },
                                "returnParameters": {
                                    "id": 459,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 458,
                                            "mutability": "mutable",
                                            "name": "",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 468,
                                            "src": "6402:4:0",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_bool",
                                                "typeString": "bool"
                                            },
                                            "typeName": {
                                                "id": 457,
                                                "name": "bool",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "6402:4:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "6401:6:0"
                                },
                                "scope": 491,
                                "src": "6346:111:0",
                                "stateMutability": "view",
                                "virtual": false,
                                "visibility": "public"
                            },
                            {
                                "body": {
                                    "id": 477,
                                    "nodeType": "Block",
                                    "src": "6501:38:0",
                                    "statements": [
                                        {
                                            "expression": {
                                                "arguments": [
                                                    {
                                                        "id": 474,
                                                        "name": "buyer",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 19,
                                                        "src": "6525:5:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_address_payable",
                                                            "typeString": "address payable"
                                                        }
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_address_payable",
                                                            "typeString": "address payable"
                                                        }
                                                    ],
                                                    "id": 473,
                                                    "name": "selfdestruct",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": -21,
                                                    "src": "6512:12:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_function_selfdestruct_nonpayable$_t_address_payable_$returns$__$",
                                                        "typeString": "function (address payable)"
                                                    }
                                                },
                                                "id": 475,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "6512:19:0",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_tuple$__$",
                                                    "typeString": "tuple()"
                                                }
                                            },
                                            "id": 476,
                                            "nodeType": "ExpressionStatement",
                                            "src": "6512:19:0"
                                        }
                                    ]
                                },
                                "functionSelector": "41c0e1b5",
                                "id": 478,
                                "implemented": true,
                                "kind": "function",
                                "modifiers": [
                                    {
                                        "arguments": [],
                                        "id": 471,
                                        "modifierName": {
                                            "id": 470,
                                            "name": "parentOnly",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 490,
                                            "src": "6488:10:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_modifier$__$",
                                                "typeString": "modifier ()"
                                            }
                                        },
                                        "nodeType": "ModifierInvocation",
                                        "src": "6488:12:0"
                                    }
                                ],
                                "name": "kill",
                                "nodeType": "FunctionDefinition",
                                "parameters": {
                                    "id": 469,
                                    "nodeType": "ParameterList",
                                    "parameters": [],
                                    "src": "6478:2:0"
                                },
                                "returnParameters": {
                                    "id": 472,
                                    "nodeType": "ParameterList",
                                    "parameters": [],
                                    "src": "6501:0:0"
                                },
                                "scope": 491,
                                "src": "6465:74:0",
                                "stateMutability": "nonpayable",
                                "virtual": false,
                                "visibility": "public"
                            },
                            {
                                "body": {
                                    "id": 489,
                                    "nodeType": "Block",
                                    "src": "6570:74:0",
                                    "statements": [
                                        {
                                            "expression": {
                                                "arguments": [
                                                    {
                                                        "commonType": {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        },
                                                        "id": 484,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "leftExpression": {
                                                            "expression": {
                                                                "id": 481,
                                                                "name": "msg",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [],
                                                                "referencedDeclaration": -15,
                                                                "src": "6589:3:0",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_magic_message",
                                                                    "typeString": "msg"
                                                                }
                                                            },
                                                            "id": 482,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": false,
                                                            "lValueRequested": false,
                                                            "memberName": "sender",
                                                            "nodeType": "MemberAccess",
                                                            "src": "6589:10:0",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_address_payable",
                                                                "typeString": "address payable"
                                                            }
                                                        },
                                                        "nodeType": "BinaryOperation",
                                                        "operator": "==",
                                                        "rightExpression": {
                                                            "id": 483,
                                                            "name": "parent",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 17,
                                                            "src": "6603:6:0",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_address",
                                                                "typeString": "address"
                                                            }
                                                        },
                                                        "src": "6589:20:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_bool",
                                                            "typeString": "bool"
                                                        }
                                                    },
                                                    {
                                                        "hexValue": "6e6f7420706172656e74",
                                                        "id": 485,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": true,
                                                        "kind": "string",
                                                        "lValueRequested": false,
                                                        "nodeType": "Literal",
                                                        "src": "6611:12:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_stringliteral_fbbb53d2a54a0cd3b6d21b0548b09b80b434534895bd16ef13e0410c39017691",
                                                            "typeString": "literal_string \"not parent\""
                                                        },
                                                        "value": "not parent"
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_bool",
                                                            "typeString": "bool"
                                                        },
                                                        {
                                                            "typeIdentifier": "t_stringliteral_fbbb53d2a54a0cd3b6d21b0548b09b80b434534895bd16ef13e0410c39017691",
                                                            "typeString": "literal_string \"not parent\""
                                                        }
                                                    ],
                                                    "id": 480,
                                                    "name": "require",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [
                                                        -18,
                                                        -18
                                                    ],
                                                    "referencedDeclaration": -18,
                                                    "src": "6581:7:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                                        "typeString": "function (bool,string memory) pure"
                                                    }
                                                },
                                                "id": 486,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "6581:43:0",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_tuple$__$",
                                                    "typeString": "tuple()"
                                                }
                                            },
                                            "id": 487,
                                            "nodeType": "ExpressionStatement",
                                            "src": "6581:43:0"
                                        },
                                        {
                                            "id": 488,
                                            "nodeType": "PlaceholderStatement",
                                            "src": "6635:1:0"
                                        }
                                    ]
                                },
                                "id": 490,
                                "name": "parentOnly",
                                "nodeType": "ModifierDefinition",
                                "parameters": {
                                    "id": 479,
                                    "nodeType": "ParameterList",
                                    "parameters": [],
                                    "src": "6567:2:0"
                                },
                                "src": "6547:97:0",
                                "virtual": false,
                                "visibility": "internal"
                            }
                        ],
                        "scope": 492,
                        "src": "1579:5068:0"
                    }
                ],
                "src": "1336:5311:0"
            },
            "id": 0
        },
        "c:/Users/luziu/Documents/aktionariat/contracts/src/DraggableFactory.sol": {
            "ast": {
                "absolutePath": "c:/Users/luziu/Documents/aktionariat/contracts/src/DraggableFactory.sol",
                "exportedSymbols": {
                    "DraggableFactory": [
                        521
                    ]
                },
                "id": 522,
                "license": "MIT",
                "nodeType": "SourceUnit",
                "nodes": [
                    {
                        "id": 493,
                        "literals": [
                            "solidity",
                            ">=",
                            "0.7"
                        ],
                        "nodeType": "PragmaDirective",
                        "src": "47:22:1"
                    },
                    {
                        "absolutePath": "c:/Users/luziu/Documents/aktionariat/contracts/src/DraggableShares.sol",
                        "file": "./DraggableShares.sol",
                        "id": 494,
                        "nodeType": "ImportDirective",
                        "scope": 522,
                        "sourceUnit": 715,
                        "src": "73:31:1",
                        "symbolAliases": [],
                        "unitAlias": ""
                    },
                    {
                        "abstract": false,
                        "baseContracts": [],
                        "contractDependencies": [
                            696
                        ],
                        "contractKind": "contract",
                        "fullyImplemented": true,
                        "id": 521,
                        "linearizedBaseContracts": [
                            521
                        ],
                        "name": "DraggableFactory",
                        "nodeType": "ContractDefinition",
                        "nodes": [
                            {
                                "body": {
                                    "id": 519,
                                    "nodeType": "Block",
                                    "src": "265:90:1",
                                    "statements": [
                                        {
                                            "expression": {
                                                "arguments": [
                                                    {
                                                        "arguments": [
                                                            {
                                                                "id": 513,
                                                                "name": "_terms",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [],
                                                                "referencedDeclaration": 498,
                                                                "src": "319:6:1",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_string_memory_ptr",
                                                                    "typeString": "string memory"
                                                                }
                                                            },
                                                            {
                                                                "id": 514,
                                                                "name": "baseContract",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [],
                                                                "referencedDeclaration": 500,
                                                                "src": "327:12:1",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_address",
                                                                    "typeString": "address"
                                                                }
                                                            },
                                                            {
                                                                "id": 515,
                                                                "name": "quorum",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [],
                                                                "referencedDeclaration": 502,
                                                                "src": "341:6:1",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_uint256",
                                                                    "typeString": "uint256"
                                                                }
                                                            }
                                                        ],
                                                        "expression": {
                                                            "argumentTypes": [
                                                                {
                                                                    "typeIdentifier": "t_string_memory_ptr",
                                                                    "typeString": "string memory"
                                                                },
                                                                {
                                                                    "typeIdentifier": "t_address",
                                                                    "typeString": "address"
                                                                },
                                                                {
                                                                    "typeIdentifier": "t_uint256",
                                                                    "typeString": "uint256"
                                                                }
                                                            ],
                                                            "expression": {
                                                                "argumentTypes": [
                                                                    {
                                                                        "typeIdentifier": "t_string_memory_ptr",
                                                                        "typeString": "string memory"
                                                                    },
                                                                    {
                                                                        "typeIdentifier": "t_address",
                                                                        "typeString": "address"
                                                                    },
                                                                    {
                                                                        "typeIdentifier": "t_uint256",
                                                                        "typeString": "uint256"
                                                                    }
                                                                ],
                                                                "id": 510,
                                                                "isConstant": false,
                                                                "isLValue": false,
                                                                "isPure": false,
                                                                "lValueRequested": false,
                                                                "nodeType": "NewExpression",
                                                                "src": "287:19:1",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_function_creation_nonpayable$_t_string_memory_ptr_$_t_address_$_t_uint256_$returns$_t_contract$_DraggableShares_$696_$",
                                                                    "typeString": "function (string memory,address,uint256) returns (contract DraggableShares)"
                                                                },
                                                                "typeName": {
                                                                    "id": 509,
                                                                    "name": "DraggableShares",
                                                                    "nodeType": "UserDefinedTypeName",
                                                                    "referencedDeclaration": 696,
                                                                    "src": "291:15:1",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_contract$_DraggableShares_$696",
                                                                        "typeString": "contract DraggableShares"
                                                                    }
                                                                }
                                                            },
                                                            "id": 512,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": false,
                                                            "lValueRequested": false,
                                                            "names": [
                                                                "salt"
                                                            ],
                                                            "nodeType": "FunctionCallOptions",
                                                            "options": [
                                                                {
                                                                    "id": 511,
                                                                    "name": "salt",
                                                                    "nodeType": "Identifier",
                                                                    "overloadedDeclarations": [],
                                                                    "referencedDeclaration": 496,
                                                                    "src": "313:4:1",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_bytes32",
                                                                        "typeString": "bytes32"
                                                                    }
                                                                }
                                                            ],
                                                            "src": "287:31:1",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_function_creation_nonpayable$_t_string_memory_ptr_$_t_address_$_t_uint256_$returns$_t_contract$_DraggableShares_$696_$salt",
                                                                "typeString": "function (string memory,address,uint256) returns (contract DraggableShares)"
                                                            }
                                                        },
                                                        "id": 516,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "kind": "functionCall",
                                                        "lValueRequested": false,
                                                        "names": [],
                                                        "nodeType": "FunctionCall",
                                                        "src": "287:61:1",
                                                        "tryCall": false,
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_contract$_DraggableShares_$696",
                                                            "typeString": "contract DraggableShares"
                                                        }
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_contract$_DraggableShares_$696",
                                                            "typeString": "contract DraggableShares"
                                                        }
                                                    ],
                                                    "id": 508,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "lValueRequested": false,
                                                    "nodeType": "ElementaryTypeNameExpression",
                                                    "src": "279:7:1",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_type$_t_address_$",
                                                        "typeString": "type(address)"
                                                    },
                                                    "typeName": {
                                                        "id": 507,
                                                        "name": "address",
                                                        "nodeType": "ElementaryTypeName",
                                                        "src": "279:7:1",
                                                        "typeDescriptions": {}
                                                    }
                                                },
                                                "id": 517,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "typeConversion",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "279:70:1",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            "functionReturnParameters": 506,
                                            "id": 518,
                                            "nodeType": "Return",
                                            "src": "272:77:1"
                                        }
                                    ]
                                },
                                "functionSelector": "49dc2132",
                                "id": 520,
                                "implemented": true,
                                "kind": "function",
                                "modifiers": [],
                                "name": "createDraggable",
                                "nodeType": "FunctionDefinition",
                                "parameters": {
                                    "id": 503,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 496,
                                            "mutability": "mutable",
                                            "name": "salt",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 520,
                                            "src": "166:12:1",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_bytes32",
                                                "typeString": "bytes32"
                                            },
                                            "typeName": {
                                                "id": 495,
                                                "name": "bytes32",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "166:7:1",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bytes32",
                                                    "typeString": "bytes32"
                                                }
                                            },
                                            "visibility": "internal"
                                        },
                                        {
                                            "constant": false,
                                            "id": 498,
                                            "mutability": "mutable",
                                            "name": "_terms",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 520,
                                            "src": "180:20:1",
                                            "stateVariable": false,
                                            "storageLocation": "memory",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_string_memory_ptr",
                                                "typeString": "string"
                                            },
                                            "typeName": {
                                                "id": 497,
                                                "name": "string",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "180:6:1",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_string_storage_ptr",
                                                    "typeString": "string"
                                                }
                                            },
                                            "visibility": "internal"
                                        },
                                        {
                                            "constant": false,
                                            "id": 500,
                                            "mutability": "mutable",
                                            "name": "baseContract",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 520,
                                            "src": "202:20:1",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            },
                                            "typeName": {
                                                "id": 499,
                                                "name": "address",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "202:7:1",
                                                "stateMutability": "nonpayable",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            "visibility": "internal"
                                        },
                                        {
                                            "constant": false,
                                            "id": 502,
                                            "mutability": "mutable",
                                            "name": "quorum",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 520,
                                            "src": "224:14:1",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            },
                                            "typeName": {
                                                "id": 501,
                                                "name": "uint256",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "224:7:1",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "165:74:1"
                                },
                                "returnParameters": {
                                    "id": 506,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 505,
                                            "mutability": "mutable",
                                            "name": "",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 520,
                                            "src": "256:7:1",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            },
                                            "typeName": {
                                                "id": 504,
                                                "name": "address",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "256:7:1",
                                                "stateMutability": "nonpayable",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "255:9:1"
                                },
                                "scope": 521,
                                "src": "141:214:1",
                                "stateMutability": "nonpayable",
                                "virtual": false,
                                "visibility": "public"
                            }
                        ],
                        "scope": 522,
                        "src": "108:252:1"
                    }
                ],
                "src": "47:313:1"
            },
            "id": 1
        },
        "c:/Users/luziu/Documents/aktionariat/contracts/src/DraggableShares.sol": {
            "ast": {
                "absolutePath": "c:/Users/luziu/Documents/aktionariat/contracts/src/DraggableShares.sol",
                "exportedSymbols": {
                    "DraggableShares": [
                        696
                    ],
                    "IRecoverable": [
                        714
                    ]
                },
                "id": 715,
                "license": "LicenseRef-Aktionariat",
                "nodeType": "SourceUnit",
                "nodes": [
                    {
                        "id": 523,
                        "literals": [
                            "solidity",
                            ">=",
                            "0.7"
                        ],
                        "nodeType": "PragmaDirective",
                        "src": "1336:22:2"
                    },
                    {
                        "absolutePath": "c:/Users/luziu/Documents/aktionariat/contracts/src/ERC20Recoverable.sol",
                        "file": "./ERC20Recoverable.sol",
                        "id": 524,
                        "nodeType": "ImportDirective",
                        "scope": 715,
                        "sourceUnit": 2717,
                        "src": "1362:32:2",
                        "symbolAliases": [],
                        "unitAlias": ""
                    },
                    {
                        "absolutePath": "c:/Users/luziu/Documents/aktionariat/contracts/src/ERC20Draggable.sol",
                        "file": "./ERC20Draggable.sol",
                        "id": 525,
                        "nodeType": "ImportDirective",
                        "scope": 715,
                        "sourceUnit": 2129,
                        "src": "1396:30:2",
                        "symbolAliases": [],
                        "unitAlias": ""
                    },
                    {
                        "abstract": false,
                        "baseContracts": [
                            {
                                "baseName": {
                                    "id": 527,
                                    "name": "ERC20Recoverable",
                                    "nodeType": "UserDefinedTypeName",
                                    "referencedDeclaration": 2716,
                                    "src": "3103:16:2",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_ERC20Recoverable_$2716",
                                        "typeString": "contract ERC20Recoverable"
                                    }
                                },
                                "id": 528,
                                "nodeType": "InheritanceSpecifier",
                                "src": "3103:16:2"
                            },
                            {
                                "baseName": {
                                    "id": 529,
                                    "name": "ERC20Draggable",
                                    "nodeType": "UserDefinedTypeName",
                                    "referencedDeclaration": 2116,
                                    "src": "3121:14:2",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_ERC20Draggable_$2116",
                                        "typeString": "contract ERC20Draggable"
                                    }
                                },
                                "id": 530,
                                "nodeType": "InheritanceSpecifier",
                                "src": "3121:14:2"
                            }
                        ],
                        "contractDependencies": [
                            1187,
                            2116,
                            2716,
                            2809,
                            2821
                        ],
                        "contractKind": "contract",
                        "documentation": {
                            "id": 526,
                            "nodeType": "StructuredDocumentation",
                            "src": "1430:1641:2",
                            "text": " @title Draggable CompanyName AG Shares\n @author Benjamin Rickenbacher, b.rickenbacher@intergga.ch\n @author Luzius Meisser, luzius@meissereconomics.com\n This is an ERC-20 token representing shares of CompanyName AG that are bound to\n a shareholder agreement that can be found at the URL defined in the constant 'terms'.\n The shareholder agreement is partially enforced through this smart contract. The agreement\n is designed to facilitate a complete acquisition of the firm even if a minority of shareholders\n disagree with the acquisition, to protect the interest of the minority shareholders by requiring\n the acquirer to offer the same conditions to everyone when acquiring the company, and to\n facilitate an update of the shareholder agreement even if a minority of the shareholders that\n are bound to this agreement disagree. The name \"draggable\" stems from the convention of calling\n the right to drag a minority along with a sale of the company \"drag-along\" rights. The name is\n chosen to ensure that token holders are aware that they are bound to such an agreement.\n The percentage of token holders that must agree with an update of the terms is defined by the\n constant UPDATE_QUORUM. The precentage of yes-votes that is needed to successfully complete an\n acquisition is defined in the constant ACQUISITION_QUORUM. Note that the update quorum is based\n on the total number of tokens in circulation. In contrast, the acquisition quorum is based on the\n number of votes cast during the voting period, not taking into account those who did not bother\n to vote."
                        },
                        "fullyImplemented": true,
                        "id": 696,
                        "linearizedBaseContracts": [
                            696,
                            2116,
                            2821,
                            2716,
                            1187,
                            2809
                        ],
                        "name": "DraggableShares",
                        "nodeType": "ContractDefinition",
                        "nodes": [
                            {
                                "id": 533,
                                "libraryName": {
                                    "id": 531,
                                    "name": "SafeMath",
                                    "nodeType": "UserDefinedTypeName",
                                    "referencedDeclaration": 2928,
                                    "src": "3151:8:2",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_SafeMath_$2928",
                                        "typeString": "library SafeMath"
                                    }
                                },
                                "nodeType": "UsingForDirective",
                                "src": "3145:27:2",
                                "typeName": {
                                    "id": 532,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "3164:7:2",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                    }
                                }
                            },
                            {
                                "constant": false,
                                "functionSelector": "d5025625",
                                "id": 535,
                                "mutability": "mutable",
                                "name": "terms",
                                "nodeType": "VariableDeclaration",
                                "scope": 696,
                                "src": "3180:19:2",
                                "stateVariable": true,
                                "storageLocation": "default",
                                "typeDescriptions": {
                                    "typeIdentifier": "t_string_storage",
                                    "typeString": "string"
                                },
                                "typeName": {
                                    "id": 534,
                                    "name": "string",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "3180:6:2",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_string_storage_ptr",
                                        "typeString": "string"
                                    }
                                },
                                "visibility": "public"
                            },
                            {
                                "body": {
                                    "id": 561,
                                    "nodeType": "Block",
                                    "src": "3450:225:2",
                                    "statements": [
                                        {
                                            "expression": {
                                                "arguments": [
                                                    {
                                                        "hexValue": "66616c7365",
                                                        "id": 554,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": true,
                                                        "kind": "bool",
                                                        "lValueRequested": false,
                                                        "nodeType": "Literal",
                                                        "src": "3503:5:2",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_bool",
                                                            "typeString": "bool"
                                                        },
                                                        "value": "false"
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_bool",
                                                            "typeString": "bool"
                                                        }
                                                    ],
                                                    "expression": {
                                                        "arguments": [
                                                            {
                                                                "id": 551,
                                                                "name": "wrappedToken",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [],
                                                                "referencedDeclaration": 540,
                                                                "src": "3474:12:2",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_address",
                                                                    "typeString": "address"
                                                                }
                                                            }
                                                        ],
                                                        "expression": {
                                                            "argumentTypes": [
                                                                {
                                                                    "typeIdentifier": "t_address",
                                                                    "typeString": "address"
                                                                }
                                                            ],
                                                            "id": 550,
                                                            "name": "IRecoverable",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 714,
                                                            "src": "3461:12:2",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_type$_t_contract$_IRecoverable_$714_$",
                                                                "typeString": "type(contract IRecoverable)"
                                                            }
                                                        },
                                                        "id": 552,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "kind": "typeConversion",
                                                        "lValueRequested": false,
                                                        "names": [],
                                                        "nodeType": "FunctionCall",
                                                        "src": "3461:26:2",
                                                        "tryCall": false,
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_contract$_IRecoverable_$714",
                                                            "typeString": "contract IRecoverable"
                                                        }
                                                    },
                                                    "id": 553,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "memberName": "setRecoverable",
                                                    "nodeType": "MemberAccess",
                                                    "referencedDeclaration": 701,
                                                    "src": "3461:41:2",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_function_external_nonpayable$_t_bool_$returns$__$",
                                                        "typeString": "function (bool) external"
                                                    }
                                                },
                                                "id": 555,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "3461:48:2",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_tuple$__$",
                                                    "typeString": "tuple()"
                                                }
                                            },
                                            "id": 556,
                                            "nodeType": "ExpressionStatement",
                                            "src": "3461:48:2"
                                        },
                                        {
                                            "expression": {
                                                "id": 559,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftHandSide": {
                                                    "id": 557,
                                                    "name": "terms",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 535,
                                                    "src": "3520:5:2",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_string_storage",
                                                        "typeString": "string storage ref"
                                                    }
                                                },
                                                "nodeType": "Assignment",
                                                "operator": "=",
                                                "rightHandSide": {
                                                    "id": 558,
                                                    "name": "_terms",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 538,
                                                    "src": "3528:6:2",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_string_memory_ptr",
                                                        "typeString": "string memory"
                                                    }
                                                },
                                                "src": "3520:14:2",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_string_storage",
                                                    "typeString": "string storage ref"
                                                }
                                            },
                                            "id": 560,
                                            "nodeType": "ExpressionStatement",
                                            "src": "3520:14:2"
                                        }
                                    ]
                                },
                                "documentation": {
                                    "id": 536,
                                    "nodeType": "StructuredDocumentation",
                                    "src": "3208:110:2",
                                    "text": " Designed to be used with the Crypto Franc as currency token. See also parent constructor."
                                },
                                "id": 562,
                                "implemented": true,
                                "kind": "constructor",
                                "modifiers": [
                                    {
                                        "arguments": [
                                            {
                                                "id": 545,
                                                "name": "wrappedToken",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 540,
                                                "src": "3420:12:2",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            {
                                                "id": 546,
                                                "name": "quorum",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 542,
                                                "src": "3434:6:2",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            },
                                            {
                                                "id": 547,
                                                "name": "quorum",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 542,
                                                "src": "3442:6:2",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            }
                                        ],
                                        "id": 548,
                                        "modifierName": {
                                            "id": 544,
                                            "name": "ERC20Draggable",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 2116,
                                            "src": "3405:14:2",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_type$_t_contract$_ERC20Draggable_$2116_$",
                                                "typeString": "type(contract ERC20Draggable)"
                                            }
                                        },
                                        "nodeType": "ModifierInvocation",
                                        "src": "3405:44:2"
                                    }
                                ],
                                "name": "",
                                "nodeType": "FunctionDefinition",
                                "parameters": {
                                    "id": 543,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 538,
                                            "mutability": "mutable",
                                            "name": "_terms",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 562,
                                            "src": "3336:20:2",
                                            "stateVariable": false,
                                            "storageLocation": "memory",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_string_memory_ptr",
                                                "typeString": "string"
                                            },
                                            "typeName": {
                                                "id": 537,
                                                "name": "string",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "3336:6:2",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_string_storage_ptr",
                                                    "typeString": "string"
                                                }
                                            },
                                            "visibility": "internal"
                                        },
                                        {
                                            "constant": false,
                                            "id": 540,
                                            "mutability": "mutable",
                                            "name": "wrappedToken",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 562,
                                            "src": "3358:20:2",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            },
                                            "typeName": {
                                                "id": 539,
                                                "name": "address",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "3358:7:2",
                                                "stateMutability": "nonpayable",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            "visibility": "internal"
                                        },
                                        {
                                            "constant": false,
                                            "id": 542,
                                            "mutability": "mutable",
                                            "name": "quorum",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 562,
                                            "src": "3380:14:2",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            },
                                            "typeName": {
                                                "id": 541,
                                                "name": "uint256",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "3380:7:2",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "3335:60:2"
                                },
                                "returnParameters": {
                                    "id": 549,
                                    "nodeType": "ParameterList",
                                    "parameters": [],
                                    "src": "3450:0:2"
                                },
                                "scope": 696,
                                "src": "3324:351:2",
                                "stateMutability": "nonpayable",
                                "virtual": false,
                                "visibility": "public"
                            },
                            {
                                "baseFunctions": [
                                    1066,
                                    2001
                                ],
                                "body": {
                                    "id": 579,
                                    "nodeType": "Block",
                                    "src": "3780:47:2",
                                    "statements": [
                                        {
                                            "expression": {
                                                "arguments": [
                                                    {
                                                        "id": 575,
                                                        "name": "account",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 564,
                                                        "src": "3803:7:2",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        }
                                                    },
                                                    {
                                                        "id": 576,
                                                        "name": "amount",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 566,
                                                        "src": "3812:6:2",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        }
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        },
                                                        {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        }
                                                    ],
                                                    "expression": {
                                                        "id": 572,
                                                        "name": "super",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": -25,
                                                        "src": "3791:5:2",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_super$_DraggableShares_$696",
                                                            "typeString": "contract super DraggableShares"
                                                        }
                                                    },
                                                    "id": 574,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "memberName": "_mint",
                                                    "nodeType": "MemberAccess",
                                                    "referencedDeclaration": 2001,
                                                    "src": "3791:11:2",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                                                        "typeString": "function (address,uint256)"
                                                    }
                                                },
                                                "id": 577,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "3791:28:2",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_tuple$__$",
                                                    "typeString": "tuple()"
                                                }
                                            },
                                            "id": 578,
                                            "nodeType": "ExpressionStatement",
                                            "src": "3791:28:2"
                                        }
                                    ]
                                },
                                "id": 580,
                                "implemented": true,
                                "kind": "function",
                                "modifiers": [],
                                "name": "_mint",
                                "nodeType": "FunctionDefinition",
                                "overrides": {
                                    "id": 570,
                                    "nodeType": "OverrideSpecifier",
                                    "overrides": [
                                        {
                                            "id": 568,
                                            "name": "ERC20Draggable",
                                            "nodeType": "UserDefinedTypeName",
                                            "referencedDeclaration": 2116,
                                            "src": "3748:14:2",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_contract$_ERC20Draggable_$2116",
                                                "typeString": "contract ERC20Draggable"
                                            }
                                        },
                                        {
                                            "id": 569,
                                            "name": "ERC20",
                                            "nodeType": "UserDefinedTypeName",
                                            "referencedDeclaration": 1187,
                                            "src": "3764:5:2",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_contract$_ERC20_$1187",
                                                "typeString": "contract ERC20"
                                            }
                                        }
                                    ],
                                    "src": "3739:31:2"
                                },
                                "parameters": {
                                    "id": 567,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 564,
                                            "mutability": "mutable",
                                            "name": "account",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 580,
                                            "src": "3698:15:2",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            },
                                            "typeName": {
                                                "id": 563,
                                                "name": "address",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "3698:7:2",
                                                "stateMutability": "nonpayable",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            "visibility": "internal"
                                        },
                                        {
                                            "constant": false,
                                            "id": 566,
                                            "mutability": "mutable",
                                            "name": "amount",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 580,
                                            "src": "3715:14:2",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            },
                                            "typeName": {
                                                "id": 565,
                                                "name": "uint256",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "3715:7:2",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "3697:33:2"
                                },
                                "returnParameters": {
                                    "id": 571,
                                    "nodeType": "ParameterList",
                                    "parameters": [],
                                    "src": "3780:0:2"
                                },
                                "scope": 696,
                                "src": "3683:144:2",
                                "stateMutability": "nonpayable",
                                "virtual": true,
                                "visibility": "internal"
                            },
                            {
                                "baseFunctions": [
                                    1112,
                                    2067
                                ],
                                "body": {
                                    "id": 597,
                                    "nodeType": "Block",
                                    "src": "3932:47:2",
                                    "statements": [
                                        {
                                            "expression": {
                                                "arguments": [
                                                    {
                                                        "id": 593,
                                                        "name": "account",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 582,
                                                        "src": "3955:7:2",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        }
                                                    },
                                                    {
                                                        "id": 594,
                                                        "name": "amount",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 584,
                                                        "src": "3964:6:2",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        }
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        },
                                                        {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        }
                                                    ],
                                                    "expression": {
                                                        "id": 590,
                                                        "name": "super",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": -25,
                                                        "src": "3943:5:2",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_super$_DraggableShares_$696",
                                                            "typeString": "contract super DraggableShares"
                                                        }
                                                    },
                                                    "id": 592,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "memberName": "_burn",
                                                    "nodeType": "MemberAccess",
                                                    "referencedDeclaration": 2067,
                                                    "src": "3943:11:2",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                                                        "typeString": "function (address,uint256)"
                                                    }
                                                },
                                                "id": 595,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "3943:28:2",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_tuple$__$",
                                                    "typeString": "tuple()"
                                                }
                                            },
                                            "id": 596,
                                            "nodeType": "ExpressionStatement",
                                            "src": "3943:28:2"
                                        }
                                    ]
                                },
                                "id": 598,
                                "implemented": true,
                                "kind": "function",
                                "modifiers": [],
                                "name": "_burn",
                                "nodeType": "FunctionDefinition",
                                "overrides": {
                                    "id": 588,
                                    "nodeType": "OverrideSpecifier",
                                    "overrides": [
                                        {
                                            "id": 586,
                                            "name": "ERC20Draggable",
                                            "nodeType": "UserDefinedTypeName",
                                            "referencedDeclaration": 2116,
                                            "src": "3900:14:2",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_contract$_ERC20Draggable_$2116",
                                                "typeString": "contract ERC20Draggable"
                                            }
                                        },
                                        {
                                            "id": 587,
                                            "name": "ERC20",
                                            "nodeType": "UserDefinedTypeName",
                                            "referencedDeclaration": 1187,
                                            "src": "3916:5:2",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_contract$_ERC20_$1187",
                                                "typeString": "contract ERC20"
                                            }
                                        }
                                    ],
                                    "src": "3891:31:2"
                                },
                                "parameters": {
                                    "id": 585,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 582,
                                            "mutability": "mutable",
                                            "name": "account",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 598,
                                            "src": "3850:15:2",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            },
                                            "typeName": {
                                                "id": 581,
                                                "name": "address",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "3850:7:2",
                                                "stateMutability": "nonpayable",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            "visibility": "internal"
                                        },
                                        {
                                            "constant": false,
                                            "id": 584,
                                            "mutability": "mutable",
                                            "name": "amount",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 598,
                                            "src": "3867:14:2",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            },
                                            "typeName": {
                                                "id": 583,
                                                "name": "uint256",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "3867:7:2",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "3849:33:2"
                                },
                                "returnParameters": {
                                    "id": 589,
                                    "nodeType": "ParameterList",
                                    "parameters": [],
                                    "src": "3932:0:2"
                                },
                                "scope": 696,
                                "src": "3835:144:2",
                                "stateMutability": "nonpayable",
                                "virtual": true,
                                "visibility": "internal"
                            },
                            {
                                "baseFunctions": [
                                    986,
                                    2034
                                ],
                                "body": {
                                    "id": 618,
                                    "nodeType": "Block",
                                    "src": "4088:51:2",
                                    "statements": [
                                        {
                                            "expression": {
                                                "arguments": [
                                                    {
                                                        "id": 613,
                                                        "name": "from",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 600,
                                                        "src": "4115:4:2",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        }
                                                    },
                                                    {
                                                        "id": 614,
                                                        "name": "to",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 602,
                                                        "src": "4121:2:2",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        }
                                                    },
                                                    {
                                                        "id": 615,
                                                        "name": "value",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 604,
                                                        "src": "4125:5:2",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        }
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        },
                                                        {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        },
                                                        {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        }
                                                    ],
                                                    "expression": {
                                                        "id": 610,
                                                        "name": "super",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": -25,
                                                        "src": "4099:5:2",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_super$_DraggableShares_$696",
                                                            "typeString": "contract super DraggableShares"
                                                        }
                                                    },
                                                    "id": 612,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "memberName": "_transfer",
                                                    "nodeType": "MemberAccess",
                                                    "referencedDeclaration": 2034,
                                                    "src": "4099:15:2",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                                                        "typeString": "function (address,address,uint256)"
                                                    }
                                                },
                                                "id": 616,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "4099:32:2",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_tuple$__$",
                                                    "typeString": "tuple()"
                                                }
                                            },
                                            "id": 617,
                                            "nodeType": "ExpressionStatement",
                                            "src": "4099:32:2"
                                        }
                                    ]
                                },
                                "id": 619,
                                "implemented": true,
                                "kind": "function",
                                "modifiers": [],
                                "name": "_transfer",
                                "nodeType": "FunctionDefinition",
                                "overrides": {
                                    "id": 608,
                                    "nodeType": "OverrideSpecifier",
                                    "overrides": [
                                        {
                                            "id": 606,
                                            "name": "ERC20Draggable",
                                            "nodeType": "UserDefinedTypeName",
                                            "referencedDeclaration": 2116,
                                            "src": "4056:14:2",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_contract$_ERC20Draggable_$2116",
                                                "typeString": "contract ERC20Draggable"
                                            }
                                        },
                                        {
                                            "id": 607,
                                            "name": "ERC20",
                                            "nodeType": "UserDefinedTypeName",
                                            "referencedDeclaration": 1187,
                                            "src": "4072:5:2",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_contract$_ERC20_$1187",
                                                "typeString": "contract ERC20"
                                            }
                                        }
                                    ],
                                    "src": "4047:31:2"
                                },
                                "parameters": {
                                    "id": 605,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 600,
                                            "mutability": "mutable",
                                            "name": "from",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 619,
                                            "src": "4006:12:2",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            },
                                            "typeName": {
                                                "id": 599,
                                                "name": "address",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "4006:7:2",
                                                "stateMutability": "nonpayable",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            "visibility": "internal"
                                        },
                                        {
                                            "constant": false,
                                            "id": 602,
                                            "mutability": "mutable",
                                            "name": "to",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 619,
                                            "src": "4020:10:2",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            },
                                            "typeName": {
                                                "id": 601,
                                                "name": "address",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "4020:7:2",
                                                "stateMutability": "nonpayable",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            "visibility": "internal"
                                        },
                                        {
                                            "constant": false,
                                            "id": 604,
                                            "mutability": "mutable",
                                            "name": "value",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 619,
                                            "src": "4032:13:2",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            },
                                            "typeName": {
                                                "id": 603,
                                                "name": "uint256",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "4032:7:2",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "4005:41:2"
                                },
                                "returnParameters": {
                                    "id": 609,
                                    "nodeType": "ParameterList",
                                    "parameters": [],
                                    "src": "4088:0:2"
                                },
                                "scope": 696,
                                "src": "3987:152:2",
                                "stateMutability": "nonpayable",
                                "virtual": false,
                                "visibility": "internal"
                            },
                            {
                                "baseFunctions": [
                                    795,
                                    2514
                                ],
                                "body": {
                                    "id": 637,
                                    "nodeType": "Block",
                                    "src": "4248:51:2",
                                    "statements": [
                                        {
                                            "expression": {
                                                "arguments": [
                                                    {
                                                        "id": 633,
                                                        "name": "to",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 621,
                                                        "src": "4281:2:2",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        }
                                                    },
                                                    {
                                                        "id": 634,
                                                        "name": "value",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 623,
                                                        "src": "4285:5:2",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        }
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        },
                                                        {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        }
                                                    ],
                                                    "expression": {
                                                        "id": 631,
                                                        "name": "super",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": -25,
                                                        "src": "4266:5:2",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_super$_DraggableShares_$696",
                                                            "typeString": "contract super DraggableShares"
                                                        }
                                                    },
                                                    "id": 632,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "memberName": "transfer",
                                                    "nodeType": "MemberAccess",
                                                    "referencedDeclaration": 2514,
                                                    "src": "4266:14:2",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                                        "typeString": "function (address,uint256) returns (bool)"
                                                    }
                                                },
                                                "id": 635,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "4266:25:2",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            },
                                            "functionReturnParameters": 630,
                                            "id": 636,
                                            "nodeType": "Return",
                                            "src": "4259:32:2"
                                        }
                                    ]
                                },
                                "functionSelector": "a9059cbb",
                                "id": 638,
                                "implemented": true,
                                "kind": "function",
                                "modifiers": [],
                                "name": "transfer",
                                "nodeType": "FunctionDefinition",
                                "overrides": {
                                    "id": 627,
                                    "nodeType": "OverrideSpecifier",
                                    "overrides": [
                                        {
                                            "id": 625,
                                            "name": "ERC20Recoverable",
                                            "nodeType": "UserDefinedTypeName",
                                            "referencedDeclaration": 2716,
                                            "src": "4201:16:2",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_contract$_ERC20Recoverable_$2716",
                                                "typeString": "contract ERC20Recoverable"
                                            }
                                        },
                                        {
                                            "id": 626,
                                            "name": "ERC20",
                                            "nodeType": "UserDefinedTypeName",
                                            "referencedDeclaration": 1187,
                                            "src": "4219:5:2",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_contract$_ERC20_$1187",
                                                "typeString": "contract ERC20"
                                            }
                                        }
                                    ],
                                    "src": "4192:33:2"
                                },
                                "parameters": {
                                    "id": 624,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 621,
                                            "mutability": "mutable",
                                            "name": "to",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 638,
                                            "src": "4165:10:2",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            },
                                            "typeName": {
                                                "id": 620,
                                                "name": "address",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "4165:7:2",
                                                "stateMutability": "nonpayable",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            "visibility": "internal"
                                        },
                                        {
                                            "constant": false,
                                            "id": 623,
                                            "mutability": "mutable",
                                            "name": "value",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 638,
                                            "src": "4177:13:2",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            },
                                            "typeName": {
                                                "id": 622,
                                                "name": "uint256",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "4177:7:2",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "4164:27:2"
                                },
                                "returnParameters": {
                                    "id": 630,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 629,
                                            "mutability": "mutable",
                                            "name": "",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 638,
                                            "src": "4242:4:2",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_bool",
                                                "typeString": "bool"
                                            },
                                            "typeName": {
                                                "id": 628,
                                                "name": "bool",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "4242:4:2",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "4241:6:2"
                                },
                                "scope": 696,
                                "src": "4147:152:2",
                                "stateMutability": "nonpayable",
                                "virtual": false,
                                "visibility": "public"
                            },
                            {
                                "baseFunctions": [
                                    2239
                                ],
                                "body": {
                                    "id": 651,
                                    "nodeType": "Block",
                                    "src": "4373:78:2",
                                    "statements": [
                                        {
                                            "expression": {
                                                "arguments": [],
                                                "expression": {
                                                    "argumentTypes": [],
                                                    "expression": {
                                                        "arguments": [
                                                            {
                                                                "arguments": [],
                                                                "expression": {
                                                                    "argumentTypes": [],
                                                                    "id": 645,
                                                                    "name": "getWrappedContract",
                                                                    "nodeType": "Identifier",
                                                                    "overloadedDeclarations": [],
                                                                    "referencedDeclaration": 1337,
                                                                    "src": "4404:18:2",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                                                        "typeString": "function () view returns (address)"
                                                                    }
                                                                },
                                                                "id": 646,
                                                                "isConstant": false,
                                                                "isLValue": false,
                                                                "isPure": false,
                                                                "kind": "functionCall",
                                                                "lValueRequested": false,
                                                                "names": [],
                                                                "nodeType": "FunctionCall",
                                                                "src": "4404:20:2",
                                                                "tryCall": false,
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_address",
                                                                    "typeString": "address"
                                                                }
                                                            }
                                                        ],
                                                        "expression": {
                                                            "argumentTypes": [
                                                                {
                                                                    "typeIdentifier": "t_address",
                                                                    "typeString": "address"
                                                                }
                                                            ],
                                                            "id": 644,
                                                            "name": "IRecoverable",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 714,
                                                            "src": "4391:12:2",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_type$_t_contract$_IRecoverable_$714_$",
                                                                "typeString": "type(contract IRecoverable)"
                                                            }
                                                        },
                                                        "id": 647,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "kind": "typeConversion",
                                                        "lValueRequested": false,
                                                        "names": [],
                                                        "nodeType": "FunctionCall",
                                                        "src": "4391:34:2",
                                                        "tryCall": false,
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_contract$_IRecoverable_$714",
                                                            "typeString": "contract IRecoverable"
                                                        }
                                                    },
                                                    "id": 648,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "memberName": "getClaimDeleter",
                                                    "nodeType": "MemberAccess",
                                                    "referencedDeclaration": 713,
                                                    "src": "4391:50:2",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                                                        "typeString": "function () view external returns (address)"
                                                    }
                                                },
                                                "id": 649,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "4391:52:2",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            "functionReturnParameters": 643,
                                            "id": 650,
                                            "nodeType": "Return",
                                            "src": "4384:59:2"
                                        }
                                    ]
                                },
                                "functionSelector": "2a0a4ed5",
                                "id": 652,
                                "implemented": true,
                                "kind": "function",
                                "modifiers": [],
                                "name": "getClaimDeleter",
                                "nodeType": "FunctionDefinition",
                                "overrides": {
                                    "id": 640,
                                    "nodeType": "OverrideSpecifier",
                                    "overrides": [],
                                    "src": "4346:8:2"
                                },
                                "parameters": {
                                    "id": 639,
                                    "nodeType": "ParameterList",
                                    "parameters": [],
                                    "src": "4331:2:2"
                                },
                                "returnParameters": {
                                    "id": 643,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 642,
                                            "mutability": "mutable",
                                            "name": "",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 652,
                                            "src": "4364:7:2",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            },
                                            "typeName": {
                                                "id": 641,
                                                "name": "address",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "4364:7:2",
                                                "stateMutability": "nonpayable",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "4363:9:2"
                                },
                                "scope": 696,
                                "src": "4307:144:2",
                                "stateMutability": "view",
                                "virtual": false,
                                "visibility": "public"
                            },
                            {
                                "baseFunctions": [
                                    2192
                                ],
                                "body": {
                                    "id": 694,
                                    "nodeType": "Block",
                                    "src": "4549:569:2",
                                    "statements": [
                                        {
                                            "assignments": [
                                                661
                                            ],
                                            "declarations": [
                                                {
                                                    "constant": false,
                                                    "id": 661,
                                                    "mutability": "mutable",
                                                    "name": "rate",
                                                    "nodeType": "VariableDeclaration",
                                                    "scope": 694,
                                                    "src": "4560:12:2",
                                                    "stateVariable": false,
                                                    "storageLocation": "default",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    },
                                                    "typeName": {
                                                        "id": 660,
                                                        "name": "uint256",
                                                        "nodeType": "ElementaryTypeName",
                                                        "src": "4560:7:2",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        }
                                                    },
                                                    "visibility": "internal"
                                                }
                                            ],
                                            "id": 666,
                                            "initialValue": {
                                                "arguments": [
                                                    {
                                                        "id": 664,
                                                        "name": "collateralType",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 654,
                                                        "src": "4599:14:2",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        }
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        }
                                                    ],
                                                    "expression": {
                                                        "id": 662,
                                                        "name": "super",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": -25,
                                                        "src": "4575:5:2",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_super$_DraggableShares_$696",
                                                            "typeString": "contract super DraggableShares"
                                                        }
                                                    },
                                                    "id": 663,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "memberName": "getCollateralRate",
                                                    "nodeType": "MemberAccess",
                                                    "referencedDeclaration": 2192,
                                                    "src": "4575:23:2",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                                                        "typeString": "function (address) view returns (uint256)"
                                                    }
                                                },
                                                "id": 665,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "4575:39:2",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            },
                                            "nodeType": "VariableDeclarationStatement",
                                            "src": "4560:54:2"
                                        },
                                        {
                                            "condition": {
                                                "commonType": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                },
                                                "id": 669,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftExpression": {
                                                    "id": 667,
                                                    "name": "rate",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 661,
                                                    "src": "4629:4:2",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    }
                                                },
                                                "nodeType": "BinaryOperation",
                                                "operator": ">",
                                                "rightExpression": {
                                                    "hexValue": "30",
                                                    "id": 668,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "kind": "number",
                                                    "lValueRequested": false,
                                                    "nodeType": "Literal",
                                                    "src": "4636:1:2",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_rational_0_by_1",
                                                        "typeString": "int_const 0"
                                                    },
                                                    "value": "0"
                                                },
                                                "src": "4629:8:2",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            },
                                            "falseBody": {
                                                "condition": {
                                                    "commonType": {
                                                        "typeIdentifier": "t_address",
                                                        "typeString": "address"
                                                    },
                                                    "id": 676,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "leftExpression": {
                                                        "id": 673,
                                                        "name": "collateralType",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 654,
                                                        "src": "4687:14:2",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        }
                                                    },
                                                    "nodeType": "BinaryOperation",
                                                    "operator": "==",
                                                    "rightExpression": {
                                                        "arguments": [],
                                                        "expression": {
                                                            "argumentTypes": [],
                                                            "id": 674,
                                                            "name": "getWrappedContract",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 1337,
                                                            "src": "4705:18:2",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                                                "typeString": "function () view returns (address)"
                                                            }
                                                        },
                                                        "id": 675,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "kind": "functionCall",
                                                        "lValueRequested": false,
                                                        "names": [],
                                                        "nodeType": "FunctionCall",
                                                        "src": "4705:20:2",
                                                        "tryCall": false,
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        }
                                                    },
                                                    "src": "4687:38:2",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_bool",
                                                        "typeString": "bool"
                                                    }
                                                },
                                                "falseBody": {
                                                    "id": 691,
                                                    "nodeType": "Block",
                                                    "src": "4789:322:2",
                                                    "statements": [
                                                        {
                                                            "expression": {
                                                                "arguments": [
                                                                    {
                                                                        "id": 688,
                                                                        "name": "unwrapConversionFactor",
                                                                        "nodeType": "Identifier",
                                                                        "overloadedDeclarations": [],
                                                                        "referencedDeclaration": 1208,
                                                                        "src": "5076:22:2",
                                                                        "typeDescriptions": {
                                                                            "typeIdentifier": "t_uint256",
                                                                            "typeString": "uint256"
                                                                        }
                                                                    }
                                                                ],
                                                                "expression": {
                                                                    "argumentTypes": [
                                                                        {
                                                                            "typeIdentifier": "t_uint256",
                                                                            "typeString": "uint256"
                                                                        }
                                                                    ],
                                                                    "expression": {
                                                                        "arguments": [
                                                                            {
                                                                                "id": 685,
                                                                                "name": "collateralType",
                                                                                "nodeType": "Identifier",
                                                                                "overloadedDeclarations": [],
                                                                                "referencedDeclaration": 654,
                                                                                "src": "5056:14:2",
                                                                                "typeDescriptions": {
                                                                                    "typeIdentifier": "t_address",
                                                                                    "typeString": "address"
                                                                                }
                                                                            }
                                                                        ],
                                                                        "expression": {
                                                                            "argumentTypes": [
                                                                                {
                                                                                    "typeIdentifier": "t_address",
                                                                                    "typeString": "address"
                                                                                }
                                                                            ],
                                                                            "expression": {
                                                                                "arguments": [
                                                                                    {
                                                                                        "arguments": [],
                                                                                        "expression": {
                                                                                            "argumentTypes": [],
                                                                                            "id": 681,
                                                                                            "name": "getWrappedContract",
                                                                                            "nodeType": "Identifier",
                                                                                            "overloadedDeclarations": [],
                                                                                            "referencedDeclaration": 1337,
                                                                                            "src": "5016:18:2",
                                                                                            "typeDescriptions": {
                                                                                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                                                                                "typeString": "function () view returns (address)"
                                                                                            }
                                                                                        },
                                                                                        "id": 682,
                                                                                        "isConstant": false,
                                                                                        "isLValue": false,
                                                                                        "isPure": false,
                                                                                        "kind": "functionCall",
                                                                                        "lValueRequested": false,
                                                                                        "names": [],
                                                                                        "nodeType": "FunctionCall",
                                                                                        "src": "5016:20:2",
                                                                                        "tryCall": false,
                                                                                        "typeDescriptions": {
                                                                                            "typeIdentifier": "t_address",
                                                                                            "typeString": "address"
                                                                                        }
                                                                                    }
                                                                                ],
                                                                                "expression": {
                                                                                    "argumentTypes": [
                                                                                        {
                                                                                            "typeIdentifier": "t_address",
                                                                                            "typeString": "address"
                                                                                        }
                                                                                    ],
                                                                                    "id": 680,
                                                                                    "name": "IRecoverable",
                                                                                    "nodeType": "Identifier",
                                                                                    "overloadedDeclarations": [],
                                                                                    "referencedDeclaration": 714,
                                                                                    "src": "5003:12:2",
                                                                                    "typeDescriptions": {
                                                                                        "typeIdentifier": "t_type$_t_contract$_IRecoverable_$714_$",
                                                                                        "typeString": "type(contract IRecoverable)"
                                                                                    }
                                                                                },
                                                                                "id": 683,
                                                                                "isConstant": false,
                                                                                "isLValue": false,
                                                                                "isPure": false,
                                                                                "kind": "typeConversion",
                                                                                "lValueRequested": false,
                                                                                "names": [],
                                                                                "nodeType": "FunctionCall",
                                                                                "src": "5003:34:2",
                                                                                "tryCall": false,
                                                                                "typeDescriptions": {
                                                                                    "typeIdentifier": "t_contract$_IRecoverable_$714",
                                                                                    "typeString": "contract IRecoverable"
                                                                                }
                                                                            },
                                                                            "id": 684,
                                                                            "isConstant": false,
                                                                            "isLValue": false,
                                                                            "isPure": false,
                                                                            "lValueRequested": false,
                                                                            "memberName": "getCollateralRate",
                                                                            "nodeType": "MemberAccess",
                                                                            "referencedDeclaration": 708,
                                                                            "src": "5003:52:2",
                                                                            "typeDescriptions": {
                                                                                "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                                                                "typeString": "function (address) view external returns (uint256)"
                                                                            }
                                                                        },
                                                                        "id": 686,
                                                                        "isConstant": false,
                                                                        "isLValue": false,
                                                                        "isPure": false,
                                                                        "kind": "functionCall",
                                                                        "lValueRequested": false,
                                                                        "names": [],
                                                                        "nodeType": "FunctionCall",
                                                                        "src": "5003:68:2",
                                                                        "tryCall": false,
                                                                        "typeDescriptions": {
                                                                            "typeIdentifier": "t_uint256",
                                                                            "typeString": "uint256"
                                                                        }
                                                                    },
                                                                    "id": 687,
                                                                    "isConstant": false,
                                                                    "isLValue": false,
                                                                    "isPure": false,
                                                                    "lValueRequested": false,
                                                                    "memberName": "mul",
                                                                    "nodeType": "MemberAccess",
                                                                    "referencedDeclaration": 2866,
                                                                    "src": "5003:72:2",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                                                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                                                                    }
                                                                },
                                                                "id": 689,
                                                                "isConstant": false,
                                                                "isLValue": false,
                                                                "isPure": false,
                                                                "kind": "functionCall",
                                                                "lValueRequested": false,
                                                                "names": [],
                                                                "nodeType": "FunctionCall",
                                                                "src": "5003:96:2",
                                                                "tryCall": false,
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_uint256",
                                                                    "typeString": "uint256"
                                                                }
                                                            },
                                                            "functionReturnParameters": 659,
                                                            "id": 690,
                                                            "nodeType": "Return",
                                                            "src": "4996:103:2"
                                                        }
                                                    ]
                                                },
                                                "id": 692,
                                                "nodeType": "IfStatement",
                                                "src": "4683:428:2",
                                                "trueBody": {
                                                    "id": 679,
                                                    "nodeType": "Block",
                                                    "src": "4727:56:2",
                                                    "statements": [
                                                        {
                                                            "expression": {
                                                                "id": 677,
                                                                "name": "unwrapConversionFactor",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [],
                                                                "referencedDeclaration": 1208,
                                                                "src": "4749:22:2",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_uint256",
                                                                    "typeString": "uint256"
                                                                }
                                                            },
                                                            "functionReturnParameters": 659,
                                                            "id": 678,
                                                            "nodeType": "Return",
                                                            "src": "4742:29:2"
                                                        }
                                                    ]
                                                }
                                            },
                                            "id": 693,
                                            "nodeType": "IfStatement",
                                            "src": "4625:486:2",
                                            "trueBody": {
                                                "id": 672,
                                                "nodeType": "Block",
                                                "src": "4639:38:2",
                                                "statements": [
                                                    {
                                                        "expression": {
                                                            "id": 670,
                                                            "name": "rate",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 661,
                                                            "src": "4661:4:2",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_uint256",
                                                                "typeString": "uint256"
                                                            }
                                                        },
                                                        "functionReturnParameters": 659,
                                                        "id": 671,
                                                        "nodeType": "Return",
                                                        "src": "4654:11:2"
                                                    }
                                                ]
                                            }
                                        }
                                    ]
                                },
                                "functionSelector": "77e071ad",
                                "id": 695,
                                "implemented": true,
                                "kind": "function",
                                "modifiers": [],
                                "name": "getCollateralRate",
                                "nodeType": "FunctionDefinition",
                                "overrides": {
                                    "id": 656,
                                    "nodeType": "OverrideSpecifier",
                                    "overrides": [],
                                    "src": "4522:8:2"
                                },
                                "parameters": {
                                    "id": 655,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 654,
                                            "mutability": "mutable",
                                            "name": "collateralType",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 695,
                                            "src": "4486:22:2",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            },
                                            "typeName": {
                                                "id": 653,
                                                "name": "address",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "4486:7:2",
                                                "stateMutability": "nonpayable",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "4485:24:2"
                                },
                                "returnParameters": {
                                    "id": 659,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 658,
                                            "mutability": "mutable",
                                            "name": "",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 695,
                                            "src": "4540:7:2",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            },
                                            "typeName": {
                                                "id": 657,
                                                "name": "uint256",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "4540:7:2",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "4539:9:2"
                                },
                                "scope": 696,
                                "src": "4459:659:2",
                                "stateMutability": "view",
                                "virtual": false,
                                "visibility": "public"
                            }
                        ],
                        "scope": 715,
                        "src": "3075:2048:2"
                    },
                    {
                        "abstract": true,
                        "baseContracts": [],
                        "contractDependencies": [],
                        "contractKind": "contract",
                        "fullyImplemented": false,
                        "id": 714,
                        "linearizedBaseContracts": [
                            714
                        ],
                        "name": "IRecoverable",
                        "nodeType": "ContractDefinition",
                        "nodes": [
                            {
                                "functionSelector": "6427ed97",
                                "id": 701,
                                "implemented": false,
                                "kind": "function",
                                "modifiers": [],
                                "name": "setRecoverable",
                                "nodeType": "FunctionDefinition",
                                "parameters": {
                                    "id": 699,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 698,
                                            "mutability": "mutable",
                                            "name": "",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 701,
                                            "src": "5189:4:2",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_bool",
                                                "typeString": "bool"
                                            },
                                            "typeName": {
                                                "id": 697,
                                                "name": "bool",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "5189:4:2",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "5188:6:2"
                                },
                                "returnParameters": {
                                    "id": 700,
                                    "nodeType": "ParameterList",
                                    "parameters": [],
                                    "src": "5209:0:2"
                                },
                                "scope": 714,
                                "src": "5165:45:2",
                                "stateMutability": "nonpayable",
                                "virtual": true,
                                "visibility": "public"
                            },
                            {
                                "functionSelector": "77e071ad",
                                "id": 708,
                                "implemented": false,
                                "kind": "function",
                                "modifiers": [],
                                "name": "getCollateralRate",
                                "nodeType": "FunctionDefinition",
                                "parameters": {
                                    "id": 704,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 703,
                                            "mutability": "mutable",
                                            "name": "",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 708,
                                            "src": "5243:7:2",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            },
                                            "typeName": {
                                                "id": 702,
                                                "name": "address",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "5243:7:2",
                                                "stateMutability": "nonpayable",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "5242:9:2"
                                },
                                "returnParameters": {
                                    "id": 707,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 706,
                                            "mutability": "mutable",
                                            "name": "",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 708,
                                            "src": "5281:7:2",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            },
                                            "typeName": {
                                                "id": 705,
                                                "name": "uint256",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "5281:7:2",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "5280:9:2"
                                },
                                "scope": 714,
                                "src": "5216:74:2",
                                "stateMutability": "view",
                                "virtual": true,
                                "visibility": "public"
                            },
                            {
                                "functionSelector": "2a0a4ed5",
                                "id": 713,
                                "implemented": false,
                                "kind": "function",
                                "modifiers": [],
                                "name": "getClaimDeleter",
                                "nodeType": "FunctionDefinition",
                                "parameters": {
                                    "id": 709,
                                    "nodeType": "ParameterList",
                                    "parameters": [],
                                    "src": "5320:2:2"
                                },
                                "returnParameters": {
                                    "id": 712,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 711,
                                            "mutability": "mutable",
                                            "name": "",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 713,
                                            "src": "5352:7:2",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            },
                                            "typeName": {
                                                "id": 710,
                                                "name": "address",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "5352:7:2",
                                                "stateMutability": "nonpayable",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "5351:9:2"
                                },
                                "scope": 714,
                                "src": "5296:65:2",
                                "stateMutability": "view",
                                "virtual": true,
                                "visibility": "public"
                            }
                        ],
                        "scope": 715,
                        "src": "5127:237:2"
                    }
                ],
                "src": "1336:4028:2"
            },
            "id": 2
        },
        "c:/Users/luziu/Documents/aktionariat/contracts/src/ERC20.sol": {
            "ast": {
                "absolutePath": "c:/Users/luziu/Documents/aktionariat/contracts/src/ERC20.sol",
                "exportedSymbols": {
                    "ERC20": [
                        1187
                    ]
                },
                "id": 1188,
                "license": "MIT",
                "nodeType": "SourceUnit",
                "nodes": [
                    {
                        "id": 716,
                        "literals": [
                            "solidity",
                            ">=",
                            "0.7"
                        ],
                        "nodeType": "PragmaDirective",
                        "src": "134:22:3"
                    },
                    {
                        "absolutePath": "c:/Users/luziu/Documents/aktionariat/contracts/src/IERC20.sol",
                        "file": "./IERC20.sol",
                        "id": 717,
                        "nodeType": "ImportDirective",
                        "scope": 1188,
                        "sourceUnit": 2810,
                        "src": "160:22:3",
                        "symbolAliases": [],
                        "unitAlias": ""
                    },
                    {
                        "absolutePath": "c:/Users/luziu/Documents/aktionariat/contracts/src/SafeMath.sol",
                        "file": "./SafeMath.sol",
                        "id": 718,
                        "nodeType": "ImportDirective",
                        "scope": 1188,
                        "sourceUnit": 2929,
                        "src": "184:24:3",
                        "symbolAliases": [],
                        "unitAlias": ""
                    },
                    {
                        "absolutePath": "c:/Users/luziu/Documents/aktionariat/contracts/src/IERC677Receiver.sol",
                        "file": "./IERC677Receiver.sol",
                        "id": 719,
                        "nodeType": "ImportDirective",
                        "scope": 1188,
                        "sourceUnit": 2822,
                        "src": "210:31:3",
                        "symbolAliases": [],
                        "unitAlias": ""
                    },
                    {
                        "abstract": true,
                        "baseContracts": [
                            {
                                "baseName": {
                                    "id": 721,
                                    "name": "IERC20",
                                    "nodeType": "UserDefinedTypeName",
                                    "referencedDeclaration": 2809,
                                    "src": "1446:6:3",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_IERC20_$2809",
                                        "typeString": "contract IERC20"
                                    }
                                },
                                "id": 722,
                                "nodeType": "InheritanceSpecifier",
                                "src": "1446:6:3"
                            }
                        ],
                        "contractDependencies": [
                            2809
                        ],
                        "contractKind": "contract",
                        "documentation": {
                            "id": 720,
                            "nodeType": "StructuredDocumentation",
                            "src": "245:1170:3",
                            "text": " @dev Implementation of the `IERC20` interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using `_mint`.\n For a generic mechanism see `ERC20Mintable`.\n *For a detailed writeup see our guide [How to implement supply\n mechanisms](https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226).*\n We have followed general OpenZeppelin guidelines: functions revert instead\n of returning `false` on failure. This behavior is nonetheless conventional\n and does not conflict with the expectations of ERC20 applications.\n Additionally, an `Approval` event is emitted on calls to `transferFrom`.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification.\n Finally, the non-standard `decreaseAllowance` and `increaseAllowance`\n functions have been added to mitigate the well-known issues around setting\n allowances. See `IERC20.approve`."
                        },
                        "fullyImplemented": false,
                        "id": 1187,
                        "linearizedBaseContracts": [
                            1187,
                            2809
                        ],
                        "name": "ERC20",
                        "nodeType": "ContractDefinition",
                        "nodes": [
                            {
                                "id": 725,
                                "libraryName": {
                                    "id": 723,
                                    "name": "SafeMath",
                                    "nodeType": "UserDefinedTypeName",
                                    "referencedDeclaration": 2928,
                                    "src": "1468:8:3",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_SafeMath_$2928",
                                        "typeString": "library SafeMath"
                                    }
                                },
                                "nodeType": "UsingForDirective",
                                "src": "1462:27:3",
                                "typeName": {
                                    "id": 724,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "1481:7:3",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                    }
                                }
                            },
                            {
                                "constant": false,
                                "id": 729,
                                "mutability": "mutable",
                                "name": "_balances",
                                "nodeType": "VariableDeclaration",
                                "scope": 1187,
                                "src": "1497:46:3",
                                "stateVariable": true,
                                "storageLocation": "default",
                                "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                    "typeString": "mapping(address => uint256)"
                                },
                                "typeName": {
                                    "id": 728,
                                    "keyType": {
                                        "id": 726,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "1506:7:3",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "nodeType": "Mapping",
                                    "src": "1497:28:3",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                        "typeString": "mapping(address => uint256)"
                                    },
                                    "valueType": {
                                        "id": 727,
                                        "name": "uint256",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "1517:7:3",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    }
                                },
                                "visibility": "private"
                            },
                            {
                                "constant": false,
                                "id": 735,
                                "mutability": "mutable",
                                "name": "_allowances",
                                "nodeType": "VariableDeclaration",
                                "scope": 1187,
                                "src": "1552:69:3",
                                "stateVariable": true,
                                "storageLocation": "default",
                                "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                    "typeString": "mapping(address => mapping(address => uint256))"
                                },
                                "typeName": {
                                    "id": 734,
                                    "keyType": {
                                        "id": 730,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "1561:7:3",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "nodeType": "Mapping",
                                    "src": "1552:49:3",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                        "typeString": "mapping(address => mapping(address => uint256))"
                                    },
                                    "valueType": {
                                        "id": 733,
                                        "keyType": {
                                            "id": 731,
                                            "name": "address",
                                            "nodeType": "ElementaryTypeName",
                                            "src": "1581:7:3",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            }
                                        },
                                        "nodeType": "Mapping",
                                        "src": "1572:28:3",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                            "typeString": "mapping(address => uint256)"
                                        },
                                        "valueType": {
                                            "id": 732,
                                            "name": "uint256",
                                            "nodeType": "ElementaryTypeName",
                                            "src": "1592:7:3",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            }
                                        }
                                    }
                                },
                                "visibility": "private"
                            },
                            {
                                "constant": false,
                                "id": 737,
                                "mutability": "mutable",
                                "name": "_totalSupply",
                                "nodeType": "VariableDeclaration",
                                "scope": 1187,
                                "src": "1630:28:3",
                                "stateVariable": true,
                                "storageLocation": "default",
                                "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                },
                                "typeName": {
                                    "id": 736,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "1630:7:3",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                    }
                                },
                                "visibility": "private"
                            },
                            {
                                "baseFunctions": [
                                    2734
                                ],
                                "constant": false,
                                "functionSelector": "313ce567",
                                "id": 740,
                                "mutability": "mutable",
                                "name": "decimals",
                                "nodeType": "VariableDeclaration",
                                "overrides": {
                                    "id": 739,
                                    "nodeType": "OverrideSpecifier",
                                    "overrides": [],
                                    "src": "1680:8:3"
                                },
                                "scope": 1187,
                                "src": "1667:30:3",
                                "stateVariable": true,
                                "storageLocation": "default",
                                "typeDescriptions": {
                                    "typeIdentifier": "t_uint8",
                                    "typeString": "uint8"
                                },
                                "typeName": {
                                    "id": 738,
                                    "name": "uint8",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "1667:5:3",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint8",
                                        "typeString": "uint8"
                                    }
                                },
                                "visibility": "public"
                            },
                            {
                                "body": {
                                    "id": 749,
                                    "nodeType": "Block",
                                    "src": "1735:39:3",
                                    "statements": [
                                        {
                                            "expression": {
                                                "id": 747,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftHandSide": {
                                                    "id": 745,
                                                    "name": "decimals",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 740,
                                                    "src": "1746:8:3",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_uint8",
                                                        "typeString": "uint8"
                                                    }
                                                },
                                                "nodeType": "Assignment",
                                                "operator": "=",
                                                "rightHandSide": {
                                                    "id": 746,
                                                    "name": "_decimals",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 742,
                                                    "src": "1757:9:3",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_uint8",
                                                        "typeString": "uint8"
                                                    }
                                                },
                                                "src": "1746:20:3",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint8",
                                                    "typeString": "uint8"
                                                }
                                            },
                                            "id": 748,
                                            "nodeType": "ExpressionStatement",
                                            "src": "1746:20:3"
                                        }
                                    ]
                                },
                                "id": 750,
                                "implemented": true,
                                "kind": "constructor",
                                "modifiers": [],
                                "name": "",
                                "nodeType": "FunctionDefinition",
                                "parameters": {
                                    "id": 743,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 742,
                                            "mutability": "mutable",
                                            "name": "_decimals",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 750,
                                            "src": "1718:15:3",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint8",
                                                "typeString": "uint8"
                                            },
                                            "typeName": {
                                                "id": 741,
                                                "name": "uint8",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "1718:5:3",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint8",
                                                    "typeString": "uint8"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "1717:17:3"
                                },
                                "returnParameters": {
                                    "id": 744,
                                    "nodeType": "ParameterList",
                                    "parameters": [],
                                    "src": "1735:0:3"
                                },
                                "scope": 1187,
                                "src": "1706:68:3",
                                "stateMutability": "nonpayable",
                                "virtual": false,
                                "visibility": "internal"
                            },
                            {
                                "baseFunctions": [
                                    2740
                                ],
                                "body": {
                                    "id": 759,
                                    "nodeType": "Block",
                                    "src": "1901:38:3",
                                    "statements": [
                                        {
                                            "expression": {
                                                "id": 757,
                                                "name": "_totalSupply",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 737,
                                                "src": "1919:12:3",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            },
                                            "functionReturnParameters": 756,
                                            "id": 758,
                                            "nodeType": "Return",
                                            "src": "1912:19:3"
                                        }
                                    ]
                                },
                                "documentation": {
                                    "id": 751,
                                    "nodeType": "StructuredDocumentation",
                                    "src": "1782:51:3",
                                    "text": " @dev See `IERC20.totalSupply`."
                                },
                                "functionSelector": "18160ddd",
                                "id": 760,
                                "implemented": true,
                                "kind": "function",
                                "modifiers": [],
                                "name": "totalSupply",
                                "nodeType": "FunctionDefinition",
                                "overrides": {
                                    "id": 753,
                                    "nodeType": "OverrideSpecifier",
                                    "overrides": [],
                                    "src": "1874:8:3"
                                },
                                "parameters": {
                                    "id": 752,
                                    "nodeType": "ParameterList",
                                    "parameters": [],
                                    "src": "1859:2:3"
                                },
                                "returnParameters": {
                                    "id": 756,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 755,
                                            "mutability": "mutable",
                                            "name": "",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 760,
                                            "src": "1892:7:3",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            },
                                            "typeName": {
                                                "id": 754,
                                                "name": "uint256",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "1892:7:3",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "1891:9:3"
                                },
                                "scope": 1187,
                                "src": "1839:100:3",
                                "stateMutability": "view",
                                "virtual": false,
                                "visibility": "public"
                            },
                            {
                                "baseFunctions": [
                                    2748
                                ],
                                "body": {
                                    "id": 773,
                                    "nodeType": "Block",
                                    "src": "2077:44:3",
                                    "statements": [
                                        {
                                            "expression": {
                                                "baseExpression": {
                                                    "id": 769,
                                                    "name": "_balances",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 729,
                                                    "src": "2095:9:3",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                                        "typeString": "mapping(address => uint256)"
                                                    }
                                                },
                                                "id": 771,
                                                "indexExpression": {
                                                    "id": 770,
                                                    "name": "account",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 763,
                                                    "src": "2105:7:3",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_address",
                                                        "typeString": "address"
                                                    }
                                                },
                                                "isConstant": false,
                                                "isLValue": true,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "nodeType": "IndexAccess",
                                                "src": "2095:18:3",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            },
                                            "functionReturnParameters": 768,
                                            "id": 772,
                                            "nodeType": "Return",
                                            "src": "2088:25:3"
                                        }
                                    ]
                                },
                                "documentation": {
                                    "id": 761,
                                    "nodeType": "StructuredDocumentation",
                                    "src": "1947:49:3",
                                    "text": " @dev See `IERC20.balanceOf`."
                                },
                                "functionSelector": "70a08231",
                                "id": 774,
                                "implemented": true,
                                "kind": "function",
                                "modifiers": [],
                                "name": "balanceOf",
                                "nodeType": "FunctionDefinition",
                                "overrides": {
                                    "id": 765,
                                    "nodeType": "OverrideSpecifier",
                                    "overrides": [],
                                    "src": "2050:8:3"
                                },
                                "parameters": {
                                    "id": 764,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 763,
                                            "mutability": "mutable",
                                            "name": "account",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 774,
                                            "src": "2021:15:3",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            },
                                            "typeName": {
                                                "id": 762,
                                                "name": "address",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "2021:7:3",
                                                "stateMutability": "nonpayable",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "2020:17:3"
                                },
                                "returnParameters": {
                                    "id": 768,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 767,
                                            "mutability": "mutable",
                                            "name": "",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 774,
                                            "src": "2068:7:3",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            },
                                            "typeName": {
                                                "id": 766,
                                                "name": "uint256",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "2068:7:3",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "2067:9:3"
                                },
                                "scope": 1187,
                                "src": "2002:119:3",
                                "stateMutability": "view",
                                "virtual": false,
                                "visibility": "public"
                            },
                            {
                                "baseFunctions": [
                                    2758
                                ],
                                "body": {
                                    "id": 794,
                                    "nodeType": "Block",
                                    "src": "2426:81:3",
                                    "statements": [
                                        {
                                            "expression": {
                                                "arguments": [
                                                    {
                                                        "expression": {
                                                            "id": 786,
                                                            "name": "msg",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": -15,
                                                            "src": "2447:3:3",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_magic_message",
                                                                "typeString": "msg"
                                                            }
                                                        },
                                                        "id": 787,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "memberName": "sender",
                                                        "nodeType": "MemberAccess",
                                                        "src": "2447:10:3",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_address_payable",
                                                            "typeString": "address payable"
                                                        }
                                                    },
                                                    {
                                                        "id": 788,
                                                        "name": "recipient",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 777,
                                                        "src": "2459:9:3",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        }
                                                    },
                                                    {
                                                        "id": 789,
                                                        "name": "amount",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 779,
                                                        "src": "2470:6:3",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        }
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_address_payable",
                                                            "typeString": "address payable"
                                                        },
                                                        {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        },
                                                        {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        }
                                                    ],
                                                    "id": 785,
                                                    "name": "_transfer",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 986,
                                                    "src": "2437:9:3",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                                                        "typeString": "function (address,address,uint256)"
                                                    }
                                                },
                                                "id": 790,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "2437:40:3",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_tuple$__$",
                                                    "typeString": "tuple()"
                                                }
                                            },
                                            "id": 791,
                                            "nodeType": "ExpressionStatement",
                                            "src": "2437:40:3"
                                        },
                                        {
                                            "expression": {
                                                "hexValue": "74727565",
                                                "id": 792,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "bool",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "2495:4:3",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                },
                                                "value": "true"
                                            },
                                            "functionReturnParameters": 784,
                                            "id": 793,
                                            "nodeType": "Return",
                                            "src": "2488:11:3"
                                        }
                                    ]
                                },
                                "documentation": {
                                    "id": 775,
                                    "nodeType": "StructuredDocumentation",
                                    "src": "2129:199:3",
                                    "text": " @dev See `IERC20.transfer`.\n Requirements:\n - `recipient` cannot be the zero address.\n - the caller must have a balance of at least `amount`."
                                },
                                "functionSelector": "a9059cbb",
                                "id": 795,
                                "implemented": true,
                                "kind": "function",
                                "modifiers": [],
                                "name": "transfer",
                                "nodeType": "FunctionDefinition",
                                "overrides": {
                                    "id": 781,
                                    "nodeType": "OverrideSpecifier",
                                    "overrides": [],
                                    "src": "2402:8:3"
                                },
                                "parameters": {
                                    "id": 780,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 777,
                                            "mutability": "mutable",
                                            "name": "recipient",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 795,
                                            "src": "2352:17:3",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            },
                                            "typeName": {
                                                "id": 776,
                                                "name": "address",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "2352:7:3",
                                                "stateMutability": "nonpayable",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            "visibility": "internal"
                                        },
                                        {
                                            "constant": false,
                                            "id": 779,
                                            "mutability": "mutable",
                                            "name": "amount",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 795,
                                            "src": "2371:14:3",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            },
                                            "typeName": {
                                                "id": 778,
                                                "name": "uint256",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "2371:7:3",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "2351:35:3"
                                },
                                "returnParameters": {
                                    "id": 784,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 783,
                                            "mutability": "mutable",
                                            "name": "",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 795,
                                            "src": "2420:4:3",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_bool",
                                                "typeString": "bool"
                                            },
                                            "typeName": {
                                                "id": 782,
                                                "name": "bool",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "2420:4:3",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "2419:6:3"
                                },
                                "scope": 1187,
                                "src": "2334:173:3",
                                "stateMutability": "nonpayable",
                                "virtual": true,
                                "visibility": "public"
                            },
                            {
                                "baseFunctions": [
                                    2768
                                ],
                                "body": {
                                    "id": 812,
                                    "nodeType": "Block",
                                    "src": "2660:53:3",
                                    "statements": [
                                        {
                                            "expression": {
                                                "baseExpression": {
                                                    "baseExpression": {
                                                        "id": 806,
                                                        "name": "_allowances",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 735,
                                                        "src": "2678:11:3",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                                            "typeString": "mapping(address => mapping(address => uint256))"
                                                        }
                                                    },
                                                    "id": 808,
                                                    "indexExpression": {
                                                        "id": 807,
                                                        "name": "owner",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 798,
                                                        "src": "2690:5:3",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        }
                                                    },
                                                    "isConstant": false,
                                                    "isLValue": true,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "nodeType": "IndexAccess",
                                                    "src": "2678:18:3",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                                        "typeString": "mapping(address => uint256)"
                                                    }
                                                },
                                                "id": 810,
                                                "indexExpression": {
                                                    "id": 809,
                                                    "name": "spender",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 800,
                                                    "src": "2697:7:3",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_address",
                                                        "typeString": "address"
                                                    }
                                                },
                                                "isConstant": false,
                                                "isLValue": true,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "nodeType": "IndexAccess",
                                                "src": "2678:27:3",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            },
                                            "functionReturnParameters": 805,
                                            "id": 811,
                                            "nodeType": "Return",
                                            "src": "2671:34:3"
                                        }
                                    ]
                                },
                                "documentation": {
                                    "id": 796,
                                    "nodeType": "StructuredDocumentation",
                                    "src": "2515:49:3",
                                    "text": " @dev See `IERC20.allowance`."
                                },
                                "functionSelector": "dd62ed3e",
                                "id": 813,
                                "implemented": true,
                                "kind": "function",
                                "modifiers": [],
                                "name": "allowance",
                                "nodeType": "FunctionDefinition",
                                "overrides": {
                                    "id": 802,
                                    "nodeType": "OverrideSpecifier",
                                    "overrides": [],
                                    "src": "2633:8:3"
                                },
                                "parameters": {
                                    "id": 801,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 798,
                                            "mutability": "mutable",
                                            "name": "owner",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 813,
                                            "src": "2589:13:3",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            },
                                            "typeName": {
                                                "id": 797,
                                                "name": "address",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "2589:7:3",
                                                "stateMutability": "nonpayable",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            "visibility": "internal"
                                        },
                                        {
                                            "constant": false,
                                            "id": 800,
                                            "mutability": "mutable",
                                            "name": "spender",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 813,
                                            "src": "2604:15:3",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            },
                                            "typeName": {
                                                "id": 799,
                                                "name": "address",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "2604:7:3",
                                                "stateMutability": "nonpayable",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "2588:32:3"
                                },
                                "returnParameters": {
                                    "id": 805,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 804,
                                            "mutability": "mutable",
                                            "name": "",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 813,
                                            "src": "2651:7:3",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            },
                                            "typeName": {
                                                "id": 803,
                                                "name": "uint256",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "2651:7:3",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "2650:9:3"
                                },
                                "scope": 1187,
                                "src": "2570:143:3",
                                "stateMutability": "view",
                                "virtual": false,
                                "visibility": "public"
                            },
                            {
                                "baseFunctions": [
                                    2778
                                ],
                                "body": {
                                    "id": 833,
                                    "nodeType": "Block",
                                    "src": "2940:77:3",
                                    "statements": [
                                        {
                                            "expression": {
                                                "arguments": [
                                                    {
                                                        "expression": {
                                                            "id": 825,
                                                            "name": "msg",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": -15,
                                                            "src": "2960:3:3",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_magic_message",
                                                                "typeString": "msg"
                                                            }
                                                        },
                                                        "id": 826,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "memberName": "sender",
                                                        "nodeType": "MemberAccess",
                                                        "src": "2960:10:3",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_address_payable",
                                                            "typeString": "address payable"
                                                        }
                                                    },
                                                    {
                                                        "id": 827,
                                                        "name": "spender",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 816,
                                                        "src": "2972:7:3",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        }
                                                    },
                                                    {
                                                        "id": 828,
                                                        "name": "value",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 818,
                                                        "src": "2981:5:3",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        }
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_address_payable",
                                                            "typeString": "address payable"
                                                        },
                                                        {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        },
                                                        {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        }
                                                    ],
                                                    "id": 824,
                                                    "name": "_approve",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 1157,
                                                    "src": "2951:8:3",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                                                        "typeString": "function (address,address,uint256)"
                                                    }
                                                },
                                                "id": 829,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "2951:36:3",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_tuple$__$",
                                                    "typeString": "tuple()"
                                                }
                                            },
                                            "id": 830,
                                            "nodeType": "ExpressionStatement",
                                            "src": "2951:36:3"
                                        },
                                        {
                                            "expression": {
                                                "hexValue": "74727565",
                                                "id": 831,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "bool",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "3005:4:3",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                },
                                                "value": "true"
                                            },
                                            "functionReturnParameters": 823,
                                            "id": 832,
                                            "nodeType": "Return",
                                            "src": "2998:11:3"
                                        }
                                    ]
                                },
                                "documentation": {
                                    "id": 814,
                                    "nodeType": "StructuredDocumentation",
                                    "src": "2721:133:3",
                                    "text": " @dev See `IERC20.approve`.\n Requirements:\n - `spender` cannot be the zero address."
                                },
                                "functionSelector": "095ea7b3",
                                "id": 834,
                                "implemented": true,
                                "kind": "function",
                                "modifiers": [],
                                "name": "approve",
                                "nodeType": "FunctionDefinition",
                                "overrides": {
                                    "id": 820,
                                    "nodeType": "OverrideSpecifier",
                                    "overrides": [],
                                    "src": "2916:8:3"
                                },
                                "parameters": {
                                    "id": 819,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 816,
                                            "mutability": "mutable",
                                            "name": "spender",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 834,
                                            "src": "2877:15:3",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            },
                                            "typeName": {
                                                "id": 815,
                                                "name": "address",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "2877:7:3",
                                                "stateMutability": "nonpayable",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            "visibility": "internal"
                                        },
                                        {
                                            "constant": false,
                                            "id": 818,
                                            "mutability": "mutable",
                                            "name": "value",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 834,
                                            "src": "2894:13:3",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            },
                                            "typeName": {
                                                "id": 817,
                                                "name": "uint256",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "2894:7:3",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "2876:32:3"
                                },
                                "returnParameters": {
                                    "id": 823,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 822,
                                            "mutability": "mutable",
                                            "name": "",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 834,
                                            "src": "2934:4:3",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_bool",
                                                "typeString": "bool"
                                            },
                                            "typeName": {
                                                "id": 821,
                                                "name": "bool",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "2934:4:3",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "2933:6:3"
                                },
                                "scope": 1187,
                                "src": "2860:157:3",
                                "stateMutability": "nonpayable",
                                "virtual": false,
                                "visibility": "public"
                            },
                            {
                                "baseFunctions": [
                                    2790
                                ],
                                "body": {
                                    "id": 870,
                                    "nodeType": "Block",
                                    "src": "3592:161:3",
                                    "statements": [
                                        {
                                            "expression": {
                                                "arguments": [
                                                    {
                                                        "id": 848,
                                                        "name": "sender",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 837,
                                                        "src": "3613:6:3",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        }
                                                    },
                                                    {
                                                        "id": 849,
                                                        "name": "recipient",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 839,
                                                        "src": "3621:9:3",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        }
                                                    },
                                                    {
                                                        "id": 850,
                                                        "name": "amount",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 841,
                                                        "src": "3632:6:3",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        }
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        },
                                                        {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        },
                                                        {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        }
                                                    ],
                                                    "id": 847,
                                                    "name": "_transfer",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 986,
                                                    "src": "3603:9:3",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                                                        "typeString": "function (address,address,uint256)"
                                                    }
                                                },
                                                "id": 851,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "3603:36:3",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_tuple$__$",
                                                    "typeString": "tuple()"
                                                }
                                            },
                                            "id": 852,
                                            "nodeType": "ExpressionStatement",
                                            "src": "3603:36:3"
                                        },
                                        {
                                            "expression": {
                                                "arguments": [
                                                    {
                                                        "id": 854,
                                                        "name": "sender",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 837,
                                                        "src": "3659:6:3",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        }
                                                    },
                                                    {
                                                        "expression": {
                                                            "id": 855,
                                                            "name": "msg",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": -15,
                                                            "src": "3667:3:3",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_magic_message",
                                                                "typeString": "msg"
                                                            }
                                                        },
                                                        "id": 856,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "memberName": "sender",
                                                        "nodeType": "MemberAccess",
                                                        "src": "3667:10:3",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_address_payable",
                                                            "typeString": "address payable"
                                                        }
                                                    },
                                                    {
                                                        "arguments": [
                                                            {
                                                                "id": 864,
                                                                "name": "amount",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [],
                                                                "referencedDeclaration": 841,
                                                                "src": "3715:6:3",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_uint256",
                                                                    "typeString": "uint256"
                                                                }
                                                            }
                                                        ],
                                                        "expression": {
                                                            "argumentTypes": [
                                                                {
                                                                    "typeIdentifier": "t_uint256",
                                                                    "typeString": "uint256"
                                                                }
                                                            ],
                                                            "expression": {
                                                                "baseExpression": {
                                                                    "baseExpression": {
                                                                        "id": 857,
                                                                        "name": "_allowances",
                                                                        "nodeType": "Identifier",
                                                                        "overloadedDeclarations": [],
                                                                        "referencedDeclaration": 735,
                                                                        "src": "3679:11:3",
                                                                        "typeDescriptions": {
                                                                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                                                            "typeString": "mapping(address => mapping(address => uint256))"
                                                                        }
                                                                    },
                                                                    "id": 859,
                                                                    "indexExpression": {
                                                                        "id": 858,
                                                                        "name": "sender",
                                                                        "nodeType": "Identifier",
                                                                        "overloadedDeclarations": [],
                                                                        "referencedDeclaration": 837,
                                                                        "src": "3691:6:3",
                                                                        "typeDescriptions": {
                                                                            "typeIdentifier": "t_address",
                                                                            "typeString": "address"
                                                                        }
                                                                    },
                                                                    "isConstant": false,
                                                                    "isLValue": true,
                                                                    "isPure": false,
                                                                    "lValueRequested": false,
                                                                    "nodeType": "IndexAccess",
                                                                    "src": "3679:19:3",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                                                        "typeString": "mapping(address => uint256)"
                                                                    }
                                                                },
                                                                "id": 862,
                                                                "indexExpression": {
                                                                    "expression": {
                                                                        "id": 860,
                                                                        "name": "msg",
                                                                        "nodeType": "Identifier",
                                                                        "overloadedDeclarations": [],
                                                                        "referencedDeclaration": -15,
                                                                        "src": "3699:3:3",
                                                                        "typeDescriptions": {
                                                                            "typeIdentifier": "t_magic_message",
                                                                            "typeString": "msg"
                                                                        }
                                                                    },
                                                                    "id": 861,
                                                                    "isConstant": false,
                                                                    "isLValue": false,
                                                                    "isPure": false,
                                                                    "lValueRequested": false,
                                                                    "memberName": "sender",
                                                                    "nodeType": "MemberAccess",
                                                                    "src": "3699:10:3",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_address_payable",
                                                                        "typeString": "address payable"
                                                                    }
                                                                },
                                                                "isConstant": false,
                                                                "isLValue": true,
                                                                "isPure": false,
                                                                "lValueRequested": false,
                                                                "nodeType": "IndexAccess",
                                                                "src": "3679:31:3",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_uint256",
                                                                    "typeString": "uint256"
                                                                }
                                                            },
                                                            "id": 863,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": false,
                                                            "lValueRequested": false,
                                                            "memberName": "sub",
                                                            "nodeType": "MemberAccess",
                                                            "referencedDeclaration": 2902,
                                                            "src": "3679:35:3",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                                                            }
                                                        },
                                                        "id": 865,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "kind": "functionCall",
                                                        "lValueRequested": false,
                                                        "names": [],
                                                        "nodeType": "FunctionCall",
                                                        "src": "3679:43:3",
                                                        "tryCall": false,
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        }
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        },
                                                        {
                                                            "typeIdentifier": "t_address_payable",
                                                            "typeString": "address payable"
                                                        },
                                                        {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        }
                                                    ],
                                                    "id": 853,
                                                    "name": "_approve",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 1157,
                                                    "src": "3650:8:3",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                                                        "typeString": "function (address,address,uint256)"
                                                    }
                                                },
                                                "id": 866,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "3650:73:3",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_tuple$__$",
                                                    "typeString": "tuple()"
                                                }
                                            },
                                            "id": 867,
                                            "nodeType": "ExpressionStatement",
                                            "src": "3650:73:3"
                                        },
                                        {
                                            "expression": {
                                                "hexValue": "74727565",
                                                "id": 868,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "bool",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "3741:4:3",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                },
                                                "value": "true"
                                            },
                                            "functionReturnParameters": 846,
                                            "id": 869,
                                            "nodeType": "Return",
                                            "src": "3734:11:3"
                                        }
                                    ]
                                },
                                "documentation": {
                                    "id": 835,
                                    "nodeType": "StructuredDocumentation",
                                    "src": "3025:457:3",
                                    "text": " @dev See `IERC20.transferFrom`.\n Emits an `Approval` event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of `ERC20`;\n Requirements:\n - `sender` and `recipient` cannot be the zero address.\n - `sender` must have a balance of at least `value`.\n - the caller must have allowance for `sender`'s tokens of at least\n `amount`."
                                },
                                "functionSelector": "23b872dd",
                                "id": 871,
                                "implemented": true,
                                "kind": "function",
                                "modifiers": [],
                                "name": "transferFrom",
                                "nodeType": "FunctionDefinition",
                                "overrides": {
                                    "id": 843,
                                    "nodeType": "OverrideSpecifier",
                                    "overrides": [],
                                    "src": "3568:8:3"
                                },
                                "parameters": {
                                    "id": 842,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 837,
                                            "mutability": "mutable",
                                            "name": "sender",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 871,
                                            "src": "3510:14:3",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            },
                                            "typeName": {
                                                "id": 836,
                                                "name": "address",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "3510:7:3",
                                                "stateMutability": "nonpayable",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            "visibility": "internal"
                                        },
                                        {
                                            "constant": false,
                                            "id": 839,
                                            "mutability": "mutable",
                                            "name": "recipient",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 871,
                                            "src": "3526:17:3",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            },
                                            "typeName": {
                                                "id": 838,
                                                "name": "address",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "3526:7:3",
                                                "stateMutability": "nonpayable",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            "visibility": "internal"
                                        },
                                        {
                                            "constant": false,
                                            "id": 841,
                                            "mutability": "mutable",
                                            "name": "amount",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 871,
                                            "src": "3545:14:3",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            },
                                            "typeName": {
                                                "id": 840,
                                                "name": "uint256",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "3545:7:3",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "3509:51:3"
                                },
                                "returnParameters": {
                                    "id": 846,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 845,
                                            "mutability": "mutable",
                                            "name": "",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 871,
                                            "src": "3586:4:3",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_bool",
                                                "typeString": "bool"
                                            },
                                            "typeName": {
                                                "id": 844,
                                                "name": "bool",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "3586:4:3",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "3585:6:3"
                                },
                                "scope": 1187,
                                "src": "3488:265:3",
                                "stateMutability": "nonpayable",
                                "virtual": false,
                                "visibility": "public"
                            },
                            {
                                "body": {
                                    "id": 898,
                                    "nodeType": "Block",
                                    "src": "4248:120:3",
                                    "statements": [
                                        {
                                            "expression": {
                                                "arguments": [
                                                    {
                                                        "expression": {
                                                            "id": 882,
                                                            "name": "msg",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": -15,
                                                            "src": "4268:3:3",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_magic_message",
                                                                "typeString": "msg"
                                                            }
                                                        },
                                                        "id": 883,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "memberName": "sender",
                                                        "nodeType": "MemberAccess",
                                                        "src": "4268:10:3",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_address_payable",
                                                            "typeString": "address payable"
                                                        }
                                                    },
                                                    {
                                                        "id": 884,
                                                        "name": "spender",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 874,
                                                        "src": "4280:7:3",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        }
                                                    },
                                                    {
                                                        "arguments": [
                                                            {
                                                                "id": 892,
                                                                "name": "addedValue",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [],
                                                                "referencedDeclaration": 876,
                                                                "src": "4326:10:3",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_uint256",
                                                                    "typeString": "uint256"
                                                                }
                                                            }
                                                        ],
                                                        "expression": {
                                                            "argumentTypes": [
                                                                {
                                                                    "typeIdentifier": "t_uint256",
                                                                    "typeString": "uint256"
                                                                }
                                                            ],
                                                            "expression": {
                                                                "baseExpression": {
                                                                    "baseExpression": {
                                                                        "id": 885,
                                                                        "name": "_allowances",
                                                                        "nodeType": "Identifier",
                                                                        "overloadedDeclarations": [],
                                                                        "referencedDeclaration": 735,
                                                                        "src": "4289:11:3",
                                                                        "typeDescriptions": {
                                                                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                                                            "typeString": "mapping(address => mapping(address => uint256))"
                                                                        }
                                                                    },
                                                                    "id": 888,
                                                                    "indexExpression": {
                                                                        "expression": {
                                                                            "id": 886,
                                                                            "name": "msg",
                                                                            "nodeType": "Identifier",
                                                                            "overloadedDeclarations": [],
                                                                            "referencedDeclaration": -15,
                                                                            "src": "4301:3:3",
                                                                            "typeDescriptions": {
                                                                                "typeIdentifier": "t_magic_message",
                                                                                "typeString": "msg"
                                                                            }
                                                                        },
                                                                        "id": 887,
                                                                        "isConstant": false,
                                                                        "isLValue": false,
                                                                        "isPure": false,
                                                                        "lValueRequested": false,
                                                                        "memberName": "sender",
                                                                        "nodeType": "MemberAccess",
                                                                        "src": "4301:10:3",
                                                                        "typeDescriptions": {
                                                                            "typeIdentifier": "t_address_payable",
                                                                            "typeString": "address payable"
                                                                        }
                                                                    },
                                                                    "isConstant": false,
                                                                    "isLValue": true,
                                                                    "isPure": false,
                                                                    "lValueRequested": false,
                                                                    "nodeType": "IndexAccess",
                                                                    "src": "4289:23:3",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                                                        "typeString": "mapping(address => uint256)"
                                                                    }
                                                                },
                                                                "id": 890,
                                                                "indexExpression": {
                                                                    "id": 889,
                                                                    "name": "spender",
                                                                    "nodeType": "Identifier",
                                                                    "overloadedDeclarations": [],
                                                                    "referencedDeclaration": 874,
                                                                    "src": "4313:7:3",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_address",
                                                                        "typeString": "address"
                                                                    }
                                                                },
                                                                "isConstant": false,
                                                                "isLValue": true,
                                                                "isPure": false,
                                                                "lValueRequested": false,
                                                                "nodeType": "IndexAccess",
                                                                "src": "4289:32:3",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_uint256",
                                                                    "typeString": "uint256"
                                                                }
                                                            },
                                                            "id": 891,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": false,
                                                            "lValueRequested": false,
                                                            "memberName": "add",
                                                            "nodeType": "MemberAccess",
                                                            "referencedDeclaration": 2927,
                                                            "src": "4289:36:3",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                                                            }
                                                        },
                                                        "id": 893,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "kind": "functionCall",
                                                        "lValueRequested": false,
                                                        "names": [],
                                                        "nodeType": "FunctionCall",
                                                        "src": "4289:48:3",
                                                        "tryCall": false,
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        }
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_address_payable",
                                                            "typeString": "address payable"
                                                        },
                                                        {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        },
                                                        {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        }
                                                    ],
                                                    "id": 881,
                                                    "name": "_approve",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 1157,
                                                    "src": "4259:8:3",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                                                        "typeString": "function (address,address,uint256)"
                                                    }
                                                },
                                                "id": 894,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "4259:79:3",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_tuple$__$",
                                                    "typeString": "tuple()"
                                                }
                                            },
                                            "id": 895,
                                            "nodeType": "ExpressionStatement",
                                            "src": "4259:79:3"
                                        },
                                        {
                                            "expression": {
                                                "hexValue": "74727565",
                                                "id": 896,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "bool",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "4356:4:3",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                },
                                                "value": "true"
                                            },
                                            "functionReturnParameters": 880,
                                            "id": 897,
                                            "nodeType": "Return",
                                            "src": "4349:11:3"
                                        }
                                    ]
                                },
                                "documentation": {
                                    "id": 872,
                                    "nodeType": "StructuredDocumentation",
                                    "src": "3761:395:3",
                                    "text": " @dev Atomically increases the allowance granted to `spender` by the caller.\n This is an alternative to `approve` that can be used as a mitigation for\n problems described in `IERC20.approve`.\n Emits an `Approval` event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address."
                                },
                                "functionSelector": "39509351",
                                "id": 899,
                                "implemented": true,
                                "kind": "function",
                                "modifiers": [],
                                "name": "increaseAllowance",
                                "nodeType": "FunctionDefinition",
                                "parameters": {
                                    "id": 877,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 874,
                                            "mutability": "mutable",
                                            "name": "spender",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 899,
                                            "src": "4189:15:3",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            },
                                            "typeName": {
                                                "id": 873,
                                                "name": "address",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "4189:7:3",
                                                "stateMutability": "nonpayable",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            "visibility": "internal"
                                        },
                                        {
                                            "constant": false,
                                            "id": 876,
                                            "mutability": "mutable",
                                            "name": "addedValue",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 899,
                                            "src": "4206:18:3",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            },
                                            "typeName": {
                                                "id": 875,
                                                "name": "uint256",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "4206:7:3",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "4188:37:3"
                                },
                                "returnParameters": {
                                    "id": 880,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 879,
                                            "mutability": "mutable",
                                            "name": "",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 899,
                                            "src": "4242:4:3",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_bool",
                                                "typeString": "bool"
                                            },
                                            "typeName": {
                                                "id": 878,
                                                "name": "bool",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "4242:4:3",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "4241:6:3"
                                },
                                "scope": 1187,
                                "src": "4162:206:3",
                                "stateMutability": "nonpayable",
                                "virtual": false,
                                "visibility": "public"
                            },
                            {
                                "body": {
                                    "id": 926,
                                    "nodeType": "Block",
                                    "src": "4962:125:3",
                                    "statements": [
                                        {
                                            "expression": {
                                                "arguments": [
                                                    {
                                                        "expression": {
                                                            "id": 910,
                                                            "name": "msg",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": -15,
                                                            "src": "4982:3:3",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_magic_message",
                                                                "typeString": "msg"
                                                            }
                                                        },
                                                        "id": 911,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "memberName": "sender",
                                                        "nodeType": "MemberAccess",
                                                        "src": "4982:10:3",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_address_payable",
                                                            "typeString": "address payable"
                                                        }
                                                    },
                                                    {
                                                        "id": 912,
                                                        "name": "spender",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 902,
                                                        "src": "4994:7:3",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        }
                                                    },
                                                    {
                                                        "arguments": [
                                                            {
                                                                "id": 920,
                                                                "name": "subtractedValue",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [],
                                                                "referencedDeclaration": 904,
                                                                "src": "5040:15:3",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_uint256",
                                                                    "typeString": "uint256"
                                                                }
                                                            }
                                                        ],
                                                        "expression": {
                                                            "argumentTypes": [
                                                                {
                                                                    "typeIdentifier": "t_uint256",
                                                                    "typeString": "uint256"
                                                                }
                                                            ],
                                                            "expression": {
                                                                "baseExpression": {
                                                                    "baseExpression": {
                                                                        "id": 913,
                                                                        "name": "_allowances",
                                                                        "nodeType": "Identifier",
                                                                        "overloadedDeclarations": [],
                                                                        "referencedDeclaration": 735,
                                                                        "src": "5003:11:3",
                                                                        "typeDescriptions": {
                                                                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                                                            "typeString": "mapping(address => mapping(address => uint256))"
                                                                        }
                                                                    },
                                                                    "id": 916,
                                                                    "indexExpression": {
                                                                        "expression": {
                                                                            "id": 914,
                                                                            "name": "msg",
                                                                            "nodeType": "Identifier",
                                                                            "overloadedDeclarations": [],
                                                                            "referencedDeclaration": -15,
                                                                            "src": "5015:3:3",
                                                                            "typeDescriptions": {
                                                                                "typeIdentifier": "t_magic_message",
                                                                                "typeString": "msg"
                                                                            }
                                                                        },
                                                                        "id": 915,
                                                                        "isConstant": false,
                                                                        "isLValue": false,
                                                                        "isPure": false,
                                                                        "lValueRequested": false,
                                                                        "memberName": "sender",
                                                                        "nodeType": "MemberAccess",
                                                                        "src": "5015:10:3",
                                                                        "typeDescriptions": {
                                                                            "typeIdentifier": "t_address_payable",
                                                                            "typeString": "address payable"
                                                                        }
                                                                    },
                                                                    "isConstant": false,
                                                                    "isLValue": true,
                                                                    "isPure": false,
                                                                    "lValueRequested": false,
                                                                    "nodeType": "IndexAccess",
                                                                    "src": "5003:23:3",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                                                        "typeString": "mapping(address => uint256)"
                                                                    }
                                                                },
                                                                "id": 918,
                                                                "indexExpression": {
                                                                    "id": 917,
                                                                    "name": "spender",
                                                                    "nodeType": "Identifier",
                                                                    "overloadedDeclarations": [],
                                                                    "referencedDeclaration": 902,
                                                                    "src": "5027:7:3",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_address",
                                                                        "typeString": "address"
                                                                    }
                                                                },
                                                                "isConstant": false,
                                                                "isLValue": true,
                                                                "isPure": false,
                                                                "lValueRequested": false,
                                                                "nodeType": "IndexAccess",
                                                                "src": "5003:32:3",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_uint256",
                                                                    "typeString": "uint256"
                                                                }
                                                            },
                                                            "id": 919,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": false,
                                                            "lValueRequested": false,
                                                            "memberName": "sub",
                                                            "nodeType": "MemberAccess",
                                                            "referencedDeclaration": 2902,
                                                            "src": "5003:36:3",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                                                            }
                                                        },
                                                        "id": 921,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "kind": "functionCall",
                                                        "lValueRequested": false,
                                                        "names": [],
                                                        "nodeType": "FunctionCall",
                                                        "src": "5003:53:3",
                                                        "tryCall": false,
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        }
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_address_payable",
                                                            "typeString": "address payable"
                                                        },
                                                        {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        },
                                                        {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        }
                                                    ],
                                                    "id": 909,
                                                    "name": "_approve",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 1157,
                                                    "src": "4973:8:3",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                                                        "typeString": "function (address,address,uint256)"
                                                    }
                                                },
                                                "id": 922,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "4973:84:3",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_tuple$__$",
                                                    "typeString": "tuple()"
                                                }
                                            },
                                            "id": 923,
                                            "nodeType": "ExpressionStatement",
                                            "src": "4973:84:3"
                                        },
                                        {
                                            "expression": {
                                                "hexValue": "74727565",
                                                "id": 924,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "bool",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "5075:4:3",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                },
                                                "value": "true"
                                            },
                                            "functionReturnParameters": 908,
                                            "id": 925,
                                            "nodeType": "Return",
                                            "src": "5068:11:3"
                                        }
                                    ]
                                },
                                "documentation": {
                                    "id": 900,
                                    "nodeType": "StructuredDocumentation",
                                    "src": "4376:489:3",
                                    "text": " @dev Atomically decreases the allowance granted to `spender` by the caller.\n This is an alternative to `approve` that can be used as a mitigation for\n problems described in `IERC20.approve`.\n Emits an `Approval` event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address.\n - `spender` must have allowance for the caller of at least\n `subtractedValue`."
                                },
                                "functionSelector": "a457c2d7",
                                "id": 927,
                                "implemented": true,
                                "kind": "function",
                                "modifiers": [],
                                "name": "decreaseAllowance",
                                "nodeType": "FunctionDefinition",
                                "parameters": {
                                    "id": 905,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 902,
                                            "mutability": "mutable",
                                            "name": "spender",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 927,
                                            "src": "4898:15:3",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            },
                                            "typeName": {
                                                "id": 901,
                                                "name": "address",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "4898:7:3",
                                                "stateMutability": "nonpayable",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            "visibility": "internal"
                                        },
                                        {
                                            "constant": false,
                                            "id": 904,
                                            "mutability": "mutable",
                                            "name": "subtractedValue",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 927,
                                            "src": "4915:23:3",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            },
                                            "typeName": {
                                                "id": 903,
                                                "name": "uint256",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "4915:7:3",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "4897:42:3"
                                },
                                "returnParameters": {
                                    "id": 908,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 907,
                                            "mutability": "mutable",
                                            "name": "",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 927,
                                            "src": "4956:4:3",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_bool",
                                                "typeString": "bool"
                                            },
                                            "typeName": {
                                                "id": 906,
                                                "name": "bool",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "4956:4:3",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "4955:6:3"
                                },
                                "scope": 1187,
                                "src": "4871:216:3",
                                "stateMutability": "nonpayable",
                                "virtual": false,
                                "visibility": "public"
                            },
                            {
                                "body": {
                                    "id": 985,
                                    "nodeType": "Block",
                                    "src": "5664:350:3",
                                    "statements": [
                                        {
                                            "expression": {
                                                "arguments": [
                                                    {
                                                        "commonType": {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        },
                                                        "id": 943,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "leftExpression": {
                                                            "id": 938,
                                                            "name": "sender",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 930,
                                                            "src": "5683:6:3",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_address",
                                                                "typeString": "address"
                                                            }
                                                        },
                                                        "nodeType": "BinaryOperation",
                                                        "operator": "!=",
                                                        "rightExpression": {
                                                            "arguments": [
                                                                {
                                                                    "hexValue": "30",
                                                                    "id": 941,
                                                                    "isConstant": false,
                                                                    "isLValue": false,
                                                                    "isPure": true,
                                                                    "kind": "number",
                                                                    "lValueRequested": false,
                                                                    "nodeType": "Literal",
                                                                    "src": "5701:1:3",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_rational_0_by_1",
                                                                        "typeString": "int_const 0"
                                                                    },
                                                                    "value": "0"
                                                                }
                                                            ],
                                                            "expression": {
                                                                "argumentTypes": [
                                                                    {
                                                                        "typeIdentifier": "t_rational_0_by_1",
                                                                        "typeString": "int_const 0"
                                                                    }
                                                                ],
                                                                "id": 940,
                                                                "isConstant": false,
                                                                "isLValue": false,
                                                                "isPure": true,
                                                                "lValueRequested": false,
                                                                "nodeType": "ElementaryTypeNameExpression",
                                                                "src": "5693:7:3",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_type$_t_address_$",
                                                                    "typeString": "type(address)"
                                                                },
                                                                "typeName": {
                                                                    "id": 939,
                                                                    "name": "address",
                                                                    "nodeType": "ElementaryTypeName",
                                                                    "src": "5693:7:3",
                                                                    "typeDescriptions": {}
                                                                }
                                                            },
                                                            "id": 942,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": true,
                                                            "kind": "typeConversion",
                                                            "lValueRequested": false,
                                                            "names": [],
                                                            "nodeType": "FunctionCall",
                                                            "src": "5693:10:3",
                                                            "tryCall": false,
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_address_payable",
                                                                "typeString": "address payable"
                                                            }
                                                        },
                                                        "src": "5683:20:3",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_bool",
                                                            "typeString": "bool"
                                                        }
                                                    },
                                                    {
                                                        "hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
                                                        "id": 944,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": true,
                                                        "kind": "string",
                                                        "lValueRequested": false,
                                                        "nodeType": "Literal",
                                                        "src": "5705:39:3",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
                                                            "typeString": "literal_string \"ERC20: transfer from the zero address\""
                                                        },
                                                        "value": "ERC20: transfer from the zero address"
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_bool",
                                                            "typeString": "bool"
                                                        },
                                                        {
                                                            "typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
                                                            "typeString": "literal_string \"ERC20: transfer from the zero address\""
                                                        }
                                                    ],
                                                    "id": 937,
                                                    "name": "require",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [
                                                        -18,
                                                        -18
                                                    ],
                                                    "referencedDeclaration": -18,
                                                    "src": "5675:7:3",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                                        "typeString": "function (bool,string memory) pure"
                                                    }
                                                },
                                                "id": 945,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "5675:70:3",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_tuple$__$",
                                                    "typeString": "tuple()"
                                                }
                                            },
                                            "id": 946,
                                            "nodeType": "ExpressionStatement",
                                            "src": "5675:70:3"
                                        },
                                        {
                                            "expression": {
                                                "arguments": [
                                                    {
                                                        "commonType": {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        },
                                                        "id": 953,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "leftExpression": {
                                                            "id": 948,
                                                            "name": "recipient",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 932,
                                                            "src": "5764:9:3",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_address",
                                                                "typeString": "address"
                                                            }
                                                        },
                                                        "nodeType": "BinaryOperation",
                                                        "operator": "!=",
                                                        "rightExpression": {
                                                            "arguments": [
                                                                {
                                                                    "hexValue": "30",
                                                                    "id": 951,
                                                                    "isConstant": false,
                                                                    "isLValue": false,
                                                                    "isPure": true,
                                                                    "kind": "number",
                                                                    "lValueRequested": false,
                                                                    "nodeType": "Literal",
                                                                    "src": "5785:1:3",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_rational_0_by_1",
                                                                        "typeString": "int_const 0"
                                                                    },
                                                                    "value": "0"
                                                                }
                                                            ],
                                                            "expression": {
                                                                "argumentTypes": [
                                                                    {
                                                                        "typeIdentifier": "t_rational_0_by_1",
                                                                        "typeString": "int_const 0"
                                                                    }
                                                                ],
                                                                "id": 950,
                                                                "isConstant": false,
                                                                "isLValue": false,
                                                                "isPure": true,
                                                                "lValueRequested": false,
                                                                "nodeType": "ElementaryTypeNameExpression",
                                                                "src": "5777:7:3",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_type$_t_address_$",
                                                                    "typeString": "type(address)"
                                                                },
                                                                "typeName": {
                                                                    "id": 949,
                                                                    "name": "address",
                                                                    "nodeType": "ElementaryTypeName",
                                                                    "src": "5777:7:3",
                                                                    "typeDescriptions": {}
                                                                }
                                                            },
                                                            "id": 952,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": true,
                                                            "kind": "typeConversion",
                                                            "lValueRequested": false,
                                                            "names": [],
                                                            "nodeType": "FunctionCall",
                                                            "src": "5777:10:3",
                                                            "tryCall": false,
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_address_payable",
                                                                "typeString": "address payable"
                                                            }
                                                        },
                                                        "src": "5764:23:3",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_bool",
                                                            "typeString": "bool"
                                                        }
                                                    },
                                                    {
                                                        "hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472657373",
                                                        "id": 954,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": true,
                                                        "kind": "string",
                                                        "lValueRequested": false,
                                                        "nodeType": "Literal",
                                                        "src": "5789:37:3",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
                                                            "typeString": "literal_string \"ERC20: transfer to the zero address\""
                                                        },
                                                        "value": "ERC20: transfer to the zero address"
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_bool",
                                                            "typeString": "bool"
                                                        },
                                                        {
                                                            "typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
                                                            "typeString": "literal_string \"ERC20: transfer to the zero address\""
                                                        }
                                                    ],
                                                    "id": 947,
                                                    "name": "require",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [
                                                        -18,
                                                        -18
                                                    ],
                                                    "referencedDeclaration": -18,
                                                    "src": "5756:7:3",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                                        "typeString": "function (bool,string memory) pure"
                                                    }
                                                },
                                                "id": 955,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "5756:71:3",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_tuple$__$",
                                                    "typeString": "tuple()"
                                                }
                                            },
                                            "id": 956,
                                            "nodeType": "ExpressionStatement",
                                            "src": "5756:71:3"
                                        },
                                        {
                                            "expression": {
                                                "id": 966,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftHandSide": {
                                                    "baseExpression": {
                                                        "id": 957,
                                                        "name": "_balances",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 729,
                                                        "src": "5840:9:3",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                                            "typeString": "mapping(address => uint256)"
                                                        }
                                                    },
                                                    "id": 959,
                                                    "indexExpression": {
                                                        "id": 958,
                                                        "name": "sender",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 930,
                                                        "src": "5850:6:3",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        }
                                                    },
                                                    "isConstant": false,
                                                    "isLValue": true,
                                                    "isPure": false,
                                                    "lValueRequested": true,
                                                    "nodeType": "IndexAccess",
                                                    "src": "5840:17:3",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    }
                                                },
                                                "nodeType": "Assignment",
                                                "operator": "=",
                                                "rightHandSide": {
                                                    "arguments": [
                                                        {
                                                            "id": 964,
                                                            "name": "amount",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 934,
                                                            "src": "5882:6:3",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_uint256",
                                                                "typeString": "uint256"
                                                            }
                                                        }
                                                    ],
                                                    "expression": {
                                                        "argumentTypes": [
                                                            {
                                                                "typeIdentifier": "t_uint256",
                                                                "typeString": "uint256"
                                                            }
                                                        ],
                                                        "expression": {
                                                            "baseExpression": {
                                                                "id": 960,
                                                                "name": "_balances",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [],
                                                                "referencedDeclaration": 729,
                                                                "src": "5860:9:3",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                                                    "typeString": "mapping(address => uint256)"
                                                                }
                                                            },
                                                            "id": 962,
                                                            "indexExpression": {
                                                                "id": 961,
                                                                "name": "sender",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [],
                                                                "referencedDeclaration": 930,
                                                                "src": "5870:6:3",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_address",
                                                                    "typeString": "address"
                                                                }
                                                            },
                                                            "isConstant": false,
                                                            "isLValue": true,
                                                            "isPure": false,
                                                            "lValueRequested": false,
                                                            "nodeType": "IndexAccess",
                                                            "src": "5860:17:3",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_uint256",
                                                                "typeString": "uint256"
                                                            }
                                                        },
                                                        "id": 963,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "memberName": "sub",
                                                        "nodeType": "MemberAccess",
                                                        "referencedDeclaration": 2902,
                                                        "src": "5860:21:3",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                                                        }
                                                    },
                                                    "id": 965,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "kind": "functionCall",
                                                    "lValueRequested": false,
                                                    "names": [],
                                                    "nodeType": "FunctionCall",
                                                    "src": "5860:29:3",
                                                    "tryCall": false,
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    }
                                                },
                                                "src": "5840:49:3",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            },
                                            "id": 967,
                                            "nodeType": "ExpressionStatement",
                                            "src": "5840:49:3"
                                        },
                                        {
                                            "expression": {
                                                "id": 977,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftHandSide": {
                                                    "baseExpression": {
                                                        "id": 968,
                                                        "name": "_balances",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 729,
                                                        "src": "5900:9:3",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                                            "typeString": "mapping(address => uint256)"
                                                        }
                                                    },
                                                    "id": 970,
                                                    "indexExpression": {
                                                        "id": 969,
                                                        "name": "recipient",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 932,
                                                        "src": "5910:9:3",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        }
                                                    },
                                                    "isConstant": false,
                                                    "isLValue": true,
                                                    "isPure": false,
                                                    "lValueRequested": true,
                                                    "nodeType": "IndexAccess",
                                                    "src": "5900:20:3",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    }
                                                },
                                                "nodeType": "Assignment",
                                                "operator": "=",
                                                "rightHandSide": {
                                                    "arguments": [
                                                        {
                                                            "id": 975,
                                                            "name": "amount",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 934,
                                                            "src": "5948:6:3",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_uint256",
                                                                "typeString": "uint256"
                                                            }
                                                        }
                                                    ],
                                                    "expression": {
                                                        "argumentTypes": [
                                                            {
                                                                "typeIdentifier": "t_uint256",
                                                                "typeString": "uint256"
                                                            }
                                                        ],
                                                        "expression": {
                                                            "baseExpression": {
                                                                "id": 971,
                                                                "name": "_balances",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [],
                                                                "referencedDeclaration": 729,
                                                                "src": "5923:9:3",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                                                    "typeString": "mapping(address => uint256)"
                                                                }
                                                            },
                                                            "id": 973,
                                                            "indexExpression": {
                                                                "id": 972,
                                                                "name": "recipient",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [],
                                                                "referencedDeclaration": 932,
                                                                "src": "5933:9:3",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_address",
                                                                    "typeString": "address"
                                                                }
                                                            },
                                                            "isConstant": false,
                                                            "isLValue": true,
                                                            "isPure": false,
                                                            "lValueRequested": false,
                                                            "nodeType": "IndexAccess",
                                                            "src": "5923:20:3",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_uint256",
                                                                "typeString": "uint256"
                                                            }
                                                        },
                                                        "id": 974,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "memberName": "add",
                                                        "nodeType": "MemberAccess",
                                                        "referencedDeclaration": 2927,
                                                        "src": "5923:24:3",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                                                        }
                                                    },
                                                    "id": 976,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "kind": "functionCall",
                                                    "lValueRequested": false,
                                                    "names": [],
                                                    "nodeType": "FunctionCall",
                                                    "src": "5923:32:3",
                                                    "tryCall": false,
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    }
                                                },
                                                "src": "5900:55:3",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            },
                                            "id": 978,
                                            "nodeType": "ExpressionStatement",
                                            "src": "5900:55:3"
                                        },
                                        {
                                            "eventCall": {
                                                "arguments": [
                                                    {
                                                        "id": 980,
                                                        "name": "sender",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 930,
                                                        "src": "5980:6:3",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        }
                                                    },
                                                    {
                                                        "id": 981,
                                                        "name": "recipient",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 932,
                                                        "src": "5988:9:3",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        }
                                                    },
                                                    {
                                                        "id": 982,
                                                        "name": "amount",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 934,
                                                        "src": "5999:6:3",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        }
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        },
                                                        {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        },
                                                        {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        }
                                                    ],
                                                    "id": 979,
                                                    "name": "Transfer",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 2799,
                                                    "src": "5971:8:3",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                                                        "typeString": "function (address,address,uint256)"
                                                    }
                                                },
                                                "id": 983,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "5971:35:3",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_tuple$__$",
                                                    "typeString": "tuple()"
                                                }
                                            },
                                            "id": 984,
                                            "nodeType": "EmitStatement",
                                            "src": "5966:40:3"
                                        }
                                    ]
                                },
                                "documentation": {
                                    "id": 928,
                                    "nodeType": "StructuredDocumentation",
                                    "src": "5095:476:3",
                                    "text": " @dev Moves tokens `amount` from `sender` to `recipient`.\n This is internal function is equivalent to `transfer`, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a `Transfer` event.\n Requirements:\n - `sender` cannot be the zero address.\n - `recipient` cannot be the zero address.\n - `sender` must have a balance of at least `amount`."
                                },
                                "id": 986,
                                "implemented": true,
                                "kind": "function",
                                "modifiers": [],
                                "name": "_transfer",
                                "nodeType": "FunctionDefinition",
                                "parameters": {
                                    "id": 935,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 930,
                                            "mutability": "mutable",
                                            "name": "sender",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 986,
                                            "src": "5596:14:3",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            },
                                            "typeName": {
                                                "id": 929,
                                                "name": "address",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "5596:7:3",
                                                "stateMutability": "nonpayable",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            "visibility": "internal"
                                        },
                                        {
                                            "constant": false,
                                            "id": 932,
                                            "mutability": "mutable",
                                            "name": "recipient",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 986,
                                            "src": "5612:17:3",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            },
                                            "typeName": {
                                                "id": 931,
                                                "name": "address",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "5612:7:3",
                                                "stateMutability": "nonpayable",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            "visibility": "internal"
                                        },
                                        {
                                            "constant": false,
                                            "id": 934,
                                            "mutability": "mutable",
                                            "name": "amount",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 986,
                                            "src": "5631:14:3",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            },
                                            "typeName": {
                                                "id": 933,
                                                "name": "uint256",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "5631:7:3",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "5595:51:3"
                                },
                                "returnParameters": {
                                    "id": 936,
                                    "nodeType": "ParameterList",
                                    "parameters": [],
                                    "src": "5664:0:3"
                                },
                                "scope": 1187,
                                "src": "5577:437:3",
                                "stateMutability": "nonpayable",
                                "virtual": true,
                                "visibility": "internal"
                            },
                            {
                                "body": {
                                    "id": 1019,
                                    "nodeType": "Block",
                                    "src": "6212:203:3",
                                    "statements": [
                                        {
                                            "assignments": [
                                                998
                                            ],
                                            "declarations": [
                                                {
                                                    "constant": false,
                                                    "id": 998,
                                                    "mutability": "mutable",
                                                    "name": "success",
                                                    "nodeType": "VariableDeclaration",
                                                    "scope": 1019,
                                                    "src": "6223:12:3",
                                                    "stateVariable": false,
                                                    "storageLocation": "default",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_bool",
                                                        "typeString": "bool"
                                                    },
                                                    "typeName": {
                                                        "id": 997,
                                                        "name": "bool",
                                                        "nodeType": "ElementaryTypeName",
                                                        "src": "6223:4:3",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_bool",
                                                            "typeString": "bool"
                                                        }
                                                    },
                                                    "visibility": "internal"
                                                }
                                            ],
                                            "id": 1003,
                                            "initialValue": {
                                                "arguments": [
                                                    {
                                                        "id": 1000,
                                                        "name": "recipient",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 988,
                                                        "src": "6247:9:3",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        }
                                                    },
                                                    {
                                                        "id": 1001,
                                                        "name": "amount",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 990,
                                                        "src": "6258:6:3",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        }
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        },
                                                        {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        }
                                                    ],
                                                    "id": 999,
                                                    "name": "transfer",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 795,
                                                    "src": "6238:8:3",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                                        "typeString": "function (address,uint256) returns (bool)"
                                                    }
                                                },
                                                "id": 1002,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "6238:27:3",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            },
                                            "nodeType": "VariableDeclarationStatement",
                                            "src": "6223:42:3"
                                        },
                                        {
                                            "condition": {
                                                "id": 1004,
                                                "name": "success",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 998,
                                                "src": "6280:7:3",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            },
                                            "id": 1016,
                                            "nodeType": "IfStatement",
                                            "src": "6276:107:3",
                                            "trueBody": {
                                                "id": 1015,
                                                "nodeType": "Block",
                                                "src": "6288:95:3",
                                                "statements": [
                                                    {
                                                        "expression": {
                                                            "arguments": [
                                                                {
                                                                    "expression": {
                                                                        "id": 1009,
                                                                        "name": "msg",
                                                                        "nodeType": "Identifier",
                                                                        "overloadedDeclarations": [],
                                                                        "referencedDeclaration": -15,
                                                                        "src": "6346:3:3",
                                                                        "typeDescriptions": {
                                                                            "typeIdentifier": "t_magic_message",
                                                                            "typeString": "msg"
                                                                        }
                                                                    },
                                                                    "id": 1010,
                                                                    "isConstant": false,
                                                                    "isLValue": false,
                                                                    "isPure": false,
                                                                    "lValueRequested": false,
                                                                    "memberName": "sender",
                                                                    "nodeType": "MemberAccess",
                                                                    "src": "6346:10:3",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_address_payable",
                                                                        "typeString": "address payable"
                                                                    }
                                                                },
                                                                {
                                                                    "id": 1011,
                                                                    "name": "amount",
                                                                    "nodeType": "Identifier",
                                                                    "overloadedDeclarations": [],
                                                                    "referencedDeclaration": 990,
                                                                    "src": "6358:6:3",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_uint256",
                                                                        "typeString": "uint256"
                                                                    }
                                                                },
                                                                {
                                                                    "id": 1012,
                                                                    "name": "data",
                                                                    "nodeType": "Identifier",
                                                                    "overloadedDeclarations": [],
                                                                    "referencedDeclaration": 992,
                                                                    "src": "6366:4:3",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_bytes_calldata_ptr",
                                                                        "typeString": "bytes calldata"
                                                                    }
                                                                }
                                                            ],
                                                            "expression": {
                                                                "argumentTypes": [
                                                                    {
                                                                        "typeIdentifier": "t_address_payable",
                                                                        "typeString": "address payable"
                                                                    },
                                                                    {
                                                                        "typeIdentifier": "t_uint256",
                                                                        "typeString": "uint256"
                                                                    },
                                                                    {
                                                                        "typeIdentifier": "t_bytes_calldata_ptr",
                                                                        "typeString": "bytes calldata"
                                                                    }
                                                                ],
                                                                "expression": {
                                                                    "arguments": [
                                                                        {
                                                                            "id": 1006,
                                                                            "name": "recipient",
                                                                            "nodeType": "Identifier",
                                                                            "overloadedDeclarations": [],
                                                                            "referencedDeclaration": 988,
                                                                            "src": "6319:9:3",
                                                                            "typeDescriptions": {
                                                                                "typeIdentifier": "t_address",
                                                                                "typeString": "address"
                                                                            }
                                                                        }
                                                                    ],
                                                                    "expression": {
                                                                        "argumentTypes": [
                                                                            {
                                                                                "typeIdentifier": "t_address",
                                                                                "typeString": "address"
                                                                            }
                                                                        ],
                                                                        "id": 1005,
                                                                        "name": "IERC677Receiver",
                                                                        "nodeType": "Identifier",
                                                                        "overloadedDeclarations": [],
                                                                        "referencedDeclaration": 2821,
                                                                        "src": "6303:15:3",
                                                                        "typeDescriptions": {
                                                                            "typeIdentifier": "t_type$_t_contract$_IERC677Receiver_$2821_$",
                                                                            "typeString": "type(contract IERC677Receiver)"
                                                                        }
                                                                    },
                                                                    "id": 1007,
                                                                    "isConstant": false,
                                                                    "isLValue": false,
                                                                    "isPure": false,
                                                                    "kind": "typeConversion",
                                                                    "lValueRequested": false,
                                                                    "names": [],
                                                                    "nodeType": "FunctionCall",
                                                                    "src": "6303:26:3",
                                                                    "tryCall": false,
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_contract$_IERC677Receiver_$2821",
                                                                        "typeString": "contract IERC677Receiver"
                                                                    }
                                                                },
                                                                "id": 1008,
                                                                "isConstant": false,
                                                                "isLValue": false,
                                                                "isPure": false,
                                                                "lValueRequested": false,
                                                                "memberName": "onTokenTransfer",
                                                                "nodeType": "MemberAccess",
                                                                "referencedDeclaration": 2820,
                                                                "src": "6303:42:3",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                                                                    "typeString": "function (address,uint256,bytes memory) external"
                                                                }
                                                            },
                                                            "id": 1013,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": false,
                                                            "kind": "functionCall",
                                                            "lValueRequested": false,
                                                            "names": [],
                                                            "nodeType": "FunctionCall",
                                                            "src": "6303:68:3",
                                                            "tryCall": false,
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_tuple$__$",
                                                                "typeString": "tuple()"
                                                            }
                                                        },
                                                        "id": 1014,
                                                        "nodeType": "ExpressionStatement",
                                                        "src": "6303:68:3"
                                                    }
                                                ]
                                            }
                                        },
                                        {
                                            "expression": {
                                                "id": 1017,
                                                "name": "success",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 998,
                                                "src": "6400:7:3",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            },
                                            "functionReturnParameters": 996,
                                            "id": 1018,
                                            "nodeType": "Return",
                                            "src": "6393:14:3"
                                        }
                                    ]
                                },
                                "functionSelector": "4000aea0",
                                "id": 1020,
                                "implemented": true,
                                "kind": "function",
                                "modifiers": [],
                                "name": "transferAndCall",
                                "nodeType": "FunctionDefinition",
                                "parameters": {
                                    "id": 993,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 988,
                                            "mutability": "mutable",
                                            "name": "recipient",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 1020,
                                            "src": "6137:17:3",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            },
                                            "typeName": {
                                                "id": 987,
                                                "name": "address",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "6137:7:3",
                                                "stateMutability": "nonpayable",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            "visibility": "internal"
                                        },
                                        {
                                            "constant": false,
                                            "id": 990,
                                            "mutability": "mutable",
                                            "name": "amount",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 1020,
                                            "src": "6156:11:3",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            },
                                            "typeName": {
                                                "id": 989,
                                                "name": "uint",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "6156:4:3",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            },
                                            "visibility": "internal"
                                        },
                                        {
                                            "constant": false,
                                            "id": 992,
                                            "mutability": "mutable",
                                            "name": "data",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 1020,
                                            "src": "6169:19:3",
                                            "stateVariable": false,
                                            "storageLocation": "calldata",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_bytes_calldata_ptr",
                                                "typeString": "bytes"
                                            },
                                            "typeName": {
                                                "id": 991,
                                                "name": "bytes",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "6169:5:3",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bytes_storage_ptr",
                                                    "typeString": "bytes"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "6136:53:3"
                                },
                                "returnParameters": {
                                    "id": 996,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 995,
                                            "mutability": "mutable",
                                            "name": "",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 1020,
                                            "src": "6206:4:3",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_bool",
                                                "typeString": "bool"
                                            },
                                            "typeName": {
                                                "id": 994,
                                                "name": "bool",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "6206:4:3",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "6205:6:3"
                                },
                                "scope": 1187,
                                "src": "6112:303:3",
                                "stateMutability": "nonpayable",
                                "virtual": false,
                                "visibility": "public"
                            },
                            {
                                "body": {
                                    "id": 1065,
                                    "nodeType": "Block",
                                    "src": "6761:251:3",
                                    "statements": [
                                        {
                                            "expression": {
                                                "arguments": [
                                                    {
                                                        "commonType": {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        },
                                                        "id": 1034,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "leftExpression": {
                                                            "id": 1029,
                                                            "name": "account",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 1023,
                                                            "src": "6780:7:3",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_address",
                                                                "typeString": "address"
                                                            }
                                                        },
                                                        "nodeType": "BinaryOperation",
                                                        "operator": "!=",
                                                        "rightExpression": {
                                                            "arguments": [
                                                                {
                                                                    "hexValue": "30",
                                                                    "id": 1032,
                                                                    "isConstant": false,
                                                                    "isLValue": false,
                                                                    "isPure": true,
                                                                    "kind": "number",
                                                                    "lValueRequested": false,
                                                                    "nodeType": "Literal",
                                                                    "src": "6799:1:3",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_rational_0_by_1",
                                                                        "typeString": "int_const 0"
                                                                    },
                                                                    "value": "0"
                                                                }
                                                            ],
                                                            "expression": {
                                                                "argumentTypes": [
                                                                    {
                                                                        "typeIdentifier": "t_rational_0_by_1",
                                                                        "typeString": "int_const 0"
                                                                    }
                                                                ],
                                                                "id": 1031,
                                                                "isConstant": false,
                                                                "isLValue": false,
                                                                "isPure": true,
                                                                "lValueRequested": false,
                                                                "nodeType": "ElementaryTypeNameExpression",
                                                                "src": "6791:7:3",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_type$_t_address_$",
                                                                    "typeString": "type(address)"
                                                                },
                                                                "typeName": {
                                                                    "id": 1030,
                                                                    "name": "address",
                                                                    "nodeType": "ElementaryTypeName",
                                                                    "src": "6791:7:3",
                                                                    "typeDescriptions": {}
                                                                }
                                                            },
                                                            "id": 1033,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": true,
                                                            "kind": "typeConversion",
                                                            "lValueRequested": false,
                                                            "names": [],
                                                            "nodeType": "FunctionCall",
                                                            "src": "6791:10:3",
                                                            "tryCall": false,
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_address_payable",
                                                                "typeString": "address payable"
                                                            }
                                                        },
                                                        "src": "6780:21:3",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_bool",
                                                            "typeString": "bool"
                                                        }
                                                    },
                                                    {
                                                        "hexValue": "45524332303a206d696e7420746f20746865207a65726f2061646472657373",
                                                        "id": 1035,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": true,
                                                        "kind": "string",
                                                        "lValueRequested": false,
                                                        "nodeType": "Literal",
                                                        "src": "6803:33:3",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
                                                            "typeString": "literal_string \"ERC20: mint to the zero address\""
                                                        },
                                                        "value": "ERC20: mint to the zero address"
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_bool",
                                                            "typeString": "bool"
                                                        },
                                                        {
                                                            "typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
                                                            "typeString": "literal_string \"ERC20: mint to the zero address\""
                                                        }
                                                    ],
                                                    "id": 1028,
                                                    "name": "require",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [
                                                        -18,
                                                        -18
                                                    ],
                                                    "referencedDeclaration": -18,
                                                    "src": "6772:7:3",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                                        "typeString": "function (bool,string memory) pure"
                                                    }
                                                },
                                                "id": 1036,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "6772:65:3",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_tuple$__$",
                                                    "typeString": "tuple()"
                                                }
                                            },
                                            "id": 1037,
                                            "nodeType": "ExpressionStatement",
                                            "src": "6772:65:3"
                                        },
                                        {
                                            "expression": {
                                                "id": 1043,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftHandSide": {
                                                    "id": 1038,
                                                    "name": "_totalSupply",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 737,
                                                    "src": "6850:12:3",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    }
                                                },
                                                "nodeType": "Assignment",
                                                "operator": "=",
                                                "rightHandSide": {
                                                    "arguments": [
                                                        {
                                                            "id": 1041,
                                                            "name": "amount",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 1025,
                                                            "src": "6882:6:3",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_uint256",
                                                                "typeString": "uint256"
                                                            }
                                                        }
                                                    ],
                                                    "expression": {
                                                        "argumentTypes": [
                                                            {
                                                                "typeIdentifier": "t_uint256",
                                                                "typeString": "uint256"
                                                            }
                                                        ],
                                                        "expression": {
                                                            "id": 1039,
                                                            "name": "_totalSupply",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 737,
                                                            "src": "6865:12:3",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_uint256",
                                                                "typeString": "uint256"
                                                            }
                                                        },
                                                        "id": 1040,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "memberName": "add",
                                                        "nodeType": "MemberAccess",
                                                        "referencedDeclaration": 2927,
                                                        "src": "6865:16:3",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                                                        }
                                                    },
                                                    "id": 1042,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "kind": "functionCall",
                                                    "lValueRequested": false,
                                                    "names": [],
                                                    "nodeType": "FunctionCall",
                                                    "src": "6865:24:3",
                                                    "tryCall": false,
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    }
                                                },
                                                "src": "6850:39:3",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            },
                                            "id": 1044,
                                            "nodeType": "ExpressionStatement",
                                            "src": "6850:39:3"
                                        },
                                        {
                                            "expression": {
                                                "id": 1054,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftHandSide": {
                                                    "baseExpression": {
                                                        "id": 1045,
                                                        "name": "_balances",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 729,
                                                        "src": "6900:9:3",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                                            "typeString": "mapping(address => uint256)"
                                                        }
                                                    },
                                                    "id": 1047,
                                                    "indexExpression": {
                                                        "id": 1046,
                                                        "name": "account",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 1023,
                                                        "src": "6910:7:3",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        }
                                                    },
                                                    "isConstant": false,
                                                    "isLValue": true,
                                                    "isPure": false,
                                                    "lValueRequested": true,
                                                    "nodeType": "IndexAccess",
                                                    "src": "6900:18:3",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    }
                                                },
                                                "nodeType": "Assignment",
                                                "operator": "=",
                                                "rightHandSide": {
                                                    "arguments": [
                                                        {
                                                            "id": 1052,
                                                            "name": "amount",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 1025,
                                                            "src": "6944:6:3",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_uint256",
                                                                "typeString": "uint256"
                                                            }
                                                        }
                                                    ],
                                                    "expression": {
                                                        "argumentTypes": [
                                                            {
                                                                "typeIdentifier": "t_uint256",
                                                                "typeString": "uint256"
                                                            }
                                                        ],
                                                        "expression": {
                                                            "baseExpression": {
                                                                "id": 1048,
                                                                "name": "_balances",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [],
                                                                "referencedDeclaration": 729,
                                                                "src": "6921:9:3",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                                                    "typeString": "mapping(address => uint256)"
                                                                }
                                                            },
                                                            "id": 1050,
                                                            "indexExpression": {
                                                                "id": 1049,
                                                                "name": "account",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [],
                                                                "referencedDeclaration": 1023,
                                                                "src": "6931:7:3",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_address",
                                                                    "typeString": "address"
                                                                }
                                                            },
                                                            "isConstant": false,
                                                            "isLValue": true,
                                                            "isPure": false,
                                                            "lValueRequested": false,
                                                            "nodeType": "IndexAccess",
                                                            "src": "6921:18:3",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_uint256",
                                                                "typeString": "uint256"
                                                            }
                                                        },
                                                        "id": 1051,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "memberName": "add",
                                                        "nodeType": "MemberAccess",
                                                        "referencedDeclaration": 2927,
                                                        "src": "6921:22:3",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                                                        }
                                                    },
                                                    "id": 1053,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "kind": "functionCall",
                                                    "lValueRequested": false,
                                                    "names": [],
                                                    "nodeType": "FunctionCall",
                                                    "src": "6921:30:3",
                                                    "tryCall": false,
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    }
                                                },
                                                "src": "6900:51:3",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            },
                                            "id": 1055,
                                            "nodeType": "ExpressionStatement",
                                            "src": "6900:51:3"
                                        },
                                        {
                                            "eventCall": {
                                                "arguments": [
                                                    {
                                                        "arguments": [
                                                            {
                                                                "hexValue": "30",
                                                                "id": 1059,
                                                                "isConstant": false,
                                                                "isLValue": false,
                                                                "isPure": true,
                                                                "kind": "number",
                                                                "lValueRequested": false,
                                                                "nodeType": "Literal",
                                                                "src": "6984:1:3",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_rational_0_by_1",
                                                                    "typeString": "int_const 0"
                                                                },
                                                                "value": "0"
                                                            }
                                                        ],
                                                        "expression": {
                                                            "argumentTypes": [
                                                                {
                                                                    "typeIdentifier": "t_rational_0_by_1",
                                                                    "typeString": "int_const 0"
                                                                }
                                                            ],
                                                            "id": 1058,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": true,
                                                            "lValueRequested": false,
                                                            "nodeType": "ElementaryTypeNameExpression",
                                                            "src": "6976:7:3",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_type$_t_address_$",
                                                                "typeString": "type(address)"
                                                            },
                                                            "typeName": {
                                                                "id": 1057,
                                                                "name": "address",
                                                                "nodeType": "ElementaryTypeName",
                                                                "src": "6976:7:3",
                                                                "typeDescriptions": {}
                                                            }
                                                        },
                                                        "id": 1060,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": true,
                                                        "kind": "typeConversion",
                                                        "lValueRequested": false,
                                                        "names": [],
                                                        "nodeType": "FunctionCall",
                                                        "src": "6976:10:3",
                                                        "tryCall": false,
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_address_payable",
                                                            "typeString": "address payable"
                                                        }
                                                    },
                                                    {
                                                        "id": 1061,
                                                        "name": "account",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 1023,
                                                        "src": "6988:7:3",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        }
                                                    },
                                                    {
                                                        "id": 1062,
                                                        "name": "amount",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 1025,
                                                        "src": "6997:6:3",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        }
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_address_payable",
                                                            "typeString": "address payable"
                                                        },
                                                        {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        },
                                                        {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        }
                                                    ],
                                                    "id": 1056,
                                                    "name": "Transfer",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 2799,
                                                    "src": "6967:8:3",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                                                        "typeString": "function (address,address,uint256)"
                                                    }
                                                },
                                                "id": 1063,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "6967:37:3",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_tuple$__$",
                                                    "typeString": "tuple()"
                                                }
                                            },
                                            "id": 1064,
                                            "nodeType": "EmitStatement",
                                            "src": "6962:42:3"
                                        }
                                    ]
                                },
                                "documentation": {
                                    "id": 1021,
                                    "nodeType": "StructuredDocumentation",
                                    "src": "6423:267:3",
                                    "text": "@dev Creates `amount` tokens and assigns them to `account`, increasing\n the total supply.\n Emits a `Transfer` event with `from` set to the zero address.\n Requirements\n - `to` cannot be the zero address."
                                },
                                "id": 1066,
                                "implemented": true,
                                "kind": "function",
                                "modifiers": [],
                                "name": "_mint",
                                "nodeType": "FunctionDefinition",
                                "parameters": {
                                    "id": 1026,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 1023,
                                            "mutability": "mutable",
                                            "name": "account",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 1066,
                                            "src": "6711:15:3",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            },
                                            "typeName": {
                                                "id": 1022,
                                                "name": "address",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "6711:7:3",
                                                "stateMutability": "nonpayable",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            "visibility": "internal"
                                        },
                                        {
                                            "constant": false,
                                            "id": 1025,
                                            "mutability": "mutable",
                                            "name": "amount",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 1066,
                                            "src": "6728:14:3",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            },
                                            "typeName": {
                                                "id": 1024,
                                                "name": "uint256",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "6728:7:3",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "6710:33:3"
                                },
                                "returnParameters": {
                                    "id": 1027,
                                    "nodeType": "ParameterList",
                                    "parameters": [],
                                    "src": "6761:0:3"
                                },
                                "scope": 1187,
                                "src": "6696:316:3",
                                "stateMutability": "nonpayable",
                                "virtual": true,
                                "visibility": "internal"
                            },
                            {
                                "body": {
                                    "id": 1111,
                                    "nodeType": "Block",
                                    "src": "7409:250:3",
                                    "statements": [
                                        {
                                            "expression": {
                                                "arguments": [
                                                    {
                                                        "commonType": {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        },
                                                        "id": 1080,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "leftExpression": {
                                                            "id": 1075,
                                                            "name": "account",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 1069,
                                                            "src": "7428:7:3",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_address",
                                                                "typeString": "address"
                                                            }
                                                        },
                                                        "nodeType": "BinaryOperation",
                                                        "operator": "!=",
                                                        "rightExpression": {
                                                            "arguments": [
                                                                {
                                                                    "hexValue": "30",
                                                                    "id": 1078,
                                                                    "isConstant": false,
                                                                    "isLValue": false,
                                                                    "isPure": true,
                                                                    "kind": "number",
                                                                    "lValueRequested": false,
                                                                    "nodeType": "Literal",
                                                                    "src": "7447:1:3",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_rational_0_by_1",
                                                                        "typeString": "int_const 0"
                                                                    },
                                                                    "value": "0"
                                                                }
                                                            ],
                                                            "expression": {
                                                                "argumentTypes": [
                                                                    {
                                                                        "typeIdentifier": "t_rational_0_by_1",
                                                                        "typeString": "int_const 0"
                                                                    }
                                                                ],
                                                                "id": 1077,
                                                                "isConstant": false,
                                                                "isLValue": false,
                                                                "isPure": true,
                                                                "lValueRequested": false,
                                                                "nodeType": "ElementaryTypeNameExpression",
                                                                "src": "7439:7:3",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_type$_t_address_$",
                                                                    "typeString": "type(address)"
                                                                },
                                                                "typeName": {
                                                                    "id": 1076,
                                                                    "name": "address",
                                                                    "nodeType": "ElementaryTypeName",
                                                                    "src": "7439:7:3",
                                                                    "typeDescriptions": {}
                                                                }
                                                            },
                                                            "id": 1079,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": true,
                                                            "kind": "typeConversion",
                                                            "lValueRequested": false,
                                                            "names": [],
                                                            "nodeType": "FunctionCall",
                                                            "src": "7439:10:3",
                                                            "tryCall": false,
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_address_payable",
                                                                "typeString": "address payable"
                                                            }
                                                        },
                                                        "src": "7428:21:3",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_bool",
                                                            "typeString": "bool"
                                                        }
                                                    },
                                                    {
                                                        "hexValue": "45524332303a206275726e2066726f6d20746865207a65726f2061646472657373",
                                                        "id": 1081,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": true,
                                                        "kind": "string",
                                                        "lValueRequested": false,
                                                        "nodeType": "Literal",
                                                        "src": "7451:35:3",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
                                                            "typeString": "literal_string \"ERC20: burn from the zero address\""
                                                        },
                                                        "value": "ERC20: burn from the zero address"
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_bool",
                                                            "typeString": "bool"
                                                        },
                                                        {
                                                            "typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
                                                            "typeString": "literal_string \"ERC20: burn from the zero address\""
                                                        }
                                                    ],
                                                    "id": 1074,
                                                    "name": "require",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [
                                                        -18,
                                                        -18
                                                    ],
                                                    "referencedDeclaration": -18,
                                                    "src": "7420:7:3",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                                        "typeString": "function (bool,string memory) pure"
                                                    }
                                                },
                                                "id": 1082,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "7420:67:3",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_tuple$__$",
                                                    "typeString": "tuple()"
                                                }
                                            },
                                            "id": 1083,
                                            "nodeType": "ExpressionStatement",
                                            "src": "7420:67:3"
                                        },
                                        {
                                            "expression": {
                                                "id": 1089,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftHandSide": {
                                                    "id": 1084,
                                                    "name": "_totalSupply",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 737,
                                                    "src": "7500:12:3",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    }
                                                },
                                                "nodeType": "Assignment",
                                                "operator": "=",
                                                "rightHandSide": {
                                                    "arguments": [
                                                        {
                                                            "id": 1087,
                                                            "name": "value",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 1071,
                                                            "src": "7532:5:3",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_uint256",
                                                                "typeString": "uint256"
                                                            }
                                                        }
                                                    ],
                                                    "expression": {
                                                        "argumentTypes": [
                                                            {
                                                                "typeIdentifier": "t_uint256",
                                                                "typeString": "uint256"
                                                            }
                                                        ],
                                                        "expression": {
                                                            "id": 1085,
                                                            "name": "_totalSupply",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 737,
                                                            "src": "7515:12:3",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_uint256",
                                                                "typeString": "uint256"
                                                            }
                                                        },
                                                        "id": 1086,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "memberName": "sub",
                                                        "nodeType": "MemberAccess",
                                                        "referencedDeclaration": 2902,
                                                        "src": "7515:16:3",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                                                        }
                                                    },
                                                    "id": 1088,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "kind": "functionCall",
                                                    "lValueRequested": false,
                                                    "names": [],
                                                    "nodeType": "FunctionCall",
                                                    "src": "7515:23:3",
                                                    "tryCall": false,
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    }
                                                },
                                                "src": "7500:38:3",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            },
                                            "id": 1090,
                                            "nodeType": "ExpressionStatement",
                                            "src": "7500:38:3"
                                        },
                                        {
                                            "expression": {
                                                "id": 1100,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftHandSide": {
                                                    "baseExpression": {
                                                        "id": 1091,
                                                        "name": "_balances",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 729,
                                                        "src": "7549:9:3",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                                            "typeString": "mapping(address => uint256)"
                                                        }
                                                    },
                                                    "id": 1093,
                                                    "indexExpression": {
                                                        "id": 1092,
                                                        "name": "account",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 1069,
                                                        "src": "7559:7:3",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        }
                                                    },
                                                    "isConstant": false,
                                                    "isLValue": true,
                                                    "isPure": false,
                                                    "lValueRequested": true,
                                                    "nodeType": "IndexAccess",
                                                    "src": "7549:18:3",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    }
                                                },
                                                "nodeType": "Assignment",
                                                "operator": "=",
                                                "rightHandSide": {
                                                    "arguments": [
                                                        {
                                                            "id": 1098,
                                                            "name": "value",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 1071,
                                                            "src": "7593:5:3",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_uint256",
                                                                "typeString": "uint256"
                                                            }
                                                        }
                                                    ],
                                                    "expression": {
                                                        "argumentTypes": [
                                                            {
                                                                "typeIdentifier": "t_uint256",
                                                                "typeString": "uint256"
                                                            }
                                                        ],
                                                        "expression": {
                                                            "baseExpression": {
                                                                "id": 1094,
                                                                "name": "_balances",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [],
                                                                "referencedDeclaration": 729,
                                                                "src": "7570:9:3",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                                                    "typeString": "mapping(address => uint256)"
                                                                }
                                                            },
                                                            "id": 1096,
                                                            "indexExpression": {
                                                                "id": 1095,
                                                                "name": "account",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [],
                                                                "referencedDeclaration": 1069,
                                                                "src": "7580:7:3",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_address",
                                                                    "typeString": "address"
                                                                }
                                                            },
                                                            "isConstant": false,
                                                            "isLValue": true,
                                                            "isPure": false,
                                                            "lValueRequested": false,
                                                            "nodeType": "IndexAccess",
                                                            "src": "7570:18:3",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_uint256",
                                                                "typeString": "uint256"
                                                            }
                                                        },
                                                        "id": 1097,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "memberName": "sub",
                                                        "nodeType": "MemberAccess",
                                                        "referencedDeclaration": 2902,
                                                        "src": "7570:22:3",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                                                        }
                                                    },
                                                    "id": 1099,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "kind": "functionCall",
                                                    "lValueRequested": false,
                                                    "names": [],
                                                    "nodeType": "FunctionCall",
                                                    "src": "7570:29:3",
                                                    "tryCall": false,
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    }
                                                },
                                                "src": "7549:50:3",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            },
                                            "id": 1101,
                                            "nodeType": "ExpressionStatement",
                                            "src": "7549:50:3"
                                        },
                                        {
                                            "eventCall": {
                                                "arguments": [
                                                    {
                                                        "id": 1103,
                                                        "name": "account",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 1069,
                                                        "src": "7624:7:3",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        }
                                                    },
                                                    {
                                                        "arguments": [
                                                            {
                                                                "hexValue": "30",
                                                                "id": 1106,
                                                                "isConstant": false,
                                                                "isLValue": false,
                                                                "isPure": true,
                                                                "kind": "number",
                                                                "lValueRequested": false,
                                                                "nodeType": "Literal",
                                                                "src": "7641:1:3",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_rational_0_by_1",
                                                                    "typeString": "int_const 0"
                                                                },
                                                                "value": "0"
                                                            }
                                                        ],
                                                        "expression": {
                                                            "argumentTypes": [
                                                                {
                                                                    "typeIdentifier": "t_rational_0_by_1",
                                                                    "typeString": "int_const 0"
                                                                }
                                                            ],
                                                            "id": 1105,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": true,
                                                            "lValueRequested": false,
                                                            "nodeType": "ElementaryTypeNameExpression",
                                                            "src": "7633:7:3",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_type$_t_address_$",
                                                                "typeString": "type(address)"
                                                            },
                                                            "typeName": {
                                                                "id": 1104,
                                                                "name": "address",
                                                                "nodeType": "ElementaryTypeName",
                                                                "src": "7633:7:3",
                                                                "typeDescriptions": {}
                                                            }
                                                        },
                                                        "id": 1107,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": true,
                                                        "kind": "typeConversion",
                                                        "lValueRequested": false,
                                                        "names": [],
                                                        "nodeType": "FunctionCall",
                                                        "src": "7633:10:3",
                                                        "tryCall": false,
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_address_payable",
                                                            "typeString": "address payable"
                                                        }
                                                    },
                                                    {
                                                        "id": 1108,
                                                        "name": "value",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 1071,
                                                        "src": "7645:5:3",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        }
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        },
                                                        {
                                                            "typeIdentifier": "t_address_payable",
                                                            "typeString": "address payable"
                                                        },
                                                        {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        }
                                                    ],
                                                    "id": 1102,
                                                    "name": "Transfer",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 2799,
                                                    "src": "7615:8:3",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                                                        "typeString": "function (address,address,uint256)"
                                                    }
                                                },
                                                "id": 1109,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "7615:36:3",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_tuple$__$",
                                                    "typeString": "tuple()"
                                                }
                                            },
                                            "id": 1110,
                                            "nodeType": "EmitStatement",
                                            "src": "7610:41:3"
                                        }
                                    ]
                                },
                                "documentation": {
                                    "id": 1067,
                                    "nodeType": "StructuredDocumentation",
                                    "src": "7021:318:3",
                                    "text": " @dev Destroys `amount` tokens from `account`, reducing the\n total supply.\n Emits a `Transfer` event with `to` set to the zero address.\n Requirements\n - `account` cannot be the zero address.\n - `account` must have at least `amount` tokens."
                                },
                                "id": 1112,
                                "implemented": true,
                                "kind": "function",
                                "modifiers": [],
                                "name": "_burn",
                                "nodeType": "FunctionDefinition",
                                "parameters": {
                                    "id": 1072,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 1069,
                                            "mutability": "mutable",
                                            "name": "account",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 1112,
                                            "src": "7360:15:3",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            },
                                            "typeName": {
                                                "id": 1068,
                                                "name": "address",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "7360:7:3",
                                                "stateMutability": "nonpayable",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            "visibility": "internal"
                                        },
                                        {
                                            "constant": false,
                                            "id": 1071,
                                            "mutability": "mutable",
                                            "name": "value",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 1112,
                                            "src": "7377:13:3",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            },
                                            "typeName": {
                                                "id": 1070,
                                                "name": "uint256",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "7377:7:3",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "7359:32:3"
                                },
                                "returnParameters": {
                                    "id": 1073,
                                    "nodeType": "ParameterList",
                                    "parameters": [],
                                    "src": "7409:0:3"
                                },
                                "scope": 1187,
                                "src": "7345:314:3",
                                "stateMutability": "nonpayable",
                                "virtual": true,
                                "visibility": "internal"
                            },
                            {
                                "body": {
                                    "id": 1156,
                                    "nodeType": "Block",
                                    "src": "8173:261:3",
                                    "statements": [
                                        {
                                            "expression": {
                                                "arguments": [
                                                    {
                                                        "commonType": {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        },
                                                        "id": 1128,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "leftExpression": {
                                                            "id": 1123,
                                                            "name": "owner",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 1115,
                                                            "src": "8192:5:3",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_address",
                                                                "typeString": "address"
                                                            }
                                                        },
                                                        "nodeType": "BinaryOperation",
                                                        "operator": "!=",
                                                        "rightExpression": {
                                                            "arguments": [
                                                                {
                                                                    "hexValue": "30",
                                                                    "id": 1126,
                                                                    "isConstant": false,
                                                                    "isLValue": false,
                                                                    "isPure": true,
                                                                    "kind": "number",
                                                                    "lValueRequested": false,
                                                                    "nodeType": "Literal",
                                                                    "src": "8209:1:3",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_rational_0_by_1",
                                                                        "typeString": "int_const 0"
                                                                    },
                                                                    "value": "0"
                                                                }
                                                            ],
                                                            "expression": {
                                                                "argumentTypes": [
                                                                    {
                                                                        "typeIdentifier": "t_rational_0_by_1",
                                                                        "typeString": "int_const 0"
                                                                    }
                                                                ],
                                                                "id": 1125,
                                                                "isConstant": false,
                                                                "isLValue": false,
                                                                "isPure": true,
                                                                "lValueRequested": false,
                                                                "nodeType": "ElementaryTypeNameExpression",
                                                                "src": "8201:7:3",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_type$_t_address_$",
                                                                    "typeString": "type(address)"
                                                                },
                                                                "typeName": {
                                                                    "id": 1124,
                                                                    "name": "address",
                                                                    "nodeType": "ElementaryTypeName",
                                                                    "src": "8201:7:3",
                                                                    "typeDescriptions": {}
                                                                }
                                                            },
                                                            "id": 1127,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": true,
                                                            "kind": "typeConversion",
                                                            "lValueRequested": false,
                                                            "names": [],
                                                            "nodeType": "FunctionCall",
                                                            "src": "8201:10:3",
                                                            "tryCall": false,
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_address_payable",
                                                                "typeString": "address payable"
                                                            }
                                                        },
                                                        "src": "8192:19:3",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_bool",
                                                            "typeString": "bool"
                                                        }
                                                    },
                                                    {
                                                        "hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373",
                                                        "id": 1129,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": true,
                                                        "kind": "string",
                                                        "lValueRequested": false,
                                                        "nodeType": "Literal",
                                                        "src": "8213:38:3",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
                                                            "typeString": "literal_string \"ERC20: approve from the zero address\""
                                                        },
                                                        "value": "ERC20: approve from the zero address"
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_bool",
                                                            "typeString": "bool"
                                                        },
                                                        {
                                                            "typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
                                                            "typeString": "literal_string \"ERC20: approve from the zero address\""
                                                        }
                                                    ],
                                                    "id": 1122,
                                                    "name": "require",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [
                                                        -18,
                                                        -18
                                                    ],
                                                    "referencedDeclaration": -18,
                                                    "src": "8184:7:3",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                                        "typeString": "function (bool,string memory) pure"
                                                    }
                                                },
                                                "id": 1130,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "8184:68:3",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_tuple$__$",
                                                    "typeString": "tuple()"
                                                }
                                            },
                                            "id": 1131,
                                            "nodeType": "ExpressionStatement",
                                            "src": "8184:68:3"
                                        },
                                        {
                                            "expression": {
                                                "arguments": [
                                                    {
                                                        "commonType": {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        },
                                                        "id": 1138,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "leftExpression": {
                                                            "id": 1133,
                                                            "name": "spender",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 1117,
                                                            "src": "8271:7:3",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_address",
                                                                "typeString": "address"
                                                            }
                                                        },
                                                        "nodeType": "BinaryOperation",
                                                        "operator": "!=",
                                                        "rightExpression": {
                                                            "arguments": [
                                                                {
                                                                    "hexValue": "30",
                                                                    "id": 1136,
                                                                    "isConstant": false,
                                                                    "isLValue": false,
                                                                    "isPure": true,
                                                                    "kind": "number",
                                                                    "lValueRequested": false,
                                                                    "nodeType": "Literal",
                                                                    "src": "8290:1:3",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_rational_0_by_1",
                                                                        "typeString": "int_const 0"
                                                                    },
                                                                    "value": "0"
                                                                }
                                                            ],
                                                            "expression": {
                                                                "argumentTypes": [
                                                                    {
                                                                        "typeIdentifier": "t_rational_0_by_1",
                                                                        "typeString": "int_const 0"
                                                                    }
                                                                ],
                                                                "id": 1135,
                                                                "isConstant": false,
                                                                "isLValue": false,
                                                                "isPure": true,
                                                                "lValueRequested": false,
                                                                "nodeType": "ElementaryTypeNameExpression",
                                                                "src": "8282:7:3",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_type$_t_address_$",
                                                                    "typeString": "type(address)"
                                                                },
                                                                "typeName": {
                                                                    "id": 1134,
                                                                    "name": "address",
                                                                    "nodeType": "ElementaryTypeName",
                                                                    "src": "8282:7:3",
                                                                    "typeDescriptions": {}
                                                                }
                                                            },
                                                            "id": 1137,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": true,
                                                            "kind": "typeConversion",
                                                            "lValueRequested": false,
                                                            "names": [],
                                                            "nodeType": "FunctionCall",
                                                            "src": "8282:10:3",
                                                            "tryCall": false,
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_address_payable",
                                                                "typeString": "address payable"
                                                            }
                                                        },
                                                        "src": "8271:21:3",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_bool",
                                                            "typeString": "bool"
                                                        }
                                                    },
                                                    {
                                                        "hexValue": "45524332303a20617070726f766520746f20746865207a65726f2061646472657373",
                                                        "id": 1139,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": true,
                                                        "kind": "string",
                                                        "lValueRequested": false,
                                                        "nodeType": "Literal",
                                                        "src": "8294:36:3",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
                                                            "typeString": "literal_string \"ERC20: approve to the zero address\""
                                                        },
                                                        "value": "ERC20: approve to the zero address"
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_bool",
                                                            "typeString": "bool"
                                                        },
                                                        {
                                                            "typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
                                                            "typeString": "literal_string \"ERC20: approve to the zero address\""
                                                        }
                                                    ],
                                                    "id": 1132,
                                                    "name": "require",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [
                                                        -18,
                                                        -18
                                                    ],
                                                    "referencedDeclaration": -18,
                                                    "src": "8263:7:3",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                                        "typeString": "function (bool,string memory) pure"
                                                    }
                                                },
                                                "id": 1140,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "8263:68:3",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_tuple$__$",
                                                    "typeString": "tuple()"
                                                }
                                            },
                                            "id": 1141,
                                            "nodeType": "ExpressionStatement",
                                            "src": "8263:68:3"
                                        },
                                        {
                                            "expression": {
                                                "id": 1148,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftHandSide": {
                                                    "baseExpression": {
                                                        "baseExpression": {
                                                            "id": 1142,
                                                            "name": "_allowances",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 735,
                                                            "src": "8344:11:3",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                                                "typeString": "mapping(address => mapping(address => uint256))"
                                                            }
                                                        },
                                                        "id": 1145,
                                                        "indexExpression": {
                                                            "id": 1143,
                                                            "name": "owner",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 1115,
                                                            "src": "8356:5:3",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_address",
                                                                "typeString": "address"
                                                            }
                                                        },
                                                        "isConstant": false,
                                                        "isLValue": true,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "nodeType": "IndexAccess",
                                                        "src": "8344:18:3",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                                            "typeString": "mapping(address => uint256)"
                                                        }
                                                    },
                                                    "id": 1146,
                                                    "indexExpression": {
                                                        "id": 1144,
                                                        "name": "spender",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 1117,
                                                        "src": "8363:7:3",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        }
                                                    },
                                                    "isConstant": false,
                                                    "isLValue": true,
                                                    "isPure": false,
                                                    "lValueRequested": true,
                                                    "nodeType": "IndexAccess",
                                                    "src": "8344:27:3",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    }
                                                },
                                                "nodeType": "Assignment",
                                                "operator": "=",
                                                "rightHandSide": {
                                                    "id": 1147,
                                                    "name": "value",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 1119,
                                                    "src": "8374:5:3",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    }
                                                },
                                                "src": "8344:35:3",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            },
                                            "id": 1149,
                                            "nodeType": "ExpressionStatement",
                                            "src": "8344:35:3"
                                        },
                                        {
                                            "eventCall": {
                                                "arguments": [
                                                    {
                                                        "id": 1151,
                                                        "name": "owner",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 1115,
                                                        "src": "8404:5:3",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        }
                                                    },
                                                    {
                                                        "id": 1152,
                                                        "name": "spender",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 1117,
                                                        "src": "8411:7:3",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        }
                                                    },
                                                    {
                                                        "id": 1153,
                                                        "name": "value",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 1119,
                                                        "src": "8420:5:3",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        }
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        },
                                                        {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        },
                                                        {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        }
                                                    ],
                                                    "id": 1150,
                                                    "name": "Approval",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 2808,
                                                    "src": "8395:8:3",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                                                        "typeString": "function (address,address,uint256)"
                                                    }
                                                },
                                                "id": 1154,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "8395:31:3",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_tuple$__$",
                                                    "typeString": "tuple()"
                                                }
                                            },
                                            "id": 1155,
                                            "nodeType": "EmitStatement",
                                            "src": "8390:36:3"
                                        }
                                    ]
                                },
                                "documentation": {
                                    "id": 1113,
                                    "nodeType": "StructuredDocumentation",
                                    "src": "7667:426:3",
                                    "text": " @dev Sets `amount` as the allowance of `spender` over the `owner`s tokens.\n This is internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an `Approval` event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address."
                                },
                                "id": 1157,
                                "implemented": true,
                                "kind": "function",
                                "modifiers": [],
                                "name": "_approve",
                                "nodeType": "FunctionDefinition",
                                "parameters": {
                                    "id": 1120,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 1115,
                                            "mutability": "mutable",
                                            "name": "owner",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 1157,
                                            "src": "8117:13:3",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            },
                                            "typeName": {
                                                "id": 1114,
                                                "name": "address",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "8117:7:3",
                                                "stateMutability": "nonpayable",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            "visibility": "internal"
                                        },
                                        {
                                            "constant": false,
                                            "id": 1117,
                                            "mutability": "mutable",
                                            "name": "spender",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 1157,
                                            "src": "8132:15:3",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            },
                                            "typeName": {
                                                "id": 1116,
                                                "name": "address",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "8132:7:3",
                                                "stateMutability": "nonpayable",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            "visibility": "internal"
                                        },
                                        {
                                            "constant": false,
                                            "id": 1119,
                                            "mutability": "mutable",
                                            "name": "value",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 1157,
                                            "src": "8149:13:3",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            },
                                            "typeName": {
                                                "id": 1118,
                                                "name": "uint256",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "8149:7:3",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "8116:47:3"
                                },
                                "returnParameters": {
                                    "id": 1121,
                                    "nodeType": "ParameterList",
                                    "parameters": [],
                                    "src": "8173:0:3"
                                },
                                "scope": 1187,
                                "src": "8099:335:3",
                                "stateMutability": "nonpayable",
                                "virtual": false,
                                "visibility": "internal"
                            },
                            {
                                "body": {
                                    "id": 1185,
                                    "nodeType": "Block",
                                    "src": "8680:127:3",
                                    "statements": [
                                        {
                                            "expression": {
                                                "arguments": [
                                                    {
                                                        "id": 1166,
                                                        "name": "account",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 1160,
                                                        "src": "8697:7:3",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        }
                                                    },
                                                    {
                                                        "id": 1167,
                                                        "name": "amount",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 1162,
                                                        "src": "8706:6:3",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        }
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        },
                                                        {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        }
                                                    ],
                                                    "id": 1165,
                                                    "name": "_burn",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 1112,
                                                    "src": "8691:5:3",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                                                        "typeString": "function (address,uint256)"
                                                    }
                                                },
                                                "id": 1168,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "8691:22:3",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_tuple$__$",
                                                    "typeString": "tuple()"
                                                }
                                            },
                                            "id": 1169,
                                            "nodeType": "ExpressionStatement",
                                            "src": "8691:22:3"
                                        },
                                        {
                                            "expression": {
                                                "arguments": [
                                                    {
                                                        "id": 1171,
                                                        "name": "account",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 1160,
                                                        "src": "8733:7:3",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        }
                                                    },
                                                    {
                                                        "expression": {
                                                            "id": 1172,
                                                            "name": "msg",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": -15,
                                                            "src": "8742:3:3",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_magic_message",
                                                                "typeString": "msg"
                                                            }
                                                        },
                                                        "id": 1173,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "memberName": "sender",
                                                        "nodeType": "MemberAccess",
                                                        "src": "8742:10:3",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_address_payable",
                                                            "typeString": "address payable"
                                                        }
                                                    },
                                                    {
                                                        "arguments": [
                                                            {
                                                                "id": 1181,
                                                                "name": "amount",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [],
                                                                "referencedDeclaration": 1162,
                                                                "src": "8791:6:3",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_uint256",
                                                                    "typeString": "uint256"
                                                                }
                                                            }
                                                        ],
                                                        "expression": {
                                                            "argumentTypes": [
                                                                {
                                                                    "typeIdentifier": "t_uint256",
                                                                    "typeString": "uint256"
                                                                }
                                                            ],
                                                            "expression": {
                                                                "baseExpression": {
                                                                    "baseExpression": {
                                                                        "id": 1174,
                                                                        "name": "_allowances",
                                                                        "nodeType": "Identifier",
                                                                        "overloadedDeclarations": [],
                                                                        "referencedDeclaration": 735,
                                                                        "src": "8754:11:3",
                                                                        "typeDescriptions": {
                                                                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                                                            "typeString": "mapping(address => mapping(address => uint256))"
                                                                        }
                                                                    },
                                                                    "id": 1176,
                                                                    "indexExpression": {
                                                                        "id": 1175,
                                                                        "name": "account",
                                                                        "nodeType": "Identifier",
                                                                        "overloadedDeclarations": [],
                                                                        "referencedDeclaration": 1160,
                                                                        "src": "8766:7:3",
                                                                        "typeDescriptions": {
                                                                            "typeIdentifier": "t_address",
                                                                            "typeString": "address"
                                                                        }
                                                                    },
                                                                    "isConstant": false,
                                                                    "isLValue": true,
                                                                    "isPure": false,
                                                                    "lValueRequested": false,
                                                                    "nodeType": "IndexAccess",
                                                                    "src": "8754:20:3",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                                                        "typeString": "mapping(address => uint256)"
                                                                    }
                                                                },
                                                                "id": 1179,
                                                                "indexExpression": {
                                                                    "expression": {
                                                                        "id": 1177,
                                                                        "name": "msg",
                                                                        "nodeType": "Identifier",
                                                                        "overloadedDeclarations": [],
                                                                        "referencedDeclaration": -15,
                                                                        "src": "8775:3:3",
                                                                        "typeDescriptions": {
                                                                            "typeIdentifier": "t_magic_message",
                                                                            "typeString": "msg"
                                                                        }
                                                                    },
                                                                    "id": 1178,
                                                                    "isConstant": false,
                                                                    "isLValue": false,
                                                                    "isPure": false,
                                                                    "lValueRequested": false,
                                                                    "memberName": "sender",
                                                                    "nodeType": "MemberAccess",
                                                                    "src": "8775:10:3",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_address_payable",
                                                                        "typeString": "address payable"
                                                                    }
                                                                },
                                                                "isConstant": false,
                                                                "isLValue": true,
                                                                "isPure": false,
                                                                "lValueRequested": false,
                                                                "nodeType": "IndexAccess",
                                                                "src": "8754:32:3",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_uint256",
                                                                    "typeString": "uint256"
                                                                }
                                                            },
                                                            "id": 1180,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": false,
                                                            "lValueRequested": false,
                                                            "memberName": "sub",
                                                            "nodeType": "MemberAccess",
                                                            "referencedDeclaration": 2902,
                                                            "src": "8754:36:3",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                                                            }
                                                        },
                                                        "id": 1182,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "kind": "functionCall",
                                                        "lValueRequested": false,
                                                        "names": [],
                                                        "nodeType": "FunctionCall",
                                                        "src": "8754:44:3",
                                                        "tryCall": false,
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        }
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        },
                                                        {
                                                            "typeIdentifier": "t_address_payable",
                                                            "typeString": "address payable"
                                                        },
                                                        {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        }
                                                    ],
                                                    "id": 1170,
                                                    "name": "_approve",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 1157,
                                                    "src": "8724:8:3",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                                                        "typeString": "function (address,address,uint256)"
                                                    }
                                                },
                                                "id": 1183,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "8724:75:3",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_tuple$__$",
                                                    "typeString": "tuple()"
                                                }
                                            },
                                            "id": 1184,
                                            "nodeType": "ExpressionStatement",
                                            "src": "8724:75:3"
                                        }
                                    ]
                                },
                                "documentation": {
                                    "id": 1158,
                                    "nodeType": "StructuredDocumentation",
                                    "src": "8442:171:3",
                                    "text": " @dev Destoys `amount` tokens from `account`.`amount` is then deducted\n from the caller's allowance.\n See `_burn` and `_approve`."
                                },
                                "id": 1186,
                                "implemented": true,
                                "kind": "function",
                                "modifiers": [],
                                "name": "_burnFrom",
                                "nodeType": "FunctionDefinition",
                                "parameters": {
                                    "id": 1163,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 1160,
                                            "mutability": "mutable",
                                            "name": "account",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 1186,
                                            "src": "8638:15:3",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            },
                                            "typeName": {
                                                "id": 1159,
                                                "name": "address",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "8638:7:3",
                                                "stateMutability": "nonpayable",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            "visibility": "internal"
                                        },
                                        {
                                            "constant": false,
                                            "id": 1162,
                                            "mutability": "mutable",
                                            "name": "amount",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 1186,
                                            "src": "8655:14:3",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            },
                                            "typeName": {
                                                "id": 1161,
                                                "name": "uint256",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "8655:7:3",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "8637:33:3"
                                },
                                "returnParameters": {
                                    "id": 1164,
                                    "nodeType": "ParameterList",
                                    "parameters": [],
                                    "src": "8680:0:3"
                                },
                                "scope": 1187,
                                "src": "8619:188:3",
                                "stateMutability": "nonpayable",
                                "virtual": false,
                                "visibility": "internal"
                            }
                        ],
                        "scope": 1188,
                        "src": "1419:7391:3"
                    }
                ],
                "src": "134:8676:3"
            },
            "id": 3
        },
        "c:/Users/luziu/Documents/aktionariat/contracts/src/ERC20Draggable.sol": {
            "ast": {
                "absolutePath": "c:/Users/luziu/Documents/aktionariat/contracts/src/ERC20Draggable.sol",
                "exportedSymbols": {
                    "ERC20Draggable": [
                        2116
                    ],
                    "IBurnable": [
                        2128
                    ],
                    "IShares": [
                        2122
                    ]
                },
                "id": 2129,
                "license": "LicenseRef-Aktionariat",
                "nodeType": "SourceUnit",
                "nodes": [
                    {
                        "id": 1189,
                        "literals": [
                            "solidity",
                            ">=",
                            "0.7"
                        ],
                        "nodeType": "PragmaDirective",
                        "src": "1336:22:4"
                    },
                    {
                        "absolutePath": "c:/Users/luziu/Documents/aktionariat/contracts/src/IERC20.sol",
                        "file": "./IERC20.sol",
                        "id": 1190,
                        "nodeType": "ImportDirective",
                        "scope": 2129,
                        "sourceUnit": 2810,
                        "src": "1362:22:4",
                        "symbolAliases": [],
                        "unitAlias": ""
                    },
                    {
                        "absolutePath": "c:/Users/luziu/Documents/aktionariat/contracts/src/SafeMath.sol",
                        "file": "./SafeMath.sol",
                        "id": 1191,
                        "nodeType": "ImportDirective",
                        "scope": 2129,
                        "sourceUnit": 2929,
                        "src": "1386:24:4",
                        "symbolAliases": [],
                        "unitAlias": ""
                    },
                    {
                        "absolutePath": "c:/Users/luziu/Documents/aktionariat/contracts/src/ERC20.sol",
                        "file": "./ERC20.sol",
                        "id": 1192,
                        "nodeType": "ImportDirective",
                        "scope": 2129,
                        "sourceUnit": 1188,
                        "src": "1412:21:4",
                        "symbolAliases": [],
                        "unitAlias": ""
                    },
                    {
                        "absolutePath": "c:/Users/luziu/Documents/aktionariat/contracts/src/Acquisition.sol",
                        "file": "./Acquisition.sol",
                        "id": 1193,
                        "nodeType": "ImportDirective",
                        "scope": 2129,
                        "sourceUnit": 492,
                        "src": "1435:27:4",
                        "symbolAliases": [],
                        "unitAlias": ""
                    },
                    {
                        "absolutePath": "c:/Users/luziu/Documents/aktionariat/contracts/src/IMigratable.sol",
                        "file": "./IMigratable.sol",
                        "id": 1194,
                        "nodeType": "ImportDirective",
                        "scope": 2129,
                        "sourceUnit": 2830,
                        "src": "1464:27:4",
                        "symbolAliases": [],
                        "unitAlias": ""
                    },
                    {
                        "absolutePath": "c:/Users/luziu/Documents/aktionariat/contracts/src/IERC677Receiver.sol",
                        "file": "./IERC677Receiver.sol",
                        "id": 1195,
                        "nodeType": "ImportDirective",
                        "scope": 2129,
                        "sourceUnit": 2822,
                        "src": "1493:31:4",
                        "symbolAliases": [],
                        "unitAlias": ""
                    },
                    {
                        "abstract": false,
                        "baseContracts": [
                            {
                                "baseName": {
                                    "id": 1197,
                                    "name": "ERC20",
                                    "nodeType": "UserDefinedTypeName",
                                    "referencedDeclaration": 1187,
                                    "src": "2438:5:4",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_ERC20_$1187",
                                        "typeString": "contract ERC20"
                                    }
                                },
                                "id": 1198,
                                "nodeType": "InheritanceSpecifier",
                                "src": "2438:5:4"
                            },
                            {
                                "baseName": {
                                    "id": 1199,
                                    "name": "IERC677Receiver",
                                    "nodeType": "UserDefinedTypeName",
                                    "referencedDeclaration": 2821,
                                    "src": "2445:15:4",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_IERC677Receiver_$2821",
                                        "typeString": "contract IERC677Receiver"
                                    }
                                },
                                "id": 1200,
                                "nodeType": "InheritanceSpecifier",
                                "src": "2445:15:4"
                            }
                        ],
                        "contractDependencies": [
                            491,
                            1187,
                            2809,
                            2821
                        ],
                        "contractKind": "contract",
                        "documentation": {
                            "id": 1196,
                            "nodeType": "StructuredDocumentation",
                            "src": "1528:879:4",
                            "text": " @title CompanyName Shareholder Agreement\n @author Benjamin Rickenbacher, b.rickenbacher@intergga.ch\n @author Luzius Meisser, luzius@meissereconomics.com\n @dev These tokens are based on the ERC20 standard and the open-zeppelin library.\n This is an ERC-20 token representing shares of CompanyName AG that are bound to\n a shareholder agreement that can be found at the URL defined in the constant 'terms'\n of the 'DraggableCompanyNameShares' contract. The agreement is partially enforced\n through the Swiss legal system, and partially enforced through this smart contract.\n In particular, this smart contract implements a drag-along clause which allows the\n majority of token holders to force the minority sell their shares along with them in\n case of an acquisition. That's why the tokens are called \"Draggable CompanyName AG Shares.\""
                        },
                        "fullyImplemented": true,
                        "id": 2116,
                        "linearizedBaseContracts": [
                            2116,
                            2821,
                            1187,
                            2809
                        ],
                        "name": "ERC20Draggable",
                        "nodeType": "ContractDefinition",
                        "nodes": [
                            {
                                "id": 1203,
                                "libraryName": {
                                    "id": 1201,
                                    "name": "SafeMath",
                                    "nodeType": "UserDefinedTypeName",
                                    "referencedDeclaration": 2928,
                                    "src": "2476:8:4",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_SafeMath_$2928",
                                        "typeString": "library SafeMath"
                                    }
                                },
                                "nodeType": "UsingForDirective",
                                "src": "2470:27:4",
                                "typeName": {
                                    "id": 1202,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "2489:7:4",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                    }
                                }
                            },
                            {
                                "constant": false,
                                "id": 1205,
                                "mutability": "mutable",
                                "name": "wrapped",
                                "nodeType": "VariableDeclaration",
                                "scope": 2116,
                                "src": "2505:22:4",
                                "stateVariable": true,
                                "storageLocation": "default",
                                "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IERC20_$2809",
                                    "typeString": "contract IERC20"
                                },
                                "typeName": {
                                    "id": 1204,
                                    "name": "IERC20",
                                    "nodeType": "UserDefinedTypeName",
                                    "referencedDeclaration": 2809,
                                    "src": "2505:6:4",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_IERC20_$2809",
                                        "typeString": "contract IERC20"
                                    }
                                },
                                "visibility": "private"
                            },
                            {
                                "constant": false,
                                "functionSelector": "0832e470",
                                "id": 1208,
                                "mutability": "mutable",
                                "name": "unwrapConversionFactor",
                                "nodeType": "VariableDeclaration",
                                "scope": 2116,
                                "src": "2689:41:4",
                                "stateVariable": true,
                                "storageLocation": "default",
                                "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                },
                                "typeName": {
                                    "id": 1206,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "2689:7:4",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                    }
                                },
                                "value": {
                                    "hexValue": "31",
                                    "id": 1207,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "2729:1:4",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_rational_1_by_1",
                                        "typeString": "int_const 1"
                                    },
                                    "value": "1"
                                },
                                "visibility": "public"
                            },
                            {
                                "constant": false,
                                "functionSelector": "c028df06",
                                "id": 1210,
                                "mutability": "mutable",
                                "name": "offer",
                                "nodeType": "VariableDeclaration",
                                "scope": 2116,
                                "src": "2860:24:4",
                                "stateVariable": true,
                                "storageLocation": "default",
                                "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_Acquisition_$491",
                                    "typeString": "contract Acquisition"
                                },
                                "typeName": {
                                    "id": 1209,
                                    "name": "Acquisition",
                                    "nodeType": "UserDefinedTypeName",
                                    "referencedDeclaration": 491,
                                    "src": "2860:11:4",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_Acquisition_$491",
                                        "typeString": "contract Acquisition"
                                    }
                                },
                                "visibility": "public"
                            },
                            {
                                "constant": false,
                                "functionSelector": "bb689472",
                                "id": 1212,
                                "mutability": "mutable",
                                "name": "licenseFeeRecipient",
                                "nodeType": "VariableDeclaration",
                                "scope": 2116,
                                "src": "2893:42:4",
                                "stateVariable": true,
                                "storageLocation": "default",
                                "typeDescriptions": {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                },
                                "typeName": {
                                    "id": 1211,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "2893:15:4",
                                    "stateMutability": "payable",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_address_payable",
                                        "typeString": "address payable"
                                    }
                                },
                                "visibility": "public"
                            },
                            {
                                "constant": false,
                                "functionSelector": "9e8a9a5a",
                                "id": 1214,
                                "mutability": "mutable",
                                "name": "migrationQuorum",
                                "nodeType": "VariableDeclaration",
                                "scope": 2116,
                                "src": "3009:30:4",
                                "stateVariable": true,
                                "storageLocation": "default",
                                "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                },
                                "typeName": {
                                    "id": 1213,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "3009:7:4",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                    }
                                },
                                "visibility": "public"
                            },
                            {
                                "constant": false,
                                "functionSelector": "3549788a",
                                "id": 1216,
                                "mutability": "mutable",
                                "name": "acquisitionQuorum",
                                "nodeType": "VariableDeclaration",
                                "scope": 2116,
                                "src": "3120:32:4",
                                "stateVariable": true,
                                "storageLocation": "default",
                                "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                },
                                "typeName": {
                                    "id": 1215,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "3120:7:4",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                    }
                                },
                                "visibility": "public"
                            },
                            {
                                "constant": true,
                                "id": 1219,
                                "mutability": "constant",
                                "name": "MIN_OFFER_INCREMENT",
                                "nodeType": "VariableDeclaration",
                                "scope": 2116,
                                "src": "3161:44:4",
                                "stateVariable": true,
                                "storageLocation": "default",
                                "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                },
                                "typeName": {
                                    "id": 1217,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "3161:7:4",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                    }
                                },
                                "value": {
                                    "hexValue": "3130353030",
                                    "id": 1218,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "3200:5:4",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_rational_10500_by_1",
                                        "typeString": "int_const 10500"
                                    },
                                    "value": "10500"
                                },
                                "visibility": "internal"
                            },
                            {
                                "constant": true,
                                "id": 1222,
                                "mutability": "constant",
                                "name": "MIN_HOLDING",
                                "nodeType": "VariableDeclaration",
                                "scope": 2116,
                                "src": "3261:34:4",
                                "stateVariable": true,
                                "storageLocation": "default",
                                "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                },
                                "typeName": {
                                    "id": 1220,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "3261:7:4",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                    }
                                },
                                "value": {
                                    "hexValue": "353030",
                                    "id": 1221,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "3292:3:4",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_rational_500_by_1",
                                        "typeString": "int_const 500"
                                    },
                                    "value": "500"
                                },
                                "visibility": "internal"
                            },
                            {
                                "constant": true,
                                "id": 1225,
                                "mutability": "constant",
                                "name": "MIN_DRAG_ALONG_QUOTA",
                                "nodeType": "VariableDeclaration",
                                "scope": 2116,
                                "src": "3375:44:4",
                                "stateVariable": true,
                                "storageLocation": "default",
                                "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                },
                                "typeName": {
                                    "id": 1223,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "3375:7:4",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                    }
                                },
                                "value": {
                                    "hexValue": "33303030",
                                    "id": 1224,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "3415:4:4",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_rational_3000_by_1",
                                        "typeString": "int_const 3000"
                                    },
                                    "value": "3000"
                                },
                                "visibility": "internal"
                            },
                            {
                                "constant": false,
                                "functionSelector": "02fb0c5e",
                                "id": 1228,
                                "mutability": "mutable",
                                "name": "active",
                                "nodeType": "VariableDeclaration",
                                "scope": 2116,
                                "src": "3519:25:4",
                                "stateVariable": true,
                                "storageLocation": "default",
                                "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                },
                                "typeName": {
                                    "id": 1226,
                                    "name": "bool",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "3519:4:4",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                    }
                                },
                                "value": {
                                    "hexValue": "74727565",
                                    "id": 1227,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "bool",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "3540:4:4",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                    },
                                    "value": "true"
                                },
                                "visibility": "public"
                            },
                            {
                                "anonymous": false,
                                "id": 1236,
                                "name": "OfferCreated",
                                "nodeType": "EventDefinition",
                                "parameters": {
                                    "id": 1235,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 1230,
                                            "indexed": true,
                                            "mutability": "mutable",
                                            "name": "buyer",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 1236,
                                            "src": "3679:21:4",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            },
                                            "typeName": {
                                                "id": 1229,
                                                "name": "address",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "3679:7:4",
                                                "stateMutability": "nonpayable",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            "visibility": "internal"
                                        },
                                        {
                                            "constant": false,
                                            "id": 1232,
                                            "indexed": false,
                                            "mutability": "mutable",
                                            "name": "pricePerShare",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 1236,
                                            "src": "3702:21:4",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            },
                                            "typeName": {
                                                "id": 1231,
                                                "name": "uint256",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "3702:7:4",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            },
                                            "visibility": "internal"
                                        },
                                        {
                                            "constant": false,
                                            "id": 1234,
                                            "indexed": false,
                                            "mutability": "mutable",
                                            "name": "offerContract",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 1236,
                                            "src": "3725:21:4",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            },
                                            "typeName": {
                                                "id": 1233,
                                                "name": "address",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "3725:7:4",
                                                "stateMutability": "nonpayable",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "3678:69:4"
                                },
                                "src": "3660:88:4"
                            },
                            {
                                "anonymous": false,
                                "id": 1248,
                                "name": "OfferEnded",
                                "nodeType": "EventDefinition",
                                "parameters": {
                                    "id": 1247,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 1238,
                                            "indexed": true,
                                            "mutability": "mutable",
                                            "name": "buyer",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 1248,
                                            "src": "3771:21:4",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            },
                                            "typeName": {
                                                "id": 1237,
                                                "name": "address",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "3771:7:4",
                                                "stateMutability": "nonpayable",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            "visibility": "internal"
                                        },
                                        {
                                            "constant": false,
                                            "id": 1240,
                                            "indexed": false,
                                            "mutability": "mutable",
                                            "name": "sender",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 1248,
                                            "src": "3794:14:4",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            },
                                            "typeName": {
                                                "id": 1239,
                                                "name": "address",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "3794:7:4",
                                                "stateMutability": "nonpayable",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            "visibility": "internal"
                                        },
                                        {
                                            "constant": false,
                                            "id": 1242,
                                            "indexed": false,
                                            "mutability": "mutable",
                                            "name": "success",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 1248,
                                            "src": "3810:12:4",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_bool",
                                                "typeString": "bool"
                                            },
                                            "typeName": {
                                                "id": 1241,
                                                "name": "bool",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "3810:4:4",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            },
                                            "visibility": "internal"
                                        },
                                        {
                                            "constant": false,
                                            "id": 1244,
                                            "indexed": false,
                                            "mutability": "mutable",
                                            "name": "message",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 1248,
                                            "src": "3824:14:4",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_string_memory_ptr",
                                                "typeString": "string"
                                            },
                                            "typeName": {
                                                "id": 1243,
                                                "name": "string",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "3824:6:4",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_string_storage_ptr",
                                                    "typeString": "string"
                                                }
                                            },
                                            "visibility": "internal"
                                        },
                                        {
                                            "constant": false,
                                            "id": 1246,
                                            "indexed": false,
                                            "mutability": "mutable",
                                            "name": "offerContract",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 1248,
                                            "src": "3840:21:4",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            },
                                            "typeName": {
                                                "id": 1245,
                                                "name": "address",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "3840:7:4",
                                                "stateMutability": "nonpayable",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "3770:92:4"
                                },
                                "src": "3754:109:4"
                            },
                            {
                                "anonymous": false,
                                "id": 1252,
                                "name": "MigrationSucceeded",
                                "nodeType": "EventDefinition",
                                "parameters": {
                                    "id": 1251,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 1250,
                                            "indexed": false,
                                            "mutability": "mutable",
                                            "name": "newContractAddress",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 1252,
                                            "src": "3894:26:4",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            },
                                            "typeName": {
                                                "id": 1249,
                                                "name": "address",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "3894:7:4",
                                                "stateMutability": "nonpayable",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "3893:28:4"
                                },
                                "src": "3869:53:4"
                            },
                            {
                                "body": {
                                    "id": 1289,
                                    "nodeType": "Block",
                                    "src": "4391:288:4",
                                    "statements": [
                                        {
                                            "expression": {
                                                "id": 1269,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftHandSide": {
                                                    "id": 1265,
                                                    "name": "wrapped",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 1205,
                                                    "src": "4402:7:4",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_contract$_IERC20_$2809",
                                                        "typeString": "contract IERC20"
                                                    }
                                                },
                                                "nodeType": "Assignment",
                                                "operator": "=",
                                                "rightHandSide": {
                                                    "arguments": [
                                                        {
                                                            "id": 1267,
                                                            "name": "wrappedToken",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 1255,
                                                            "src": "4419:12:4",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_address",
                                                                "typeString": "address"
                                                            }
                                                        }
                                                    ],
                                                    "expression": {
                                                        "argumentTypes": [
                                                            {
                                                                "typeIdentifier": "t_address",
                                                                "typeString": "address"
                                                            }
                                                        ],
                                                        "id": 1266,
                                                        "name": "IERC20",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 2809,
                                                        "src": "4412:6:4",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_type$_t_contract$_IERC20_$2809_$",
                                                            "typeString": "type(contract IERC20)"
                                                        }
                                                    },
                                                    "id": 1268,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "kind": "typeConversion",
                                                    "lValueRequested": false,
                                                    "names": [],
                                                    "nodeType": "FunctionCall",
                                                    "src": "4412:20:4",
                                                    "tryCall": false,
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_contract$_IERC20_$2809",
                                                        "typeString": "contract IERC20"
                                                    }
                                                },
                                                "src": "4402:30:4",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_contract$_IERC20_$2809",
                                                    "typeString": "contract IERC20"
                                                }
                                            },
                                            "id": 1270,
                                            "nodeType": "ExpressionStatement",
                                            "src": "4402:30:4"
                                        },
                                        {
                                            "expression": {
                                                "id": 1273,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftHandSide": {
                                                    "id": 1271,
                                                    "name": "licenseFeeRecipient",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 1212,
                                                    "src": "4443:19:4",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_address_payable",
                                                        "typeString": "address payable"
                                                    }
                                                },
                                                "nodeType": "Assignment",
                                                "operator": "=",
                                                "rightHandSide": {
                                                    "hexValue": "307832394665383931346537366461356345326439304465393861363464303035356631393964303644",
                                                    "id": 1272,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "kind": "number",
                                                    "lValueRequested": false,
                                                    "nodeType": "Literal",
                                                    "src": "4465:42:4",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_address_payable",
                                                        "typeString": "address payable"
                                                    },
                                                    "value": "0x29Fe8914e76da5cE2d90De98a64d0055f199d06D"
                                                },
                                                "src": "4443:64:4",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address_payable",
                                                    "typeString": "address payable"
                                                }
                                            },
                                            "id": 1274,
                                            "nodeType": "ExpressionStatement",
                                            "src": "4443:64:4"
                                        },
                                        {
                                            "expression": {
                                                "id": 1277,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftHandSide": {
                                                    "id": 1275,
                                                    "name": "migrationQuorum",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 1214,
                                                    "src": "4536:15:4",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    }
                                                },
                                                "nodeType": "Assignment",
                                                "operator": "=",
                                                "rightHandSide": {
                                                    "id": 1276,
                                                    "name": "migrationQuorumInBIPS_",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 1257,
                                                    "src": "4554:22:4",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    }
                                                },
                                                "src": "4536:40:4",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            },
                                            "id": 1278,
                                            "nodeType": "ExpressionStatement",
                                            "src": "4536:40:4"
                                        },
                                        {
                                            "expression": {
                                                "id": 1281,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftHandSide": {
                                                    "id": 1279,
                                                    "name": "acquisitionQuorum",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 1216,
                                                    "src": "4587:17:4",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    }
                                                },
                                                "nodeType": "Assignment",
                                                "operator": "=",
                                                "rightHandSide": {
                                                    "id": 1280,
                                                    "name": "acquisitionQuorum_",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 1259,
                                                    "src": "4607:18:4",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    }
                                                },
                                                "src": "4587:38:4",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            },
                                            "id": 1282,
                                            "nodeType": "ExpressionStatement",
                                            "src": "4587:38:4"
                                        },
                                        {
                                            "expression": {
                                                "arguments": [],
                                                "expression": {
                                                    "argumentTypes": [],
                                                    "expression": {
                                                        "arguments": [
                                                            {
                                                                "id": 1284,
                                                                "name": "wrappedToken",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [],
                                                                "referencedDeclaration": 1255,
                                                                "src": "4644:12:4",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_address",
                                                                    "typeString": "address"
                                                                }
                                                            }
                                                        ],
                                                        "expression": {
                                                            "argumentTypes": [
                                                                {
                                                                    "typeIdentifier": "t_address",
                                                                    "typeString": "address"
                                                                }
                                                            ],
                                                            "id": 1283,
                                                            "name": "IShares",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 2122,
                                                            "src": "4636:7:4",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_type$_t_contract$_IShares_$2122_$",
                                                                "typeString": "type(contract IShares)"
                                                            }
                                                        },
                                                        "id": 1285,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "kind": "typeConversion",
                                                        "lValueRequested": false,
                                                        "names": [],
                                                        "nodeType": "FunctionCall",
                                                        "src": "4636:21:4",
                                                        "tryCall": false,
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_contract$_IShares_$2122",
                                                            "typeString": "contract IShares"
                                                        }
                                                    },
                                                    "id": 1286,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "memberName": "totalShares",
                                                    "nodeType": "MemberAccess",
                                                    "referencedDeclaration": 2121,
                                                    "src": "4636:33:4",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_function_external_nonpayable$__$returns$_t_uint256_$",
                                                        "typeString": "function () external returns (uint256)"
                                                    }
                                                },
                                                "id": 1287,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "4636:35:4",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            },
                                            "id": 1288,
                                            "nodeType": "ExpressionStatement",
                                            "src": "4636:35:4"
                                        }
                                    ]
                                },
                                "documentation": {
                                    "id": 1253,
                                    "nodeType": "StructuredDocumentation",
                                    "src": "3930:318:4",
                                    "text": " CurrencyAddress specifies the currency used in acquisitions. The currency must be\n an ERC-20 token that returns true on successful transfers and throws an exception or\n returns false on failure. It can only be updated later if the currency supports the\n IMigratable interface."
                                },
                                "id": 1290,
                                "implemented": true,
                                "kind": "constructor",
                                "modifiers": [
                                    {
                                        "arguments": [
                                            {
                                                "hexValue": "30",
                                                "id": 1262,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "number",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "4388:1:4",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_rational_0_by_1",
                                                    "typeString": "int_const 0"
                                                },
                                                "value": "0"
                                            }
                                        ],
                                        "id": 1263,
                                        "modifierName": {
                                            "id": 1261,
                                            "name": "ERC20",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1187,
                                            "src": "4382:5:4",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_type$_t_contract$_ERC20_$1187_$",
                                                "typeString": "type(contract ERC20)"
                                            }
                                        },
                                        "nodeType": "ModifierInvocation",
                                        "src": "4382:8:4"
                                    }
                                ],
                                "name": "",
                                "nodeType": "FunctionDefinition",
                                "parameters": {
                                    "id": 1260,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 1255,
                                            "mutability": "mutable",
                                            "name": "wrappedToken",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 1290,
                                            "src": "4276:20:4",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            },
                                            "typeName": {
                                                "id": 1254,
                                                "name": "address",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "4276:7:4",
                                                "stateMutability": "nonpayable",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            "visibility": "internal"
                                        },
                                        {
                                            "constant": false,
                                            "id": 1257,
                                            "mutability": "mutable",
                                            "name": "migrationQuorumInBIPS_",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 1290,
                                            "src": "4307:30:4",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            },
                                            "typeName": {
                                                "id": 1256,
                                                "name": "uint256",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "4307:7:4",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            },
                                            "visibility": "internal"
                                        },
                                        {
                                            "constant": false,
                                            "id": 1259,
                                            "mutability": "mutable",
                                            "name": "acquisitionQuorum_",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 1290,
                                            "src": "4348:26:4",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            },
                                            "typeName": {
                                                "id": 1258,
                                                "name": "uint256",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "4348:7:4",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "4265:116:4"
                                },
                                "returnParameters": {
                                    "id": 1264,
                                    "nodeType": "ParameterList",
                                    "parameters": [],
                                    "src": "4391:0:4"
                                },
                                "scope": 2116,
                                "src": "4254:425:4",
                                "stateMutability": "nonpayable",
                                "virtual": false,
                                "visibility": "public"
                            },
                            {
                                "baseFunctions": [
                                    2724
                                ],
                                "body": {
                                    "id": 1307,
                                    "nodeType": "Block",
                                    "src": "4747:80:4",
                                    "statements": [
                                        {
                                            "expression": {
                                                "arguments": [
                                                    {
                                                        "arguments": [
                                                            {
                                                                "hexValue": "447261676761626c6520",
                                                                "id": 1300,
                                                                "isConstant": false,
                                                                "isLValue": false,
                                                                "isPure": true,
                                                                "kind": "string",
                                                                "lValueRequested": false,
                                                                "nodeType": "Literal",
                                                                "src": "4789:12:4",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_stringliteral_dd43d014bb9fb2f0201fd88d53f340c616f99f3e50f6208e3d39a2a2d4305c96",
                                                                    "typeString": "literal_string \"Draggable \""
                                                                },
                                                                "value": "Draggable "
                                                            },
                                                            {
                                                                "arguments": [],
                                                                "expression": {
                                                                    "argumentTypes": [],
                                                                    "expression": {
                                                                        "id": 1301,
                                                                        "name": "wrapped",
                                                                        "nodeType": "Identifier",
                                                                        "overloadedDeclarations": [],
                                                                        "referencedDeclaration": 1205,
                                                                        "src": "4803:7:4",
                                                                        "typeDescriptions": {
                                                                            "typeIdentifier": "t_contract$_IERC20_$2809",
                                                                            "typeString": "contract IERC20"
                                                                        }
                                                                    },
                                                                    "id": 1302,
                                                                    "isConstant": false,
                                                                    "isLValue": false,
                                                                    "isPure": false,
                                                                    "lValueRequested": false,
                                                                    "memberName": "name",
                                                                    "nodeType": "MemberAccess",
                                                                    "referencedDeclaration": 2724,
                                                                    "src": "4803:12:4",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_function_external_view$__$returns$_t_string_memory_ptr_$",
                                                                        "typeString": "function () view external returns (string memory)"
                                                                    }
                                                                },
                                                                "id": 1303,
                                                                "isConstant": false,
                                                                "isLValue": false,
                                                                "isPure": false,
                                                                "kind": "functionCall",
                                                                "lValueRequested": false,
                                                                "names": [],
                                                                "nodeType": "FunctionCall",
                                                                "src": "4803:14:4",
                                                                "tryCall": false,
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_string_memory_ptr",
                                                                    "typeString": "string memory"
                                                                }
                                                            }
                                                        ],
                                                        "expression": {
                                                            "argumentTypes": [
                                                                {
                                                                    "typeIdentifier": "t_stringliteral_dd43d014bb9fb2f0201fd88d53f340c616f99f3e50f6208e3d39a2a2d4305c96",
                                                                    "typeString": "literal_string \"Draggable \""
                                                                },
                                                                {
                                                                    "typeIdentifier": "t_string_memory_ptr",
                                                                    "typeString": "string memory"
                                                                }
                                                            ],
                                                            "expression": {
                                                                "id": 1298,
                                                                "name": "abi",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [],
                                                                "referencedDeclaration": -1,
                                                                "src": "4772:3:4",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_magic_abi",
                                                                    "typeString": "abi"
                                                                }
                                                            },
                                                            "id": 1299,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": true,
                                                            "lValueRequested": false,
                                                            "memberName": "encodePacked",
                                                            "nodeType": "MemberAccess",
                                                            "src": "4772:16:4",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                                                "typeString": "function () pure returns (bytes memory)"
                                                            }
                                                        },
                                                        "id": 1304,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "kind": "functionCall",
                                                        "lValueRequested": false,
                                                        "names": [],
                                                        "nodeType": "FunctionCall",
                                                        "src": "4772:46:4",
                                                        "tryCall": false,
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_bytes_memory_ptr",
                                                            "typeString": "bytes memory"
                                                        }
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_bytes_memory_ptr",
                                                            "typeString": "bytes memory"
                                                        }
                                                    ],
                                                    "id": 1297,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "lValueRequested": false,
                                                    "nodeType": "ElementaryTypeNameExpression",
                                                    "src": "4765:6:4",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                                                        "typeString": "type(string storage pointer)"
                                                    },
                                                    "typeName": {
                                                        "id": 1296,
                                                        "name": "string",
                                                        "nodeType": "ElementaryTypeName",
                                                        "src": "4765:6:4",
                                                        "typeDescriptions": {}
                                                    }
                                                },
                                                "id": 1305,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "typeConversion",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "4765:54:4",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_string_memory_ptr",
                                                    "typeString": "string memory"
                                                }
                                            },
                                            "functionReturnParameters": 1295,
                                            "id": 1306,
                                            "nodeType": "Return",
                                            "src": "4758:61:4"
                                        }
                                    ]
                                },
                                "functionSelector": "06fdde03",
                                "id": 1308,
                                "implemented": true,
                                "kind": "function",
                                "modifiers": [],
                                "name": "name",
                                "nodeType": "FunctionDefinition",
                                "overrides": {
                                    "id": 1292,
                                    "nodeType": "OverrideSpecifier",
                                    "overrides": [],
                                    "src": "4710:8:4"
                                },
                                "parameters": {
                                    "id": 1291,
                                    "nodeType": "ParameterList",
                                    "parameters": [],
                                    "src": "4700:2:4"
                                },
                                "returnParameters": {
                                    "id": 1295,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 1294,
                                            "mutability": "mutable",
                                            "name": "",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 1308,
                                            "src": "4733:13:4",
                                            "stateVariable": false,
                                            "storageLocation": "memory",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_string_memory_ptr",
                                                "typeString": "string"
                                            },
                                            "typeName": {
                                                "id": 1293,
                                                "name": "string",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "4733:6:4",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_string_storage_ptr",
                                                    "typeString": "string"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "4732:15:4"
                                },
                                "scope": 2116,
                                "src": "4687:140:4",
                                "stateMutability": "view",
                                "virtual": false,
                                "visibility": "public"
                            },
                            {
                                "baseFunctions": [
                                    2729
                                ],
                                "body": {
                                    "id": 1325,
                                    "nodeType": "Block",
                                    "src": "4897:73:4",
                                    "statements": [
                                        {
                                            "expression": {
                                                "arguments": [
                                                    {
                                                        "arguments": [
                                                            {
                                                                "hexValue": "44",
                                                                "id": 1318,
                                                                "isConstant": false,
                                                                "isLValue": false,
                                                                "isPure": true,
                                                                "kind": "string",
                                                                "lValueRequested": false,
                                                                "nodeType": "Literal",
                                                                "src": "4939:3:4",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_stringliteral_6c3fd336b49dcb1c57dd4fbeaf5f898320b0da06a5ef64e798c6497600bb79f2",
                                                                    "typeString": "literal_string \"D\""
                                                                },
                                                                "value": "D"
                                                            },
                                                            {
                                                                "arguments": [],
                                                                "expression": {
                                                                    "argumentTypes": [],
                                                                    "expression": {
                                                                        "id": 1319,
                                                                        "name": "wrapped",
                                                                        "nodeType": "Identifier",
                                                                        "overloadedDeclarations": [],
                                                                        "referencedDeclaration": 1205,
                                                                        "src": "4944:7:4",
                                                                        "typeDescriptions": {
                                                                            "typeIdentifier": "t_contract$_IERC20_$2809",
                                                                            "typeString": "contract IERC20"
                                                                        }
                                                                    },
                                                                    "id": 1320,
                                                                    "isConstant": false,
                                                                    "isLValue": false,
                                                                    "isPure": false,
                                                                    "lValueRequested": false,
                                                                    "memberName": "symbol",
                                                                    "nodeType": "MemberAccess",
                                                                    "referencedDeclaration": 2729,
                                                                    "src": "4944:14:4",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_function_external_view$__$returns$_t_string_memory_ptr_$",
                                                                        "typeString": "function () view external returns (string memory)"
                                                                    }
                                                                },
                                                                "id": 1321,
                                                                "isConstant": false,
                                                                "isLValue": false,
                                                                "isPure": false,
                                                                "kind": "functionCall",
                                                                "lValueRequested": false,
                                                                "names": [],
                                                                "nodeType": "FunctionCall",
                                                                "src": "4944:16:4",
                                                                "tryCall": false,
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_string_memory_ptr",
                                                                    "typeString": "string memory"
                                                                }
                                                            }
                                                        ],
                                                        "expression": {
                                                            "argumentTypes": [
                                                                {
                                                                    "typeIdentifier": "t_stringliteral_6c3fd336b49dcb1c57dd4fbeaf5f898320b0da06a5ef64e798c6497600bb79f2",
                                                                    "typeString": "literal_string \"D\""
                                                                },
                                                                {
                                                                    "typeIdentifier": "t_string_memory_ptr",
                                                                    "typeString": "string memory"
                                                                }
                                                            ],
                                                            "expression": {
                                                                "id": 1316,
                                                                "name": "abi",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [],
                                                                "referencedDeclaration": -1,
                                                                "src": "4922:3:4",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_magic_abi",
                                                                    "typeString": "abi"
                                                                }
                                                            },
                                                            "id": 1317,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": true,
                                                            "lValueRequested": false,
                                                            "memberName": "encodePacked",
                                                            "nodeType": "MemberAccess",
                                                            "src": "4922:16:4",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                                                "typeString": "function () pure returns (bytes memory)"
                                                            }
                                                        },
                                                        "id": 1322,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "kind": "functionCall",
                                                        "lValueRequested": false,
                                                        "names": [],
                                                        "nodeType": "FunctionCall",
                                                        "src": "4922:39:4",
                                                        "tryCall": false,
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_bytes_memory_ptr",
                                                            "typeString": "bytes memory"
                                                        }
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_bytes_memory_ptr",
                                                            "typeString": "bytes memory"
                                                        }
                                                    ],
                                                    "id": 1315,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "lValueRequested": false,
                                                    "nodeType": "ElementaryTypeNameExpression",
                                                    "src": "4915:6:4",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                                                        "typeString": "type(string storage pointer)"
                                                    },
                                                    "typeName": {
                                                        "id": 1314,
                                                        "name": "string",
                                                        "nodeType": "ElementaryTypeName",
                                                        "src": "4915:6:4",
                                                        "typeDescriptions": {}
                                                    }
                                                },
                                                "id": 1323,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "typeConversion",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "4915:47:4",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_string_memory_ptr",
                                                    "typeString": "string memory"
                                                }
                                            },
                                            "functionReturnParameters": 1313,
                                            "id": 1324,
                                            "nodeType": "Return",
                                            "src": "4908:54:4"
                                        }
                                    ]
                                },
                                "functionSelector": "95d89b41",
                                "id": 1326,
                                "implemented": true,
                                "kind": "function",
                                "modifiers": [],
                                "name": "symbol",
                                "nodeType": "FunctionDefinition",
                                "overrides": {
                                    "id": 1310,
                                    "nodeType": "OverrideSpecifier",
                                    "overrides": [],
                                    "src": "4860:8:4"
                                },
                                "parameters": {
                                    "id": 1309,
                                    "nodeType": "ParameterList",
                                    "parameters": [],
                                    "src": "4850:2:4"
                                },
                                "returnParameters": {
                                    "id": 1313,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 1312,
                                            "mutability": "mutable",
                                            "name": "",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 1326,
                                            "src": "4883:13:4",
                                            "stateVariable": false,
                                            "storageLocation": "memory",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_string_memory_ptr",
                                                "typeString": "string"
                                            },
                                            "typeName": {
                                                "id": 1311,
                                                "name": "string",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "4883:6:4",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_string_storage_ptr",
                                                    "typeString": "string"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "4882:15:4"
                                },
                                "scope": 2116,
                                "src": "4835:135:4",
                                "stateMutability": "view",
                                "virtual": false,
                                "visibility": "public"
                            },
                            {
                                "body": {
                                    "id": 1336,
                                    "nodeType": "Block",
                                    "src": "5038:42:4",
                                    "statements": [
                                        {
                                            "expression": {
                                                "arguments": [
                                                    {
                                                        "id": 1333,
                                                        "name": "wrapped",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 1205,
                                                        "src": "5064:7:4",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_contract$_IERC20_$2809",
                                                            "typeString": "contract IERC20"
                                                        }
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_contract$_IERC20_$2809",
                                                            "typeString": "contract IERC20"
                                                        }
                                                    ],
                                                    "id": 1332,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "lValueRequested": false,
                                                    "nodeType": "ElementaryTypeNameExpression",
                                                    "src": "5056:7:4",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_type$_t_address_$",
                                                        "typeString": "type(address)"
                                                    },
                                                    "typeName": {
                                                        "id": 1331,
                                                        "name": "address",
                                                        "nodeType": "ElementaryTypeName",
                                                        "src": "5056:7:4",
                                                        "typeDescriptions": {}
                                                    }
                                                },
                                                "id": 1334,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "typeConversion",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "5056:16:4",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            "functionReturnParameters": 1330,
                                            "id": 1335,
                                            "nodeType": "Return",
                                            "src": "5049:23:4"
                                        }
                                    ]
                                },
                                "functionSelector": "58047913",
                                "id": 1337,
                                "implemented": true,
                                "kind": "function",
                                "modifiers": [],
                                "name": "getWrappedContract",
                                "nodeType": "FunctionDefinition",
                                "parameters": {
                                    "id": 1327,
                                    "nodeType": "ParameterList",
                                    "parameters": [],
                                    "src": "5005:2:4"
                                },
                                "returnParameters": {
                                    "id": 1330,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 1329,
                                            "mutability": "mutable",
                                            "name": "",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 1337,
                                            "src": "5029:7:4",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            },
                                            "typeName": {
                                                "id": 1328,
                                                "name": "address",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "5029:7:4",
                                                "stateMutability": "nonpayable",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "5028:9:4"
                                },
                                "scope": 2116,
                                "src": "4978:102:4",
                                "stateMutability": "view",
                                "virtual": false,
                                "visibility": "public"
                            },
                            {
                                "baseFunctions": [
                                    2820
                                ],
                                "body": {
                                    "id": 1362,
                                    "nodeType": "Block",
                                    "src": "5175:89:4",
                                    "statements": [
                                        {
                                            "expression": {
                                                "arguments": [
                                                    {
                                                        "commonType": {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        },
                                                        "id": 1354,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "leftExpression": {
                                                            "expression": {
                                                                "id": 1348,
                                                                "name": "msg",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [],
                                                                "referencedDeclaration": -15,
                                                                "src": "5194:3:4",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_magic_message",
                                                                    "typeString": "msg"
                                                                }
                                                            },
                                                            "id": 1349,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": false,
                                                            "lValueRequested": false,
                                                            "memberName": "sender",
                                                            "nodeType": "MemberAccess",
                                                            "src": "5194:10:4",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_address_payable",
                                                                "typeString": "address payable"
                                                            }
                                                        },
                                                        "nodeType": "BinaryOperation",
                                                        "operator": "==",
                                                        "rightExpression": {
                                                            "arguments": [
                                                                {
                                                                    "id": 1352,
                                                                    "name": "wrapped",
                                                                    "nodeType": "Identifier",
                                                                    "overloadedDeclarations": [],
                                                                    "referencedDeclaration": 1205,
                                                                    "src": "5216:7:4",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_contract$_IERC20_$2809",
                                                                        "typeString": "contract IERC20"
                                                                    }
                                                                }
                                                            ],
                                                            "expression": {
                                                                "argumentTypes": [
                                                                    {
                                                                        "typeIdentifier": "t_contract$_IERC20_$2809",
                                                                        "typeString": "contract IERC20"
                                                                    }
                                                                ],
                                                                "id": 1351,
                                                                "isConstant": false,
                                                                "isLValue": false,
                                                                "isPure": true,
                                                                "lValueRequested": false,
                                                                "nodeType": "ElementaryTypeNameExpression",
                                                                "src": "5208:7:4",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_type$_t_address_$",
                                                                    "typeString": "type(address)"
                                                                },
                                                                "typeName": {
                                                                    "id": 1350,
                                                                    "name": "address",
                                                                    "nodeType": "ElementaryTypeName",
                                                                    "src": "5208:7:4",
                                                                    "typeDescriptions": {}
                                                                }
                                                            },
                                                            "id": 1353,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": false,
                                                            "kind": "typeConversion",
                                                            "lValueRequested": false,
                                                            "names": [],
                                                            "nodeType": "FunctionCall",
                                                            "src": "5208:16:4",
                                                            "tryCall": false,
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_address",
                                                                "typeString": "address"
                                                            }
                                                        },
                                                        "src": "5194:30:4",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_bool",
                                                            "typeString": "bool"
                                                        }
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_bool",
                                                            "typeString": "bool"
                                                        }
                                                    ],
                                                    "id": 1347,
                                                    "name": "require",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [
                                                        -18,
                                                        -18
                                                    ],
                                                    "referencedDeclaration": -18,
                                                    "src": "5186:7:4",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                                                        "typeString": "function (bool) pure"
                                                    }
                                                },
                                                "id": 1355,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "5186:39:4",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_tuple$__$",
                                                    "typeString": "tuple()"
                                                }
                                            },
                                            "id": 1356,
                                            "nodeType": "ExpressionStatement",
                                            "src": "5186:39:4"
                                        },
                                        {
                                            "expression": {
                                                "arguments": [
                                                    {
                                                        "id": 1358,
                                                        "name": "from",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 1339,
                                                        "src": "5243:4:4",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        }
                                                    },
                                                    {
                                                        "id": 1359,
                                                        "name": "amount",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 1341,
                                                        "src": "5249:6:4",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        }
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        },
                                                        {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        }
                                                    ],
                                                    "id": 1357,
                                                    "name": "dowrap",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 1413,
                                                    "src": "5236:6:4",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                                                        "typeString": "function (address,uint256)"
                                                    }
                                                },
                                                "id": 1360,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "5236:20:4",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_tuple$__$",
                                                    "typeString": "tuple()"
                                                }
                                            },
                                            "id": 1361,
                                            "nodeType": "ExpressionStatement",
                                            "src": "5236:20:4"
                                        }
                                    ]
                                },
                                "functionSelector": "a4c0ed36",
                                "id": 1363,
                                "implemented": true,
                                "kind": "function",
                                "modifiers": [],
                                "name": "onTokenTransfer",
                                "nodeType": "FunctionDefinition",
                                "overrides": {
                                    "id": 1345,
                                    "nodeType": "OverrideSpecifier",
                                    "overrides": [],
                                    "src": "5159:8:4"
                                },
                                "parameters": {
                                    "id": 1344,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 1339,
                                            "mutability": "mutable",
                                            "name": "from",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 1363,
                                            "src": "5113:12:4",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            },
                                            "typeName": {
                                                "id": 1338,
                                                "name": "address",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "5113:7:4",
                                                "stateMutability": "nonpayable",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            "visibility": "internal"
                                        },
                                        {
                                            "constant": false,
                                            "id": 1341,
                                            "mutability": "mutable",
                                            "name": "amount",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 1363,
                                            "src": "5127:14:4",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            },
                                            "typeName": {
                                                "id": 1340,
                                                "name": "uint256",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "5127:7:4",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            },
                                            "visibility": "internal"
                                        },
                                        {
                                            "constant": false,
                                            "id": 1343,
                                            "mutability": "mutable",
                                            "name": "",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 1363,
                                            "src": "5143:14:4",
                                            "stateVariable": false,
                                            "storageLocation": "calldata",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_bytes_calldata_ptr",
                                                "typeString": "bytes"
                                            },
                                            "typeName": {
                                                "id": 1342,
                                                "name": "bytes",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "5143:5:4",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bytes_storage_ptr",
                                                    "typeString": "bytes"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "5112:46:4"
                                },
                                "returnParameters": {
                                    "id": 1346,
                                    "nodeType": "ParameterList",
                                    "parameters": [],
                                    "src": "5175:0:4"
                                },
                                "scope": 2116,
                                "src": "5088:176:4",
                                "stateMutability": "nonpayable",
                                "virtual": false,
                                "visibility": "public"
                            },
                            {
                                "body": {
                                    "id": 1392,
                                    "nodeType": "Block",
                                    "src": "5461:146:4",
                                    "statements": [
                                        {
                                            "expression": {
                                                "arguments": [
                                                    {
                                                        "arguments": [
                                                            {
                                                                "expression": {
                                                                    "id": 1376,
                                                                    "name": "msg",
                                                                    "nodeType": "Identifier",
                                                                    "overloadedDeclarations": [],
                                                                    "referencedDeclaration": -15,
                                                                    "src": "5501:3:4",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_magic_message",
                                                                        "typeString": "msg"
                                                                    }
                                                                },
                                                                "id": 1377,
                                                                "isConstant": false,
                                                                "isLValue": false,
                                                                "isPure": false,
                                                                "lValueRequested": false,
                                                                "memberName": "sender",
                                                                "nodeType": "MemberAccess",
                                                                "src": "5501:10:4",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_address_payable",
                                                                    "typeString": "address payable"
                                                                }
                                                            },
                                                            {
                                                                "arguments": [
                                                                    {
                                                                        "id": 1380,
                                                                        "name": "this",
                                                                        "nodeType": "Identifier",
                                                                        "overloadedDeclarations": [],
                                                                        "referencedDeclaration": -28,
                                                                        "src": "5521:4:4",
                                                                        "typeDescriptions": {
                                                                            "typeIdentifier": "t_contract$_ERC20Draggable_$2116",
                                                                            "typeString": "contract ERC20Draggable"
                                                                        }
                                                                    }
                                                                ],
                                                                "expression": {
                                                                    "argumentTypes": [
                                                                        {
                                                                            "typeIdentifier": "t_contract$_ERC20Draggable_$2116",
                                                                            "typeString": "contract ERC20Draggable"
                                                                        }
                                                                    ],
                                                                    "id": 1379,
                                                                    "isConstant": false,
                                                                    "isLValue": false,
                                                                    "isPure": true,
                                                                    "lValueRequested": false,
                                                                    "nodeType": "ElementaryTypeNameExpression",
                                                                    "src": "5513:7:4",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_type$_t_address_$",
                                                                        "typeString": "type(address)"
                                                                    },
                                                                    "typeName": {
                                                                        "id": 1378,
                                                                        "name": "address",
                                                                        "nodeType": "ElementaryTypeName",
                                                                        "src": "5513:7:4",
                                                                        "typeDescriptions": {}
                                                                    }
                                                                },
                                                                "id": 1381,
                                                                "isConstant": false,
                                                                "isLValue": false,
                                                                "isPure": false,
                                                                "kind": "typeConversion",
                                                                "lValueRequested": false,
                                                                "names": [],
                                                                "nodeType": "FunctionCall",
                                                                "src": "5513:13:4",
                                                                "tryCall": false,
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_address",
                                                                    "typeString": "address"
                                                                }
                                                            },
                                                            {
                                                                "id": 1382,
                                                                "name": "amount",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [],
                                                                "referencedDeclaration": 1368,
                                                                "src": "5528:6:4",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_uint256",
                                                                    "typeString": "uint256"
                                                                }
                                                            }
                                                        ],
                                                        "expression": {
                                                            "argumentTypes": [
                                                                {
                                                                    "typeIdentifier": "t_address_payable",
                                                                    "typeString": "address payable"
                                                                },
                                                                {
                                                                    "typeIdentifier": "t_address",
                                                                    "typeString": "address"
                                                                },
                                                                {
                                                                    "typeIdentifier": "t_uint256",
                                                                    "typeString": "uint256"
                                                                }
                                                            ],
                                                            "expression": {
                                                                "id": 1374,
                                                                "name": "wrapped",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [],
                                                                "referencedDeclaration": 1205,
                                                                "src": "5480:7:4",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_contract$_IERC20_$2809",
                                                                    "typeString": "contract IERC20"
                                                                }
                                                            },
                                                            "id": 1375,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": false,
                                                            "lValueRequested": false,
                                                            "memberName": "transferFrom",
                                                            "nodeType": "MemberAccess",
                                                            "referencedDeclaration": 2790,
                                                            "src": "5480:20:4",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                                                                "typeString": "function (address,address,uint256) external returns (bool)"
                                                            }
                                                        },
                                                        "id": 1383,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "kind": "functionCall",
                                                        "lValueRequested": false,
                                                        "names": [],
                                                        "nodeType": "FunctionCall",
                                                        "src": "5480:55:4",
                                                        "tryCall": false,
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_bool",
                                                            "typeString": "bool"
                                                        }
                                                    },
                                                    {
                                                        "hexValue": "5368617265207472616e73666572206661696c6564",
                                                        "id": 1384,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": true,
                                                        "kind": "string",
                                                        "lValueRequested": false,
                                                        "nodeType": "Literal",
                                                        "src": "5537:23:4",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_stringliteral_88013c0123e46c1d2d6b00361d8c3785c8d731e14611952c8ea392e61d6e6524",
                                                            "typeString": "literal_string \"Share transfer failed\""
                                                        },
                                                        "value": "Share transfer failed"
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_bool",
                                                            "typeString": "bool"
                                                        },
                                                        {
                                                            "typeIdentifier": "t_stringliteral_88013c0123e46c1d2d6b00361d8c3785c8d731e14611952c8ea392e61d6e6524",
                                                            "typeString": "literal_string \"Share transfer failed\""
                                                        }
                                                    ],
                                                    "id": 1373,
                                                    "name": "require",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [
                                                        -18,
                                                        -18
                                                    ],
                                                    "referencedDeclaration": -18,
                                                    "src": "5472:7:4",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                                        "typeString": "function (bool,string memory) pure"
                                                    }
                                                },
                                                "id": 1385,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "5472:89:4",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_tuple$__$",
                                                    "typeString": "tuple()"
                                                }
                                            },
                                            "id": 1386,
                                            "nodeType": "ExpressionStatement",
                                            "src": "5472:89:4"
                                        },
                                        {
                                            "expression": {
                                                "arguments": [
                                                    {
                                                        "id": 1388,
                                                        "name": "shareholder",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 1366,
                                                        "src": "5579:11:4",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        }
                                                    },
                                                    {
                                                        "id": 1389,
                                                        "name": "amount",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 1368,
                                                        "src": "5592:6:4",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        }
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        },
                                                        {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        }
                                                    ],
                                                    "id": 1387,
                                                    "name": "dowrap",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 1413,
                                                    "src": "5572:6:4",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                                                        "typeString": "function (address,uint256)"
                                                    }
                                                },
                                                "id": 1390,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "5572:27:4",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_tuple$__$",
                                                    "typeString": "tuple()"
                                                }
                                            },
                                            "id": 1391,
                                            "nodeType": "ExpressionStatement",
                                            "src": "5572:27:4"
                                        }
                                    ]
                                },
                                "documentation": {
                                    "id": 1364,
                                    "nodeType": "StructuredDocumentation",
                                    "src": "5272:108:4",
                                    "text": "Increases the number of drag-along tokens. Requires minter to deposit an equal amount of share tokens "
                                },
                                "functionSelector": "bf376c7a",
                                "id": 1393,
                                "implemented": true,
                                "kind": "function",
                                "modifiers": [
                                    {
                                        "arguments": [],
                                        "id": 1371,
                                        "modifierName": {
                                            "id": 1370,
                                            "name": "noOfferPending",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 2115,
                                            "src": "5444:14:4",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_modifier$__$",
                                                "typeString": "modifier ()"
                                            }
                                        },
                                        "nodeType": "ModifierInvocation",
                                        "src": "5444:16:4"
                                    }
                                ],
                                "name": "wrap",
                                "nodeType": "FunctionDefinition",
                                "parameters": {
                                    "id": 1369,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 1366,
                                            "mutability": "mutable",
                                            "name": "shareholder",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 1393,
                                            "src": "5400:19:4",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            },
                                            "typeName": {
                                                "id": 1365,
                                                "name": "address",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "5400:7:4",
                                                "stateMutability": "nonpayable",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            "visibility": "internal"
                                        },
                                        {
                                            "constant": false,
                                            "id": 1368,
                                            "mutability": "mutable",
                                            "name": "amount",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 1393,
                                            "src": "5421:14:4",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            },
                                            "typeName": {
                                                "id": 1367,
                                                "name": "uint256",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "5421:7:4",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "5399:37:4"
                                },
                                "returnParameters": {
                                    "id": 1372,
                                    "nodeType": "ParameterList",
                                    "parameters": [],
                                    "src": "5461:0:4"
                                },
                                "scope": 2116,
                                "src": "5386:221:4",
                                "stateMutability": "nonpayable",
                                "virtual": false,
                                "visibility": "public"
                            },
                            {
                                "body": {
                                    "id": 1412,
                                    "nodeType": "Block",
                                    "src": "5694:104:4",
                                    "statements": [
                                        {
                                            "expression": {
                                                "arguments": [
                                                    {
                                                        "id": 1403,
                                                        "name": "active",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 1228,
                                                        "src": "5713:6:4",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_bool",
                                                            "typeString": "bool"
                                                        }
                                                    },
                                                    {
                                                        "hexValue": "436f6e7472616374206e6f742061637469766520616e79206d6f72652e",
                                                        "id": 1404,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": true,
                                                        "kind": "string",
                                                        "lValueRequested": false,
                                                        "nodeType": "Literal",
                                                        "src": "5721:31:4",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_stringliteral_49e7eb7491093a11a07a7fa7bff5afc1554213a9da8755a60592759a4bb34952",
                                                            "typeString": "literal_string \"Contract not active any more.\""
                                                        },
                                                        "value": "Contract not active any more."
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_bool",
                                                            "typeString": "bool"
                                                        },
                                                        {
                                                            "typeIdentifier": "t_stringliteral_49e7eb7491093a11a07a7fa7bff5afc1554213a9da8755a60592759a4bb34952",
                                                            "typeString": "literal_string \"Contract not active any more.\""
                                                        }
                                                    ],
                                                    "id": 1402,
                                                    "name": "require",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [
                                                        -18,
                                                        -18
                                                    ],
                                                    "referencedDeclaration": -18,
                                                    "src": "5705:7:4",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                                        "typeString": "function (bool,string memory) pure"
                                                    }
                                                },
                                                "id": 1405,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "5705:48:4",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_tuple$__$",
                                                    "typeString": "tuple()"
                                                }
                                            },
                                            "id": 1406,
                                            "nodeType": "ExpressionStatement",
                                            "src": "5705:48:4"
                                        },
                                        {
                                            "expression": {
                                                "arguments": [
                                                    {
                                                        "id": 1408,
                                                        "name": "shareholder",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 1395,
                                                        "src": "5770:11:4",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        }
                                                    },
                                                    {
                                                        "id": 1409,
                                                        "name": "amount",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 1397,
                                                        "src": "5783:6:4",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        }
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        },
                                                        {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        }
                                                    ],
                                                    "id": 1407,
                                                    "name": "_mint",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [
                                                        2001
                                                    ],
                                                    "referencedDeclaration": 2001,
                                                    "src": "5764:5:4",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                                                        "typeString": "function (address,uint256)"
                                                    }
                                                },
                                                "id": 1410,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "5764:26:4",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_tuple$__$",
                                                    "typeString": "tuple()"
                                                }
                                            },
                                            "id": 1411,
                                            "nodeType": "ExpressionStatement",
                                            "src": "5764:26:4"
                                        }
                                    ]
                                },
                                "id": 1413,
                                "implemented": true,
                                "kind": "function",
                                "modifiers": [
                                    {
                                        "arguments": [],
                                        "id": 1400,
                                        "modifierName": {
                                            "id": 1399,
                                            "name": "noOfferPending",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 2115,
                                            "src": "5677:14:4",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_modifier$__$",
                                                "typeString": "modifier ()"
                                            }
                                        },
                                        "nodeType": "ModifierInvocation",
                                        "src": "5677:16:4"
                                    }
                                ],
                                "name": "dowrap",
                                "nodeType": "FunctionDefinition",
                                "parameters": {
                                    "id": 1398,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 1395,
                                            "mutability": "mutable",
                                            "name": "shareholder",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 1413,
                                            "src": "5631:19:4",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            },
                                            "typeName": {
                                                "id": 1394,
                                                "name": "address",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "5631:7:4",
                                                "stateMutability": "nonpayable",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            "visibility": "internal"
                                        },
                                        {
                                            "constant": false,
                                            "id": 1397,
                                            "mutability": "mutable",
                                            "name": "amount",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 1413,
                                            "src": "5652:14:4",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            },
                                            "typeName": {
                                                "id": 1396,
                                                "name": "uint256",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "5652:7:4",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "5630:37:4"
                                },
                                "returnParameters": {
                                    "id": 1401,
                                    "nodeType": "ParameterList",
                                    "parameters": [],
                                    "src": "5694:0:4"
                                },
                                "scope": 2116,
                                "src": "5615:183:4",
                                "stateMutability": "nonpayable",
                                "virtual": false,
                                "visibility": "internal"
                            },
                            {
                                "body": {
                                    "id": 1458,
                                    "nodeType": "Block",
                                    "src": "5968:373:4",
                                    "statements": [
                                        {
                                            "expression": {
                                                "arguments": [
                                                    {
                                                        "id": 1425,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "nodeType": "UnaryOperation",
                                                        "operator": "!",
                                                        "prefix": true,
                                                        "src": "5987:7:4",
                                                        "subExpression": {
                                                            "id": 1424,
                                                            "name": "active",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 1228,
                                                            "src": "5988:6:4",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_bool",
                                                                "typeString": "bool"
                                                            }
                                                        },
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_bool",
                                                            "typeString": "bool"
                                                        }
                                                    },
                                                    {
                                                        "hexValue": "4173206c6f6e672061732074686520636f6e7472616374206973206163746976652c20796f752061726520626f756e6420746f206974",
                                                        "id": 1426,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": true,
                                                        "kind": "string",
                                                        "lValueRequested": false,
                                                        "nodeType": "Literal",
                                                        "src": "5996:56:4",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_stringliteral_65dfed4bc17ee28f874511525a4c741dd766505e5ef0e8d12460fa9b39aca7e9",
                                                            "typeString": "literal_string \"As long as the contract is active, you are bound to it\""
                                                        },
                                                        "value": "As long as the contract is active, you are bound to it"
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_bool",
                                                            "typeString": "bool"
                                                        },
                                                        {
                                                            "typeIdentifier": "t_stringliteral_65dfed4bc17ee28f874511525a4c741dd766505e5ef0e8d12460fa9b39aca7e9",
                                                            "typeString": "literal_string \"As long as the contract is active, you are bound to it\""
                                                        }
                                                    ],
                                                    "id": 1423,
                                                    "name": "require",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [
                                                        -18,
                                                        -18
                                                    ],
                                                    "referencedDeclaration": -18,
                                                    "src": "5979:7:4",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                                        "typeString": "function (bool,string memory) pure"
                                                    }
                                                },
                                                "id": 1427,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "5979:74:4",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_tuple$__$",
                                                    "typeString": "tuple()"
                                                }
                                            },
                                            "id": 1428,
                                            "nodeType": "ExpressionStatement",
                                            "src": "5979:74:4"
                                        },
                                        {
                                            "expression": {
                                                "arguments": [
                                                    {
                                                        "expression": {
                                                            "id": 1430,
                                                            "name": "msg",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": -15,
                                                            "src": "6070:3:4",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_magic_message",
                                                                "typeString": "msg"
                                                            }
                                                        },
                                                        "id": 1431,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "memberName": "sender",
                                                        "nodeType": "MemberAccess",
                                                        "src": "6070:10:4",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_address_payable",
                                                            "typeString": "address payable"
                                                        }
                                                    },
                                                    {
                                                        "id": 1432,
                                                        "name": "amount",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 1416,
                                                        "src": "6082:6:4",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        }
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_address_payable",
                                                            "typeString": "address payable"
                                                        },
                                                        {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        }
                                                    ],
                                                    "id": 1429,
                                                    "name": "_burn",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [
                                                        2067
                                                    ],
                                                    "referencedDeclaration": 2067,
                                                    "src": "6064:5:4",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                                                        "typeString": "function (address,uint256)"
                                                    }
                                                },
                                                "id": 1433,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "6064:25:4",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_tuple$__$",
                                                    "typeString": "tuple()"
                                                }
                                            },
                                            "id": 1434,
                                            "nodeType": "ExpressionStatement",
                                            "src": "6064:25:4"
                                        },
                                        {
                                            "assignments": [
                                                1436
                                            ],
                                            "declarations": [
                                                {
                                                    "constant": false,
                                                    "id": 1436,
                                                    "mutability": "mutable",
                                                    "name": "unwrappedTokens",
                                                    "nodeType": "VariableDeclaration",
                                                    "scope": 1458,
                                                    "src": "6100:23:4",
                                                    "stateVariable": false,
                                                    "storageLocation": "default",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    },
                                                    "typeName": {
                                                        "id": 1435,
                                                        "name": "uint256",
                                                        "nodeType": "ElementaryTypeName",
                                                        "src": "6100:7:4",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        }
                                                    },
                                                    "visibility": "internal"
                                                }
                                            ],
                                            "id": 1441,
                                            "initialValue": {
                                                "arguments": [
                                                    {
                                                        "id": 1439,
                                                        "name": "unwrapConversionFactor",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 1208,
                                                        "src": "6137:22:4",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        }
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        }
                                                    ],
                                                    "expression": {
                                                        "id": 1437,
                                                        "name": "amount",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 1416,
                                                        "src": "6126:6:4",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        }
                                                    },
                                                    "id": 1438,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "memberName": "mul",
                                                    "nodeType": "MemberAccess",
                                                    "referencedDeclaration": 2866,
                                                    "src": "6126:10:4",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                                                    }
                                                },
                                                "id": 1440,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "6126:34:4",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            },
                                            "nodeType": "VariableDeclarationStatement",
                                            "src": "6100:60:4"
                                        },
                                        {
                                            "expression": {
                                                "arguments": [
                                                    {
                                                        "arguments": [
                                                            {
                                                                "expression": {
                                                                    "id": 1445,
                                                                    "name": "msg",
                                                                    "nodeType": "Identifier",
                                                                    "overloadedDeclarations": [],
                                                                    "referencedDeclaration": -15,
                                                                    "src": "6196:3:4",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_magic_message",
                                                                        "typeString": "msg"
                                                                    }
                                                                },
                                                                "id": 1446,
                                                                "isConstant": false,
                                                                "isLValue": false,
                                                                "isPure": false,
                                                                "lValueRequested": false,
                                                                "memberName": "sender",
                                                                "nodeType": "MemberAccess",
                                                                "src": "6196:10:4",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_address_payable",
                                                                    "typeString": "address payable"
                                                                }
                                                            },
                                                            {
                                                                "id": 1447,
                                                                "name": "unwrappedTokens",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [],
                                                                "referencedDeclaration": 1436,
                                                                "src": "6208:15:4",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_uint256",
                                                                    "typeString": "uint256"
                                                                }
                                                            }
                                                        ],
                                                        "expression": {
                                                            "argumentTypes": [
                                                                {
                                                                    "typeIdentifier": "t_address_payable",
                                                                    "typeString": "address payable"
                                                                },
                                                                {
                                                                    "typeIdentifier": "t_uint256",
                                                                    "typeString": "uint256"
                                                                }
                                                            ],
                                                            "expression": {
                                                                "id": 1443,
                                                                "name": "wrapped",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [],
                                                                "referencedDeclaration": 1205,
                                                                "src": "6179:7:4",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_contract$_IERC20_$2809",
                                                                    "typeString": "contract IERC20"
                                                                }
                                                            },
                                                            "id": 1444,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": false,
                                                            "lValueRequested": false,
                                                            "memberName": "transfer",
                                                            "nodeType": "MemberAccess",
                                                            "referencedDeclaration": 2758,
                                                            "src": "6179:16:4",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                                                "typeString": "function (address,uint256) external returns (bool)"
                                                            }
                                                        },
                                                        "id": 1448,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "kind": "functionCall",
                                                        "lValueRequested": false,
                                                        "names": [],
                                                        "nodeType": "FunctionCall",
                                                        "src": "6179:45:4",
                                                        "tryCall": false,
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_bool",
                                                            "typeString": "bool"
                                                        }
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_bool",
                                                            "typeString": "bool"
                                                        }
                                                    ],
                                                    "id": 1442,
                                                    "name": "require",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [
                                                        -18,
                                                        -18
                                                    ],
                                                    "referencedDeclaration": -18,
                                                    "src": "6171:7:4",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                                                        "typeString": "function (bool) pure"
                                                    }
                                                },
                                                "id": 1449,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "6171:54:4",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_tuple$__$",
                                                    "typeString": "tuple()"
                                                }
                                            },
                                            "id": 1450,
                                            "nodeType": "ExpressionStatement",
                                            "src": "6171:54:4"
                                        },
                                        {
                                            "expression": {
                                                "components": [
                                                    {
                                                        "arguments": [
                                                            {
                                                                "id": 1453,
                                                                "name": "wrapped",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [],
                                                                "referencedDeclaration": 1205,
                                                                "src": "6252:7:4",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_contract$_IERC20_$2809",
                                                                    "typeString": "contract IERC20"
                                                                }
                                                            }
                                                        ],
                                                        "expression": {
                                                            "argumentTypes": [
                                                                {
                                                                    "typeIdentifier": "t_contract$_IERC20_$2809",
                                                                    "typeString": "contract IERC20"
                                                                }
                                                            ],
                                                            "id": 1452,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": true,
                                                            "lValueRequested": false,
                                                            "nodeType": "ElementaryTypeNameExpression",
                                                            "src": "6244:7:4",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_type$_t_address_$",
                                                                "typeString": "type(address)"
                                                            },
                                                            "typeName": {
                                                                "id": 1451,
                                                                "name": "address",
                                                                "nodeType": "ElementaryTypeName",
                                                                "src": "6244:7:4",
                                                                "typeDescriptions": {}
                                                            }
                                                        },
                                                        "id": 1454,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "kind": "typeConversion",
                                                        "lValueRequested": false,
                                                        "names": [],
                                                        "nodeType": "FunctionCall",
                                                        "src": "6244:16:4",
                                                        "tryCall": false,
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        }
                                                    },
                                                    {
                                                        "id": 1455,
                                                        "name": "unwrappedTokens",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 1436,
                                                        "src": "6262:15:4",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        }
                                                    }
                                                ],
                                                "id": 1456,
                                                "isConstant": false,
                                                "isInlineArray": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "nodeType": "TupleExpression",
                                                "src": "6243:35:4",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
                                                    "typeString": "tuple(address,uint256)"
                                                }
                                            },
                                            "functionReturnParameters": 1422,
                                            "id": 1457,
                                            "nodeType": "Return",
                                            "src": "6236:42:4"
                                        }
                                    ]
                                },
                                "documentation": {
                                    "id": 1414,
                                    "nodeType": "StructuredDocumentation",
                                    "src": "5806:90:4",
                                    "text": "Decrease the number of drag-along tokens. The user gets back their shares in return "
                                },
                                "functionSelector": "de0e9a3e",
                                "id": 1459,
                                "implemented": true,
                                "kind": "function",
                                "modifiers": [],
                                "name": "unwrap",
                                "nodeType": "FunctionDefinition",
                                "parameters": {
                                    "id": 1417,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 1416,
                                            "mutability": "mutable",
                                            "name": "amount",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 1459,
                                            "src": "5918:14:4",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            },
                                            "typeName": {
                                                "id": 1415,
                                                "name": "uint256",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "5918:7:4",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "5917:16:4"
                                },
                                "returnParameters": {
                                    "id": 1422,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 1419,
                                            "mutability": "mutable",
                                            "name": "",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 1459,
                                            "src": "5950:7:4",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            },
                                            "typeName": {
                                                "id": 1418,
                                                "name": "address",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "5950:7:4",
                                                "stateMutability": "nonpayable",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            "visibility": "internal"
                                        },
                                        {
                                            "constant": false,
                                            "id": 1421,
                                            "mutability": "mutable",
                                            "name": "",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 1459,
                                            "src": "5959:7:4",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            },
                                            "typeName": {
                                                "id": 1420,
                                                "name": "uint256",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "5959:7:4",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "5949:18:4"
                                },
                                "scope": 2116,
                                "src": "5902:439:4",
                                "stateMutability": "nonpayable",
                                "virtual": false,
                                "visibility": "public"
                            },
                            {
                                "body": {
                                    "id": 1482,
                                    "nodeType": "Block",
                                    "src": "6899:127:4",
                                    "statements": [
                                        {
                                            "expression": {
                                                "arguments": [
                                                    {
                                                        "expression": {
                                                            "id": 1466,
                                                            "name": "msg",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": -15,
                                                            "src": "6916:3:4",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_magic_message",
                                                                "typeString": "msg"
                                                            }
                                                        },
                                                        "id": 1467,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "memberName": "sender",
                                                        "nodeType": "MemberAccess",
                                                        "src": "6916:10:4",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_address_payable",
                                                            "typeString": "address payable"
                                                        }
                                                    },
                                                    {
                                                        "id": 1468,
                                                        "name": "amount",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 1462,
                                                        "src": "6928:6:4",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        }
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_address_payable",
                                                            "typeString": "address payable"
                                                        },
                                                        {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        }
                                                    ],
                                                    "id": 1465,
                                                    "name": "_burn",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [
                                                        2067
                                                    ],
                                                    "referencedDeclaration": 2067,
                                                    "src": "6910:5:4",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                                                        "typeString": "function (address,uint256)"
                                                    }
                                                },
                                                "id": 1469,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "6910:25:4",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_tuple$__$",
                                                    "typeString": "tuple()"
                                                }
                                            },
                                            "id": 1470,
                                            "nodeType": "ExpressionStatement",
                                            "src": "6910:25:4"
                                        },
                                        {
                                            "expression": {
                                                "arguments": [
                                                    {
                                                        "arguments": [
                                                            {
                                                                "id": 1478,
                                                                "name": "unwrapConversionFactor",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [],
                                                                "referencedDeclaration": 1208,
                                                                "src": "6994:22:4",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_uint256",
                                                                    "typeString": "uint256"
                                                                }
                                                            }
                                                        ],
                                                        "expression": {
                                                            "argumentTypes": [
                                                                {
                                                                    "typeIdentifier": "t_uint256",
                                                                    "typeString": "uint256"
                                                                }
                                                            ],
                                                            "expression": {
                                                                "id": 1476,
                                                                "name": "amount",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [],
                                                                "referencedDeclaration": 1462,
                                                                "src": "6983:6:4",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_uint256",
                                                                    "typeString": "uint256"
                                                                }
                                                            },
                                                            "id": 1477,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": false,
                                                            "lValueRequested": false,
                                                            "memberName": "mul",
                                                            "nodeType": "MemberAccess",
                                                            "referencedDeclaration": 2866,
                                                            "src": "6983:10:4",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                                                            }
                                                        },
                                                        "id": 1479,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "kind": "functionCall",
                                                        "lValueRequested": false,
                                                        "names": [],
                                                        "nodeType": "FunctionCall",
                                                        "src": "6983:34:4",
                                                        "tryCall": false,
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        }
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        }
                                                    ],
                                                    "expression": {
                                                        "arguments": [
                                                            {
                                                                "arguments": [],
                                                                "expression": {
                                                                    "argumentTypes": [],
                                                                    "id": 1472,
                                                                    "name": "getWrappedContract",
                                                                    "nodeType": "Identifier",
                                                                    "overloadedDeclarations": [],
                                                                    "referencedDeclaration": 1337,
                                                                    "src": "6956:18:4",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                                                        "typeString": "function () view returns (address)"
                                                                    }
                                                                },
                                                                "id": 1473,
                                                                "isConstant": false,
                                                                "isLValue": false,
                                                                "isPure": false,
                                                                "kind": "functionCall",
                                                                "lValueRequested": false,
                                                                "names": [],
                                                                "nodeType": "FunctionCall",
                                                                "src": "6956:20:4",
                                                                "tryCall": false,
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_address",
                                                                    "typeString": "address"
                                                                }
                                                            }
                                                        ],
                                                        "expression": {
                                                            "argumentTypes": [
                                                                {
                                                                    "typeIdentifier": "t_address",
                                                                    "typeString": "address"
                                                                }
                                                            ],
                                                            "id": 1471,
                                                            "name": "IBurnable",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 2128,
                                                            "src": "6946:9:4",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_type$_t_contract$_IBurnable_$2128_$",
                                                                "typeString": "type(contract IBurnable)"
                                                            }
                                                        },
                                                        "id": 1474,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "kind": "typeConversion",
                                                        "lValueRequested": false,
                                                        "names": [],
                                                        "nodeType": "FunctionCall",
                                                        "src": "6946:31:4",
                                                        "tryCall": false,
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_contract$_IBurnable_$2128",
                                                            "typeString": "contract IBurnable"
                                                        }
                                                    },
                                                    "id": 1475,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "memberName": "burn",
                                                    "nodeType": "MemberAccess",
                                                    "referencedDeclaration": 2127,
                                                    "src": "6946:36:4",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                                                        "typeString": "function (uint256) external"
                                                    }
                                                },
                                                "id": 1480,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "6946:72:4",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_tuple$__$",
                                                    "typeString": "tuple()"
                                                }
                                            },
                                            "id": 1481,
                                            "nodeType": "ExpressionStatement",
                                            "src": "6946:72:4"
                                        }
                                    ]
                                },
                                "documentation": {
                                    "id": 1460,
                                    "nodeType": "StructuredDocumentation",
                                    "src": "6349:507:4",
                                    "text": " Burns both the token itself as well as the wrapped token!\n If you want to get out of the shareholder agreement, use unwrap after it has been\n deactivated by a majority vote or acquisition.\n Burning only works if wrapped token supports burning. Also, the exact meaning of this\n operation might depend on the circumstances. Burning and reussing the wrapped token\n does not free the sender from the legal obligations of the shareholder agreement."
                                },
                                "functionSelector": "42966c68",
                                "id": 1483,
                                "implemented": true,
                                "kind": "function",
                                "modifiers": [],
                                "name": "burn",
                                "nodeType": "FunctionDefinition",
                                "parameters": {
                                    "id": 1463,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 1462,
                                            "mutability": "mutable",
                                            "name": "amount",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 1483,
                                            "src": "6876:14:4",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            },
                                            "typeName": {
                                                "id": 1461,
                                                "name": "uint256",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "6876:7:4",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "6875:16:4"
                                },
                                "returnParameters": {
                                    "id": 1464,
                                    "nodeType": "ParameterList",
                                    "parameters": [],
                                    "src": "6899:0:4"
                                },
                                "scope": 2116,
                                "src": "6862:164:4",
                                "stateMutability": "nonpayable",
                                "virtual": false,
                                "visibility": "public"
                            },
                            {
                                "body": {
                                    "id": 1609,
                                    "nodeType": "Block",
                                    "src": "7239:1096:4",
                                    "statements": [
                                        {
                                            "expression": {
                                                "arguments": [
                                                    {
                                                        "id": 1492,
                                                        "name": "active",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 1228,
                                                        "src": "7258:6:4",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_bool",
                                                            "typeString": "bool"
                                                        }
                                                    },
                                                    {
                                                        "hexValue": "416e206163636570746564206f6666657220657869737473",
                                                        "id": 1493,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": true,
                                                        "kind": "string",
                                                        "lValueRequested": false,
                                                        "nodeType": "Literal",
                                                        "src": "7266:26:4",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_stringliteral_f360e2cb44f10f3c4e92eba0a314b9cc4120d8e2137e93d52317b98d6b8f79d7",
                                                            "typeString": "literal_string \"An accepted offer exists\""
                                                        },
                                                        "value": "An accepted offer exists"
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_bool",
                                                            "typeString": "bool"
                                                        },
                                                        {
                                                            "typeIdentifier": "t_stringliteral_f360e2cb44f10f3c4e92eba0a314b9cc4120d8e2137e93d52317b98d6b8f79d7",
                                                            "typeString": "literal_string \"An accepted offer exists\""
                                                        }
                                                    ],
                                                    "id": 1491,
                                                    "name": "require",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [
                                                        -18,
                                                        -18
                                                    ],
                                                    "referencedDeclaration": -18,
                                                    "src": "7250:7:4",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                                        "typeString": "function (bool,string memory) pure"
                                                    }
                                                },
                                                "id": 1494,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "7250:43:4",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_tuple$__$",
                                                    "typeString": "tuple()"
                                                }
                                            },
                                            "id": 1495,
                                            "nodeType": "ExpressionStatement",
                                            "src": "7250:43:4"
                                        },
                                        {
                                            "assignments": [
                                                1497
                                            ],
                                            "declarations": [
                                                {
                                                    "constant": false,
                                                    "id": 1497,
                                                    "mutability": "mutable",
                                                    "name": "totalEquity",
                                                    "nodeType": "VariableDeclaration",
                                                    "scope": 1609,
                                                    "src": "7304:19:4",
                                                    "stateVariable": false,
                                                    "storageLocation": "default",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    },
                                                    "typeName": {
                                                        "id": 1496,
                                                        "name": "uint256",
                                                        "nodeType": "ElementaryTypeName",
                                                        "src": "7304:7:4",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        }
                                                    },
                                                    "visibility": "internal"
                                                }
                                            ],
                                            "id": 1504,
                                            "initialValue": {
                                                "arguments": [],
                                                "expression": {
                                                    "argumentTypes": [],
                                                    "expression": {
                                                        "arguments": [
                                                            {
                                                                "arguments": [],
                                                                "expression": {
                                                                    "argumentTypes": [],
                                                                    "id": 1499,
                                                                    "name": "getWrappedContract",
                                                                    "nodeType": "Identifier",
                                                                    "overloadedDeclarations": [],
                                                                    "referencedDeclaration": 1337,
                                                                    "src": "7334:18:4",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                                                        "typeString": "function () view returns (address)"
                                                                    }
                                                                },
                                                                "id": 1500,
                                                                "isConstant": false,
                                                                "isLValue": false,
                                                                "isPure": false,
                                                                "kind": "functionCall",
                                                                "lValueRequested": false,
                                                                "names": [],
                                                                "nodeType": "FunctionCall",
                                                                "src": "7334:20:4",
                                                                "tryCall": false,
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_address",
                                                                    "typeString": "address"
                                                                }
                                                            }
                                                        ],
                                                        "expression": {
                                                            "argumentTypes": [
                                                                {
                                                                    "typeIdentifier": "t_address",
                                                                    "typeString": "address"
                                                                }
                                                            ],
                                                            "id": 1498,
                                                            "name": "IShares",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 2122,
                                                            "src": "7326:7:4",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_type$_t_contract$_IShares_$2122_$",
                                                                "typeString": "type(contract IShares)"
                                                            }
                                                        },
                                                        "id": 1501,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "kind": "typeConversion",
                                                        "lValueRequested": false,
                                                        "names": [],
                                                        "nodeType": "FunctionCall",
                                                        "src": "7326:29:4",
                                                        "tryCall": false,
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_contract$_IShares_$2122",
                                                            "typeString": "contract IShares"
                                                        }
                                                    },
                                                    "id": 1502,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "memberName": "totalShares",
                                                    "nodeType": "MemberAccess",
                                                    "referencedDeclaration": 2121,
                                                    "src": "7326:41:4",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_function_external_nonpayable$__$returns$_t_uint256_$",
                                                        "typeString": "function () external returns (uint256)"
                                                    }
                                                },
                                                "id": 1503,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "7326:43:4",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            },
                                            "nodeType": "VariableDeclarationStatement",
                                            "src": "7304:65:4"
                                        },
                                        {
                                            "assignments": [
                                                1506
                                            ],
                                            "declarations": [
                                                {
                                                    "constant": false,
                                                    "id": 1506,
                                                    "mutability": "mutable",
                                                    "name": "buyer",
                                                    "nodeType": "VariableDeclaration",
                                                    "scope": 1609,
                                                    "src": "7380:13:4",
                                                    "stateVariable": false,
                                                    "storageLocation": "default",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_address",
                                                        "typeString": "address"
                                                    },
                                                    "typeName": {
                                                        "id": 1505,
                                                        "name": "address",
                                                        "nodeType": "ElementaryTypeName",
                                                        "src": "7380:7:4",
                                                        "stateMutability": "nonpayable",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        }
                                                    },
                                                    "visibility": "internal"
                                                }
                                            ],
                                            "id": 1509,
                                            "initialValue": {
                                                "expression": {
                                                    "id": 1507,
                                                    "name": "msg",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": -15,
                                                    "src": "7396:3:4",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_magic_message",
                                                        "typeString": "msg"
                                                    }
                                                },
                                                "id": 1508,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberName": "sender",
                                                "nodeType": "MemberAccess",
                                                "src": "7396:10:4",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address_payable",
                                                    "typeString": "address payable"
                                                }
                                            },
                                            "nodeType": "VariableDeclarationStatement",
                                            "src": "7380:26:4"
                                        },
                                        {
                                            "expression": {
                                                "arguments": [
                                                    {
                                                        "commonType": {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        },
                                                        "id": 1520,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "leftExpression": {
                                                            "arguments": [],
                                                            "expression": {
                                                                "argumentTypes": [],
                                                                "id": 1511,
                                                                "name": "totalSupply",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [],
                                                                "referencedDeclaration": 760,
                                                                "src": "7427:11:4",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                                                    "typeString": "function () view returns (uint256)"
                                                                }
                                                            },
                                                            "id": 1512,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": false,
                                                            "kind": "functionCall",
                                                            "lValueRequested": false,
                                                            "names": [],
                                                            "nodeType": "FunctionCall",
                                                            "src": "7427:13:4",
                                                            "tryCall": false,
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_uint256",
                                                                "typeString": "uint256"
                                                            }
                                                        },
                                                        "nodeType": "BinaryOperation",
                                                        "operator": ">=",
                                                        "rightExpression": {
                                                            "arguments": [
                                                                {
                                                                    "hexValue": "3130303030",
                                                                    "id": 1518,
                                                                    "isConstant": false,
                                                                    "isLValue": false,
                                                                    "isPure": true,
                                                                    "kind": "number",
                                                                    "lValueRequested": false,
                                                                    "nodeType": "Literal",
                                                                    "src": "7486:5:4",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_rational_10000_by_1",
                                                                        "typeString": "int_const 10000"
                                                                    },
                                                                    "value": "10000"
                                                                }
                                                            ],
                                                            "expression": {
                                                                "argumentTypes": [
                                                                    {
                                                                        "typeIdentifier": "t_rational_10000_by_1",
                                                                        "typeString": "int_const 10000"
                                                                    }
                                                                ],
                                                                "expression": {
                                                                    "arguments": [
                                                                        {
                                                                            "id": 1515,
                                                                            "name": "MIN_DRAG_ALONG_QUOTA",
                                                                            "nodeType": "Identifier",
                                                                            "overloadedDeclarations": [],
                                                                            "referencedDeclaration": 1225,
                                                                            "src": "7460:20:4",
                                                                            "typeDescriptions": {
                                                                                "typeIdentifier": "t_uint256",
                                                                                "typeString": "uint256"
                                                                            }
                                                                        }
                                                                    ],
                                                                    "expression": {
                                                                        "argumentTypes": [
                                                                            {
                                                                                "typeIdentifier": "t_uint256",
                                                                                "typeString": "uint256"
                                                                            }
                                                                        ],
                                                                        "expression": {
                                                                            "id": 1513,
                                                                            "name": "totalEquity",
                                                                            "nodeType": "Identifier",
                                                                            "overloadedDeclarations": [],
                                                                            "referencedDeclaration": 1497,
                                                                            "src": "7444:11:4",
                                                                            "typeDescriptions": {
                                                                                "typeIdentifier": "t_uint256",
                                                                                "typeString": "uint256"
                                                                            }
                                                                        },
                                                                        "id": 1514,
                                                                        "isConstant": false,
                                                                        "isLValue": false,
                                                                        "isPure": false,
                                                                        "lValueRequested": false,
                                                                        "memberName": "mul",
                                                                        "nodeType": "MemberAccess",
                                                                        "referencedDeclaration": 2866,
                                                                        "src": "7444:15:4",
                                                                        "typeDescriptions": {
                                                                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                                                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                                                                        }
                                                                    },
                                                                    "id": 1516,
                                                                    "isConstant": false,
                                                                    "isLValue": false,
                                                                    "isPure": false,
                                                                    "kind": "functionCall",
                                                                    "lValueRequested": false,
                                                                    "names": [],
                                                                    "nodeType": "FunctionCall",
                                                                    "src": "7444:37:4",
                                                                    "tryCall": false,
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_uint256",
                                                                        "typeString": "uint256"
                                                                    }
                                                                },
                                                                "id": 1517,
                                                                "isConstant": false,
                                                                "isLValue": false,
                                                                "isPure": false,
                                                                "lValueRequested": false,
                                                                "memberName": "div",
                                                                "nodeType": "MemberAccess",
                                                                "referencedDeclaration": 2881,
                                                                "src": "7444:41:4",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                                                    "typeString": "function (uint256,uint256) pure returns (uint256)"
                                                                }
                                                            },
                                                            "id": 1519,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": false,
                                                            "kind": "functionCall",
                                                            "lValueRequested": false,
                                                            "names": [],
                                                            "nodeType": "FunctionCall",
                                                            "src": "7444:48:4",
                                                            "tryCall": false,
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_uint256",
                                                                "typeString": "uint256"
                                                            }
                                                        },
                                                        "src": "7427:65:4",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_bool",
                                                            "typeString": "bool"
                                                        }
                                                    },
                                                    {
                                                        "hexValue": "5468697320636f6e747261637420646f6573206e6f7420726570726573656e7420656e6f75676820657175697479",
                                                        "id": 1521,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": true,
                                                        "kind": "string",
                                                        "lValueRequested": false,
                                                        "nodeType": "Literal",
                                                        "src": "7494:48:4",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_stringliteral_c299f323964c2f4e30c5e2880d079425580b8b89f5a5ea49e7d712ec658c9419",
                                                            "typeString": "literal_string \"This contract does not represent enough equity\""
                                                        },
                                                        "value": "This contract does not represent enough equity"
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_bool",
                                                            "typeString": "bool"
                                                        },
                                                        {
                                                            "typeIdentifier": "t_stringliteral_c299f323964c2f4e30c5e2880d079425580b8b89f5a5ea49e7d712ec658c9419",
                                                            "typeString": "literal_string \"This contract does not represent enough equity\""
                                                        }
                                                    ],
                                                    "id": 1510,
                                                    "name": "require",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [
                                                        -18,
                                                        -18
                                                    ],
                                                    "referencedDeclaration": -18,
                                                    "src": "7419:7:4",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                                        "typeString": "function (bool,string memory) pure"
                                                    }
                                                },
                                                "id": 1522,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "7419:124:4",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_tuple$__$",
                                                    "typeString": "tuple()"
                                                }
                                            },
                                            "id": 1523,
                                            "nodeType": "ExpressionStatement",
                                            "src": "7419:124:4"
                                        },
                                        {
                                            "expression": {
                                                "arguments": [
                                                    {
                                                        "commonType": {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        },
                                                        "id": 1535,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "leftExpression": {
                                                            "arguments": [
                                                                {
                                                                    "id": 1526,
                                                                    "name": "buyer",
                                                                    "nodeType": "Identifier",
                                                                    "overloadedDeclarations": [],
                                                                    "referencedDeclaration": 1506,
                                                                    "src": "7572:5:4",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_address",
                                                                        "typeString": "address"
                                                                    }
                                                                }
                                                            ],
                                                            "expression": {
                                                                "argumentTypes": [
                                                                    {
                                                                        "typeIdentifier": "t_address",
                                                                        "typeString": "address"
                                                                    }
                                                                ],
                                                                "id": 1525,
                                                                "name": "balanceOf",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [],
                                                                "referencedDeclaration": 774,
                                                                "src": "7562:9:4",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                                                                    "typeString": "function (address) view returns (uint256)"
                                                                }
                                                            },
                                                            "id": 1527,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": false,
                                                            "kind": "functionCall",
                                                            "lValueRequested": false,
                                                            "names": [],
                                                            "nodeType": "FunctionCall",
                                                            "src": "7562:16:4",
                                                            "tryCall": false,
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_uint256",
                                                                "typeString": "uint256"
                                                            }
                                                        },
                                                        "nodeType": "BinaryOperation",
                                                        "operator": ">=",
                                                        "rightExpression": {
                                                            "arguments": [
                                                                {
                                                                    "hexValue": "3130303030",
                                                                    "id": 1533,
                                                                    "isConstant": false,
                                                                    "isLValue": false,
                                                                    "isPure": true,
                                                                    "kind": "number",
                                                                    "lValueRequested": false,
                                                                    "nodeType": "Literal",
                                                                    "src": "7615:5:4",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_rational_10000_by_1",
                                                                        "typeString": "int_const 10000"
                                                                    },
                                                                    "value": "10000"
                                                                }
                                                            ],
                                                            "expression": {
                                                                "argumentTypes": [
                                                                    {
                                                                        "typeIdentifier": "t_rational_10000_by_1",
                                                                        "typeString": "int_const 10000"
                                                                    }
                                                                ],
                                                                "expression": {
                                                                    "arguments": [
                                                                        {
                                                                            "id": 1530,
                                                                            "name": "MIN_HOLDING",
                                                                            "nodeType": "Identifier",
                                                                            "overloadedDeclarations": [],
                                                                            "referencedDeclaration": 1222,
                                                                            "src": "7598:11:4",
                                                                            "typeDescriptions": {
                                                                                "typeIdentifier": "t_uint256",
                                                                                "typeString": "uint256"
                                                                            }
                                                                        }
                                                                    ],
                                                                    "expression": {
                                                                        "argumentTypes": [
                                                                            {
                                                                                "typeIdentifier": "t_uint256",
                                                                                "typeString": "uint256"
                                                                            }
                                                                        ],
                                                                        "expression": {
                                                                            "id": 1528,
                                                                            "name": "totalEquity",
                                                                            "nodeType": "Identifier",
                                                                            "overloadedDeclarations": [],
                                                                            "referencedDeclaration": 1497,
                                                                            "src": "7582:11:4",
                                                                            "typeDescriptions": {
                                                                                "typeIdentifier": "t_uint256",
                                                                                "typeString": "uint256"
                                                                            }
                                                                        },
                                                                        "id": 1529,
                                                                        "isConstant": false,
                                                                        "isLValue": false,
                                                                        "isPure": false,
                                                                        "lValueRequested": false,
                                                                        "memberName": "mul",
                                                                        "nodeType": "MemberAccess",
                                                                        "referencedDeclaration": 2866,
                                                                        "src": "7582:15:4",
                                                                        "typeDescriptions": {
                                                                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                                                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                                                                        }
                                                                    },
                                                                    "id": 1531,
                                                                    "isConstant": false,
                                                                    "isLValue": false,
                                                                    "isPure": false,
                                                                    "kind": "functionCall",
                                                                    "lValueRequested": false,
                                                                    "names": [],
                                                                    "nodeType": "FunctionCall",
                                                                    "src": "7582:28:4",
                                                                    "tryCall": false,
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_uint256",
                                                                        "typeString": "uint256"
                                                                    }
                                                                },
                                                                "id": 1532,
                                                                "isConstant": false,
                                                                "isLValue": false,
                                                                "isPure": false,
                                                                "lValueRequested": false,
                                                                "memberName": "div",
                                                                "nodeType": "MemberAccess",
                                                                "referencedDeclaration": 2881,
                                                                "src": "7582:32:4",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                                                    "typeString": "function (uint256,uint256) pure returns (uint256)"
                                                                }
                                                            },
                                                            "id": 1534,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": false,
                                                            "kind": "functionCall",
                                                            "lValueRequested": false,
                                                            "names": [],
                                                            "nodeType": "FunctionCall",
                                                            "src": "7582:39:4",
                                                            "tryCall": false,
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_uint256",
                                                                "typeString": "uint256"
                                                            }
                                                        },
                                                        "src": "7562:59:4",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_bool",
                                                            "typeString": "bool"
                                                        }
                                                    },
                                                    {
                                                        "hexValue": "596f75206e65656420746f20686f6c64206174206c65617374203525206f6620746865206669726d20746f206d616b6520616e206f66666572",
                                                        "id": 1536,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": true,
                                                        "kind": "string",
                                                        "lValueRequested": false,
                                                        "nodeType": "Literal",
                                                        "src": "7623:59:4",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_stringliteral_f210989f7e3d31b47d0535865075d90b55de97b4c2a91afafe1aee5914a9f2f5",
                                                            "typeString": "literal_string \"You need to hold at least 5% of the firm to make an offer\""
                                                        },
                                                        "value": "You need to hold at least 5% of the firm to make an offer"
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_bool",
                                                            "typeString": "bool"
                                                        },
                                                        {
                                                            "typeIdentifier": "t_stringliteral_f210989f7e3d31b47d0535865075d90b55de97b4c2a91afafe1aee5914a9f2f5",
                                                            "typeString": "literal_string \"You need to hold at least 5% of the firm to make an offer\""
                                                        }
                                                    ],
                                                    "id": 1524,
                                                    "name": "require",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [
                                                        -18,
                                                        -18
                                                    ],
                                                    "referencedDeclaration": -18,
                                                    "src": "7554:7:4",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                                        "typeString": "function (bool,string memory) pure"
                                                    }
                                                },
                                                "id": 1537,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "7554:129:4",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_tuple$__$",
                                                    "typeString": "tuple()"
                                                }
                                            },
                                            "id": 1538,
                                            "nodeType": "ExpressionStatement",
                                            "src": "7554:129:4"
                                        },
                                        {
                                            "expression": {
                                                "arguments": [
                                                    {
                                                        "hexValue": "31",
                                                        "id": 1542,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": true,
                                                        "kind": "number",
                                                        "lValueRequested": false,
                                                        "nodeType": "Literal",
                                                        "src": "7725:7:4",
                                                        "subdenomination": "ether",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                                            "typeString": "int_const 1000000000000000000"
                                                        },
                                                        "value": "1"
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                                            "typeString": "int_const 1000000000000000000"
                                                        }
                                                    ],
                                                    "expression": {
                                                        "id": 1539,
                                                        "name": "licenseFeeRecipient",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 1212,
                                                        "src": "7696:19:4",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_address_payable",
                                                            "typeString": "address payable"
                                                        }
                                                    },
                                                    "id": 1541,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "memberName": "transfer",
                                                    "nodeType": "MemberAccess",
                                                    "src": "7696:28:4",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                                                        "typeString": "function (uint256)"
                                                    }
                                                },
                                                "id": 1543,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "7696:37:4",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_tuple$__$",
                                                    "typeString": "tuple()"
                                                }
                                            },
                                            "id": 1544,
                                            "nodeType": "ExpressionStatement",
                                            "src": "7696:37:4"
                                        },
                                        {
                                            "assignments": [
                                                1546
                                            ],
                                            "declarations": [
                                                {
                                                    "constant": false,
                                                    "id": 1546,
                                                    "mutability": "mutable",
                                                    "name": "newOffer",
                                                    "nodeType": "VariableDeclaration",
                                                    "scope": 1609,
                                                    "src": "7747:20:4",
                                                    "stateVariable": false,
                                                    "storageLocation": "default",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_contract$_Acquisition_$491",
                                                        "typeString": "contract Acquisition"
                                                    },
                                                    "typeName": {
                                                        "id": 1545,
                                                        "name": "Acquisition",
                                                        "nodeType": "UserDefinedTypeName",
                                                        "referencedDeclaration": 491,
                                                        "src": "7747:11:4",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_contract$_Acquisition_$491",
                                                            "typeString": "contract Acquisition"
                                                        }
                                                    },
                                                    "visibility": "internal"
                                                }
                                            ],
                                            "id": 1555,
                                            "initialValue": {
                                                "arguments": [
                                                    {
                                                        "expression": {
                                                            "id": 1549,
                                                            "name": "msg",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": -15,
                                                            "src": "7786:3:4",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_magic_message",
                                                                "typeString": "msg"
                                                            }
                                                        },
                                                        "id": 1550,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "memberName": "sender",
                                                        "nodeType": "MemberAccess",
                                                        "src": "7786:10:4",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_address_payable",
                                                            "typeString": "address payable"
                                                        }
                                                    },
                                                    {
                                                        "id": 1551,
                                                        "name": "currency",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 1488,
                                                        "src": "7798:8:4",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        }
                                                    },
                                                    {
                                                        "id": 1552,
                                                        "name": "pricePerShare",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 1486,
                                                        "src": "7808:13:4",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        }
                                                    },
                                                    {
                                                        "id": 1553,
                                                        "name": "acquisitionQuorum",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 1216,
                                                        "src": "7823:17:4",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        }
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_address_payable",
                                                            "typeString": "address payable"
                                                        },
                                                        {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        },
                                                        {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        },
                                                        {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        }
                                                    ],
                                                    "id": 1548,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "nodeType": "NewExpression",
                                                    "src": "7770:15:4",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_function_creation_nonpayable$_t_address_payable_$_t_address_$_t_uint256_$_t_uint256_$returns$_t_contract$_Acquisition_$491_$",
                                                        "typeString": "function (address payable,address,uint256,uint256) returns (contract Acquisition)"
                                                    },
                                                    "typeName": {
                                                        "id": 1547,
                                                        "name": "Acquisition",
                                                        "nodeType": "UserDefinedTypeName",
                                                        "referencedDeclaration": 491,
                                                        "src": "7774:11:4",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_contract$_Acquisition_$491",
                                                            "typeString": "contract Acquisition"
                                                        }
                                                    }
                                                },
                                                "id": 1554,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "7770:71:4",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_contract$_Acquisition_$491",
                                                    "typeString": "contract Acquisition"
                                                }
                                            },
                                            "nodeType": "VariableDeclarationStatement",
                                            "src": "7747:94:4"
                                        },
                                        {
                                            "expression": {
                                                "arguments": [
                                                    {
                                                        "arguments": [
                                                            {
                                                                "commonType": {
                                                                    "typeIdentifier": "t_uint256",
                                                                    "typeString": "uint256"
                                                                },
                                                                "id": 1564,
                                                                "isConstant": false,
                                                                "isLValue": false,
                                                                "isPure": false,
                                                                "lValueRequested": false,
                                                                "leftExpression": {
                                                                    "arguments": [],
                                                                    "expression": {
                                                                        "argumentTypes": [],
                                                                        "id": 1559,
                                                                        "name": "totalSupply",
                                                                        "nodeType": "Identifier",
                                                                        "overloadedDeclarations": [],
                                                                        "referencedDeclaration": 760,
                                                                        "src": "7882:11:4",
                                                                        "typeDescriptions": {
                                                                            "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                                                            "typeString": "function () view returns (uint256)"
                                                                        }
                                                                    },
                                                                    "id": 1560,
                                                                    "isConstant": false,
                                                                    "isLValue": false,
                                                                    "isPure": false,
                                                                    "kind": "functionCall",
                                                                    "lValueRequested": false,
                                                                    "names": [],
                                                                    "nodeType": "FunctionCall",
                                                                    "src": "7882:13:4",
                                                                    "tryCall": false,
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_uint256",
                                                                        "typeString": "uint256"
                                                                    }
                                                                },
                                                                "nodeType": "BinaryOperation",
                                                                "operator": "-",
                                                                "rightExpression": {
                                                                    "arguments": [
                                                                        {
                                                                            "id": 1562,
                                                                            "name": "buyer",
                                                                            "nodeType": "Identifier",
                                                                            "overloadedDeclarations": [],
                                                                            "referencedDeclaration": 1506,
                                                                            "src": "7908:5:4",
                                                                            "typeDescriptions": {
                                                                                "typeIdentifier": "t_address",
                                                                                "typeString": "address"
                                                                            }
                                                                        }
                                                                    ],
                                                                    "expression": {
                                                                        "argumentTypes": [
                                                                            {
                                                                                "typeIdentifier": "t_address",
                                                                                "typeString": "address"
                                                                            }
                                                                        ],
                                                                        "id": 1561,
                                                                        "name": "balanceOf",
                                                                        "nodeType": "Identifier",
                                                                        "overloadedDeclarations": [],
                                                                        "referencedDeclaration": 774,
                                                                        "src": "7898:9:4",
                                                                        "typeDescriptions": {
                                                                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                                                                            "typeString": "function (address) view returns (uint256)"
                                                                        }
                                                                    },
                                                                    "id": 1563,
                                                                    "isConstant": false,
                                                                    "isLValue": false,
                                                                    "isPure": false,
                                                                    "kind": "functionCall",
                                                                    "lValueRequested": false,
                                                                    "names": [],
                                                                    "nodeType": "FunctionCall",
                                                                    "src": "7898:16:4",
                                                                    "tryCall": false,
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_uint256",
                                                                        "typeString": "uint256"
                                                                    }
                                                                },
                                                                "src": "7882:32:4",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_uint256",
                                                                    "typeString": "uint256"
                                                                }
                                                            }
                                                        ],
                                                        "expression": {
                                                            "argumentTypes": [
                                                                {
                                                                    "typeIdentifier": "t_uint256",
                                                                    "typeString": "uint256"
                                                                }
                                                            ],
                                                            "expression": {
                                                                "id": 1557,
                                                                "name": "newOffer",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [],
                                                                "referencedDeclaration": 1546,
                                                                "src": "7860:8:4",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_contract$_Acquisition_$491",
                                                                    "typeString": "contract Acquisition"
                                                                }
                                                            },
                                                            "id": 1558,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": false,
                                                            "lValueRequested": false,
                                                            "memberName": "isWellFunded",
                                                            "nodeType": "MemberAccess",
                                                            "referencedDeclaration": 132,
                                                            "src": "7860:21:4",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_bool_$",
                                                                "typeString": "function (uint256) view external returns (bool)"
                                                            }
                                                        },
                                                        "id": 1565,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "kind": "functionCall",
                                                        "lValueRequested": false,
                                                        "names": [],
                                                        "nodeType": "FunctionCall",
                                                        "src": "7860:55:4",
                                                        "tryCall": false,
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_bool",
                                                            "typeString": "bool"
                                                        }
                                                    },
                                                    {
                                                        "hexValue": "496e73756666696369656e742066756e64696e67",
                                                        "id": 1566,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": true,
                                                        "kind": "string",
                                                        "lValueRequested": false,
                                                        "nodeType": "Literal",
                                                        "src": "7917:22:4",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_stringliteral_7327d4da6108abeb8e4751f6025af6844175a694843ba088fee74610f5268f16",
                                                            "typeString": "literal_string \"Insufficient funding\""
                                                        },
                                                        "value": "Insufficient funding"
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_bool",
                                                            "typeString": "bool"
                                                        },
                                                        {
                                                            "typeIdentifier": "t_stringliteral_7327d4da6108abeb8e4751f6025af6844175a694843ba088fee74610f5268f16",
                                                            "typeString": "literal_string \"Insufficient funding\""
                                                        }
                                                    ],
                                                    "id": 1556,
                                                    "name": "require",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [
                                                        -18,
                                                        -18
                                                    ],
                                                    "referencedDeclaration": -18,
                                                    "src": "7852:7:4",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                                        "typeString": "function (bool,string memory) pure"
                                                    }
                                                },
                                                "id": 1567,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "7852:88:4",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_tuple$__$",
                                                    "typeString": "tuple()"
                                                }
                                            },
                                            "id": 1568,
                                            "nodeType": "ExpressionStatement",
                                            "src": "7852:88:4"
                                        },
                                        {
                                            "condition": {
                                                "arguments": [],
                                                "expression": {
                                                    "argumentTypes": [],
                                                    "id": 1569,
                                                    "name": "offerExists",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 2092,
                                                    "src": "7955:11:4",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                                                        "typeString": "function () view returns (bool)"
                                                    }
                                                },
                                                "id": 1570,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "7955:13:4",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            },
                                            "id": 1597,
                                            "nodeType": "IfStatement",
                                            "src": "7951:279:4",
                                            "trueBody": {
                                                "id": 1596,
                                                "nodeType": "Block",
                                                "src": "7970:260:4",
                                                "statements": [
                                                    {
                                                        "expression": {
                                                            "arguments": [
                                                                {
                                                                    "commonType": {
                                                                        "typeIdentifier": "t_bool",
                                                                        "typeString": "bool"
                                                                    },
                                                                    "id": 1588,
                                                                    "isConstant": false,
                                                                    "isLValue": false,
                                                                    "isPure": false,
                                                                    "lValueRequested": false,
                                                                    "leftExpression": {
                                                                        "commonType": {
                                                                            "typeIdentifier": "t_address",
                                                                            "typeString": "address"
                                                                        },
                                                                        "id": 1576,
                                                                        "isConstant": false,
                                                                        "isLValue": false,
                                                                        "isPure": false,
                                                                        "lValueRequested": false,
                                                                        "leftExpression": {
                                                                            "id": 1572,
                                                                            "name": "currency",
                                                                            "nodeType": "Identifier",
                                                                            "overloadedDeclarations": [],
                                                                            "referencedDeclaration": 1488,
                                                                            "src": "7993:8:4",
                                                                            "typeDescriptions": {
                                                                                "typeIdentifier": "t_address",
                                                                                "typeString": "address"
                                                                            }
                                                                        },
                                                                        "nodeType": "BinaryOperation",
                                                                        "operator": "==",
                                                                        "rightExpression": {
                                                                            "arguments": [],
                                                                            "expression": {
                                                                                "argumentTypes": [],
                                                                                "expression": {
                                                                                    "id": 1573,
                                                                                    "name": "offer",
                                                                                    "nodeType": "Identifier",
                                                                                    "overloadedDeclarations": [],
                                                                                    "referencedDeclaration": 1210,
                                                                                    "src": "8005:5:4",
                                                                                    "typeDescriptions": {
                                                                                        "typeIdentifier": "t_contract$_Acquisition_$491",
                                                                                        "typeString": "contract Acquisition"
                                                                                    }
                                                                                },
                                                                                "id": 1574,
                                                                                "isConstant": false,
                                                                                "isLValue": false,
                                                                                "isPure": false,
                                                                                "lValueRequested": false,
                                                                                "memberName": "currency",
                                                                                "nodeType": "MemberAccess",
                                                                                "referencedDeclaration": 21,
                                                                                "src": "8005:14:4",
                                                                                "typeDescriptions": {
                                                                                    "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                                                                                    "typeString": "function () view external returns (address)"
                                                                                }
                                                                            },
                                                                            "id": 1575,
                                                                            "isConstant": false,
                                                                            "isLValue": false,
                                                                            "isPure": false,
                                                                            "kind": "functionCall",
                                                                            "lValueRequested": false,
                                                                            "names": [],
                                                                            "nodeType": "FunctionCall",
                                                                            "src": "8005:16:4",
                                                                            "tryCall": false,
                                                                            "typeDescriptions": {
                                                                                "typeIdentifier": "t_address",
                                                                                "typeString": "address"
                                                                            }
                                                                        },
                                                                        "src": "7993:28:4",
                                                                        "typeDescriptions": {
                                                                            "typeIdentifier": "t_bool",
                                                                            "typeString": "bool"
                                                                        }
                                                                    },
                                                                    "nodeType": "BinaryOperation",
                                                                    "operator": "&&",
                                                                    "rightExpression": {
                                                                        "commonType": {
                                                                            "typeIdentifier": "t_uint256",
                                                                            "typeString": "uint256"
                                                                        },
                                                                        "id": 1587,
                                                                        "isConstant": false,
                                                                        "isLValue": false,
                                                                        "isPure": false,
                                                                        "lValueRequested": false,
                                                                        "leftExpression": {
                                                                            "id": 1577,
                                                                            "name": "pricePerShare",
                                                                            "nodeType": "Identifier",
                                                                            "overloadedDeclarations": [],
                                                                            "referencedDeclaration": 1486,
                                                                            "src": "8025:13:4",
                                                                            "typeDescriptions": {
                                                                                "typeIdentifier": "t_uint256",
                                                                                "typeString": "uint256"
                                                                            }
                                                                        },
                                                                        "nodeType": "BinaryOperation",
                                                                        "operator": ">=",
                                                                        "rightExpression": {
                                                                            "arguments": [
                                                                                {
                                                                                    "hexValue": "3130303030",
                                                                                    "id": 1585,
                                                                                    "isConstant": false,
                                                                                    "isLValue": false,
                                                                                    "isPure": true,
                                                                                    "kind": "number",
                                                                                    "lValueRequested": false,
                                                                                    "nodeType": "Literal",
                                                                                    "src": "8085:5:4",
                                                                                    "typeDescriptions": {
                                                                                        "typeIdentifier": "t_rational_10000_by_1",
                                                                                        "typeString": "int_const 10000"
                                                                                    },
                                                                                    "value": "10000"
                                                                                }
                                                                            ],
                                                                            "expression": {
                                                                                "argumentTypes": [
                                                                                    {
                                                                                        "typeIdentifier": "t_rational_10000_by_1",
                                                                                        "typeString": "int_const 10000"
                                                                                    }
                                                                                ],
                                                                                "expression": {
                                                                                    "arguments": [
                                                                                        {
                                                                                            "id": 1582,
                                                                                            "name": "MIN_OFFER_INCREMENT",
                                                                                            "nodeType": "Identifier",
                                                                                            "overloadedDeclarations": [],
                                                                                            "referencedDeclaration": 1219,
                                                                                            "src": "8060:19:4",
                                                                                            "typeDescriptions": {
                                                                                                "typeIdentifier": "t_uint256",
                                                                                                "typeString": "uint256"
                                                                                            }
                                                                                        }
                                                                                    ],
                                                                                    "expression": {
                                                                                        "argumentTypes": [
                                                                                            {
                                                                                                "typeIdentifier": "t_uint256",
                                                                                                "typeString": "uint256"
                                                                                            }
                                                                                        ],
                                                                                        "expression": {
                                                                                            "arguments": [],
                                                                                            "expression": {
                                                                                                "argumentTypes": [],
                                                                                                "expression": {
                                                                                                    "id": 1578,
                                                                                                    "name": "offer",
                                                                                                    "nodeType": "Identifier",
                                                                                                    "overloadedDeclarations": [],
                                                                                                    "referencedDeclaration": 1210,
                                                                                                    "src": "8042:5:4",
                                                                                                    "typeDescriptions": {
                                                                                                        "typeIdentifier": "t_contract$_Acquisition_$491",
                                                                                                        "typeString": "contract Acquisition"
                                                                                                    }
                                                                                                },
                                                                                                "id": 1579,
                                                                                                "isConstant": false,
                                                                                                "isLValue": false,
                                                                                                "isPure": false,
                                                                                                "lValueRequested": false,
                                                                                                "memberName": "price",
                                                                                                "nodeType": "MemberAccess",
                                                                                                "referencedDeclaration": 23,
                                                                                                "src": "8042:11:4",
                                                                                                "typeDescriptions": {
                                                                                                    "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                                                                                                    "typeString": "function () view external returns (uint256)"
                                                                                                }
                                                                                            },
                                                                                            "id": 1580,
                                                                                            "isConstant": false,
                                                                                            "isLValue": false,
                                                                                            "isPure": false,
                                                                                            "kind": "functionCall",
                                                                                            "lValueRequested": false,
                                                                                            "names": [],
                                                                                            "nodeType": "FunctionCall",
                                                                                            "src": "8042:13:4",
                                                                                            "tryCall": false,
                                                                                            "typeDescriptions": {
                                                                                                "typeIdentifier": "t_uint256",
                                                                                                "typeString": "uint256"
                                                                                            }
                                                                                        },
                                                                                        "id": 1581,
                                                                                        "isConstant": false,
                                                                                        "isLValue": false,
                                                                                        "isPure": false,
                                                                                        "lValueRequested": false,
                                                                                        "memberName": "mul",
                                                                                        "nodeType": "MemberAccess",
                                                                                        "referencedDeclaration": 2866,
                                                                                        "src": "8042:17:4",
                                                                                        "typeDescriptions": {
                                                                                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                                                                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                                                                                        }
                                                                                    },
                                                                                    "id": 1583,
                                                                                    "isConstant": false,
                                                                                    "isLValue": false,
                                                                                    "isPure": false,
                                                                                    "kind": "functionCall",
                                                                                    "lValueRequested": false,
                                                                                    "names": [],
                                                                                    "nodeType": "FunctionCall",
                                                                                    "src": "8042:38:4",
                                                                                    "tryCall": false,
                                                                                    "typeDescriptions": {
                                                                                        "typeIdentifier": "t_uint256",
                                                                                        "typeString": "uint256"
                                                                                    }
                                                                                },
                                                                                "id": 1584,
                                                                                "isConstant": false,
                                                                                "isLValue": false,
                                                                                "isPure": false,
                                                                                "lValueRequested": false,
                                                                                "memberName": "div",
                                                                                "nodeType": "MemberAccess",
                                                                                "referencedDeclaration": 2881,
                                                                                "src": "8042:42:4",
                                                                                "typeDescriptions": {
                                                                                    "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                                                                    "typeString": "function (uint256,uint256) pure returns (uint256)"
                                                                                }
                                                                            },
                                                                            "id": 1586,
                                                                            "isConstant": false,
                                                                            "isLValue": false,
                                                                            "isPure": false,
                                                                            "kind": "functionCall",
                                                                            "lValueRequested": false,
                                                                            "names": [],
                                                                            "nodeType": "FunctionCall",
                                                                            "src": "8042:49:4",
                                                                            "tryCall": false,
                                                                            "typeDescriptions": {
                                                                                "typeIdentifier": "t_uint256",
                                                                                "typeString": "uint256"
                                                                            }
                                                                        },
                                                                        "src": "8025:66:4",
                                                                        "typeDescriptions": {
                                                                            "typeIdentifier": "t_bool",
                                                                            "typeString": "bool"
                                                                        }
                                                                    },
                                                                    "src": "7993:98:4",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_bool",
                                                                        "typeString": "bool"
                                                                    }
                                                                },
                                                                {
                                                                    "hexValue": "4e6577206f6666657273206d757374206265206174206c6561737420352520686967686572207468616e207468652070656e64696e67206f66666572",
                                                                    "id": 1589,
                                                                    "isConstant": false,
                                                                    "isLValue": false,
                                                                    "isPure": true,
                                                                    "kind": "string",
                                                                    "lValueRequested": false,
                                                                    "nodeType": "Literal",
                                                                    "src": "8093:62:4",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_stringliteral_8d46b079086f5ed55b1e5c47d2686eba93a912c3c44bd9a166644071d19023d9",
                                                                        "typeString": "literal_string \"New offers must be at least 5% higher than the pending offer\""
                                                                    },
                                                                    "value": "New offers must be at least 5% higher than the pending offer"
                                                                }
                                                            ],
                                                            "expression": {
                                                                "argumentTypes": [
                                                                    {
                                                                        "typeIdentifier": "t_bool",
                                                                        "typeString": "bool"
                                                                    },
                                                                    {
                                                                        "typeIdentifier": "t_stringliteral_8d46b079086f5ed55b1e5c47d2686eba93a912c3c44bd9a166644071d19023d9",
                                                                        "typeString": "literal_string \"New offers must be at least 5% higher than the pending offer\""
                                                                    }
                                                                ],
                                                                "id": 1571,
                                                                "name": "require",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [
                                                                    -18,
                                                                    -18
                                                                ],
                                                                "referencedDeclaration": -18,
                                                                "src": "7985:7:4",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                                                    "typeString": "function (bool,string memory) pure"
                                                                }
                                                            },
                                                            "id": 1590,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": false,
                                                            "kind": "functionCall",
                                                            "lValueRequested": false,
                                                            "names": [],
                                                            "nodeType": "FunctionCall",
                                                            "src": "7985:171:4",
                                                            "tryCall": false,
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_tuple$__$",
                                                                "typeString": "tuple()"
                                                            }
                                                        },
                                                        "id": 1591,
                                                        "nodeType": "ExpressionStatement",
                                                        "src": "7985:171:4"
                                                    },
                                                    {
                                                        "expression": {
                                                            "arguments": [
                                                                {
                                                                    "hexValue": "4f66666572207265706c616365642062792068696768657220626964",
                                                                    "id": 1593,
                                                                    "isConstant": false,
                                                                    "isLValue": false,
                                                                    "isPure": true,
                                                                    "kind": "string",
                                                                    "lValueRequested": false,
                                                                    "nodeType": "Literal",
                                                                    "src": "8187:30:4",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_stringliteral_e4d8a9a2b299e13097caf30831abc1617760766a375afe8a5372c0fbab0da2f7",
                                                                        "typeString": "literal_string \"Offer replaced by higher bid\""
                                                                    },
                                                                    "value": "Offer replaced by higher bid"
                                                                }
                                                            ],
                                                            "expression": {
                                                                "argumentTypes": [
                                                                    {
                                                                        "typeIdentifier": "t_stringliteral_e4d8a9a2b299e13097caf30831abc1617760766a375afe8a5372c0fbab0da2f7",
                                                                        "typeString": "literal_string \"Offer replaced by higher bid\""
                                                                    }
                                                                ],
                                                                "id": 1592,
                                                                "name": "killAcquisition",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [],
                                                                "referencedDeclaration": 1753,
                                                                "src": "8171:15:4",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$",
                                                                    "typeString": "function (string memory)"
                                                                }
                                                            },
                                                            "id": 1594,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": false,
                                                            "kind": "functionCall",
                                                            "lValueRequested": false,
                                                            "names": [],
                                                            "nodeType": "FunctionCall",
                                                            "src": "8171:47:4",
                                                            "tryCall": false,
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_tuple$__$",
                                                                "typeString": "tuple()"
                                                            }
                                                        },
                                                        "id": 1595,
                                                        "nodeType": "ExpressionStatement",
                                                        "src": "8171:47:4"
                                                    }
                                                ]
                                            }
                                        },
                                        {
                                            "expression": {
                                                "id": 1600,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftHandSide": {
                                                    "id": 1598,
                                                    "name": "offer",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 1210,
                                                    "src": "8240:5:4",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_contract$_Acquisition_$491",
                                                        "typeString": "contract Acquisition"
                                                    }
                                                },
                                                "nodeType": "Assignment",
                                                "operator": "=",
                                                "rightHandSide": {
                                                    "id": 1599,
                                                    "name": "newOffer",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 1546,
                                                    "src": "8248:8:4",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_contract$_Acquisition_$491",
                                                        "typeString": "contract Acquisition"
                                                    }
                                                },
                                                "src": "8240:16:4",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_contract$_Acquisition_$491",
                                                    "typeString": "contract Acquisition"
                                                }
                                            },
                                            "id": 1601,
                                            "nodeType": "ExpressionStatement",
                                            "src": "8240:16:4"
                                        },
                                        {
                                            "eventCall": {
                                                "arguments": [
                                                    {
                                                        "id": 1603,
                                                        "name": "buyer",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 1506,
                                                        "src": "8287:5:4",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        }
                                                    },
                                                    {
                                                        "id": 1604,
                                                        "name": "pricePerShare",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 1486,
                                                        "src": "8294:13:4",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        }
                                                    },
                                                    {
                                                        "arguments": [],
                                                        "expression": {
                                                            "argumentTypes": [],
                                                            "id": 1605,
                                                            "name": "getPendingOffer",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 2078,
                                                            "src": "8309:15:4",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                                                "typeString": "function () view returns (address)"
                                                            }
                                                        },
                                                        "id": 1606,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "kind": "functionCall",
                                                        "lValueRequested": false,
                                                        "names": [],
                                                        "nodeType": "FunctionCall",
                                                        "src": "8309:17:4",
                                                        "tryCall": false,
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        }
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        },
                                                        {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        },
                                                        {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        }
                                                    ],
                                                    "id": 1602,
                                                    "name": "OfferCreated",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 1236,
                                                    "src": "8274:12:4",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$__$",
                                                        "typeString": "function (address,uint256,address)"
                                                    }
                                                },
                                                "id": 1607,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "8274:53:4",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_tuple$__$",
                                                    "typeString": "tuple()"
                                                }
                                            },
                                            "id": 1608,
                                            "nodeType": "EmitStatement",
                                            "src": "8269:58:4"
                                        }
                                    ]
                                },
                                "documentation": {
                                    "id": 1484,
                                    "nodeType": "StructuredDocumentation",
                                    "src": "7032:124:4",
                                    "text": "@dev Function to start drag-along procedure\n  This can be called by anyone, but there is an upfront payment."
                                },
                                "functionSelector": "49b210b7",
                                "id": 1610,
                                "implemented": true,
                                "kind": "function",
                                "modifiers": [],
                                "name": "initiateAcquisition",
                                "nodeType": "FunctionDefinition",
                                "parameters": {
                                    "id": 1489,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 1486,
                                            "mutability": "mutable",
                                            "name": "pricePerShare",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 1610,
                                            "src": "7191:21:4",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            },
                                            "typeName": {
                                                "id": 1485,
                                                "name": "uint256",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "7191:7:4",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            },
                                            "visibility": "internal"
                                        },
                                        {
                                            "constant": false,
                                            "id": 1488,
                                            "mutability": "mutable",
                                            "name": "currency",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 1610,
                                            "src": "7214:16:4",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            },
                                            "typeName": {
                                                "id": 1487,
                                                "name": "address",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "7214:7:4",
                                                "stateMutability": "nonpayable",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "7190:41:4"
                                },
                                "returnParameters": {
                                    "id": 1490,
                                    "nodeType": "ParameterList",
                                    "parameters": [],
                                    "src": "7239:0:4"
                                },
                                "scope": 2116,
                                "src": "7162:1173:4",
                                "stateMutability": "nonpayable",
                                "virtual": false,
                                "visibility": "public"
                            },
                            {
                                "body": {
                                    "id": 1629,
                                    "nodeType": "Block",
                                    "src": "8384:94:4",
                                    "statements": [
                                        {
                                            "assignments": [
                                                1616
                                            ],
                                            "declarations": [
                                                {
                                                    "constant": false,
                                                    "id": 1616,
                                                    "mutability": "mutable",
                                                    "name": "voter",
                                                    "nodeType": "VariableDeclaration",
                                                    "scope": 1629,
                                                    "src": "8395:13:4",
                                                    "stateVariable": false,
                                                    "storageLocation": "default",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_address",
                                                        "typeString": "address"
                                                    },
                                                    "typeName": {
                                                        "id": 1615,
                                                        "name": "address",
                                                        "nodeType": "ElementaryTypeName",
                                                        "src": "8395:7:4",
                                                        "stateMutability": "nonpayable",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        }
                                                    },
                                                    "visibility": "internal"
                                                }
                                            ],
                                            "id": 1619,
                                            "initialValue": {
                                                "expression": {
                                                    "id": 1617,
                                                    "name": "msg",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": -15,
                                                    "src": "8411:3:4",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_magic_message",
                                                        "typeString": "msg"
                                                    }
                                                },
                                                "id": 1618,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberName": "sender",
                                                "nodeType": "MemberAccess",
                                                "src": "8411:10:4",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address_payable",
                                                    "typeString": "address payable"
                                                }
                                            },
                                            "nodeType": "VariableDeclarationStatement",
                                            "src": "8395:26:4"
                                        },
                                        {
                                            "expression": {
                                                "arguments": [
                                                    {
                                                        "id": 1623,
                                                        "name": "voter",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 1616,
                                                        "src": "8446:5:4",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        }
                                                    },
                                                    {
                                                        "arguments": [
                                                            {
                                                                "id": 1625,
                                                                "name": "voter",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [],
                                                                "referencedDeclaration": 1616,
                                                                "src": "8463:5:4",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_address",
                                                                    "typeString": "address"
                                                                }
                                                            }
                                                        ],
                                                        "expression": {
                                                            "argumentTypes": [
                                                                {
                                                                    "typeIdentifier": "t_address",
                                                                    "typeString": "address"
                                                                }
                                                            ],
                                                            "id": 1624,
                                                            "name": "balanceOf",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 774,
                                                            "src": "8453:9:4",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                                                                "typeString": "function (address) view returns (uint256)"
                                                            }
                                                        },
                                                        "id": 1626,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "kind": "functionCall",
                                                        "lValueRequested": false,
                                                        "names": [],
                                                        "nodeType": "FunctionCall",
                                                        "src": "8453:16:4",
                                                        "tryCall": false,
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        }
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        },
                                                        {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        }
                                                    ],
                                                    "expression": {
                                                        "id": 1620,
                                                        "name": "offer",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 1210,
                                                        "src": "8432:5:4",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_contract$_Acquisition_$491",
                                                            "typeString": "contract Acquisition"
                                                        }
                                                    },
                                                    "id": 1622,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "memberName": "voteYes",
                                                    "nodeType": "MemberAccess",
                                                    "referencedDeclaration": 387,
                                                    "src": "8432:13:4",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                                                        "typeString": "function (address,uint256) external"
                                                    }
                                                },
                                                "id": 1627,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "8432:38:4",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_tuple$__$",
                                                    "typeString": "tuple()"
                                                }
                                            },
                                            "id": 1628,
                                            "nodeType": "ExpressionStatement",
                                            "src": "8432:38:4"
                                        }
                                    ]
                                },
                                "functionSelector": "90cf581c",
                                "id": 1630,
                                "implemented": true,
                                "kind": "function",
                                "modifiers": [
                                    {
                                        "arguments": [],
                                        "id": 1613,
                                        "modifierName": {
                                            "id": 1612,
                                            "name": "offerPending",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 2104,
                                            "src": "8369:12:4",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_modifier$__$",
                                                "typeString": "modifier ()"
                                            }
                                        },
                                        "nodeType": "ModifierInvocation",
                                        "src": "8369:14:4"
                                    }
                                ],
                                "name": "voteYes",
                                "nodeType": "FunctionDefinition",
                                "parameters": {
                                    "id": 1611,
                                    "nodeType": "ParameterList",
                                    "parameters": [],
                                    "src": "8359:2:4"
                                },
                                "returnParameters": {
                                    "id": 1614,
                                    "nodeType": "ParameterList",
                                    "parameters": [],
                                    "src": "8384:0:4"
                                },
                                "scope": 2116,
                                "src": "8343:135:4",
                                "stateMutability": "nonpayable",
                                "virtual": false,
                                "visibility": "public"
                            },
                            {
                                "body": {
                                    "id": 1649,
                                    "nodeType": "Block",
                                    "src": "8526:93:4",
                                    "statements": [
                                        {
                                            "assignments": [
                                                1636
                                            ],
                                            "declarations": [
                                                {
                                                    "constant": false,
                                                    "id": 1636,
                                                    "mutability": "mutable",
                                                    "name": "voter",
                                                    "nodeType": "VariableDeclaration",
                                                    "scope": 1649,
                                                    "src": "8537:13:4",
                                                    "stateVariable": false,
                                                    "storageLocation": "default",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_address",
                                                        "typeString": "address"
                                                    },
                                                    "typeName": {
                                                        "id": 1635,
                                                        "name": "address",
                                                        "nodeType": "ElementaryTypeName",
                                                        "src": "8537:7:4",
                                                        "stateMutability": "nonpayable",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        }
                                                    },
                                                    "visibility": "internal"
                                                }
                                            ],
                                            "id": 1639,
                                            "initialValue": {
                                                "expression": {
                                                    "id": 1637,
                                                    "name": "msg",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": -15,
                                                    "src": "8553:3:4",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_magic_message",
                                                        "typeString": "msg"
                                                    }
                                                },
                                                "id": 1638,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberName": "sender",
                                                "nodeType": "MemberAccess",
                                                "src": "8553:10:4",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address_payable",
                                                    "typeString": "address payable"
                                                }
                                            },
                                            "nodeType": "VariableDeclarationStatement",
                                            "src": "8537:26:4"
                                        },
                                        {
                                            "expression": {
                                                "arguments": [
                                                    {
                                                        "id": 1643,
                                                        "name": "voter",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 1636,
                                                        "src": "8587:5:4",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        }
                                                    },
                                                    {
                                                        "arguments": [
                                                            {
                                                                "id": 1645,
                                                                "name": "voter",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [],
                                                                "referencedDeclaration": 1636,
                                                                "src": "8604:5:4",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_address",
                                                                    "typeString": "address"
                                                                }
                                                            }
                                                        ],
                                                        "expression": {
                                                            "argumentTypes": [
                                                                {
                                                                    "typeIdentifier": "t_address",
                                                                    "typeString": "address"
                                                                }
                                                            ],
                                                            "id": 1644,
                                                            "name": "balanceOf",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 774,
                                                            "src": "8594:9:4",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                                                                "typeString": "function (address) view returns (uint256)"
                                                            }
                                                        },
                                                        "id": 1646,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "kind": "functionCall",
                                                        "lValueRequested": false,
                                                        "names": [],
                                                        "nodeType": "FunctionCall",
                                                        "src": "8594:16:4",
                                                        "tryCall": false,
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        }
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        },
                                                        {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        }
                                                    ],
                                                    "expression": {
                                                        "id": 1640,
                                                        "name": "offer",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 1210,
                                                        "src": "8574:5:4",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_contract$_Acquisition_$491",
                                                            "typeString": "contract Acquisition"
                                                        }
                                                    },
                                                    "id": 1642,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "memberName": "voteNo",
                                                    "nodeType": "MemberAccess",
                                                    "referencedDeclaration": 406,
                                                    "src": "8574:12:4",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                                                        "typeString": "function (address,uint256) external"
                                                    }
                                                },
                                                "id": 1647,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "8574:37:4",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_tuple$__$",
                                                    "typeString": "tuple()"
                                                }
                                            },
                                            "id": 1648,
                                            "nodeType": "ExpressionStatement",
                                            "src": "8574:37:4"
                                        }
                                    ]
                                },
                                "functionSelector": "41c12a70",
                                "id": 1650,
                                "implemented": true,
                                "kind": "function",
                                "modifiers": [
                                    {
                                        "arguments": [],
                                        "id": 1633,
                                        "modifierName": {
                                            "id": 1632,
                                            "name": "offerPending",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 2104,
                                            "src": "8511:12:4",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_modifier$__$",
                                                "typeString": "modifier ()"
                                            }
                                        },
                                        "nodeType": "ModifierInvocation",
                                        "src": "8511:14:4"
                                    }
                                ],
                                "name": "voteNo",
                                "nodeType": "FunctionDefinition",
                                "parameters": {
                                    "id": 1631,
                                    "nodeType": "ParameterList",
                                    "parameters": [],
                                    "src": "8501:2:4"
                                },
                                "returnParameters": {
                                    "id": 1634,
                                    "nodeType": "ParameterList",
                                    "parameters": [],
                                    "src": "8526:0:4"
                                },
                                "scope": 2116,
                                "src": "8486:133:4",
                                "stateMutability": "nonpayable",
                                "virtual": false,
                                "visibility": "public"
                            },
                            {
                                "body": {
                                    "id": 1669,
                                    "nodeType": "Block",
                                    "src": "8678:162:4",
                                    "statements": [
                                        {
                                            "expression": {
                                                "arguments": [
                                                    {
                                                        "commonType": {
                                                            "typeIdentifier": "t_address_payable",
                                                            "typeString": "address payable"
                                                        },
                                                        "id": 1661,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "leftExpression": {
                                                            "expression": {
                                                                "id": 1656,
                                                                "name": "msg",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [],
                                                                "referencedDeclaration": -15,
                                                                "src": "8697:3:4",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_magic_message",
                                                                    "typeString": "msg"
                                                                }
                                                            },
                                                            "id": 1657,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": false,
                                                            "lValueRequested": false,
                                                            "memberName": "sender",
                                                            "nodeType": "MemberAccess",
                                                            "src": "8697:10:4",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_address_payable",
                                                                "typeString": "address payable"
                                                            }
                                                        },
                                                        "nodeType": "BinaryOperation",
                                                        "operator": "==",
                                                        "rightExpression": {
                                                            "arguments": [],
                                                            "expression": {
                                                                "argumentTypes": [],
                                                                "expression": {
                                                                    "id": 1658,
                                                                    "name": "offer",
                                                                    "nodeType": "Identifier",
                                                                    "overloadedDeclarations": [],
                                                                    "referencedDeclaration": 1210,
                                                                    "src": "8711:5:4",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_contract$_Acquisition_$491",
                                                                        "typeString": "contract Acquisition"
                                                                    }
                                                                },
                                                                "id": 1659,
                                                                "isConstant": false,
                                                                "isLValue": false,
                                                                "isPure": false,
                                                                "lValueRequested": false,
                                                                "memberName": "buyer",
                                                                "nodeType": "MemberAccess",
                                                                "referencedDeclaration": 19,
                                                                "src": "8711:11:4",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_function_external_view$__$returns$_t_address_payable_$",
                                                                    "typeString": "function () view external returns (address payable)"
                                                                }
                                                            },
                                                            "id": 1660,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": false,
                                                            "kind": "functionCall",
                                                            "lValueRequested": false,
                                                            "names": [],
                                                            "nodeType": "FunctionCall",
                                                            "src": "8711:13:4",
                                                            "tryCall": false,
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_address_payable",
                                                                "typeString": "address payable"
                                                            }
                                                        },
                                                        "src": "8697:27:4",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_bool",
                                                            "typeString": "bool"
                                                        }
                                                    },
                                                    {
                                                        "hexValue": "596f7520617265206e6f7420617574686f72697a656420746f2063616e63656c2074686973206163717569736974696f6e206f66666572",
                                                        "id": 1662,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": true,
                                                        "kind": "string",
                                                        "lValueRequested": false,
                                                        "nodeType": "Literal",
                                                        "src": "8726:57:4",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_stringliteral_858d837a2722677651a85be9da9d953339981de10136686f671678f8dfdf8769",
                                                            "typeString": "literal_string \"You are not authorized to cancel this acquisition offer\""
                                                        },
                                                        "value": "You are not authorized to cancel this acquisition offer"
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_bool",
                                                            "typeString": "bool"
                                                        },
                                                        {
                                                            "typeIdentifier": "t_stringliteral_858d837a2722677651a85be9da9d953339981de10136686f671678f8dfdf8769",
                                                            "typeString": "literal_string \"You are not authorized to cancel this acquisition offer\""
                                                        }
                                                    ],
                                                    "id": 1655,
                                                    "name": "require",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [
                                                        -18,
                                                        -18
                                                    ],
                                                    "referencedDeclaration": -18,
                                                    "src": "8689:7:4",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                                        "typeString": "function (bool,string memory) pure"
                                                    }
                                                },
                                                "id": 1663,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "8689:95:4",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_tuple$__$",
                                                    "typeString": "tuple()"
                                                }
                                            },
                                            "id": 1664,
                                            "nodeType": "ExpressionStatement",
                                            "src": "8689:95:4"
                                        },
                                        {
                                            "expression": {
                                                "arguments": [
                                                    {
                                                        "hexValue": "43616e63656c6c6564206279206275796572",
                                                        "id": 1666,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": true,
                                                        "kind": "string",
                                                        "lValueRequested": false,
                                                        "nodeType": "Literal",
                                                        "src": "8811:20:4",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_stringliteral_b9100df2e12e1bdebd776c2d8283137126499969bd26fd54bd713259fab3a8b9",
                                                            "typeString": "literal_string \"Cancelled by buyer\""
                                                        },
                                                        "value": "Cancelled by buyer"
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_stringliteral_b9100df2e12e1bdebd776c2d8283137126499969bd26fd54bd713259fab3a8b9",
                                                            "typeString": "literal_string \"Cancelled by buyer\""
                                                        }
                                                    ],
                                                    "id": 1665,
                                                    "name": "killAcquisition",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 1753,
                                                    "src": "8795:15:4",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$",
                                                        "typeString": "function (string memory)"
                                                    }
                                                },
                                                "id": 1667,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "8795:37:4",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_tuple$__$",
                                                    "typeString": "tuple()"
                                                }
                                            },
                                            "id": 1668,
                                            "nodeType": "ExpressionStatement",
                                            "src": "8795:37:4"
                                        }
                                    ]
                                },
                                "functionSelector": "e1b8c38e",
                                "id": 1670,
                                "implemented": true,
                                "kind": "function",
                                "modifiers": [
                                    {
                                        "arguments": [],
                                        "id": 1653,
                                        "modifierName": {
                                            "id": 1652,
                                            "name": "offerPending",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 2104,
                                            "src": "8663:12:4",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_modifier$__$",
                                                "typeString": "modifier ()"
                                            }
                                        },
                                        "nodeType": "ModifierInvocation",
                                        "src": "8663:14:4"
                                    }
                                ],
                                "name": "cancelAcquisition",
                                "nodeType": "FunctionDefinition",
                                "parameters": {
                                    "id": 1651,
                                    "nodeType": "ParameterList",
                                    "parameters": [],
                                    "src": "8653:2:4"
                                },
                                "returnParameters": {
                                    "id": 1654,
                                    "nodeType": "ParameterList",
                                    "parameters": [],
                                    "src": "8678:0:4"
                                },
                                "scope": 2116,
                                "src": "8627:213:4",
                                "stateMutability": "nonpayable",
                                "virtual": false,
                                "visibility": "public"
                            },
                            {
                                "body": {
                                    "id": 1716,
                                    "nodeType": "Block",
                                    "src": "8900:427:4",
                                    "statements": [
                                        {
                                            "condition": {
                                                "arguments": [],
                                                "expression": {
                                                    "argumentTypes": [],
                                                    "expression": {
                                                        "id": 1675,
                                                        "name": "offer",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 1210,
                                                        "src": "8915:5:4",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_contract$_Acquisition_$491",
                                                            "typeString": "contract Acquisition"
                                                        }
                                                    },
                                                    "id": 1676,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "memberName": "hasExpired",
                                                    "nodeType": "MemberAccess",
                                                    "referencedDeclaration": 358,
                                                    "src": "8915:16:4",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_function_external_view$__$returns$_t_bool_$",
                                                        "typeString": "function () view external returns (bool)"
                                                    }
                                                },
                                                "id": 1677,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "8915:18:4",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            },
                                            "falseBody": {
                                                "condition": {
                                                    "arguments": [],
                                                    "expression": {
                                                        "argumentTypes": [],
                                                        "expression": {
                                                            "id": 1683,
                                                            "name": "offer",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 1210,
                                                            "src": "9004:5:4",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_contract$_Acquisition_$491",
                                                                "typeString": "contract Acquisition"
                                                            }
                                                        },
                                                        "id": 1684,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "memberName": "quorumHasFailed",
                                                        "nodeType": "MemberAccess",
                                                        "referencedDeclaration": 216,
                                                        "src": "9004:21:4",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_function_external_view$__$returns$_t_bool_$",
                                                            "typeString": "function () view external returns (bool)"
                                                        }
                                                    },
                                                    "id": 1685,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "kind": "functionCall",
                                                    "lValueRequested": false,
                                                    "names": [],
                                                    "nodeType": "FunctionCall",
                                                    "src": "9004:23:4",
                                                    "tryCall": false,
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_bool",
                                                        "typeString": "bool"
                                                    }
                                                },
                                                "falseBody": {
                                                    "condition": {
                                                        "id": 1702,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "nodeType": "UnaryOperation",
                                                        "operator": "!",
                                                        "prefix": true,
                                                        "src": "9103:61:4",
                                                        "subExpression": {
                                                            "arguments": [
                                                                {
                                                                    "commonType": {
                                                                        "typeIdentifier": "t_uint256",
                                                                        "typeString": "uint256"
                                                                    },
                                                                    "id": 1700,
                                                                    "isConstant": false,
                                                                    "isLValue": false,
                                                                    "isPure": false,
                                                                    "lValueRequested": false,
                                                                    "leftExpression": {
                                                                        "arguments": [],
                                                                        "expression": {
                                                                            "argumentTypes": [],
                                                                            "id": 1693,
                                                                            "name": "totalSupply",
                                                                            "nodeType": "Identifier",
                                                                            "overloadedDeclarations": [],
                                                                            "referencedDeclaration": 760,
                                                                            "src": "9123:11:4",
                                                                            "typeDescriptions": {
                                                                                "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                                                                "typeString": "function () view returns (uint256)"
                                                                            }
                                                                        },
                                                                        "id": 1694,
                                                                        "isConstant": false,
                                                                        "isLValue": false,
                                                                        "isPure": false,
                                                                        "kind": "functionCall",
                                                                        "lValueRequested": false,
                                                                        "names": [],
                                                                        "nodeType": "FunctionCall",
                                                                        "src": "9123:13:4",
                                                                        "tryCall": false,
                                                                        "typeDescriptions": {
                                                                            "typeIdentifier": "t_uint256",
                                                                            "typeString": "uint256"
                                                                        }
                                                                    },
                                                                    "nodeType": "BinaryOperation",
                                                                    "operator": "-",
                                                                    "rightExpression": {
                                                                        "arguments": [
                                                                            {
                                                                                "arguments": [],
                                                                                "expression": {
                                                                                    "argumentTypes": [],
                                                                                    "expression": {
                                                                                        "id": 1696,
                                                                                        "name": "offer",
                                                                                        "nodeType": "Identifier",
                                                                                        "overloadedDeclarations": [],
                                                                                        "referencedDeclaration": 1210,
                                                                                        "src": "9149:5:4",
                                                                                        "typeDescriptions": {
                                                                                            "typeIdentifier": "t_contract$_Acquisition_$491",
                                                                                            "typeString": "contract Acquisition"
                                                                                        }
                                                                                    },
                                                                                    "id": 1697,
                                                                                    "isConstant": false,
                                                                                    "isLValue": false,
                                                                                    "isPure": false,
                                                                                    "lValueRequested": false,
                                                                                    "memberName": "buyer",
                                                                                    "nodeType": "MemberAccess",
                                                                                    "referencedDeclaration": 19,
                                                                                    "src": "9149:11:4",
                                                                                    "typeDescriptions": {
                                                                                        "typeIdentifier": "t_function_external_view$__$returns$_t_address_payable_$",
                                                                                        "typeString": "function () view external returns (address payable)"
                                                                                    }
                                                                                },
                                                                                "id": 1698,
                                                                                "isConstant": false,
                                                                                "isLValue": false,
                                                                                "isPure": false,
                                                                                "kind": "functionCall",
                                                                                "lValueRequested": false,
                                                                                "names": [],
                                                                                "nodeType": "FunctionCall",
                                                                                "src": "9149:13:4",
                                                                                "tryCall": false,
                                                                                "typeDescriptions": {
                                                                                    "typeIdentifier": "t_address_payable",
                                                                                    "typeString": "address payable"
                                                                                }
                                                                            }
                                                                        ],
                                                                        "expression": {
                                                                            "argumentTypes": [
                                                                                {
                                                                                    "typeIdentifier": "t_address_payable",
                                                                                    "typeString": "address payable"
                                                                                }
                                                                            ],
                                                                            "id": 1695,
                                                                            "name": "balanceOf",
                                                                            "nodeType": "Identifier",
                                                                            "overloadedDeclarations": [],
                                                                            "referencedDeclaration": 774,
                                                                            "src": "9139:9:4",
                                                                            "typeDescriptions": {
                                                                                "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                                                                                "typeString": "function (address) view returns (uint256)"
                                                                            }
                                                                        },
                                                                        "id": 1699,
                                                                        "isConstant": false,
                                                                        "isLValue": false,
                                                                        "isPure": false,
                                                                        "kind": "functionCall",
                                                                        "lValueRequested": false,
                                                                        "names": [],
                                                                        "nodeType": "FunctionCall",
                                                                        "src": "9139:24:4",
                                                                        "tryCall": false,
                                                                        "typeDescriptions": {
                                                                            "typeIdentifier": "t_uint256",
                                                                            "typeString": "uint256"
                                                                        }
                                                                    },
                                                                    "src": "9123:40:4",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_uint256",
                                                                        "typeString": "uint256"
                                                                    }
                                                                }
                                                            ],
                                                            "expression": {
                                                                "argumentTypes": [
                                                                    {
                                                                        "typeIdentifier": "t_uint256",
                                                                        "typeString": "uint256"
                                                                    }
                                                                ],
                                                                "expression": {
                                                                    "id": 1691,
                                                                    "name": "offer",
                                                                    "nodeType": "Identifier",
                                                                    "overloadedDeclarations": [],
                                                                    "referencedDeclaration": 1210,
                                                                    "src": "9104:5:4",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_contract$_Acquisition_$491",
                                                                        "typeString": "contract Acquisition"
                                                                    }
                                                                },
                                                                "id": 1692,
                                                                "isConstant": false,
                                                                "isLValue": false,
                                                                "isPure": false,
                                                                "lValueRequested": false,
                                                                "memberName": "isWellFunded",
                                                                "nodeType": "MemberAccess",
                                                                "referencedDeclaration": 132,
                                                                "src": "9104:18:4",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_bool_$",
                                                                    "typeString": "function (uint256) view external returns (bool)"
                                                                }
                                                            },
                                                            "id": 1701,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": false,
                                                            "kind": "functionCall",
                                                            "lValueRequested": false,
                                                            "names": [],
                                                            "nodeType": "FunctionCall",
                                                            "src": "9104:60:4",
                                                            "tryCall": false,
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_bool",
                                                                "typeString": "bool"
                                                            }
                                                        },
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_bool",
                                                            "typeString": "bool"
                                                        }
                                                    },
                                                    "falseBody": {
                                                        "id": 1712,
                                                        "nodeType": "Block",
                                                        "src": "9251:69:4",
                                                        "statements": [
                                                            {
                                                                "expression": {
                                                                    "arguments": [
                                                                        {
                                                                            "hexValue": "4163717569736974696f6e20636f6e7465737420756e7375636365737366756c",
                                                                            "id": 1709,
                                                                            "isConstant": false,
                                                                            "isLValue": false,
                                                                            "isPure": true,
                                                                            "kind": "string",
                                                                            "lValueRequested": false,
                                                                            "nodeType": "Literal",
                                                                            "src": "9273:34:4",
                                                                            "typeDescriptions": {
                                                                                "typeIdentifier": "t_stringliteral_aa7d91f6902b6dfd8562b6b2d6734954a0ce7d037818d714f6ee7e93da5b0321",
                                                                                "typeString": "literal_string \"Acquisition contest unsuccessful\""
                                                                            },
                                                                            "value": "Acquisition contest unsuccessful"
                                                                        }
                                                                    ],
                                                                    "expression": {
                                                                        "argumentTypes": [
                                                                            {
                                                                                "typeIdentifier": "t_stringliteral_aa7d91f6902b6dfd8562b6b2d6734954a0ce7d037818d714f6ee7e93da5b0321",
                                                                                "typeString": "literal_string \"Acquisition contest unsuccessful\""
                                                                            }
                                                                        ],
                                                                        "id": 1708,
                                                                        "name": "revert",
                                                                        "nodeType": "Identifier",
                                                                        "overloadedDeclarations": [
                                                                            -19,
                                                                            -19
                                                                        ],
                                                                        "referencedDeclaration": -19,
                                                                        "src": "9266:6:4",
                                                                        "typeDescriptions": {
                                                                            "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                                                                            "typeString": "function (string memory) pure"
                                                                        }
                                                                    },
                                                                    "id": 1710,
                                                                    "isConstant": false,
                                                                    "isLValue": false,
                                                                    "isPure": false,
                                                                    "kind": "functionCall",
                                                                    "lValueRequested": false,
                                                                    "names": [],
                                                                    "nodeType": "FunctionCall",
                                                                    "src": "9266:42:4",
                                                                    "tryCall": false,
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_tuple$__$",
                                                                        "typeString": "tuple()"
                                                                    }
                                                                },
                                                                "id": 1711,
                                                                "nodeType": "ExpressionStatement",
                                                                "src": "9266:42:4"
                                                            }
                                                        ]
                                                    },
                                                    "id": 1713,
                                                    "nodeType": "IfStatement",
                                                    "src": "9099:221:4",
                                                    "trueBody": {
                                                        "id": 1707,
                                                        "nodeType": "Block",
                                                        "src": "9166:79:4",
                                                        "statements": [
                                                            {
                                                                "expression": {
                                                                    "arguments": [
                                                                        {
                                                                            "hexValue": "4f6666657220776173206e6f742073756666696369656e746c792066756e646564",
                                                                            "id": 1704,
                                                                            "isConstant": false,
                                                                            "isLValue": false,
                                                                            "isPure": true,
                                                                            "kind": "string",
                                                                            "lValueRequested": false,
                                                                            "nodeType": "Literal",
                                                                            "src": "9197:35:4",
                                                                            "typeDescriptions": {
                                                                                "typeIdentifier": "t_stringliteral_54b7cf5e7486f72707f3a66b65729d76c164165d800a891964c385bf2a6163e2",
                                                                                "typeString": "literal_string \"Offer was not sufficiently funded\""
                                                                            },
                                                                            "value": "Offer was not sufficiently funded"
                                                                        }
                                                                    ],
                                                                    "expression": {
                                                                        "argumentTypes": [
                                                                            {
                                                                                "typeIdentifier": "t_stringliteral_54b7cf5e7486f72707f3a66b65729d76c164165d800a891964c385bf2a6163e2",
                                                                                "typeString": "literal_string \"Offer was not sufficiently funded\""
                                                                            }
                                                                        ],
                                                                        "id": 1703,
                                                                        "name": "killAcquisition",
                                                                        "nodeType": "Identifier",
                                                                        "overloadedDeclarations": [],
                                                                        "referencedDeclaration": 1753,
                                                                        "src": "9181:15:4",
                                                                        "typeDescriptions": {
                                                                            "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$",
                                                                            "typeString": "function (string memory)"
                                                                        }
                                                                    },
                                                                    "id": 1705,
                                                                    "isConstant": false,
                                                                    "isLValue": false,
                                                                    "isPure": false,
                                                                    "kind": "functionCall",
                                                                    "lValueRequested": false,
                                                                    "names": [],
                                                                    "nodeType": "FunctionCall",
                                                                    "src": "9181:52:4",
                                                                    "tryCall": false,
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_tuple$__$",
                                                                        "typeString": "tuple()"
                                                                    }
                                                                },
                                                                "id": 1706,
                                                                "nodeType": "ExpressionStatement",
                                                                "src": "9181:52:4"
                                                            }
                                                        ]
                                                    }
                                                },
                                                "id": 1714,
                                                "nodeType": "IfStatement",
                                                "src": "9000:320:4",
                                                "trueBody": {
                                                    "id": 1690,
                                                    "nodeType": "Block",
                                                    "src": "9029:64:4",
                                                    "statements": [
                                                        {
                                                            "expression": {
                                                                "arguments": [
                                                                    {
                                                                        "hexValue": "4e6f7420656e6f75676820737570706f7274",
                                                                        "id": 1687,
                                                                        "isConstant": false,
                                                                        "isLValue": false,
                                                                        "isPure": true,
                                                                        "kind": "string",
                                                                        "lValueRequested": false,
                                                                        "nodeType": "Literal",
                                                                        "src": "9060:20:4",
                                                                        "typeDescriptions": {
                                                                            "typeIdentifier": "t_stringliteral_8b1bfa7215bb19a9589873a1ddb9b9a7f2bb2b941479d5a6edfb124f8d17460f",
                                                                            "typeString": "literal_string \"Not enough support\""
                                                                        },
                                                                        "value": "Not enough support"
                                                                    }
                                                                ],
                                                                "expression": {
                                                                    "argumentTypes": [
                                                                        {
                                                                            "typeIdentifier": "t_stringliteral_8b1bfa7215bb19a9589873a1ddb9b9a7f2bb2b941479d5a6edfb124f8d17460f",
                                                                            "typeString": "literal_string \"Not enough support\""
                                                                        }
                                                                    ],
                                                                    "id": 1686,
                                                                    "name": "killAcquisition",
                                                                    "nodeType": "Identifier",
                                                                    "overloadedDeclarations": [],
                                                                    "referencedDeclaration": 1753,
                                                                    "src": "9044:15:4",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$",
                                                                        "typeString": "function (string memory)"
                                                                    }
                                                                },
                                                                "id": 1688,
                                                                "isConstant": false,
                                                                "isLValue": false,
                                                                "isPure": false,
                                                                "kind": "functionCall",
                                                                "lValueRequested": false,
                                                                "names": [],
                                                                "nodeType": "FunctionCall",
                                                                "src": "9044:37:4",
                                                                "tryCall": false,
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_tuple$__$",
                                                                    "typeString": "tuple()"
                                                                }
                                                            },
                                                            "id": 1689,
                                                            "nodeType": "ExpressionStatement",
                                                            "src": "9044:37:4"
                                                        }
                                                    ]
                                                }
                                            },
                                            "id": 1715,
                                            "nodeType": "IfStatement",
                                            "src": "8911:409:4",
                                            "trueBody": {
                                                "id": 1682,
                                                "nodeType": "Block",
                                                "src": "8935:59:4",
                                                "statements": [
                                                    {
                                                        "expression": {
                                                            "arguments": [
                                                                {
                                                                    "hexValue": "4f666665722065787069726564",
                                                                    "id": 1679,
                                                                    "isConstant": false,
                                                                    "isLValue": false,
                                                                    "isPure": true,
                                                                    "kind": "string",
                                                                    "lValueRequested": false,
                                                                    "nodeType": "Literal",
                                                                    "src": "8966:15:4",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_stringliteral_17f180ef3627517dd1bbda88122751c4a23740fadac2587a0b8847c098f52eb3",
                                                                        "typeString": "literal_string \"Offer expired\""
                                                                    },
                                                                    "value": "Offer expired"
                                                                }
                                                            ],
                                                            "expression": {
                                                                "argumentTypes": [
                                                                    {
                                                                        "typeIdentifier": "t_stringliteral_17f180ef3627517dd1bbda88122751c4a23740fadac2587a0b8847c098f52eb3",
                                                                        "typeString": "literal_string \"Offer expired\""
                                                                    }
                                                                ],
                                                                "id": 1678,
                                                                "name": "killAcquisition",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [],
                                                                "referencedDeclaration": 1753,
                                                                "src": "8950:15:4",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$",
                                                                    "typeString": "function (string memory)"
                                                                }
                                                            },
                                                            "id": 1680,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": false,
                                                            "kind": "functionCall",
                                                            "lValueRequested": false,
                                                            "names": [],
                                                            "nodeType": "FunctionCall",
                                                            "src": "8950:32:4",
                                                            "tryCall": false,
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_tuple$__$",
                                                                "typeString": "tuple()"
                                                            }
                                                        },
                                                        "id": 1681,
                                                        "nodeType": "ExpressionStatement",
                                                        "src": "8950:32:4"
                                                    }
                                                ]
                                            }
                                        }
                                    ]
                                },
                                "functionSelector": "6f4b18df",
                                "id": 1717,
                                "implemented": true,
                                "kind": "function",
                                "modifiers": [
                                    {
                                        "arguments": [],
                                        "id": 1673,
                                        "modifierName": {
                                            "id": 1672,
                                            "name": "offerPending",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 2104,
                                            "src": "8885:12:4",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_modifier$__$",
                                                "typeString": "modifier ()"
                                            }
                                        },
                                        "nodeType": "ModifierInvocation",
                                        "src": "8885:14:4"
                                    }
                                ],
                                "name": "contestAcquisition",
                                "nodeType": "FunctionDefinition",
                                "parameters": {
                                    "id": 1671,
                                    "nodeType": "ParameterList",
                                    "parameters": [],
                                    "src": "8875:2:4"
                                },
                                "returnParameters": {
                                    "id": 1674,
                                    "nodeType": "ParameterList",
                                    "parameters": [],
                                    "src": "8900:0:4"
                                },
                                "scope": 2116,
                                "src": "8848:479:4",
                                "stateMutability": "nonpayable",
                                "virtual": false,
                                "visibility": "public"
                            },
                            {
                                "body": {
                                    "id": 1752,
                                    "nodeType": "Block",
                                    "src": "9392:269:4",
                                    "statements": [
                                        {
                                            "assignments": [
                                                1723
                                            ],
                                            "declarations": [
                                                {
                                                    "constant": false,
                                                    "id": 1723,
                                                    "mutability": "mutable",
                                                    "name": "buyer",
                                                    "nodeType": "VariableDeclaration",
                                                    "scope": 1752,
                                                    "src": "9403:13:4",
                                                    "stateVariable": false,
                                                    "storageLocation": "default",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_address",
                                                        "typeString": "address"
                                                    },
                                                    "typeName": {
                                                        "id": 1722,
                                                        "name": "address",
                                                        "nodeType": "ElementaryTypeName",
                                                        "src": "9403:7:4",
                                                        "stateMutability": "nonpayable",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        }
                                                    },
                                                    "visibility": "internal"
                                                }
                                            ],
                                            "id": 1727,
                                            "initialValue": {
                                                "arguments": [],
                                                "expression": {
                                                    "argumentTypes": [],
                                                    "expression": {
                                                        "id": 1724,
                                                        "name": "offer",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 1210,
                                                        "src": "9419:5:4",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_contract$_Acquisition_$491",
                                                            "typeString": "contract Acquisition"
                                                        }
                                                    },
                                                    "id": 1725,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "memberName": "buyer",
                                                    "nodeType": "MemberAccess",
                                                    "referencedDeclaration": 19,
                                                    "src": "9419:11:4",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_function_external_view$__$returns$_t_address_payable_$",
                                                        "typeString": "function () view external returns (address payable)"
                                                    }
                                                },
                                                "id": 1726,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "9419:13:4",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address_payable",
                                                    "typeString": "address payable"
                                                }
                                            },
                                            "nodeType": "VariableDeclarationStatement",
                                            "src": "9403:29:4"
                                        },
                                        {
                                            "eventCall": {
                                                "arguments": [
                                                    {
                                                        "id": 1729,
                                                        "name": "buyer",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 1723,
                                                        "src": "9473:5:4",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        }
                                                    },
                                                    {
                                                        "expression": {
                                                            "id": 1730,
                                                            "name": "msg",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": -15,
                                                            "src": "9493:3:4",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_magic_message",
                                                                "typeString": "msg"
                                                            }
                                                        },
                                                        "id": 1731,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "memberName": "sender",
                                                        "nodeType": "MemberAccess",
                                                        "src": "9493:10:4",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_address_payable",
                                                            "typeString": "address payable"
                                                        }
                                                    },
                                                    {
                                                        "hexValue": "66616c7365",
                                                        "id": 1732,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": true,
                                                        "kind": "bool",
                                                        "lValueRequested": false,
                                                        "nodeType": "Literal",
                                                        "src": "9518:5:4",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_bool",
                                                            "typeString": "bool"
                                                        },
                                                        "value": "false"
                                                    },
                                                    {
                                                        "id": 1733,
                                                        "name": "message",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 1719,
                                                        "src": "9538:7:4",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_string_memory_ptr",
                                                            "typeString": "string memory"
                                                        }
                                                    },
                                                    {
                                                        "arguments": [],
                                                        "expression": {
                                                            "argumentTypes": [],
                                                            "id": 1734,
                                                            "name": "getPendingOffer",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 2078,
                                                            "src": "9560:15:4",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                                                "typeString": "function () view returns (address)"
                                                            }
                                                        },
                                                        "id": 1735,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "kind": "functionCall",
                                                        "lValueRequested": false,
                                                        "names": [],
                                                        "nodeType": "FunctionCall",
                                                        "src": "9560:17:4",
                                                        "tryCall": false,
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        }
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        },
                                                        {
                                                            "typeIdentifier": "t_address_payable",
                                                            "typeString": "address payable"
                                                        },
                                                        {
                                                            "typeIdentifier": "t_bool",
                                                            "typeString": "bool"
                                                        },
                                                        {
                                                            "typeIdentifier": "t_string_memory_ptr",
                                                            "typeString": "string memory"
                                                        },
                                                        {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        }
                                                    ],
                                                    "id": 1728,
                                                    "name": "OfferEnded",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 1248,
                                                    "src": "9448:10:4",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$_t_string_memory_ptr_$_t_address_$returns$__$",
                                                        "typeString": "function (address,address,bool,string memory,address)"
                                                    }
                                                },
                                                "id": 1736,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "9448:140:4",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_tuple$__$",
                                                    "typeString": "tuple()"
                                                }
                                            },
                                            "id": 1737,
                                            "nodeType": "EmitStatement",
                                            "src": "9443:145:4"
                                        },
                                        {
                                            "expression": {
                                                "arguments": [],
                                                "expression": {
                                                    "argumentTypes": [],
                                                    "expression": {
                                                        "id": 1738,
                                                        "name": "offer",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 1210,
                                                        "src": "9599:5:4",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_contract$_Acquisition_$491",
                                                            "typeString": "contract Acquisition"
                                                        }
                                                    },
                                                    "id": 1740,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "memberName": "kill",
                                                    "nodeType": "MemberAccess",
                                                    "referencedDeclaration": 478,
                                                    "src": "9599:10:4",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                                                        "typeString": "function () external"
                                                    }
                                                },
                                                "id": 1741,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "9599:12:4",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_tuple$__$",
                                                    "typeString": "tuple()"
                                                }
                                            },
                                            "id": 1742,
                                            "nodeType": "ExpressionStatement",
                                            "src": "9599:12:4"
                                        },
                                        {
                                            "expression": {
                                                "id": 1750,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftHandSide": {
                                                    "id": 1743,
                                                    "name": "offer",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 1210,
                                                    "src": "9622:5:4",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_contract$_Acquisition_$491",
                                                        "typeString": "contract Acquisition"
                                                    }
                                                },
                                                "nodeType": "Assignment",
                                                "operator": "=",
                                                "rightHandSide": {
                                                    "arguments": [
                                                        {
                                                            "arguments": [
                                                                {
                                                                    "hexValue": "30",
                                                                    "id": 1747,
                                                                    "isConstant": false,
                                                                    "isLValue": false,
                                                                    "isPure": true,
                                                                    "kind": "number",
                                                                    "lValueRequested": false,
                                                                    "nodeType": "Literal",
                                                                    "src": "9650:1:4",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_rational_0_by_1",
                                                                        "typeString": "int_const 0"
                                                                    },
                                                                    "value": "0"
                                                                }
                                                            ],
                                                            "expression": {
                                                                "argumentTypes": [
                                                                    {
                                                                        "typeIdentifier": "t_rational_0_by_1",
                                                                        "typeString": "int_const 0"
                                                                    }
                                                                ],
                                                                "id": 1746,
                                                                "isConstant": false,
                                                                "isLValue": false,
                                                                "isPure": true,
                                                                "lValueRequested": false,
                                                                "nodeType": "ElementaryTypeNameExpression",
                                                                "src": "9642:7:4",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_type$_t_address_$",
                                                                    "typeString": "type(address)"
                                                                },
                                                                "typeName": {
                                                                    "id": 1745,
                                                                    "name": "address",
                                                                    "nodeType": "ElementaryTypeName",
                                                                    "src": "9642:7:4",
                                                                    "typeDescriptions": {}
                                                                }
                                                            },
                                                            "id": 1748,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": true,
                                                            "kind": "typeConversion",
                                                            "lValueRequested": false,
                                                            "names": [],
                                                            "nodeType": "FunctionCall",
                                                            "src": "9642:10:4",
                                                            "tryCall": false,
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_address_payable",
                                                                "typeString": "address payable"
                                                            }
                                                        }
                                                    ],
                                                    "expression": {
                                                        "argumentTypes": [
                                                            {
                                                                "typeIdentifier": "t_address_payable",
                                                                "typeString": "address payable"
                                                            }
                                                        ],
                                                        "id": 1744,
                                                        "name": "Acquisition",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 491,
                                                        "src": "9630:11:4",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_type$_t_contract$_Acquisition_$491_$",
                                                            "typeString": "type(contract Acquisition)"
                                                        }
                                                    },
                                                    "id": 1749,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "kind": "typeConversion",
                                                    "lValueRequested": false,
                                                    "names": [],
                                                    "nodeType": "FunctionCall",
                                                    "src": "9630:23:4",
                                                    "tryCall": false,
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_contract$_Acquisition_$491",
                                                        "typeString": "contract Acquisition"
                                                    }
                                                },
                                                "src": "9622:31:4",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_contract$_Acquisition_$491",
                                                    "typeString": "contract Acquisition"
                                                }
                                            },
                                            "id": 1751,
                                            "nodeType": "ExpressionStatement",
                                            "src": "9622:31:4"
                                        }
                                    ]
                                },
                                "id": 1753,
                                "implemented": true,
                                "kind": "function",
                                "modifiers": [],
                                "name": "killAcquisition",
                                "nodeType": "FunctionDefinition",
                                "parameters": {
                                    "id": 1720,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 1719,
                                            "mutability": "mutable",
                                            "name": "message",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 1753,
                                            "src": "9360:21:4",
                                            "stateVariable": false,
                                            "storageLocation": "memory",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_string_memory_ptr",
                                                "typeString": "string"
                                            },
                                            "typeName": {
                                                "id": 1718,
                                                "name": "string",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "9360:6:4",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_string_storage_ptr",
                                                    "typeString": "string"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "9359:23:4"
                                },
                                "returnParameters": {
                                    "id": 1721,
                                    "nodeType": "ParameterList",
                                    "parameters": [],
                                    "src": "9392:0:4"
                                },
                                "scope": 2116,
                                "src": "9335:326:4",
                                "stateMutability": "nonpayable",
                                "virtual": false,
                                "visibility": "internal"
                            },
                            {
                                "body": {
                                    "id": 1814,
                                    "nodeType": "Block",
                                    "src": "9722:564:4",
                                    "statements": [
                                        {
                                            "assignments": [
                                                1759
                                            ],
                                            "declarations": [
                                                {
                                                    "constant": false,
                                                    "id": 1759,
                                                    "mutability": "mutable",
                                                    "name": "buyer",
                                                    "nodeType": "VariableDeclaration",
                                                    "scope": 1814,
                                                    "src": "9733:13:4",
                                                    "stateVariable": false,
                                                    "storageLocation": "default",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_address",
                                                        "typeString": "address"
                                                    },
                                                    "typeName": {
                                                        "id": 1758,
                                                        "name": "address",
                                                        "nodeType": "ElementaryTypeName",
                                                        "src": "9733:7:4",
                                                        "stateMutability": "nonpayable",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        }
                                                    },
                                                    "visibility": "internal"
                                                }
                                            ],
                                            "id": 1763,
                                            "initialValue": {
                                                "arguments": [],
                                                "expression": {
                                                    "argumentTypes": [],
                                                    "expression": {
                                                        "id": 1760,
                                                        "name": "offer",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 1210,
                                                        "src": "9749:5:4",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_contract$_Acquisition_$491",
                                                            "typeString": "contract Acquisition"
                                                        }
                                                    },
                                                    "id": 1761,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "memberName": "buyer",
                                                    "nodeType": "MemberAccess",
                                                    "referencedDeclaration": 19,
                                                    "src": "9749:11:4",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_function_external_view$__$returns$_t_address_payable_$",
                                                        "typeString": "function () view external returns (address payable)"
                                                    }
                                                },
                                                "id": 1762,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "9749:13:4",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address_payable",
                                                    "typeString": "address payable"
                                                }
                                            },
                                            "nodeType": "VariableDeclarationStatement",
                                            "src": "9733:29:4"
                                        },
                                        {
                                            "expression": {
                                                "arguments": [
                                                    {
                                                        "commonType": {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        },
                                                        "id": 1768,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "leftExpression": {
                                                            "expression": {
                                                                "id": 1765,
                                                                "name": "msg",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [],
                                                                "referencedDeclaration": -15,
                                                                "src": "9781:3:4",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_magic_message",
                                                                    "typeString": "msg"
                                                                }
                                                            },
                                                            "id": 1766,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": false,
                                                            "lValueRequested": false,
                                                            "memberName": "sender",
                                                            "nodeType": "MemberAccess",
                                                            "src": "9781:10:4",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_address_payable",
                                                                "typeString": "address payable"
                                                            }
                                                        },
                                                        "nodeType": "BinaryOperation",
                                                        "operator": "==",
                                                        "rightExpression": {
                                                            "id": 1767,
                                                            "name": "buyer",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 1759,
                                                            "src": "9795:5:4",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_address",
                                                                "typeString": "address"
                                                            }
                                                        },
                                                        "src": "9781:19:4",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_bool",
                                                            "typeString": "bool"
                                                        }
                                                    },
                                                    {
                                                        "hexValue": "596f7520617265206e6f7420617574686f72697a656420746f20636f6d706c6574652074686973206163717569736974696f6e206f66666572",
                                                        "id": 1769,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": true,
                                                        "kind": "string",
                                                        "lValueRequested": false,
                                                        "nodeType": "Literal",
                                                        "src": "9802:59:4",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_stringliteral_e5b3a2a771eb85fd101cc67c606b39875aff635052cfaa96a0c3f54cf4750cca",
                                                            "typeString": "literal_string \"You are not authorized to complete this acquisition offer\""
                                                        },
                                                        "value": "You are not authorized to complete this acquisition offer"
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_bool",
                                                            "typeString": "bool"
                                                        },
                                                        {
                                                            "typeIdentifier": "t_stringliteral_e5b3a2a771eb85fd101cc67c606b39875aff635052cfaa96a0c3f54cf4750cca",
                                                            "typeString": "literal_string \"You are not authorized to complete this acquisition offer\""
                                                        }
                                                    ],
                                                    "id": 1764,
                                                    "name": "require",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [
                                                        -18,
                                                        -18
                                                    ],
                                                    "referencedDeclaration": -18,
                                                    "src": "9773:7:4",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                                        "typeString": "function (bool,string memory) pure"
                                                    }
                                                },
                                                "id": 1770,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "9773:89:4",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_tuple$__$",
                                                    "typeString": "tuple()"
                                                }
                                            },
                                            "id": 1771,
                                            "nodeType": "ExpressionStatement",
                                            "src": "9773:89:4"
                                        },
                                        {
                                            "expression": {
                                                "arguments": [
                                                    {
                                                        "arguments": [],
                                                        "expression": {
                                                            "argumentTypes": [],
                                                            "expression": {
                                                                "id": 1773,
                                                                "name": "offer",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [],
                                                                "referencedDeclaration": 1210,
                                                                "src": "9881:5:4",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_contract$_Acquisition_$491",
                                                                    "typeString": "contract Acquisition"
                                                                }
                                                            },
                                                            "id": 1774,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": false,
                                                            "lValueRequested": false,
                                                            "memberName": "isQuorumReached",
                                                            "nodeType": "MemberAccess",
                                                            "referencedDeclaration": 170,
                                                            "src": "9881:21:4",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_function_external_view$__$returns$_t_bool_$",
                                                                "typeString": "function () view external returns (bool)"
                                                            }
                                                        },
                                                        "id": 1775,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "kind": "functionCall",
                                                        "lValueRequested": false,
                                                        "names": [],
                                                        "nodeType": "FunctionCall",
                                                        "src": "9881:23:4",
                                                        "tryCall": false,
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_bool",
                                                            "typeString": "bool"
                                                        }
                                                    },
                                                    {
                                                        "hexValue": "496e73756666696369656e74206e756d626572206f662079657320766f746573",
                                                        "id": 1776,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": true,
                                                        "kind": "string",
                                                        "lValueRequested": false,
                                                        "nodeType": "Literal",
                                                        "src": "9906:34:4",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_stringliteral_dffbc573d7a418a13f1dc2b17b8a2e58e28a4380ab79296592ccd32c4a231695",
                                                            "typeString": "literal_string \"Insufficient number of yes votes\""
                                                        },
                                                        "value": "Insufficient number of yes votes"
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_bool",
                                                            "typeString": "bool"
                                                        },
                                                        {
                                                            "typeIdentifier": "t_stringliteral_dffbc573d7a418a13f1dc2b17b8a2e58e28a4380ab79296592ccd32c4a231695",
                                                            "typeString": "literal_string \"Insufficient number of yes votes\""
                                                        }
                                                    ],
                                                    "id": 1772,
                                                    "name": "require",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [
                                                        -18,
                                                        -18
                                                    ],
                                                    "referencedDeclaration": -18,
                                                    "src": "9873:7:4",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                                        "typeString": "function (bool,string memory) pure"
                                                    }
                                                },
                                                "id": 1777,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "9873:68:4",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_tuple$__$",
                                                    "typeString": "tuple()"
                                                }
                                            },
                                            "id": 1778,
                                            "nodeType": "ExpressionStatement",
                                            "src": "9873:68:4"
                                        },
                                        {
                                            "expression": {
                                                "arguments": [
                                                    {
                                                        "arguments": [
                                                            {
                                                                "commonType": {
                                                                    "typeIdentifier": "t_uint256",
                                                                    "typeString": "uint256"
                                                                },
                                                                "id": 1787,
                                                                "isConstant": false,
                                                                "isLValue": false,
                                                                "isPure": false,
                                                                "lValueRequested": false,
                                                                "leftExpression": {
                                                                    "arguments": [],
                                                                    "expression": {
                                                                        "argumentTypes": [],
                                                                        "id": 1782,
                                                                        "name": "totalSupply",
                                                                        "nodeType": "Identifier",
                                                                        "overloadedDeclarations": [],
                                                                        "referencedDeclaration": 760,
                                                                        "src": "9979:11:4",
                                                                        "typeDescriptions": {
                                                                            "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                                                            "typeString": "function () view returns (uint256)"
                                                                        }
                                                                    },
                                                                    "id": 1783,
                                                                    "isConstant": false,
                                                                    "isLValue": false,
                                                                    "isPure": false,
                                                                    "kind": "functionCall",
                                                                    "lValueRequested": false,
                                                                    "names": [],
                                                                    "nodeType": "FunctionCall",
                                                                    "src": "9979:13:4",
                                                                    "tryCall": false,
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_uint256",
                                                                        "typeString": "uint256"
                                                                    }
                                                                },
                                                                "nodeType": "BinaryOperation",
                                                                "operator": "-",
                                                                "rightExpression": {
                                                                    "arguments": [
                                                                        {
                                                                            "id": 1785,
                                                                            "name": "buyer",
                                                                            "nodeType": "Identifier",
                                                                            "overloadedDeclarations": [],
                                                                            "referencedDeclaration": 1759,
                                                                            "src": "10005:5:4",
                                                                            "typeDescriptions": {
                                                                                "typeIdentifier": "t_address",
                                                                                "typeString": "address"
                                                                            }
                                                                        }
                                                                    ],
                                                                    "expression": {
                                                                        "argumentTypes": [
                                                                            {
                                                                                "typeIdentifier": "t_address",
                                                                                "typeString": "address"
                                                                            }
                                                                        ],
                                                                        "id": 1784,
                                                                        "name": "balanceOf",
                                                                        "nodeType": "Identifier",
                                                                        "overloadedDeclarations": [],
                                                                        "referencedDeclaration": 774,
                                                                        "src": "9995:9:4",
                                                                        "typeDescriptions": {
                                                                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                                                                            "typeString": "function (address) view returns (uint256)"
                                                                        }
                                                                    },
                                                                    "id": 1786,
                                                                    "isConstant": false,
                                                                    "isLValue": false,
                                                                    "isPure": false,
                                                                    "kind": "functionCall",
                                                                    "lValueRequested": false,
                                                                    "names": [],
                                                                    "nodeType": "FunctionCall",
                                                                    "src": "9995:16:4",
                                                                    "tryCall": false,
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_uint256",
                                                                        "typeString": "uint256"
                                                                    }
                                                                },
                                                                "src": "9979:32:4",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_uint256",
                                                                    "typeString": "uint256"
                                                                }
                                                            }
                                                        ],
                                                        "expression": {
                                                            "argumentTypes": [
                                                                {
                                                                    "typeIdentifier": "t_uint256",
                                                                    "typeString": "uint256"
                                                                }
                                                            ],
                                                            "expression": {
                                                                "id": 1780,
                                                                "name": "offer",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [],
                                                                "referencedDeclaration": 1210,
                                                                "src": "9960:5:4",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_contract$_Acquisition_$491",
                                                                    "typeString": "contract Acquisition"
                                                                }
                                                            },
                                                            "id": 1781,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": false,
                                                            "lValueRequested": false,
                                                            "memberName": "isWellFunded",
                                                            "nodeType": "MemberAccess",
                                                            "referencedDeclaration": 132,
                                                            "src": "9960:18:4",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_bool_$",
                                                                "typeString": "function (uint256) view external returns (bool)"
                                                            }
                                                        },
                                                        "id": 1788,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "kind": "functionCall",
                                                        "lValueRequested": false,
                                                        "names": [],
                                                        "nodeType": "FunctionCall",
                                                        "src": "9960:52:4",
                                                        "tryCall": false,
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_bool",
                                                            "typeString": "bool"
                                                        }
                                                    },
                                                    {
                                                        "hexValue": "4f6666657220696e73756666696369656e746c792066756e646564",
                                                        "id": 1789,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": true,
                                                        "kind": "string",
                                                        "lValueRequested": false,
                                                        "nodeType": "Literal",
                                                        "src": "10014:29:4",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_stringliteral_f7a07b211d44d32c97ff2ae80cfb13232eb23afeccf7aafcd906bcc703e93954",
                                                            "typeString": "literal_string \"Offer insufficiently funded\""
                                                        },
                                                        "value": "Offer insufficiently funded"
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_bool",
                                                            "typeString": "bool"
                                                        },
                                                        {
                                                            "typeIdentifier": "t_stringliteral_f7a07b211d44d32c97ff2ae80cfb13232eb23afeccf7aafcd906bcc703e93954",
                                                            "typeString": "literal_string \"Offer insufficiently funded\""
                                                        }
                                                    ],
                                                    "id": 1779,
                                                    "name": "require",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [
                                                        -18,
                                                        -18
                                                    ],
                                                    "referencedDeclaration": -18,
                                                    "src": "9952:7:4",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                                        "typeString": "function (bool,string memory) pure"
                                                    }
                                                },
                                                "id": 1790,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "9952:92:4",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_tuple$__$",
                                                    "typeString": "tuple()"
                                                }
                                            },
                                            "id": 1791,
                                            "nodeType": "ExpressionStatement",
                                            "src": "9952:92:4"
                                        },
                                        {
                                            "expression": {
                                                "arguments": [
                                                    {
                                                        "id": 1793,
                                                        "name": "buyer",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 1759,
                                                        "src": "10070:5:4",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        }
                                                    },
                                                    {
                                                        "arguments": [],
                                                        "expression": {
                                                            "argumentTypes": [],
                                                            "expression": {
                                                                "id": 1794,
                                                                "name": "offer",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [],
                                                                "referencedDeclaration": 1210,
                                                                "src": "10077:5:4",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_contract$_Acquisition_$491",
                                                                    "typeString": "contract Acquisition"
                                                                }
                                                            },
                                                            "id": 1795,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": false,
                                                            "lValueRequested": false,
                                                            "memberName": "currency",
                                                            "nodeType": "MemberAccess",
                                                            "referencedDeclaration": 21,
                                                            "src": "10077:14:4",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                                                                "typeString": "function () view external returns (address)"
                                                            }
                                                        },
                                                        "id": 1796,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "kind": "functionCall",
                                                        "lValueRequested": false,
                                                        "names": [],
                                                        "nodeType": "FunctionCall",
                                                        "src": "10077:16:4",
                                                        "tryCall": false,
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        }
                                                    },
                                                    {
                                                        "arguments": [],
                                                        "expression": {
                                                            "argumentTypes": [],
                                                            "expression": {
                                                                "id": 1797,
                                                                "name": "offer",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [],
                                                                "referencedDeclaration": 1210,
                                                                "src": "10095:5:4",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_contract$_Acquisition_$491",
                                                                    "typeString": "contract Acquisition"
                                                                }
                                                            },
                                                            "id": 1798,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": false,
                                                            "lValueRequested": false,
                                                            "memberName": "price",
                                                            "nodeType": "MemberAccess",
                                                            "referencedDeclaration": 23,
                                                            "src": "10095:11:4",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                                                                "typeString": "function () view external returns (uint256)"
                                                            }
                                                        },
                                                        "id": 1799,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "kind": "functionCall",
                                                        "lValueRequested": false,
                                                        "names": [],
                                                        "nodeType": "FunctionCall",
                                                        "src": "10095:13:4",
                                                        "tryCall": false,
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        }
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        },
                                                        {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        },
                                                        {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        }
                                                    ],
                                                    "id": 1792,
                                                    "name": "invertHoldings",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 1899,
                                                    "src": "10055:14:4",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                                                        "typeString": "function (address,address,uint256)"
                                                    }
                                                },
                                                "id": 1800,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "10055:54:4",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_tuple$__$",
                                                    "typeString": "tuple()"
                                                }
                                            },
                                            "id": 1801,
                                            "nodeType": "ExpressionStatement",
                                            "src": "10055:54:4"
                                        },
                                        {
                                            "eventCall": {
                                                "arguments": [
                                                    {
                                                        "id": 1803,
                                                        "name": "buyer",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 1759,
                                                        "src": "10150:5:4",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        }
                                                    },
                                                    {
                                                        "expression": {
                                                            "id": 1804,
                                                            "name": "msg",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": -15,
                                                            "src": "10170:3:4",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_magic_message",
                                                                "typeString": "msg"
                                                            }
                                                        },
                                                        "id": 1805,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "memberName": "sender",
                                                        "nodeType": "MemberAccess",
                                                        "src": "10170:10:4",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_address_payable",
                                                            "typeString": "address payable"
                                                        }
                                                    },
                                                    {
                                                        "hexValue": "74727565",
                                                        "id": 1806,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": true,
                                                        "kind": "bool",
                                                        "lValueRequested": false,
                                                        "nodeType": "Literal",
                                                        "src": "10195:4:4",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_bool",
                                                            "typeString": "bool"
                                                        },
                                                        "value": "true"
                                                    },
                                                    {
                                                        "hexValue": "436f6d706c65746564207375636365737366756c6c79",
                                                        "id": 1807,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": true,
                                                        "kind": "string",
                                                        "lValueRequested": false,
                                                        "nodeType": "Literal",
                                                        "src": "10214:24:4",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_stringliteral_31a7701a13c15273e14dfc82a8058f6e1dc59cba318bff3960c721b89ae9c554",
                                                            "typeString": "literal_string \"Completed successfully\""
                                                        },
                                                        "value": "Completed successfully"
                                                    },
                                                    {
                                                        "arguments": [
                                                            {
                                                                "id": 1810,
                                                                "name": "offer",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [],
                                                                "referencedDeclaration": 1210,
                                                                "src": "10261:5:4",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_contract$_Acquisition_$491",
                                                                    "typeString": "contract Acquisition"
                                                                }
                                                            }
                                                        ],
                                                        "expression": {
                                                            "argumentTypes": [
                                                                {
                                                                    "typeIdentifier": "t_contract$_Acquisition_$491",
                                                                    "typeString": "contract Acquisition"
                                                                }
                                                            ],
                                                            "id": 1809,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": true,
                                                            "lValueRequested": false,
                                                            "nodeType": "ElementaryTypeNameExpression",
                                                            "src": "10253:7:4",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_type$_t_address_$",
                                                                "typeString": "type(address)"
                                                            },
                                                            "typeName": {
                                                                "id": 1808,
                                                                "name": "address",
                                                                "nodeType": "ElementaryTypeName",
                                                                "src": "10253:7:4",
                                                                "typeDescriptions": {}
                                                            }
                                                        },
                                                        "id": 1811,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "kind": "typeConversion",
                                                        "lValueRequested": false,
                                                        "names": [],
                                                        "nodeType": "FunctionCall",
                                                        "src": "10253:14:4",
                                                        "tryCall": false,
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        }
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        },
                                                        {
                                                            "typeIdentifier": "t_address_payable",
                                                            "typeString": "address payable"
                                                        },
                                                        {
                                                            "typeIdentifier": "t_bool",
                                                            "typeString": "bool"
                                                        },
                                                        {
                                                            "typeIdentifier": "t_stringliteral_31a7701a13c15273e14dfc82a8058f6e1dc59cba318bff3960c721b89ae9c554",
                                                            "typeString": "literal_string \"Completed successfully\""
                                                        },
                                                        {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        }
                                                    ],
                                                    "id": 1802,
                                                    "name": "OfferEnded",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 1248,
                                                    "src": "10125:10:4",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$_t_string_memory_ptr_$_t_address_$returns$__$",
                                                        "typeString": "function (address,address,bool,string memory,address)"
                                                    }
                                                },
                                                "id": 1812,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "10125:153:4",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_tuple$__$",
                                                    "typeString": "tuple()"
                                                }
                                            },
                                            "id": 1813,
                                            "nodeType": "EmitStatement",
                                            "src": "10120:158:4"
                                        }
                                    ]
                                },
                                "functionSelector": "141c7068",
                                "id": 1815,
                                "implemented": true,
                                "kind": "function",
                                "modifiers": [
                                    {
                                        "arguments": [],
                                        "id": 1756,
                                        "modifierName": {
                                            "id": 1755,
                                            "name": "offerPending",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 2104,
                                            "src": "9707:12:4",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_modifier$__$",
                                                "typeString": "modifier ()"
                                            }
                                        },
                                        "nodeType": "ModifierInvocation",
                                        "src": "9707:14:4"
                                    }
                                ],
                                "name": "completeAcquisition",
                                "nodeType": "FunctionDefinition",
                                "parameters": {
                                    "id": 1754,
                                    "nodeType": "ParameterList",
                                    "parameters": [],
                                    "src": "9697:2:4"
                                },
                                "returnParameters": {
                                    "id": 1757,
                                    "nodeType": "ParameterList",
                                    "parameters": [],
                                    "src": "9722:0:4"
                                },
                                "scope": 2116,
                                "src": "9669:617:4",
                                "stateMutability": "nonpayable",
                                "virtual": false,
                                "visibility": "public"
                            },
                            {
                                "body": {
                                    "id": 1827,
                                    "nodeType": "Block",
                                    "src": "10344:57:4",
                                    "statements": [
                                        {
                                            "expression": {
                                                "condition": {
                                                    "arguments": [],
                                                    "expression": {
                                                        "argumentTypes": [],
                                                        "id": 1820,
                                                        "name": "offerExists",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 2092,
                                                        "src": "10362:11:4",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                                                            "typeString": "function () view returns (bool)"
                                                        }
                                                    },
                                                    "id": 1821,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "kind": "functionCall",
                                                    "lValueRequested": false,
                                                    "names": [],
                                                    "nodeType": "FunctionCall",
                                                    "src": "10362:13:4",
                                                    "tryCall": false,
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_bool",
                                                        "typeString": "bool"
                                                    }
                                                },
                                                "falseExpression": {
                                                    "hexValue": "66616c7365",
                                                    "id": 1824,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "kind": "bool",
                                                    "lValueRequested": false,
                                                    "nodeType": "Literal",
                                                    "src": "10388:5:4",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_bool",
                                                        "typeString": "bool"
                                                    },
                                                    "value": "false"
                                                },
                                                "id": 1825,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "nodeType": "Conditional",
                                                "src": "10362:31:4",
                                                "trueExpression": {
                                                    "id": 1823,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "nodeType": "UnaryOperation",
                                                    "operator": "!",
                                                    "prefix": true,
                                                    "src": "10378:7:4",
                                                    "subExpression": {
                                                        "id": 1822,
                                                        "name": "active",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 1228,
                                                        "src": "10379:6:4",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_bool",
                                                            "typeString": "bool"
                                                        }
                                                    },
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_bool",
                                                        "typeString": "bool"
                                                    }
                                                },
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            },
                                            "functionReturnParameters": 1819,
                                            "id": 1826,
                                            "nodeType": "Return",
                                            "src": "10355:38:4"
                                        }
                                    ]
                                },
                                "functionSelector": "ec6580e2",
                                "id": 1828,
                                "implemented": true,
                                "kind": "function",
                                "modifiers": [],
                                "name": "wasAcquired",
                                "nodeType": "FunctionDefinition",
                                "parameters": {
                                    "id": 1816,
                                    "nodeType": "ParameterList",
                                    "parameters": [],
                                    "src": "10314:2:4"
                                },
                                "returnParameters": {
                                    "id": 1819,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 1818,
                                            "mutability": "mutable",
                                            "name": "",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 1828,
                                            "src": "10338:4:4",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_bool",
                                                "typeString": "bool"
                                            },
                                            "typeName": {
                                                "id": 1817,
                                                "name": "bool",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "10338:4:4",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "10337:6:4"
                                },
                                "scope": 2116,
                                "src": "10294:107:4",
                                "stateMutability": "view",
                                "virtual": false,
                                "visibility": "public"
                            },
                            {
                                "body": {
                                    "id": 1898,
                                    "nodeType": "Block",
                                    "src": "10504:515:4",
                                    "statements": [
                                        {
                                            "assignments": [
                                                1838
                                            ],
                                            "declarations": [
                                                {
                                                    "constant": false,
                                                    "id": 1838,
                                                    "mutability": "mutable",
                                                    "name": "buyerBalance",
                                                    "nodeType": "VariableDeclaration",
                                                    "scope": 1898,
                                                    "src": "10515:20:4",
                                                    "stateVariable": false,
                                                    "storageLocation": "default",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    },
                                                    "typeName": {
                                                        "id": 1837,
                                                        "name": "uint256",
                                                        "nodeType": "ElementaryTypeName",
                                                        "src": "10515:7:4",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        }
                                                    },
                                                    "visibility": "internal"
                                                }
                                            ],
                                            "id": 1842,
                                            "initialValue": {
                                                "arguments": [
                                                    {
                                                        "id": 1840,
                                                        "name": "newOwner",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 1830,
                                                        "src": "10548:8:4",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        }
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        }
                                                    ],
                                                    "id": 1839,
                                                    "name": "balanceOf",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 774,
                                                    "src": "10538:9:4",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                                                        "typeString": "function (address) view returns (uint256)"
                                                    }
                                                },
                                                "id": 1841,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "10538:19:4",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            },
                                            "nodeType": "VariableDeclarationStatement",
                                            "src": "10515:42:4"
                                        },
                                        {
                                            "assignments": [
                                                1844
                                            ],
                                            "declarations": [
                                                {
                                                    "constant": false,
                                                    "id": 1844,
                                                    "mutability": "mutable",
                                                    "name": "initialSupply",
                                                    "nodeType": "VariableDeclaration",
                                                    "scope": 1898,
                                                    "src": "10568:21:4",
                                                    "stateVariable": false,
                                                    "storageLocation": "default",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    },
                                                    "typeName": {
                                                        "id": 1843,
                                                        "name": "uint256",
                                                        "nodeType": "ElementaryTypeName",
                                                        "src": "10568:7:4",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        }
                                                    },
                                                    "visibility": "internal"
                                                }
                                            ],
                                            "id": 1847,
                                            "initialValue": {
                                                "arguments": [],
                                                "expression": {
                                                    "argumentTypes": [],
                                                    "id": 1845,
                                                    "name": "totalSupply",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 760,
                                                    "src": "10592:11:4",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                                        "typeString": "function () view returns (uint256)"
                                                    }
                                                },
                                                "id": 1846,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "10592:13:4",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            },
                                            "nodeType": "VariableDeclarationStatement",
                                            "src": "10568:37:4"
                                        },
                                        {
                                            "expression": {
                                                "id": 1850,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftHandSide": {
                                                    "id": 1848,
                                                    "name": "active",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 1228,
                                                    "src": "10616:6:4",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_bool",
                                                        "typeString": "bool"
                                                    }
                                                },
                                                "nodeType": "Assignment",
                                                "operator": "=",
                                                "rightHandSide": {
                                                    "hexValue": "66616c7365",
                                                    "id": 1849,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "kind": "bool",
                                                    "lValueRequested": false,
                                                    "nodeType": "Literal",
                                                    "src": "10625:5:4",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_bool",
                                                        "typeString": "bool"
                                                    },
                                                    "value": "false"
                                                },
                                                "src": "10616:14:4",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            },
                                            "id": 1851,
                                            "nodeType": "ExpressionStatement",
                                            "src": "10616:14:4"
                                        },
                                        {
                                            "expression": {
                                                "arguments": [
                                                    {
                                                        "id": 1853,
                                                        "name": "buyerBalance",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 1838,
                                                        "src": "10648:12:4",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        }
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        }
                                                    ],
                                                    "id": 1852,
                                                    "name": "unwrap",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 1459,
                                                    "src": "10641:6:4",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$_t_address_$_t_uint256_$",
                                                        "typeString": "function (uint256) returns (address,uint256)"
                                                    }
                                                },
                                                "id": 1854,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "10641:20:4",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
                                                    "typeString": "tuple(address,uint256)"
                                                }
                                            },
                                            "id": 1855,
                                            "nodeType": "ExpressionStatement",
                                            "src": "10641:20:4"
                                        },
                                        {
                                            "assignments": [
                                                1857
                                            ],
                                            "declarations": [
                                                {
                                                    "constant": false,
                                                    "id": 1857,
                                                    "mutability": "mutable",
                                                    "name": "remaining",
                                                    "nodeType": "VariableDeclaration",
                                                    "scope": 1898,
                                                    "src": "10672:17:4",
                                                    "stateVariable": false,
                                                    "storageLocation": "default",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    },
                                                    "typeName": {
                                                        "id": 1856,
                                                        "name": "uint256",
                                                        "nodeType": "ElementaryTypeName",
                                                        "src": "10672:7:4",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        }
                                                    },
                                                    "visibility": "internal"
                                                }
                                            ],
                                            "id": 1862,
                                            "initialValue": {
                                                "arguments": [
                                                    {
                                                        "id": 1860,
                                                        "name": "buyerBalance",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 1838,
                                                        "src": "10710:12:4",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        }
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        }
                                                    ],
                                                    "expression": {
                                                        "id": 1858,
                                                        "name": "initialSupply",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 1844,
                                                        "src": "10692:13:4",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        }
                                                    },
                                                    "id": 1859,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "memberName": "sub",
                                                    "nodeType": "MemberAccess",
                                                    "referencedDeclaration": 2902,
                                                    "src": "10692:17:4",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                                                    }
                                                },
                                                "id": 1861,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "10692:31:4",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            },
                                            "nodeType": "VariableDeclarationStatement",
                                            "src": "10672:51:4"
                                        },
                                        {
                                            "expression": {
                                                "arguments": [
                                                    {
                                                        "arguments": [
                                                            {
                                                                "id": 1866,
                                                                "name": "newOwner",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [],
                                                                "referencedDeclaration": 1830,
                                                                "src": "10759:8:4",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_address",
                                                                    "typeString": "address"
                                                                }
                                                            },
                                                            {
                                                                "id": 1867,
                                                                "name": "remaining",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [],
                                                                "referencedDeclaration": 1857,
                                                                "src": "10769:9:4",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_uint256",
                                                                    "typeString": "uint256"
                                                                }
                                                            }
                                                        ],
                                                        "expression": {
                                                            "argumentTypes": [
                                                                {
                                                                    "typeIdentifier": "t_address",
                                                                    "typeString": "address"
                                                                },
                                                                {
                                                                    "typeIdentifier": "t_uint256",
                                                                    "typeString": "uint256"
                                                                }
                                                            ],
                                                            "expression": {
                                                                "id": 1864,
                                                                "name": "wrapped",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [],
                                                                "referencedDeclaration": 1205,
                                                                "src": "10742:7:4",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_contract$_IERC20_$2809",
                                                                    "typeString": "contract IERC20"
                                                                }
                                                            },
                                                            "id": 1865,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": false,
                                                            "lValueRequested": false,
                                                            "memberName": "transfer",
                                                            "nodeType": "MemberAccess",
                                                            "referencedDeclaration": 2758,
                                                            "src": "10742:16:4",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                                                "typeString": "function (address,uint256) external returns (bool)"
                                                            }
                                                        },
                                                        "id": 1868,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "kind": "functionCall",
                                                        "lValueRequested": false,
                                                        "names": [],
                                                        "nodeType": "FunctionCall",
                                                        "src": "10742:37:4",
                                                        "tryCall": false,
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_bool",
                                                            "typeString": "bool"
                                                        }
                                                    },
                                                    {
                                                        "hexValue": "7472616e73666572206661696c6564",
                                                        "id": 1869,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": true,
                                                        "kind": "string",
                                                        "lValueRequested": false,
                                                        "nodeType": "Literal",
                                                        "src": "10781:17:4",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_stringliteral_df1797085e2da014ef9392ee25ab0802d6ce132451397172f17fd86110e2e02b",
                                                            "typeString": "literal_string \"transfer failed\""
                                                        },
                                                        "value": "transfer failed"
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_bool",
                                                            "typeString": "bool"
                                                        },
                                                        {
                                                            "typeIdentifier": "t_stringliteral_df1797085e2da014ef9392ee25ab0802d6ce132451397172f17fd86110e2e02b",
                                                            "typeString": "literal_string \"transfer failed\""
                                                        }
                                                    ],
                                                    "id": 1863,
                                                    "name": "require",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [
                                                        -18,
                                                        -18
                                                    ],
                                                    "referencedDeclaration": -18,
                                                    "src": "10734:7:4",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                                        "typeString": "function (bool,string memory) pure"
                                                    }
                                                },
                                                "id": 1870,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "10734:65:4",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_tuple$__$",
                                                    "typeString": "tuple()"
                                                }
                                            },
                                            "id": 1871,
                                            "nodeType": "ExpressionStatement",
                                            "src": "10734:65:4"
                                        },
                                        {
                                            "expression": {
                                                "id": 1876,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftHandSide": {
                                                    "id": 1872,
                                                    "name": "wrapped",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 1205,
                                                    "src": "10810:7:4",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_contract$_IERC20_$2809",
                                                        "typeString": "contract IERC20"
                                                    }
                                                },
                                                "nodeType": "Assignment",
                                                "operator": "=",
                                                "rightHandSide": {
                                                    "arguments": [
                                                        {
                                                            "id": 1874,
                                                            "name": "newWrapped",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 1832,
                                                            "src": "10827:10:4",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_address",
                                                                "typeString": "address"
                                                            }
                                                        }
                                                    ],
                                                    "expression": {
                                                        "argumentTypes": [
                                                            {
                                                                "typeIdentifier": "t_address",
                                                                "typeString": "address"
                                                            }
                                                        ],
                                                        "id": 1873,
                                                        "name": "IERC20",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 2809,
                                                        "src": "10820:6:4",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_type$_t_contract$_IERC20_$2809_$",
                                                            "typeString": "type(contract IERC20)"
                                                        }
                                                    },
                                                    "id": 1875,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "kind": "typeConversion",
                                                    "lValueRequested": false,
                                                    "names": [],
                                                    "nodeType": "FunctionCall",
                                                    "src": "10820:18:4",
                                                    "tryCall": false,
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_contract$_IERC20_$2809",
                                                        "typeString": "contract IERC20"
                                                    }
                                                },
                                                "src": "10810:28:4",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_contract$_IERC20_$2809",
                                                    "typeString": "contract IERC20"
                                                }
                                            },
                                            "id": 1877,
                                            "nodeType": "ExpressionStatement",
                                            "src": "10810:28:4"
                                        },
                                        {
                                            "expression": {
                                                "id": 1880,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftHandSide": {
                                                    "id": 1878,
                                                    "name": "unwrapConversionFactor",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 1208,
                                                    "src": "10849:22:4",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    }
                                                },
                                                "nodeType": "Assignment",
                                                "operator": "=",
                                                "rightHandSide": {
                                                    "id": 1879,
                                                    "name": "conversionRate",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 1834,
                                                    "src": "10874:14:4",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    }
                                                },
                                                "src": "10849:39:4",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            },
                                            "id": 1881,
                                            "nodeType": "ExpressionStatement",
                                            "src": "10849:39:4"
                                        },
                                        {
                                            "expression": {
                                                "arguments": [
                                                    {
                                                        "arguments": [
                                                            {
                                                                "id": 1885,
                                                                "name": "newOwner",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [],
                                                                "referencedDeclaration": 1830,
                                                                "src": "10928:8:4",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_address",
                                                                    "typeString": "address"
                                                                }
                                                            },
                                                            {
                                                                "arguments": [
                                                                    {
                                                                        "id": 1888,
                                                                        "name": "this",
                                                                        "nodeType": "Identifier",
                                                                        "overloadedDeclarations": [],
                                                                        "referencedDeclaration": -28,
                                                                        "src": "10946:4:4",
                                                                        "typeDescriptions": {
                                                                            "typeIdentifier": "t_contract$_ERC20Draggable_$2116",
                                                                            "typeString": "contract ERC20Draggable"
                                                                        }
                                                                    }
                                                                ],
                                                                "expression": {
                                                                    "argumentTypes": [
                                                                        {
                                                                            "typeIdentifier": "t_contract$_ERC20Draggable_$2116",
                                                                            "typeString": "contract ERC20Draggable"
                                                                        }
                                                                    ],
                                                                    "id": 1887,
                                                                    "isConstant": false,
                                                                    "isLValue": false,
                                                                    "isPure": true,
                                                                    "lValueRequested": false,
                                                                    "nodeType": "ElementaryTypeNameExpression",
                                                                    "src": "10938:7:4",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_type$_t_address_$",
                                                                        "typeString": "type(address)"
                                                                    },
                                                                    "typeName": {
                                                                        "id": 1886,
                                                                        "name": "address",
                                                                        "nodeType": "ElementaryTypeName",
                                                                        "src": "10938:7:4",
                                                                        "typeDescriptions": {}
                                                                    }
                                                                },
                                                                "id": 1889,
                                                                "isConstant": false,
                                                                "isLValue": false,
                                                                "isPure": false,
                                                                "kind": "typeConversion",
                                                                "lValueRequested": false,
                                                                "names": [],
                                                                "nodeType": "FunctionCall",
                                                                "src": "10938:13:4",
                                                                "tryCall": false,
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_address",
                                                                    "typeString": "address"
                                                                }
                                                            },
                                                            {
                                                                "arguments": [
                                                                    {
                                                                        "id": 1892,
                                                                        "name": "remaining",
                                                                        "nodeType": "Identifier",
                                                                        "overloadedDeclarations": [],
                                                                        "referencedDeclaration": 1857,
                                                                        "src": "10972:9:4",
                                                                        "typeDescriptions": {
                                                                            "typeIdentifier": "t_uint256",
                                                                            "typeString": "uint256"
                                                                        }
                                                                    }
                                                                ],
                                                                "expression": {
                                                                    "argumentTypes": [
                                                                        {
                                                                            "typeIdentifier": "t_uint256",
                                                                            "typeString": "uint256"
                                                                        }
                                                                    ],
                                                                    "expression": {
                                                                        "id": 1890,
                                                                        "name": "conversionRate",
                                                                        "nodeType": "Identifier",
                                                                        "overloadedDeclarations": [],
                                                                        "referencedDeclaration": 1834,
                                                                        "src": "10953:14:4",
                                                                        "typeDescriptions": {
                                                                            "typeIdentifier": "t_uint256",
                                                                            "typeString": "uint256"
                                                                        }
                                                                    },
                                                                    "id": 1891,
                                                                    "isConstant": false,
                                                                    "isLValue": false,
                                                                    "isPure": false,
                                                                    "lValueRequested": false,
                                                                    "memberName": "mul",
                                                                    "nodeType": "MemberAccess",
                                                                    "referencedDeclaration": 2866,
                                                                    "src": "10953:18:4",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                                                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                                                                    }
                                                                },
                                                                "id": 1893,
                                                                "isConstant": false,
                                                                "isLValue": false,
                                                                "isPure": false,
                                                                "kind": "functionCall",
                                                                "lValueRequested": false,
                                                                "names": [],
                                                                "nodeType": "FunctionCall",
                                                                "src": "10953:29:4",
                                                                "tryCall": false,
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_uint256",
                                                                    "typeString": "uint256"
                                                                }
                                                            }
                                                        ],
                                                        "expression": {
                                                            "argumentTypes": [
                                                                {
                                                                    "typeIdentifier": "t_address",
                                                                    "typeString": "address"
                                                                },
                                                                {
                                                                    "typeIdentifier": "t_address",
                                                                    "typeString": "address"
                                                                },
                                                                {
                                                                    "typeIdentifier": "t_uint256",
                                                                    "typeString": "uint256"
                                                                }
                                                            ],
                                                            "expression": {
                                                                "id": 1883,
                                                                "name": "wrapped",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [],
                                                                "referencedDeclaration": 1205,
                                                                "src": "10907:7:4",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_contract$_IERC20_$2809",
                                                                    "typeString": "contract IERC20"
                                                                }
                                                            },
                                                            "id": 1884,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": false,
                                                            "lValueRequested": false,
                                                            "memberName": "transferFrom",
                                                            "nodeType": "MemberAccess",
                                                            "referencedDeclaration": 2790,
                                                            "src": "10907:20:4",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                                                                "typeString": "function (address,address,uint256) external returns (bool)"
                                                            }
                                                        },
                                                        "id": 1894,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "kind": "functionCall",
                                                        "lValueRequested": false,
                                                        "names": [],
                                                        "nodeType": "FunctionCall",
                                                        "src": "10907:76:4",
                                                        "tryCall": false,
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_bool",
                                                            "typeString": "bool"
                                                        }
                                                    },
                                                    {
                                                        "hexValue": "4261636b696e67207472616e73666572206661696c6564",
                                                        "id": 1895,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": true,
                                                        "kind": "string",
                                                        "lValueRequested": false,
                                                        "nodeType": "Literal",
                                                        "src": "10985:25:4",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_stringliteral_2f8fe4eadb37012619e392f8d826aa29ab70e40b4ac9cab9e0d4fb773212d088",
                                                            "typeString": "literal_string \"Backing transfer failed\""
                                                        },
                                                        "value": "Backing transfer failed"
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_bool",
                                                            "typeString": "bool"
                                                        },
                                                        {
                                                            "typeIdentifier": "t_stringliteral_2f8fe4eadb37012619e392f8d826aa29ab70e40b4ac9cab9e0d4fb773212d088",
                                                            "typeString": "literal_string \"Backing transfer failed\""
                                                        }
                                                    ],
                                                    "id": 1882,
                                                    "name": "require",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [
                                                        -18,
                                                        -18
                                                    ],
                                                    "referencedDeclaration": -18,
                                                    "src": "10899:7:4",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                                        "typeString": "function (bool,string memory) pure"
                                                    }
                                                },
                                                "id": 1896,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "10899:112:4",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_tuple$__$",
                                                    "typeString": "tuple()"
                                                }
                                            },
                                            "id": 1897,
                                            "nodeType": "ExpressionStatement",
                                            "src": "10899:112:4"
                                        }
                                    ]
                                },
                                "id": 1899,
                                "implemented": true,
                                "kind": "function",
                                "modifiers": [],
                                "name": "invertHoldings",
                                "nodeType": "FunctionDefinition",
                                "parameters": {
                                    "id": 1835,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 1830,
                                            "mutability": "mutable",
                                            "name": "newOwner",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 1899,
                                            "src": "10433:16:4",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            },
                                            "typeName": {
                                                "id": 1829,
                                                "name": "address",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "10433:7:4",
                                                "stateMutability": "nonpayable",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            "visibility": "internal"
                                        },
                                        {
                                            "constant": false,
                                            "id": 1832,
                                            "mutability": "mutable",
                                            "name": "newWrapped",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 1899,
                                            "src": "10451:18:4",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            },
                                            "typeName": {
                                                "id": 1831,
                                                "name": "address",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "10451:7:4",
                                                "stateMutability": "nonpayable",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            "visibility": "internal"
                                        },
                                        {
                                            "constant": false,
                                            "id": 1834,
                                            "mutability": "mutable",
                                            "name": "conversionRate",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 1899,
                                            "src": "10471:22:4",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            },
                                            "typeName": {
                                                "id": 1833,
                                                "name": "uint256",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "10471:7:4",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "10432:62:4"
                                },
                                "returnParameters": {
                                    "id": 1836,
                                    "nodeType": "ParameterList",
                                    "parameters": [],
                                    "src": "10504:0:4"
                                },
                                "scope": 2116,
                                "src": "10409:610:4",
                                "stateMutability": "nonpayable",
                                "virtual": false,
                                "visibility": "internal"
                            },
                            {
                                "body": {
                                    "id": 1967,
                                    "nodeType": "Block",
                                    "src": "11053:618:4",
                                    "statements": [
                                        {
                                            "expression": {
                                                "arguments": [
                                                    {
                                                        "id": 1903,
                                                        "name": "active",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 1228,
                                                        "src": "11072:6:4",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_bool",
                                                            "typeString": "bool"
                                                        }
                                                    },
                                                    {
                                                        "hexValue": "436f6e7472616374206973206e6f7420616374697665",
                                                        "id": 1904,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": true,
                                                        "kind": "string",
                                                        "lValueRequested": false,
                                                        "nodeType": "Literal",
                                                        "src": "11080:24:4",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_stringliteral_91100a1daa43b12de9b92c1dfdd828e6c73246765df038f3bdbe19b173a285e5",
                                                            "typeString": "literal_string \"Contract is not active\""
                                                        },
                                                        "value": "Contract is not active"
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_bool",
                                                            "typeString": "bool"
                                                        },
                                                        {
                                                            "typeIdentifier": "t_stringliteral_91100a1daa43b12de9b92c1dfdd828e6c73246765df038f3bdbe19b173a285e5",
                                                            "typeString": "literal_string \"Contract is not active\""
                                                        }
                                                    ],
                                                    "id": 1902,
                                                    "name": "require",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [
                                                        -18,
                                                        -18
                                                    ],
                                                    "referencedDeclaration": -18,
                                                    "src": "11064:7:4",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                                        "typeString": "function (bool,string memory) pure"
                                                    }
                                                },
                                                "id": 1905,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "11064:41:4",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_tuple$__$",
                                                    "typeString": "tuple()"
                                                }
                                            },
                                            "id": 1906,
                                            "nodeType": "ExpressionStatement",
                                            "src": "11064:41:4"
                                        },
                                        {
                                            "assignments": [
                                                1908
                                            ],
                                            "declarations": [
                                                {
                                                    "constant": false,
                                                    "id": 1908,
                                                    "mutability": "mutable",
                                                    "name": "successor",
                                                    "nodeType": "VariableDeclaration",
                                                    "scope": 1967,
                                                    "src": "11116:17:4",
                                                    "stateVariable": false,
                                                    "storageLocation": "default",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_address",
                                                        "typeString": "address"
                                                    },
                                                    "typeName": {
                                                        "id": 1907,
                                                        "name": "address",
                                                        "nodeType": "ElementaryTypeName",
                                                        "src": "11116:7:4",
                                                        "stateMutability": "nonpayable",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        }
                                                    },
                                                    "visibility": "internal"
                                                }
                                            ],
                                            "id": 1911,
                                            "initialValue": {
                                                "expression": {
                                                    "id": 1909,
                                                    "name": "msg",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": -15,
                                                    "src": "11136:3:4",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_magic_message",
                                                        "typeString": "msg"
                                                    }
                                                },
                                                "id": 1910,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberName": "sender",
                                                "nodeType": "MemberAccess",
                                                "src": "11136:10:4",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address_payable",
                                                    "typeString": "address payable"
                                                }
                                            },
                                            "nodeType": "VariableDeclarationStatement",
                                            "src": "11116:30:4"
                                        },
                                        {
                                            "expression": {
                                                "arguments": [
                                                    {
                                                        "commonType": {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        },
                                                        "id": 1924,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "leftExpression": {
                                                            "arguments": [
                                                                {
                                                                    "id": 1914,
                                                                    "name": "successor",
                                                                    "nodeType": "Identifier",
                                                                    "overloadedDeclarations": [],
                                                                    "referencedDeclaration": 1908,
                                                                    "src": "11175:9:4",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_address",
                                                                        "typeString": "address"
                                                                    }
                                                                }
                                                            ],
                                                            "expression": {
                                                                "argumentTypes": [
                                                                    {
                                                                        "typeIdentifier": "t_address",
                                                                        "typeString": "address"
                                                                    }
                                                                ],
                                                                "id": 1913,
                                                                "name": "balanceOf",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [],
                                                                "referencedDeclaration": 774,
                                                                "src": "11165:9:4",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                                                                    "typeString": "function (address) view returns (uint256)"
                                                                }
                                                            },
                                                            "id": 1915,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": false,
                                                            "kind": "functionCall",
                                                            "lValueRequested": false,
                                                            "names": [],
                                                            "nodeType": "FunctionCall",
                                                            "src": "11165:20:4",
                                                            "tryCall": false,
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_uint256",
                                                                "typeString": "uint256"
                                                            }
                                                        },
                                                        "nodeType": "BinaryOperation",
                                                        "operator": ">=",
                                                        "rightExpression": {
                                                            "arguments": [
                                                                {
                                                                    "hexValue": "3130303030",
                                                                    "id": 1922,
                                                                    "isConstant": false,
                                                                    "isLValue": false,
                                                                    "isPure": true,
                                                                    "kind": "number",
                                                                    "lValueRequested": false,
                                                                    "nodeType": "Literal",
                                                                    "src": "11228:5:4",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_rational_10000_by_1",
                                                                        "typeString": "int_const 10000"
                                                                    },
                                                                    "value": "10000"
                                                                }
                                                            ],
                                                            "expression": {
                                                                "argumentTypes": [
                                                                    {
                                                                        "typeIdentifier": "t_rational_10000_by_1",
                                                                        "typeString": "int_const 10000"
                                                                    }
                                                                ],
                                                                "expression": {
                                                                    "arguments": [
                                                                        {
                                                                            "id": 1919,
                                                                            "name": "migrationQuorum",
                                                                            "nodeType": "Identifier",
                                                                            "overloadedDeclarations": [],
                                                                            "referencedDeclaration": 1214,
                                                                            "src": "11207:15:4",
                                                                            "typeDescriptions": {
                                                                                "typeIdentifier": "t_uint256",
                                                                                "typeString": "uint256"
                                                                            }
                                                                        }
                                                                    ],
                                                                    "expression": {
                                                                        "argumentTypes": [
                                                                            {
                                                                                "typeIdentifier": "t_uint256",
                                                                                "typeString": "uint256"
                                                                            }
                                                                        ],
                                                                        "expression": {
                                                                            "arguments": [],
                                                                            "expression": {
                                                                                "argumentTypes": [],
                                                                                "id": 1916,
                                                                                "name": "totalSupply",
                                                                                "nodeType": "Identifier",
                                                                                "overloadedDeclarations": [],
                                                                                "referencedDeclaration": 760,
                                                                                "src": "11189:11:4",
                                                                                "typeDescriptions": {
                                                                                    "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                                                                    "typeString": "function () view returns (uint256)"
                                                                                }
                                                                            },
                                                                            "id": 1917,
                                                                            "isConstant": false,
                                                                            "isLValue": false,
                                                                            "isPure": false,
                                                                            "kind": "functionCall",
                                                                            "lValueRequested": false,
                                                                            "names": [],
                                                                            "nodeType": "FunctionCall",
                                                                            "src": "11189:13:4",
                                                                            "tryCall": false,
                                                                            "typeDescriptions": {
                                                                                "typeIdentifier": "t_uint256",
                                                                                "typeString": "uint256"
                                                                            }
                                                                        },
                                                                        "id": 1918,
                                                                        "isConstant": false,
                                                                        "isLValue": false,
                                                                        "isPure": false,
                                                                        "lValueRequested": false,
                                                                        "memberName": "mul",
                                                                        "nodeType": "MemberAccess",
                                                                        "referencedDeclaration": 2866,
                                                                        "src": "11189:17:4",
                                                                        "typeDescriptions": {
                                                                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                                                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                                                                        }
                                                                    },
                                                                    "id": 1920,
                                                                    "isConstant": false,
                                                                    "isLValue": false,
                                                                    "isPure": false,
                                                                    "kind": "functionCall",
                                                                    "lValueRequested": false,
                                                                    "names": [],
                                                                    "nodeType": "FunctionCall",
                                                                    "src": "11189:34:4",
                                                                    "tryCall": false,
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_uint256",
                                                                        "typeString": "uint256"
                                                                    }
                                                                },
                                                                "id": 1921,
                                                                "isConstant": false,
                                                                "isLValue": false,
                                                                "isPure": false,
                                                                "lValueRequested": false,
                                                                "memberName": "div",
                                                                "nodeType": "MemberAccess",
                                                                "referencedDeclaration": 2881,
                                                                "src": "11189:38:4",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                                                    "typeString": "function (uint256,uint256) pure returns (uint256)"
                                                                }
                                                            },
                                                            "id": 1923,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": false,
                                                            "kind": "functionCall",
                                                            "lValueRequested": false,
                                                            "names": [],
                                                            "nodeType": "FunctionCall",
                                                            "src": "11189:45:4",
                                                            "tryCall": false,
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_uint256",
                                                                "typeString": "uint256"
                                                            }
                                                        },
                                                        "src": "11165:69:4",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_bool",
                                                            "typeString": "bool"
                                                        }
                                                    },
                                                    {
                                                        "hexValue": "51756f72756d206e6f742072656163686564",
                                                        "id": 1925,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": true,
                                                        "kind": "string",
                                                        "lValueRequested": false,
                                                        "nodeType": "Literal",
                                                        "src": "11236:20:4",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_stringliteral_b58b856712d6b426cf08b3b43a39b73d60c7b9f6e1af30a3fd671d4035fb1277",
                                                            "typeString": "literal_string \"Quorum not reached\""
                                                        },
                                                        "value": "Quorum not reached"
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_bool",
                                                            "typeString": "bool"
                                                        },
                                                        {
                                                            "typeIdentifier": "t_stringliteral_b58b856712d6b426cf08b3b43a39b73d60c7b9f6e1af30a3fd671d4035fb1277",
                                                            "typeString": "literal_string \"Quorum not reached\""
                                                        }
                                                    ],
                                                    "id": 1912,
                                                    "name": "require",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [
                                                        -18,
                                                        -18
                                                    ],
                                                    "referencedDeclaration": -18,
                                                    "src": "11157:7:4",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                                        "typeString": "function (bool,string memory) pure"
                                                    }
                                                },
                                                "id": 1926,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "11157:100:4",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_tuple$__$",
                                                    "typeString": "tuple()"
                                                }
                                            },
                                            "id": 1927,
                                            "nodeType": "ExpressionStatement",
                                            "src": "11157:100:4"
                                        },
                                        {
                                            "condition": {
                                                "arguments": [],
                                                "expression": {
                                                    "argumentTypes": [],
                                                    "id": 1928,
                                                    "name": "offerExists",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 2092,
                                                    "src": "11274:11:4",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                                                        "typeString": "function () view returns (bool)"
                                                    }
                                                },
                                                "id": 1929,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "11274:13:4",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            },
                                            "id": 1956,
                                            "nodeType": "IfStatement",
                                            "src": "11270:297:4",
                                            "trueBody": {
                                                "id": 1955,
                                                "nodeType": "Block",
                                                "src": "11289:278:4",
                                                "statements": [
                                                    {
                                                        "condition": {
                                                            "id": 1933,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": false,
                                                            "lValueRequested": false,
                                                            "nodeType": "UnaryOperation",
                                                            "operator": "!",
                                                            "prefix": true,
                                                            "src": "11308:24:4",
                                                            "subExpression": {
                                                                "arguments": [],
                                                                "expression": {
                                                                    "argumentTypes": [],
                                                                    "expression": {
                                                                        "id": 1930,
                                                                        "name": "offer",
                                                                        "nodeType": "Identifier",
                                                                        "overloadedDeclarations": [],
                                                                        "referencedDeclaration": 1210,
                                                                        "src": "11309:5:4",
                                                                        "typeDescriptions": {
                                                                            "typeIdentifier": "t_contract$_Acquisition_$491",
                                                                            "typeString": "contract Acquisition"
                                                                        }
                                                                    },
                                                                    "id": 1931,
                                                                    "isConstant": false,
                                                                    "isLValue": false,
                                                                    "isPure": false,
                                                                    "lValueRequested": false,
                                                                    "memberName": "quorumHasFailed",
                                                                    "nodeType": "MemberAccess",
                                                                    "referencedDeclaration": 216,
                                                                    "src": "11309:21:4",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_function_external_view$__$returns$_t_bool_$",
                                                                        "typeString": "function () view external returns (bool)"
                                                                    }
                                                                },
                                                                "id": 1932,
                                                                "isConstant": false,
                                                                "isLValue": false,
                                                                "isPure": false,
                                                                "kind": "functionCall",
                                                                "lValueRequested": false,
                                                                "names": [],
                                                                "nodeType": "FunctionCall",
                                                                "src": "11309:23:4",
                                                                "tryCall": false,
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_bool",
                                                                    "typeString": "bool"
                                                                }
                                                            },
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_bool",
                                                                "typeString": "bool"
                                                            }
                                                        },
                                                        "id": 1945,
                                                        "nodeType": "IfStatement",
                                                        "src": "11304:179:4",
                                                        "trueBody": {
                                                            "id": 1944,
                                                            "nodeType": "Block",
                                                            "src": "11334:149:4",
                                                            "statements": [
                                                                {
                                                                    "expression": {
                                                                        "arguments": [],
                                                                        "expression": {
                                                                            "argumentTypes": [],
                                                                            "id": 1934,
                                                                            "name": "voteNo",
                                                                            "nodeType": "Identifier",
                                                                            "overloadedDeclarations": [],
                                                                            "referencedDeclaration": 1650,
                                                                            "src": "11353:6:4",
                                                                            "typeDescriptions": {
                                                                                "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                                                                                "typeString": "function ()"
                                                                            }
                                                                        },
                                                                        "id": 1935,
                                                                        "isConstant": false,
                                                                        "isLValue": false,
                                                                        "isPure": false,
                                                                        "kind": "functionCall",
                                                                        "lValueRequested": false,
                                                                        "names": [],
                                                                        "nodeType": "FunctionCall",
                                                                        "src": "11353:8:4",
                                                                        "tryCall": false,
                                                                        "typeDescriptions": {
                                                                            "typeIdentifier": "t_tuple$__$",
                                                                            "typeString": "tuple()"
                                                                        }
                                                                    },
                                                                    "id": 1936,
                                                                    "nodeType": "ExpressionStatement",
                                                                    "src": "11353:8:4"
                                                                },
                                                                {
                                                                    "expression": {
                                                                        "arguments": [
                                                                            {
                                                                                "arguments": [],
                                                                                "expression": {
                                                                                    "argumentTypes": [],
                                                                                    "expression": {
                                                                                        "id": 1938,
                                                                                        "name": "offer",
                                                                                        "nodeType": "Identifier",
                                                                                        "overloadedDeclarations": [],
                                                                                        "referencedDeclaration": 1210,
                                                                                        "src": "11418:5:4",
                                                                                        "typeDescriptions": {
                                                                                            "typeIdentifier": "t_contract$_Acquisition_$491",
                                                                                            "typeString": "contract Acquisition"
                                                                                        }
                                                                                    },
                                                                                    "id": 1939,
                                                                                    "isConstant": false,
                                                                                    "isLValue": false,
                                                                                    "isPure": false,
                                                                                    "lValueRequested": false,
                                                                                    "memberName": "quorumHasFailed",
                                                                                    "nodeType": "MemberAccess",
                                                                                    "referencedDeclaration": 216,
                                                                                    "src": "11418:21:4",
                                                                                    "typeDescriptions": {
                                                                                        "typeIdentifier": "t_function_external_view$__$returns$_t_bool_$",
                                                                                        "typeString": "function () view external returns (bool)"
                                                                                    }
                                                                                },
                                                                                "id": 1940,
                                                                                "isConstant": false,
                                                                                "isLValue": false,
                                                                                "isPure": false,
                                                                                "kind": "functionCall",
                                                                                "lValueRequested": false,
                                                                                "names": [],
                                                                                "nodeType": "FunctionCall",
                                                                                "src": "11418:23:4",
                                                                                "tryCall": false,
                                                                                "typeDescriptions": {
                                                                                    "typeIdentifier": "t_bool",
                                                                                    "typeString": "bool"
                                                                                }
                                                                            },
                                                                            {
                                                                                "hexValue": "51756f72756d20686173206e6f74206661696c6564",
                                                                                "id": 1941,
                                                                                "isConstant": false,
                                                                                "isLValue": false,
                                                                                "isPure": true,
                                                                                "kind": "string",
                                                                                "lValueRequested": false,
                                                                                "nodeType": "Literal",
                                                                                "src": "11443:23:4",
                                                                                "typeDescriptions": {
                                                                                    "typeIdentifier": "t_stringliteral_8f1bd34aac9763908e81303f3bc3dc57ce4b7d84a109cf34172861c4713dec36",
                                                                                    "typeString": "literal_string \"Quorum has not failed\""
                                                                                },
                                                                                "value": "Quorum has not failed"
                                                                            }
                                                                        ],
                                                                        "expression": {
                                                                            "argumentTypes": [
                                                                                {
                                                                                    "typeIdentifier": "t_bool",
                                                                                    "typeString": "bool"
                                                                                },
                                                                                {
                                                                                    "typeIdentifier": "t_stringliteral_8f1bd34aac9763908e81303f3bc3dc57ce4b7d84a109cf34172861c4713dec36",
                                                                                    "typeString": "literal_string \"Quorum has not failed\""
                                                                                }
                                                                            ],
                                                                            "id": 1937,
                                                                            "name": "require",
                                                                            "nodeType": "Identifier",
                                                                            "overloadedDeclarations": [
                                                                                -18,
                                                                                -18
                                                                            ],
                                                                            "referencedDeclaration": -18,
                                                                            "src": "11410:7:4",
                                                                            "typeDescriptions": {
                                                                                "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                                                                "typeString": "function (bool,string memory) pure"
                                                                            }
                                                                        },
                                                                        "id": 1942,
                                                                        "isConstant": false,
                                                                        "isLValue": false,
                                                                        "isPure": false,
                                                                        "kind": "functionCall",
                                                                        "lValueRequested": false,
                                                                        "names": [],
                                                                        "nodeType": "FunctionCall",
                                                                        "src": "11410:57:4",
                                                                        "tryCall": false,
                                                                        "typeDescriptions": {
                                                                            "typeIdentifier": "t_tuple$__$",
                                                                            "typeString": "tuple()"
                                                                        }
                                                                    },
                                                                    "id": 1943,
                                                                    "nodeType": "ExpressionStatement",
                                                                    "src": "11410:57:4"
                                                                }
                                                            ]
                                                        }
                                                    },
                                                    {
                                                        "expression": {
                                                            "arguments": [],
                                                            "expression": {
                                                                "argumentTypes": [],
                                                                "id": 1946,
                                                                "name": "contestAcquisition",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [],
                                                                "referencedDeclaration": 1717,
                                                                "src": "11497:18:4",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                                                                    "typeString": "function ()"
                                                                }
                                                            },
                                                            "id": 1947,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": false,
                                                            "kind": "functionCall",
                                                            "lValueRequested": false,
                                                            "names": [],
                                                            "nodeType": "FunctionCall",
                                                            "src": "11497:20:4",
                                                            "tryCall": false,
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_tuple$__$",
                                                                "typeString": "tuple()"
                                                            }
                                                        },
                                                        "id": 1948,
                                                        "nodeType": "ExpressionStatement",
                                                        "src": "11497:20:4"
                                                    },
                                                    {
                                                        "expression": {
                                                            "arguments": [
                                                                {
                                                                    "id": 1952,
                                                                    "isConstant": false,
                                                                    "isLValue": false,
                                                                    "isPure": false,
                                                                    "lValueRequested": false,
                                                                    "nodeType": "UnaryOperation",
                                                                    "operator": "!",
                                                                    "prefix": true,
                                                                    "src": "11540:14:4",
                                                                    "subExpression": {
                                                                        "arguments": [],
                                                                        "expression": {
                                                                            "argumentTypes": [],
                                                                            "id": 1950,
                                                                            "name": "offerExists",
                                                                            "nodeType": "Identifier",
                                                                            "overloadedDeclarations": [],
                                                                            "referencedDeclaration": 2092,
                                                                            "src": "11541:11:4",
                                                                            "typeDescriptions": {
                                                                                "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                                                                                "typeString": "function () view returns (bool)"
                                                                            }
                                                                        },
                                                                        "id": 1951,
                                                                        "isConstant": false,
                                                                        "isLValue": false,
                                                                        "isPure": false,
                                                                        "kind": "functionCall",
                                                                        "lValueRequested": false,
                                                                        "names": [],
                                                                        "nodeType": "FunctionCall",
                                                                        "src": "11541:13:4",
                                                                        "tryCall": false,
                                                                        "typeDescriptions": {
                                                                            "typeIdentifier": "t_bool",
                                                                            "typeString": "bool"
                                                                        }
                                                                    },
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_bool",
                                                                        "typeString": "bool"
                                                                    }
                                                                }
                                                            ],
                                                            "expression": {
                                                                "argumentTypes": [
                                                                    {
                                                                        "typeIdentifier": "t_bool",
                                                                        "typeString": "bool"
                                                                    }
                                                                ],
                                                                "id": 1949,
                                                                "name": "assert",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [],
                                                                "referencedDeclaration": -3,
                                                                "src": "11532:6:4",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
                                                                    "typeString": "function (bool) pure"
                                                                }
                                                            },
                                                            "id": 1953,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": false,
                                                            "kind": "functionCall",
                                                            "lValueRequested": false,
                                                            "names": [],
                                                            "nodeType": "FunctionCall",
                                                            "src": "11532:23:4",
                                                            "tryCall": false,
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_tuple$__$",
                                                                "typeString": "tuple()"
                                                            }
                                                        },
                                                        "id": 1954,
                                                        "nodeType": "ExpressionStatement",
                                                        "src": "11532:23:4"
                                                    }
                                                ]
                                            }
                                        },
                                        {
                                            "expression": {
                                                "arguments": [
                                                    {
                                                        "id": 1958,
                                                        "name": "successor",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 1908,
                                                        "src": "11594:9:4",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        }
                                                    },
                                                    {
                                                        "id": 1959,
                                                        "name": "successor",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 1908,
                                                        "src": "11605:9:4",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        }
                                                    },
                                                    {
                                                        "hexValue": "31",
                                                        "id": 1960,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": true,
                                                        "kind": "number",
                                                        "lValueRequested": false,
                                                        "nodeType": "Literal",
                                                        "src": "11616:1:4",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_rational_1_by_1",
                                                            "typeString": "int_const 1"
                                                        },
                                                        "value": "1"
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        },
                                                        {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        },
                                                        {
                                                            "typeIdentifier": "t_rational_1_by_1",
                                                            "typeString": "int_const 1"
                                                        }
                                                    ],
                                                    "id": 1957,
                                                    "name": "invertHoldings",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 1899,
                                                    "src": "11579:14:4",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                                                        "typeString": "function (address,address,uint256)"
                                                    }
                                                },
                                                "id": 1961,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "11579:39:4",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_tuple$__$",
                                                    "typeString": "tuple()"
                                                }
                                            },
                                            "id": 1962,
                                            "nodeType": "ExpressionStatement",
                                            "src": "11579:39:4"
                                        },
                                        {
                                            "eventCall": {
                                                "arguments": [
                                                    {
                                                        "id": 1964,
                                                        "name": "successor",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 1908,
                                                        "src": "11653:9:4",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        }
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        }
                                                    ],
                                                    "id": 1963,
                                                    "name": "MigrationSucceeded",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 1252,
                                                    "src": "11634:18:4",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                                                        "typeString": "function (address)"
                                                    }
                                                },
                                                "id": 1965,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "11634:29:4",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_tuple$__$",
                                                    "typeString": "tuple()"
                                                }
                                            },
                                            "id": 1966,
                                            "nodeType": "EmitStatement",
                                            "src": "11629:34:4"
                                        }
                                    ]
                                },
                                "functionSelector": "8fd3ab80",
                                "id": 1968,
                                "implemented": true,
                                "kind": "function",
                                "modifiers": [],
                                "name": "migrate",
                                "nodeType": "FunctionDefinition",
                                "parameters": {
                                    "id": 1900,
                                    "nodeType": "ParameterList",
                                    "parameters": [],
                                    "src": "11043:2:4"
                                },
                                "returnParameters": {
                                    "id": 1901,
                                    "nodeType": "ParameterList",
                                    "parameters": [],
                                    "src": "11053:0:4"
                                },
                                "scope": 2116,
                                "src": "11027:644:4",
                                "stateMutability": "nonpayable",
                                "virtual": false,
                                "visibility": "public"
                            },
                            {
                                "baseFunctions": [
                                    1066
                                ],
                                "body": {
                                    "id": 2000,
                                    "nodeType": "Block",
                                    "src": "11753:246:4",
                                    "statements": [
                                        {
                                            "expression": {
                                                "arguments": [
                                                    {
                                                        "id": 1979,
                                                        "name": "account",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 1970,
                                                        "src": "11776:7:4",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        }
                                                    },
                                                    {
                                                        "id": 1980,
                                                        "name": "amount",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 1972,
                                                        "src": "11785:6:4",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        }
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        },
                                                        {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        }
                                                    ],
                                                    "expression": {
                                                        "id": 1976,
                                                        "name": "super",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": -25,
                                                        "src": "11764:5:4",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_super$_ERC20Draggable_$2116",
                                                            "typeString": "contract super ERC20Draggable"
                                                        }
                                                    },
                                                    "id": 1978,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "memberName": "_mint",
                                                    "nodeType": "MemberAccess",
                                                    "referencedDeclaration": 1066,
                                                    "src": "11764:11:4",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                                                        "typeString": "function (address,uint256)"
                                                    }
                                                },
                                                "id": 1981,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "11764:28:4",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_tuple$__$",
                                                    "typeString": "tuple()"
                                                }
                                            },
                                            "id": 1982,
                                            "nodeType": "ExpressionStatement",
                                            "src": "11764:28:4"
                                        },
                                        {
                                            "condition": {
                                                "commonType": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                },
                                                "id": 1986,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftExpression": {
                                                    "arguments": [],
                                                    "expression": {
                                                        "argumentTypes": [],
                                                        "id": 1983,
                                                        "name": "offerExists",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 2092,
                                                        "src": "11807:11:4",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                                                            "typeString": "function () view returns (bool)"
                                                        }
                                                    },
                                                    "id": 1984,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "kind": "functionCall",
                                                    "lValueRequested": false,
                                                    "names": [],
                                                    "nodeType": "FunctionCall",
                                                    "src": "11807:13:4",
                                                    "tryCall": false,
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_bool",
                                                        "typeString": "bool"
                                                    }
                                                },
                                                "nodeType": "BinaryOperation",
                                                "operator": "&&",
                                                "rightExpression": {
                                                    "id": 1985,
                                                    "name": "active",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 1228,
                                                    "src": "11824:6:4",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_bool",
                                                        "typeString": "bool"
                                                    }
                                                },
                                                "src": "11807:23:4",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            },
                                            "id": 1999,
                                            "nodeType": "IfStatement",
                                            "src": "11803:189:4",
                                            "trueBody": {
                                                "id": 1998,
                                                "nodeType": "Block",
                                                "src": "11832:160:4",
                                                "statements": [
                                                    {
                                                        "expression": {
                                                            "arguments": [
                                                                {
                                                                    "arguments": [
                                                                        {
                                                                            "hexValue": "30",
                                                                            "id": 1992,
                                                                            "isConstant": false,
                                                                            "isLValue": false,
                                                                            "isPure": true,
                                                                            "kind": "number",
                                                                            "lValueRequested": false,
                                                                            "nodeType": "Literal",
                                                                            "src": "11960:1:4",
                                                                            "typeDescriptions": {
                                                                                "typeIdentifier": "t_rational_0_by_1",
                                                                                "typeString": "int_const 0"
                                                                            },
                                                                            "value": "0"
                                                                        }
                                                                    ],
                                                                    "expression": {
                                                                        "argumentTypes": [
                                                                            {
                                                                                "typeIdentifier": "t_rational_0_by_1",
                                                                                "typeString": "int_const 0"
                                                                            }
                                                                        ],
                                                                        "id": 1991,
                                                                        "isConstant": false,
                                                                        "isLValue": false,
                                                                        "isPure": true,
                                                                        "lValueRequested": false,
                                                                        "nodeType": "ElementaryTypeNameExpression",
                                                                        "src": "11952:7:4",
                                                                        "typeDescriptions": {
                                                                            "typeIdentifier": "t_type$_t_address_$",
                                                                            "typeString": "type(address)"
                                                                        },
                                                                        "typeName": {
                                                                            "id": 1990,
                                                                            "name": "address",
                                                                            "nodeType": "ElementaryTypeName",
                                                                            "src": "11952:7:4",
                                                                            "typeDescriptions": {}
                                                                        }
                                                                    },
                                                                    "id": 1993,
                                                                    "isConstant": false,
                                                                    "isLValue": false,
                                                                    "isPure": true,
                                                                    "kind": "typeConversion",
                                                                    "lValueRequested": false,
                                                                    "names": [],
                                                                    "nodeType": "FunctionCall",
                                                                    "src": "11952:10:4",
                                                                    "tryCall": false,
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_address_payable",
                                                                        "typeString": "address payable"
                                                                    }
                                                                },
                                                                {
                                                                    "id": 1994,
                                                                    "name": "account",
                                                                    "nodeType": "Identifier",
                                                                    "overloadedDeclarations": [],
                                                                    "referencedDeclaration": 1970,
                                                                    "src": "11964:7:4",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_address",
                                                                        "typeString": "address"
                                                                    }
                                                                },
                                                                {
                                                                    "id": 1995,
                                                                    "name": "amount",
                                                                    "nodeType": "Identifier",
                                                                    "overloadedDeclarations": [],
                                                                    "referencedDeclaration": 1972,
                                                                    "src": "11973:6:4",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_uint256",
                                                                        "typeString": "uint256"
                                                                    }
                                                                }
                                                            ],
                                                            "expression": {
                                                                "argumentTypes": [
                                                                    {
                                                                        "typeIdentifier": "t_address_payable",
                                                                        "typeString": "address payable"
                                                                    },
                                                                    {
                                                                        "typeIdentifier": "t_address",
                                                                        "typeString": "address"
                                                                    },
                                                                    {
                                                                        "typeIdentifier": "t_uint256",
                                                                        "typeString": "uint256"
                                                                    }
                                                                ],
                                                                "expression": {
                                                                    "id": 1987,
                                                                    "name": "offer",
                                                                    "nodeType": "Identifier",
                                                                    "overloadedDeclarations": [],
                                                                    "referencedDeclaration": 1210,
                                                                    "src": "11934:5:4",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_contract$_Acquisition_$491",
                                                                        "typeString": "contract Acquisition"
                                                                    }
                                                                },
                                                                "id": 1989,
                                                                "isConstant": false,
                                                                "isLValue": false,
                                                                "isPure": false,
                                                                "lValueRequested": false,
                                                                "memberName": "adjustVotes",
                                                                "nodeType": "MemberAccess",
                                                                "referencedDeclaration": 250,
                                                                "src": "11934:17:4",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                                                                    "typeString": "function (address,address,uint256) external"
                                                                }
                                                            },
                                                            "id": 1996,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": false,
                                                            "kind": "functionCall",
                                                            "lValueRequested": false,
                                                            "names": [],
                                                            "nodeType": "FunctionCall",
                                                            "src": "11934:46:4",
                                                            "tryCall": false,
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_tuple$__$",
                                                                "typeString": "tuple()"
                                                            }
                                                        },
                                                        "id": 1997,
                                                        "nodeType": "ExpressionStatement",
                                                        "src": "11934:46:4"
                                                    }
                                                ]
                                            }
                                        }
                                    ]
                                },
                                "id": 2001,
                                "implemented": true,
                                "kind": "function",
                                "modifiers": [],
                                "name": "_mint",
                                "nodeType": "FunctionDefinition",
                                "overrides": {
                                    "id": 1974,
                                    "nodeType": "OverrideSpecifier",
                                    "overrides": [],
                                    "src": "11735:8:4"
                                },
                                "parameters": {
                                    "id": 1973,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 1970,
                                            "mutability": "mutable",
                                            "name": "account",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 2001,
                                            "src": "11694:15:4",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            },
                                            "typeName": {
                                                "id": 1969,
                                                "name": "address",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "11694:7:4",
                                                "stateMutability": "nonpayable",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            "visibility": "internal"
                                        },
                                        {
                                            "constant": false,
                                            "id": 1972,
                                            "mutability": "mutable",
                                            "name": "amount",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 2001,
                                            "src": "11711:14:4",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            },
                                            "typeName": {
                                                "id": 1971,
                                                "name": "uint256",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "11711:7:4",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "11693:33:4"
                                },
                                "returnParameters": {
                                    "id": 1975,
                                    "nodeType": "ParameterList",
                                    "parameters": [],
                                    "src": "11753:0:4"
                                },
                                "scope": 2116,
                                "src": "11679:320:4",
                                "stateMutability": "nonpayable",
                                "virtual": true,
                                "visibility": "internal"
                            },
                            {
                                "baseFunctions": [
                                    986
                                ],
                                "body": {
                                    "id": 2033,
                                    "nodeType": "Block",
                                    "src": "12093:151:4",
                                    "statements": [
                                        {
                                            "expression": {
                                                "arguments": [
                                                    {
                                                        "id": 2014,
                                                        "name": "from",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 2003,
                                                        "src": "12120:4:4",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        }
                                                    },
                                                    {
                                                        "id": 2015,
                                                        "name": "to",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 2005,
                                                        "src": "12126:2:4",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        }
                                                    },
                                                    {
                                                        "id": 2016,
                                                        "name": "value",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 2007,
                                                        "src": "12130:5:4",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        }
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        },
                                                        {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        },
                                                        {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        }
                                                    ],
                                                    "expression": {
                                                        "id": 2011,
                                                        "name": "super",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": -25,
                                                        "src": "12104:5:4",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_super$_ERC20Draggable_$2116",
                                                            "typeString": "contract super ERC20Draggable"
                                                        }
                                                    },
                                                    "id": 2013,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "memberName": "_transfer",
                                                    "nodeType": "MemberAccess",
                                                    "referencedDeclaration": 986,
                                                    "src": "12104:15:4",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                                                        "typeString": "function (address,address,uint256)"
                                                    }
                                                },
                                                "id": 2017,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "12104:32:4",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_tuple$__$",
                                                    "typeString": "tuple()"
                                                }
                                            },
                                            "id": 2018,
                                            "nodeType": "ExpressionStatement",
                                            "src": "12104:32:4"
                                        },
                                        {
                                            "condition": {
                                                "commonType": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                },
                                                "id": 2022,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftExpression": {
                                                    "arguments": [],
                                                    "expression": {
                                                        "argumentTypes": [],
                                                        "id": 2019,
                                                        "name": "offerExists",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 2092,
                                                        "src": "12151:11:4",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                                                            "typeString": "function () view returns (bool)"
                                                        }
                                                    },
                                                    "id": 2020,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "kind": "functionCall",
                                                    "lValueRequested": false,
                                                    "names": [],
                                                    "nodeType": "FunctionCall",
                                                    "src": "12151:13:4",
                                                    "tryCall": false,
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_bool",
                                                        "typeString": "bool"
                                                    }
                                                },
                                                "nodeType": "BinaryOperation",
                                                "operator": "&&",
                                                "rightExpression": {
                                                    "id": 2021,
                                                    "name": "active",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 1228,
                                                    "src": "12168:6:4",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_bool",
                                                        "typeString": "bool"
                                                    }
                                                },
                                                "src": "12151:23:4",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            },
                                            "id": 2032,
                                            "nodeType": "IfStatement",
                                            "src": "12147:90:4",
                                            "trueBody": {
                                                "id": 2031,
                                                "nodeType": "Block",
                                                "src": "12176:61:4",
                                                "statements": [
                                                    {
                                                        "expression": {
                                                            "arguments": [
                                                                {
                                                                    "id": 2026,
                                                                    "name": "from",
                                                                    "nodeType": "Identifier",
                                                                    "overloadedDeclarations": [],
                                                                    "referencedDeclaration": 2003,
                                                                    "src": "12209:4:4",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_address",
                                                                        "typeString": "address"
                                                                    }
                                                                },
                                                                {
                                                                    "id": 2027,
                                                                    "name": "to",
                                                                    "nodeType": "Identifier",
                                                                    "overloadedDeclarations": [],
                                                                    "referencedDeclaration": 2005,
                                                                    "src": "12215:2:4",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_address",
                                                                        "typeString": "address"
                                                                    }
                                                                },
                                                                {
                                                                    "id": 2028,
                                                                    "name": "value",
                                                                    "nodeType": "Identifier",
                                                                    "overloadedDeclarations": [],
                                                                    "referencedDeclaration": 2007,
                                                                    "src": "12219:5:4",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_uint256",
                                                                        "typeString": "uint256"
                                                                    }
                                                                }
                                                            ],
                                                            "expression": {
                                                                "argumentTypes": [
                                                                    {
                                                                        "typeIdentifier": "t_address",
                                                                        "typeString": "address"
                                                                    },
                                                                    {
                                                                        "typeIdentifier": "t_address",
                                                                        "typeString": "address"
                                                                    },
                                                                    {
                                                                        "typeIdentifier": "t_uint256",
                                                                        "typeString": "uint256"
                                                                    }
                                                                ],
                                                                "expression": {
                                                                    "id": 2023,
                                                                    "name": "offer",
                                                                    "nodeType": "Identifier",
                                                                    "overloadedDeclarations": [],
                                                                    "referencedDeclaration": 1210,
                                                                    "src": "12191:5:4",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_contract$_Acquisition_$491",
                                                                        "typeString": "contract Acquisition"
                                                                    }
                                                                },
                                                                "id": 2025,
                                                                "isConstant": false,
                                                                "isLValue": false,
                                                                "isPure": false,
                                                                "lValueRequested": false,
                                                                "memberName": "adjustVotes",
                                                                "nodeType": "MemberAccess",
                                                                "referencedDeclaration": 250,
                                                                "src": "12191:17:4",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                                                                    "typeString": "function (address,address,uint256) external"
                                                                }
                                                            },
                                                            "id": 2029,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": false,
                                                            "kind": "functionCall",
                                                            "lValueRequested": false,
                                                            "names": [],
                                                            "nodeType": "FunctionCall",
                                                            "src": "12191:34:4",
                                                            "tryCall": false,
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_tuple$__$",
                                                                "typeString": "tuple()"
                                                            }
                                                        },
                                                        "id": 2030,
                                                        "nodeType": "ExpressionStatement",
                                                        "src": "12191:34:4"
                                                    }
                                                ]
                                            }
                                        }
                                    ]
                                },
                                "id": 2034,
                                "implemented": true,
                                "kind": "function",
                                "modifiers": [],
                                "name": "_transfer",
                                "nodeType": "FunctionDefinition",
                                "overrides": {
                                    "id": 2009,
                                    "nodeType": "OverrideSpecifier",
                                    "overrides": [],
                                    "src": "12075:8:4"
                                },
                                "parameters": {
                                    "id": 2008,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 2003,
                                            "mutability": "mutable",
                                            "name": "from",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 2034,
                                            "src": "12026:12:4",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            },
                                            "typeName": {
                                                "id": 2002,
                                                "name": "address",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "12026:7:4",
                                                "stateMutability": "nonpayable",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            "visibility": "internal"
                                        },
                                        {
                                            "constant": false,
                                            "id": 2005,
                                            "mutability": "mutable",
                                            "name": "to",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 2034,
                                            "src": "12040:10:4",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            },
                                            "typeName": {
                                                "id": 2004,
                                                "name": "address",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "12040:7:4",
                                                "stateMutability": "nonpayable",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            "visibility": "internal"
                                        },
                                        {
                                            "constant": false,
                                            "id": 2007,
                                            "mutability": "mutable",
                                            "name": "value",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 2034,
                                            "src": "12052:13:4",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            },
                                            "typeName": {
                                                "id": 2006,
                                                "name": "uint256",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "12052:7:4",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "12025:41:4"
                                },
                                "returnParameters": {
                                    "id": 2010,
                                    "nodeType": "ParameterList",
                                    "parameters": [],
                                    "src": "12093:0:4"
                                },
                                "scope": 2116,
                                "src": "12007:237:4",
                                "stateMutability": "nonpayable",
                                "virtual": true,
                                "visibility": "internal"
                            },
                            {
                                "baseFunctions": [
                                    1112
                                ],
                                "body": {
                                    "id": 2066,
                                    "nodeType": "Block",
                                    "src": "12326:159:4",
                                    "statements": [
                                        {
                                            "expression": {
                                                "arguments": [
                                                    {
                                                        "id": 2045,
                                                        "name": "account",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 2036,
                                                        "src": "12349:7:4",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        }
                                                    },
                                                    {
                                                        "id": 2046,
                                                        "name": "amount",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 2038,
                                                        "src": "12358:6:4",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        }
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        },
                                                        {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        }
                                                    ],
                                                    "expression": {
                                                        "id": 2042,
                                                        "name": "super",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": -25,
                                                        "src": "12337:5:4",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_super$_ERC20Draggable_$2116",
                                                            "typeString": "contract super ERC20Draggable"
                                                        }
                                                    },
                                                    "id": 2044,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "memberName": "_burn",
                                                    "nodeType": "MemberAccess",
                                                    "referencedDeclaration": 1112,
                                                    "src": "12337:11:4",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                                                        "typeString": "function (address,uint256)"
                                                    }
                                                },
                                                "id": 2047,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "12337:28:4",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_tuple$__$",
                                                    "typeString": "tuple()"
                                                }
                                            },
                                            "id": 2048,
                                            "nodeType": "ExpressionStatement",
                                            "src": "12337:28:4"
                                        },
                                        {
                                            "condition": {
                                                "commonType": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                },
                                                "id": 2052,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftExpression": {
                                                    "arguments": [],
                                                    "expression": {
                                                        "argumentTypes": [],
                                                        "id": 2049,
                                                        "name": "offerExists",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 2092,
                                                        "src": "12380:11:4",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                                                            "typeString": "function () view returns (bool)"
                                                        }
                                                    },
                                                    "id": 2050,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "kind": "functionCall",
                                                    "lValueRequested": false,
                                                    "names": [],
                                                    "nodeType": "FunctionCall",
                                                    "src": "12380:13:4",
                                                    "tryCall": false,
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_bool",
                                                        "typeString": "bool"
                                                    }
                                                },
                                                "nodeType": "BinaryOperation",
                                                "operator": "&&",
                                                "rightExpression": {
                                                    "id": 2051,
                                                    "name": "active",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 1228,
                                                    "src": "12397:6:4",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_bool",
                                                        "typeString": "bool"
                                                    }
                                                },
                                                "src": "12380:23:4",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            },
                                            "id": 2065,
                                            "nodeType": "IfStatement",
                                            "src": "12376:102:4",
                                            "trueBody": {
                                                "id": 2064,
                                                "nodeType": "Block",
                                                "src": "12405:73:4",
                                                "statements": [
                                                    {
                                                        "expression": {
                                                            "arguments": [
                                                                {
                                                                    "id": 2056,
                                                                    "name": "account",
                                                                    "nodeType": "Identifier",
                                                                    "overloadedDeclarations": [],
                                                                    "referencedDeclaration": 2036,
                                                                    "src": "12438:7:4",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_address",
                                                                        "typeString": "address"
                                                                    }
                                                                },
                                                                {
                                                                    "arguments": [
                                                                        {
                                                                            "hexValue": "30",
                                                                            "id": 2059,
                                                                            "isConstant": false,
                                                                            "isLValue": false,
                                                                            "isPure": true,
                                                                            "kind": "number",
                                                                            "lValueRequested": false,
                                                                            "nodeType": "Literal",
                                                                            "src": "12455:1:4",
                                                                            "typeDescriptions": {
                                                                                "typeIdentifier": "t_rational_0_by_1",
                                                                                "typeString": "int_const 0"
                                                                            },
                                                                            "value": "0"
                                                                        }
                                                                    ],
                                                                    "expression": {
                                                                        "argumentTypes": [
                                                                            {
                                                                                "typeIdentifier": "t_rational_0_by_1",
                                                                                "typeString": "int_const 0"
                                                                            }
                                                                        ],
                                                                        "id": 2058,
                                                                        "isConstant": false,
                                                                        "isLValue": false,
                                                                        "isPure": true,
                                                                        "lValueRequested": false,
                                                                        "nodeType": "ElementaryTypeNameExpression",
                                                                        "src": "12447:7:4",
                                                                        "typeDescriptions": {
                                                                            "typeIdentifier": "t_type$_t_address_$",
                                                                            "typeString": "type(address)"
                                                                        },
                                                                        "typeName": {
                                                                            "id": 2057,
                                                                            "name": "address",
                                                                            "nodeType": "ElementaryTypeName",
                                                                            "src": "12447:7:4",
                                                                            "typeDescriptions": {}
                                                                        }
                                                                    },
                                                                    "id": 2060,
                                                                    "isConstant": false,
                                                                    "isLValue": false,
                                                                    "isPure": true,
                                                                    "kind": "typeConversion",
                                                                    "lValueRequested": false,
                                                                    "names": [],
                                                                    "nodeType": "FunctionCall",
                                                                    "src": "12447:10:4",
                                                                    "tryCall": false,
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_address_payable",
                                                                        "typeString": "address payable"
                                                                    }
                                                                },
                                                                {
                                                                    "id": 2061,
                                                                    "name": "amount",
                                                                    "nodeType": "Identifier",
                                                                    "overloadedDeclarations": [],
                                                                    "referencedDeclaration": 2038,
                                                                    "src": "12459:6:4",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_uint256",
                                                                        "typeString": "uint256"
                                                                    }
                                                                }
                                                            ],
                                                            "expression": {
                                                                "argumentTypes": [
                                                                    {
                                                                        "typeIdentifier": "t_address",
                                                                        "typeString": "address"
                                                                    },
                                                                    {
                                                                        "typeIdentifier": "t_address_payable",
                                                                        "typeString": "address payable"
                                                                    },
                                                                    {
                                                                        "typeIdentifier": "t_uint256",
                                                                        "typeString": "uint256"
                                                                    }
                                                                ],
                                                                "expression": {
                                                                    "id": 2053,
                                                                    "name": "offer",
                                                                    "nodeType": "Identifier",
                                                                    "overloadedDeclarations": [],
                                                                    "referencedDeclaration": 1210,
                                                                    "src": "12420:5:4",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_contract$_Acquisition_$491",
                                                                        "typeString": "contract Acquisition"
                                                                    }
                                                                },
                                                                "id": 2055,
                                                                "isConstant": false,
                                                                "isLValue": false,
                                                                "isPure": false,
                                                                "lValueRequested": false,
                                                                "memberName": "adjustVotes",
                                                                "nodeType": "MemberAccess",
                                                                "referencedDeclaration": 250,
                                                                "src": "12420:17:4",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                                                                    "typeString": "function (address,address,uint256) external"
                                                                }
                                                            },
                                                            "id": 2062,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": false,
                                                            "kind": "functionCall",
                                                            "lValueRequested": false,
                                                            "names": [],
                                                            "nodeType": "FunctionCall",
                                                            "src": "12420:46:4",
                                                            "tryCall": false,
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_tuple$__$",
                                                                "typeString": "tuple()"
                                                            }
                                                        },
                                                        "id": 2063,
                                                        "nodeType": "ExpressionStatement",
                                                        "src": "12420:46:4"
                                                    }
                                                ]
                                            }
                                        }
                                    ]
                                },
                                "id": 2067,
                                "implemented": true,
                                "kind": "function",
                                "modifiers": [],
                                "name": "_burn",
                                "nodeType": "FunctionDefinition",
                                "overrides": {
                                    "id": 2040,
                                    "nodeType": "OverrideSpecifier",
                                    "overrides": [],
                                    "src": "12308:8:4"
                                },
                                "parameters": {
                                    "id": 2039,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 2036,
                                            "mutability": "mutable",
                                            "name": "account",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 2067,
                                            "src": "12267:15:4",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            },
                                            "typeName": {
                                                "id": 2035,
                                                "name": "address",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "12267:7:4",
                                                "stateMutability": "nonpayable",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            "visibility": "internal"
                                        },
                                        {
                                            "constant": false,
                                            "id": 2038,
                                            "mutability": "mutable",
                                            "name": "amount",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 2067,
                                            "src": "12284:14:4",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            },
                                            "typeName": {
                                                "id": 2037,
                                                "name": "uint256",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "12284:7:4",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "12266:33:4"
                                },
                                "returnParameters": {
                                    "id": 2041,
                                    "nodeType": "ParameterList",
                                    "parameters": [],
                                    "src": "12326:0:4"
                                },
                                "scope": 2116,
                                "src": "12252:233:4",
                                "stateMutability": "nonpayable",
                                "virtual": true,
                                "visibility": "internal"
                            },
                            {
                                "body": {
                                    "id": 2077,
                                    "nodeType": "Block",
                                    "src": "12550:40:4",
                                    "statements": [
                                        {
                                            "expression": {
                                                "arguments": [
                                                    {
                                                        "id": 2074,
                                                        "name": "offer",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 1210,
                                                        "src": "12576:5:4",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_contract$_Acquisition_$491",
                                                            "typeString": "contract Acquisition"
                                                        }
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_contract$_Acquisition_$491",
                                                            "typeString": "contract Acquisition"
                                                        }
                                                    ],
                                                    "id": 2073,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "lValueRequested": false,
                                                    "nodeType": "ElementaryTypeNameExpression",
                                                    "src": "12568:7:4",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_type$_t_address_$",
                                                        "typeString": "type(address)"
                                                    },
                                                    "typeName": {
                                                        "id": 2072,
                                                        "name": "address",
                                                        "nodeType": "ElementaryTypeName",
                                                        "src": "12568:7:4",
                                                        "typeDescriptions": {}
                                                    }
                                                },
                                                "id": 2075,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "typeConversion",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "12568:14:4",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            "functionReturnParameters": 2071,
                                            "id": 2076,
                                            "nodeType": "Return",
                                            "src": "12561:21:4"
                                        }
                                    ]
                                },
                                "functionSelector": "6467c09a",
                                "id": 2078,
                                "implemented": true,
                                "kind": "function",
                                "modifiers": [],
                                "name": "getPendingOffer",
                                "nodeType": "FunctionDefinition",
                                "parameters": {
                                    "id": 2068,
                                    "nodeType": "ParameterList",
                                    "parameters": [],
                                    "src": "12517:2:4"
                                },
                                "returnParameters": {
                                    "id": 2071,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 2070,
                                            "mutability": "mutable",
                                            "name": "",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 2078,
                                            "src": "12541:7:4",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            },
                                            "typeName": {
                                                "id": 2069,
                                                "name": "address",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "12541:7:4",
                                                "stateMutability": "nonpayable",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "12540:9:4"
                                },
                                "scope": 2116,
                                "src": "12493:97:4",
                                "stateMutability": "view",
                                "virtual": false,
                                "visibility": "public"
                            },
                            {
                                "body": {
                                    "id": 2091,
                                    "nodeType": "Block",
                                    "src": "12648:57:4",
                                    "statements": [
                                        {
                                            "expression": {
                                                "commonType": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                },
                                                "id": 2089,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftExpression": {
                                                    "arguments": [],
                                                    "expression": {
                                                        "argumentTypes": [],
                                                        "id": 2083,
                                                        "name": "getPendingOffer",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 2078,
                                                        "src": "12666:15:4",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                                            "typeString": "function () view returns (address)"
                                                        }
                                                    },
                                                    "id": 2084,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "kind": "functionCall",
                                                    "lValueRequested": false,
                                                    "names": [],
                                                    "nodeType": "FunctionCall",
                                                    "src": "12666:17:4",
                                                    "tryCall": false,
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_address",
                                                        "typeString": "address"
                                                    }
                                                },
                                                "nodeType": "BinaryOperation",
                                                "operator": "!=",
                                                "rightExpression": {
                                                    "arguments": [
                                                        {
                                                            "hexValue": "30",
                                                            "id": 2087,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": true,
                                                            "kind": "number",
                                                            "lValueRequested": false,
                                                            "nodeType": "Literal",
                                                            "src": "12695:1:4",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_rational_0_by_1",
                                                                "typeString": "int_const 0"
                                                            },
                                                            "value": "0"
                                                        }
                                                    ],
                                                    "expression": {
                                                        "argumentTypes": [
                                                            {
                                                                "typeIdentifier": "t_rational_0_by_1",
                                                                "typeString": "int_const 0"
                                                            }
                                                        ],
                                                        "id": 2086,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": true,
                                                        "lValueRequested": false,
                                                        "nodeType": "ElementaryTypeNameExpression",
                                                        "src": "12687:7:4",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_type$_t_address_$",
                                                            "typeString": "type(address)"
                                                        },
                                                        "typeName": {
                                                            "id": 2085,
                                                            "name": "address",
                                                            "nodeType": "ElementaryTypeName",
                                                            "src": "12687:7:4",
                                                            "typeDescriptions": {}
                                                        }
                                                    },
                                                    "id": 2088,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "kind": "typeConversion",
                                                    "lValueRequested": false,
                                                    "names": [],
                                                    "nodeType": "FunctionCall",
                                                    "src": "12687:10:4",
                                                    "tryCall": false,
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_address_payable",
                                                        "typeString": "address payable"
                                                    }
                                                },
                                                "src": "12666:31:4",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            },
                                            "functionReturnParameters": 2082,
                                            "id": 2090,
                                            "nodeType": "Return",
                                            "src": "12659:38:4"
                                        }
                                    ]
                                },
                                "functionSelector": "bc1b1e7c",
                                "id": 2092,
                                "implemented": true,
                                "kind": "function",
                                "modifiers": [],
                                "name": "offerExists",
                                "nodeType": "FunctionDefinition",
                                "parameters": {
                                    "id": 2079,
                                    "nodeType": "ParameterList",
                                    "parameters": [],
                                    "src": "12618:2:4"
                                },
                                "returnParameters": {
                                    "id": 2082,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 2081,
                                            "mutability": "mutable",
                                            "name": "",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 2092,
                                            "src": "12642:4:4",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_bool",
                                                "typeString": "bool"
                                            },
                                            "typeName": {
                                                "id": 2080,
                                                "name": "bool",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "12642:4:4",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "12641:6:4"
                                },
                                "scope": 2116,
                                "src": "12598:107:4",
                                "stateMutability": "view",
                                "virtual": false,
                                "visibility": "public"
                            },
                            {
                                "body": {
                                    "id": 2103,
                                    "nodeType": "Block",
                                    "src": "12737:92:4",
                                    "statements": [
                                        {
                                            "expression": {
                                                "arguments": [
                                                    {
                                                        "commonType": {
                                                            "typeIdentifier": "t_bool",
                                                            "typeString": "bool"
                                                        },
                                                        "id": 2098,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "leftExpression": {
                                                            "arguments": [],
                                                            "expression": {
                                                                "argumentTypes": [],
                                                                "id": 2095,
                                                                "name": "offerExists",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [],
                                                                "referencedDeclaration": 2092,
                                                                "src": "12756:11:4",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                                                                    "typeString": "function () view returns (bool)"
                                                                }
                                                            },
                                                            "id": 2096,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": false,
                                                            "kind": "functionCall",
                                                            "lValueRequested": false,
                                                            "names": [],
                                                            "nodeType": "FunctionCall",
                                                            "src": "12756:13:4",
                                                            "tryCall": false,
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_bool",
                                                                "typeString": "bool"
                                                            }
                                                        },
                                                        "nodeType": "BinaryOperation",
                                                        "operator": "&&",
                                                        "rightExpression": {
                                                            "id": 2097,
                                                            "name": "active",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 1228,
                                                            "src": "12773:6:4",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_bool",
                                                                "typeString": "bool"
                                                            }
                                                        },
                                                        "src": "12756:23:4",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_bool",
                                                            "typeString": "bool"
                                                        }
                                                    },
                                                    {
                                                        "hexValue": "5468657265206973206e6f2070656e64696e67206f66666572",
                                                        "id": 2099,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": true,
                                                        "kind": "string",
                                                        "lValueRequested": false,
                                                        "nodeType": "Literal",
                                                        "src": "12781:27:4",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_stringliteral_258f1d529846d308f16449b582284b777d40571a06d78e599e323c29de930fbc",
                                                            "typeString": "literal_string \"There is no pending offer\""
                                                        },
                                                        "value": "There is no pending offer"
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_bool",
                                                            "typeString": "bool"
                                                        },
                                                        {
                                                            "typeIdentifier": "t_stringliteral_258f1d529846d308f16449b582284b777d40571a06d78e599e323c29de930fbc",
                                                            "typeString": "literal_string \"There is no pending offer\""
                                                        }
                                                    ],
                                                    "id": 2094,
                                                    "name": "require",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [
                                                        -18,
                                                        -18
                                                    ],
                                                    "referencedDeclaration": -18,
                                                    "src": "12748:7:4",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                                        "typeString": "function (bool,string memory) pure"
                                                    }
                                                },
                                                "id": 2100,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "12748:61:4",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_tuple$__$",
                                                    "typeString": "tuple()"
                                                }
                                            },
                                            "id": 2101,
                                            "nodeType": "ExpressionStatement",
                                            "src": "12748:61:4"
                                        },
                                        {
                                            "id": 2102,
                                            "nodeType": "PlaceholderStatement",
                                            "src": "12820:1:4"
                                        }
                                    ]
                                },
                                "id": 2104,
                                "name": "offerPending",
                                "nodeType": "ModifierDefinition",
                                "parameters": {
                                    "id": 2093,
                                    "nodeType": "ParameterList",
                                    "parameters": [],
                                    "src": "12734:2:4"
                                },
                                "src": "12713:116:4",
                                "virtual": false,
                                "visibility": "internal"
                            },
                            {
                                "body": {
                                    "id": 2114,
                                    "nodeType": "Block",
                                    "src": "12863:82:4",
                                    "statements": [
                                        {
                                            "expression": {
                                                "arguments": [
                                                    {
                                                        "id": 2109,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "nodeType": "UnaryOperation",
                                                        "operator": "!",
                                                        "prefix": true,
                                                        "src": "12882:14:4",
                                                        "subExpression": {
                                                            "arguments": [],
                                                            "expression": {
                                                                "argumentTypes": [],
                                                                "id": 2107,
                                                                "name": "offerExists",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [],
                                                                "referencedDeclaration": 2092,
                                                                "src": "12883:11:4",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                                                                    "typeString": "function () view returns (bool)"
                                                                }
                                                            },
                                                            "id": 2108,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": false,
                                                            "kind": "functionCall",
                                                            "lValueRequested": false,
                                                            "names": [],
                                                            "nodeType": "FunctionCall",
                                                            "src": "12883:13:4",
                                                            "tryCall": false,
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_bool",
                                                                "typeString": "bool"
                                                            }
                                                        },
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_bool",
                                                            "typeString": "bool"
                                                        }
                                                    },
                                                    {
                                                        "hexValue": "546865726520697320612070656e64696e67206f66666572",
                                                        "id": 2110,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": true,
                                                        "kind": "string",
                                                        "lValueRequested": false,
                                                        "nodeType": "Literal",
                                                        "src": "12898:26:4",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_stringliteral_422fc0a8356bb57331231b5fe7a821588b75fa61347ef4c3925c049783530fbb",
                                                            "typeString": "literal_string \"There is a pending offer\""
                                                        },
                                                        "value": "There is a pending offer"
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_bool",
                                                            "typeString": "bool"
                                                        },
                                                        {
                                                            "typeIdentifier": "t_stringliteral_422fc0a8356bb57331231b5fe7a821588b75fa61347ef4c3925c049783530fbb",
                                                            "typeString": "literal_string \"There is a pending offer\""
                                                        }
                                                    ],
                                                    "id": 2106,
                                                    "name": "require",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [
                                                        -18,
                                                        -18
                                                    ],
                                                    "referencedDeclaration": -18,
                                                    "src": "12874:7:4",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                                        "typeString": "function (bool,string memory) pure"
                                                    }
                                                },
                                                "id": 2111,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "12874:51:4",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_tuple$__$",
                                                    "typeString": "tuple()"
                                                }
                                            },
                                            "id": 2112,
                                            "nodeType": "ExpressionStatement",
                                            "src": "12874:51:4"
                                        },
                                        {
                                            "id": 2113,
                                            "nodeType": "PlaceholderStatement",
                                            "src": "12936:1:4"
                                        }
                                    ]
                                },
                                "id": 2115,
                                "name": "noOfferPending",
                                "nodeType": "ModifierDefinition",
                                "parameters": {
                                    "id": 2105,
                                    "nodeType": "ParameterList",
                                    "parameters": [],
                                    "src": "12860:2:4"
                                },
                                "src": "12837:108:4",
                                "virtual": false,
                                "visibility": "internal"
                            }
                        ],
                        "scope": 2129,
                        "src": "2411:10539:4"
                    },
                    {
                        "abstract": true,
                        "baseContracts": [],
                        "contractDependencies": [],
                        "contractKind": "contract",
                        "fullyImplemented": false,
                        "id": 2122,
                        "linearizedBaseContracts": [
                            2122
                        ],
                        "name": "IShares",
                        "nodeType": "ContractDefinition",
                        "nodes": [
                            {
                                "functionSelector": "3a98ef39",
                                "id": 2121,
                                "implemented": false,
                                "kind": "function",
                                "modifiers": [],
                                "name": "totalShares",
                                "nodeType": "FunctionDefinition",
                                "parameters": {
                                    "id": 2117,
                                    "nodeType": "ParameterList",
                                    "parameters": [],
                                    "src": "13007:2:4"
                                },
                                "returnParameters": {
                                    "id": 2120,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 2119,
                                            "mutability": "mutable",
                                            "name": "",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 2121,
                                            "src": "13034:7:4",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            },
                                            "typeName": {
                                                "id": 2118,
                                                "name": "uint256",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "13034:7:4",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "13033:9:4"
                                },
                                "scope": 2122,
                                "src": "12987:56:4",
                                "stateMutability": "nonpayable",
                                "virtual": true,
                                "visibility": "public"
                            }
                        ],
                        "scope": 2129,
                        "src": "12954:92:4"
                    },
                    {
                        "abstract": true,
                        "baseContracts": [],
                        "contractDependencies": [],
                        "contractKind": "contract",
                        "fullyImplemented": false,
                        "id": 2128,
                        "linearizedBaseContracts": [
                            2128
                        ],
                        "name": "IBurnable",
                        "nodeType": "ContractDefinition",
                        "nodes": [
                            {
                                "functionSelector": "42966c68",
                                "id": 2127,
                                "implemented": false,
                                "kind": "function",
                                "modifiers": [],
                                "name": "burn",
                                "nodeType": "FunctionDefinition",
                                "parameters": {
                                    "id": 2125,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 2124,
                                            "mutability": "mutable",
                                            "name": "",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 2127,
                                            "src": "13099:7:4",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            },
                                            "typeName": {
                                                "id": 2123,
                                                "name": "uint256",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "13099:7:4",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "13098:9:4"
                                },
                                "returnParameters": {
                                    "id": 2126,
                                    "nodeType": "ParameterList",
                                    "parameters": [],
                                    "src": "13122:0:4"
                                },
                                "scope": 2128,
                                "src": "13085:38:4",
                                "stateMutability": "nonpayable",
                                "virtual": true,
                                "visibility": "public"
                            }
                        ],
                        "scope": 2129,
                        "src": "13050:76:4"
                    }
                ],
                "src": "1336:11790:4"
            },
            "id": 4
        },
        "c:/Users/luziu/Documents/aktionariat/contracts/src/ERC20Recoverable.sol": {
            "ast": {
                "absolutePath": "c:/Users/luziu/Documents/aktionariat/contracts/src/ERC20Recoverable.sol",
                "exportedSymbols": {
                    "ERC20Recoverable": [
                        2716
                    ]
                },
                "id": 2717,
                "license": "LicenseRef-Aktionariat",
                "nodeType": "SourceUnit",
                "nodes": [
                    {
                        "id": 2130,
                        "literals": [
                            "solidity",
                            ">=",
                            "0.7"
                        ],
                        "nodeType": "PragmaDirective",
                        "src": "1336:22:5"
                    },
                    {
                        "absolutePath": "c:/Users/luziu/Documents/aktionariat/contracts/src/SafeMath.sol",
                        "file": "./SafeMath.sol",
                        "id": 2131,
                        "nodeType": "ImportDirective",
                        "scope": 2717,
                        "sourceUnit": 2929,
                        "src": "1362:24:5",
                        "symbolAliases": [],
                        "unitAlias": ""
                    },
                    {
                        "absolutePath": "c:/Users/luziu/Documents/aktionariat/contracts/src/ERC20.sol",
                        "file": "./ERC20.sol",
                        "id": 2132,
                        "nodeType": "ImportDirective",
                        "scope": 2717,
                        "sourceUnit": 1188,
                        "src": "1388:21:5",
                        "symbolAliases": [],
                        "unitAlias": ""
                    },
                    {
                        "absolutePath": "c:/Users/luziu/Documents/aktionariat/contracts/src/IERC20.sol",
                        "file": "./IERC20.sol",
                        "id": 2133,
                        "nodeType": "ImportDirective",
                        "scope": 2717,
                        "sourceUnit": 2810,
                        "src": "1411:22:5",
                        "symbolAliases": [],
                        "unitAlias": ""
                    },
                    {
                        "abstract": true,
                        "baseContracts": [
                            {
                                "baseName": {
                                    "id": 2135,
                                    "name": "ERC20",
                                    "nodeType": "UserDefinedTypeName",
                                    "referencedDeclaration": 1187,
                                    "src": "2615:5:5",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_ERC20_$1187",
                                        "typeString": "contract ERC20"
                                    }
                                },
                                "id": 2136,
                                "nodeType": "InheritanceSpecifier",
                                "src": "2615:5:5"
                            }
                        ],
                        "contractDependencies": [
                            1187,
                            2809
                        ],
                        "contractKind": "contract",
                        "documentation": {
                            "id": 2134,
                            "nodeType": "StructuredDocumentation",
                            "src": "1437:1136:5",
                            "text": " @title Recoverable\n In case of tokens that represent real-world assets such as shares of a company, one needs a way\n to handle lost private keys. With physical certificates, courts can declare share certificates as\n invalid so the company can issue replacements. Here, we want a solution that does not depend on\n third parties to resolve such cases. Instead, when someone has lost a private key, he can use the\n declareLost function to post a deposit and claim that the shares assigned to a specific address are\n lost. To prevent front running, a commit reveal scheme is used. If he actually is the owner of the shares,\n he needs to wait for a certain period and can then reclaim the lost shares as well as the deposit.\n If he is an attacker trying to claim shares belonging to someone else, he risks losing the deposit\n as it can be claimed at anytime by the rightful owner.\n Furthermore, if \"getClaimDeleter\" is defined in the subclass, the returned address is allowed to\n delete claims, returning the collateral. This can help to prevent obvious cases of abuse of the claim\n function."
                        },
                        "fullyImplemented": false,
                        "id": 2716,
                        "linearizedBaseContracts": [
                            2716,
                            1187,
                            2809
                        ],
                        "name": "ERC20Recoverable",
                        "nodeType": "ContractDefinition",
                        "nodes": [
                            {
                                "id": 2139,
                                "libraryName": {
                                    "id": 2137,
                                    "name": "SafeMath",
                                    "nodeType": "UserDefinedTypeName",
                                    "referencedDeclaration": 2928,
                                    "src": "2636:8:5",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_SafeMath_$2928",
                                        "typeString": "library SafeMath"
                                    }
                                },
                                "nodeType": "UsingForDirective",
                                "src": "2630:27:5",
                                "typeName": {
                                    "id": 2138,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "2649:7:5",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                    }
                                }
                            },
                            {
                                "canonicalName": "ERC20Recoverable.Claim",
                                "id": 2148,
                                "members": [
                                    {
                                        "constant": false,
                                        "id": 2141,
                                        "mutability": "mutable",
                                        "name": "claimant",
                                        "nodeType": "VariableDeclaration",
                                        "scope": 2148,
                                        "src": "2735:16:5",
                                        "stateVariable": false,
                                        "storageLocation": "default",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        },
                                        "typeName": {
                                            "id": 2140,
                                            "name": "address",
                                            "nodeType": "ElementaryTypeName",
                                            "src": "2735:7:5",
                                            "stateMutability": "nonpayable",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            }
                                        },
                                        "visibility": "internal"
                                    },
                                    {
                                        "constant": false,
                                        "id": 2143,
                                        "mutability": "mutable",
                                        "name": "collateral",
                                        "nodeType": "VariableDeclaration",
                                        "scope": 2148,
                                        "src": "2798:18:5",
                                        "stateVariable": false,
                                        "storageLocation": "default",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        },
                                        "typeName": {
                                            "id": 2142,
                                            "name": "uint256",
                                            "nodeType": "ElementaryTypeName",
                                            "src": "2798:7:5",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            }
                                        },
                                        "visibility": "internal"
                                    },
                                    {
                                        "constant": false,
                                        "id": 2145,
                                        "mutability": "mutable",
                                        "name": "timestamp",
                                        "nodeType": "VariableDeclaration",
                                        "scope": 2148,
                                        "src": "2865:17:5",
                                        "stateVariable": false,
                                        "storageLocation": "default",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        },
                                        "typeName": {
                                            "id": 2144,
                                            "name": "uint256",
                                            "nodeType": "ElementaryTypeName",
                                            "src": "2865:7:5",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            }
                                        },
                                        "visibility": "internal"
                                    },
                                    {
                                        "constant": false,
                                        "id": 2147,
                                        "mutability": "mutable",
                                        "name": "currencyUsed",
                                        "nodeType": "VariableDeclaration",
                                        "scope": 2148,
                                        "src": "2952:20:5",
                                        "stateVariable": false,
                                        "storageLocation": "default",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        },
                                        "typeName": {
                                            "id": 2146,
                                            "name": "address",
                                            "nodeType": "ElementaryTypeName",
                                            "src": "2952:7:5",
                                            "stateMutability": "nonpayable",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            }
                                        },
                                        "visibility": "internal"
                                    }
                                ],
                                "name": "Claim",
                                "nodeType": "StructDefinition",
                                "scope": 2716,
                                "src": "2711:354:5",
                                "visibility": "public"
                            },
                            {
                                "constant": false,
                                "functionSelector": "7dc2cd98",
                                "id": 2151,
                                "mutability": "mutable",
                                "name": "claimPeriod",
                                "nodeType": "VariableDeclaration",
                                "scope": 2716,
                                "src": "3073:37:5",
                                "stateVariable": true,
                                "storageLocation": "default",
                                "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                },
                                "typeName": {
                                    "id": 2149,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "3073:7:5",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                    }
                                },
                                "value": {
                                    "hexValue": "313830",
                                    "id": 2150,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "3102:8:5",
                                    "subdenomination": "days",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_rational_15552000_by_1",
                                        "typeString": "int_const 15552000"
                                    },
                                    "value": "180"
                                },
                                "visibility": "public"
                            },
                            {
                                "constant": false,
                                "functionSelector": "c6788bdd",
                                "id": 2155,
                                "mutability": "mutable",
                                "name": "claims",
                                "nodeType": "VariableDeclaration",
                                "scope": 2716,
                                "src": "3143:39:5",
                                "stateVariable": true,
                                "storageLocation": "default",
                                "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Claim_$2148_storage_$",
                                    "typeString": "mapping(address => struct ERC20Recoverable.Claim)"
                                },
                                "typeName": {
                                    "id": 2154,
                                    "keyType": {
                                        "id": 2152,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "3151:7:5",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "nodeType": "Mapping",
                                    "src": "3143:25:5",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Claim_$2148_storage_$",
                                        "typeString": "mapping(address => struct ERC20Recoverable.Claim)"
                                    },
                                    "valueType": {
                                        "id": 2153,
                                        "name": "Claim",
                                        "nodeType": "UserDefinedTypeName",
                                        "referencedDeclaration": 2148,
                                        "src": "3162:5:5",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_Claim_$2148_storage_ptr",
                                            "typeString": "struct ERC20Recoverable.Claim"
                                        }
                                    }
                                },
                                "visibility": "public"
                            },
                            {
                                "constant": false,
                                "functionSelector": "b40e80d1",
                                "id": 2159,
                                "mutability": "mutable",
                                "name": "recoveryDisabled",
                                "nodeType": "VariableDeclaration",
                                "scope": 2716,
                                "src": "3268:48:5",
                                "stateVariable": true,
                                "storageLocation": "default",
                                "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                    "typeString": "mapping(address => bool)"
                                },
                                "typeName": {
                                    "id": 2158,
                                    "keyType": {
                                        "id": 2156,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "3276:7:5",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "nodeType": "Mapping",
                                    "src": "3268:24:5",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                        "typeString": "mapping(address => bool)"
                                    },
                                    "valueType": {
                                        "id": 2157,
                                        "name": "bool",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "3287:4:5",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                        }
                                    }
                                },
                                "visibility": "public"
                            },
                            {
                                "constant": false,
                                "functionSelector": "0c6f0e5d",
                                "id": 2161,
                                "mutability": "mutable",
                                "name": "customCollateralAddress",
                                "nodeType": "VariableDeclaration",
                                "scope": 2716,
                                "src": "3449:38:5",
                                "stateVariable": true,
                                "storageLocation": "default",
                                "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                },
                                "typeName": {
                                    "id": 2160,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "3449:7:5",
                                    "stateMutability": "nonpayable",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                    }
                                },
                                "visibility": "public"
                            },
                            {
                                "constant": false,
                                "functionSelector": "60918117",
                                "id": 2163,
                                "mutability": "mutable",
                                "name": "customCollateralRate",
                                "nodeType": "VariableDeclaration",
                                "scope": 2716,
                                "src": "3494:35:5",
                                "stateVariable": true,
                                "storageLocation": "default",
                                "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                },
                                "typeName": {
                                    "id": 2162,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "3494:7:5",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                    }
                                },
                                "visibility": "public"
                            },
                            {
                                "body": {
                                    "id": 2191,
                                    "nodeType": "Block",
                                    "src": "3956:238:5",
                                    "statements": [
                                        {
                                            "condition": {
                                                "commonType": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                },
                                                "id": 2176,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftExpression": {
                                                    "id": 2171,
                                                    "name": "collateralType",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 2166,
                                                    "src": "3971:14:5",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_address",
                                                        "typeString": "address"
                                                    }
                                                },
                                                "nodeType": "BinaryOperation",
                                                "operator": "==",
                                                "rightExpression": {
                                                    "arguments": [
                                                        {
                                                            "id": 2174,
                                                            "name": "this",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": -28,
                                                            "src": "3997:4:5",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_contract$_ERC20Recoverable_$2716",
                                                                "typeString": "contract ERC20Recoverable"
                                                            }
                                                        }
                                                    ],
                                                    "expression": {
                                                        "argumentTypes": [
                                                            {
                                                                "typeIdentifier": "t_contract$_ERC20Recoverable_$2716",
                                                                "typeString": "contract ERC20Recoverable"
                                                            }
                                                        ],
                                                        "id": 2173,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": true,
                                                        "lValueRequested": false,
                                                        "nodeType": "ElementaryTypeNameExpression",
                                                        "src": "3989:7:5",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_type$_t_address_$",
                                                            "typeString": "type(address)"
                                                        },
                                                        "typeName": {
                                                            "id": 2172,
                                                            "name": "address",
                                                            "nodeType": "ElementaryTypeName",
                                                            "src": "3989:7:5",
                                                            "typeDescriptions": {}
                                                        }
                                                    },
                                                    "id": 2175,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "kind": "typeConversion",
                                                    "lValueRequested": false,
                                                    "names": [],
                                                    "nodeType": "FunctionCall",
                                                    "src": "3989:13:5",
                                                    "tryCall": false,
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_address",
                                                        "typeString": "address"
                                                    }
                                                },
                                                "src": "3971:31:5",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            },
                                            "falseBody": {
                                                "condition": {
                                                    "commonType": {
                                                        "typeIdentifier": "t_address",
                                                        "typeString": "address"
                                                    },
                                                    "id": 2182,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "leftExpression": {
                                                        "id": 2180,
                                                        "name": "collateralType",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 2166,
                                                        "src": "4049:14:5",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        }
                                                    },
                                                    "nodeType": "BinaryOperation",
                                                    "operator": "==",
                                                    "rightExpression": {
                                                        "id": 2181,
                                                        "name": "customCollateralAddress",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 2161,
                                                        "src": "4067:23:5",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        }
                                                    },
                                                    "src": "4049:41:5",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_bool",
                                                        "typeString": "bool"
                                                    }
                                                },
                                                "falseBody": {
                                                    "id": 2188,
                                                    "nodeType": "Block",
                                                    "src": "4152:35:5",
                                                    "statements": [
                                                        {
                                                            "expression": {
                                                                "hexValue": "30",
                                                                "id": 2186,
                                                                "isConstant": false,
                                                                "isLValue": false,
                                                                "isPure": true,
                                                                "kind": "number",
                                                                "lValueRequested": false,
                                                                "nodeType": "Literal",
                                                                "src": "4174:1:5",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_rational_0_by_1",
                                                                    "typeString": "int_const 0"
                                                                },
                                                                "value": "0"
                                                            },
                                                            "functionReturnParameters": 2170,
                                                            "id": 2187,
                                                            "nodeType": "Return",
                                                            "src": "4167:8:5"
                                                        }
                                                    ]
                                                },
                                                "id": 2189,
                                                "nodeType": "IfStatement",
                                                "src": "4045:142:5",
                                                "trueBody": {
                                                    "id": 2185,
                                                    "nodeType": "Block",
                                                    "src": "4092:54:5",
                                                    "statements": [
                                                        {
                                                            "expression": {
                                                                "id": 2183,
                                                                "name": "customCollateralRate",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [],
                                                                "referencedDeclaration": 2163,
                                                                "src": "4114:20:5",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_uint256",
                                                                    "typeString": "uint256"
                                                                }
                                                            },
                                                            "functionReturnParameters": 2170,
                                                            "id": 2184,
                                                            "nodeType": "Return",
                                                            "src": "4107:27:5"
                                                        }
                                                    ]
                                                }
                                            },
                                            "id": 2190,
                                            "nodeType": "IfStatement",
                                            "src": "3967:220:5",
                                            "trueBody": {
                                                "id": 2179,
                                                "nodeType": "Block",
                                                "src": "4004:35:5",
                                                "statements": [
                                                    {
                                                        "expression": {
                                                            "hexValue": "31",
                                                            "id": 2177,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": true,
                                                            "kind": "number",
                                                            "lValueRequested": false,
                                                            "nodeType": "Literal",
                                                            "src": "4026:1:5",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_rational_1_by_1",
                                                                "typeString": "int_const 1"
                                                            },
                                                            "value": "1"
                                                        },
                                                        "functionReturnParameters": 2170,
                                                        "id": 2178,
                                                        "nodeType": "Return",
                                                        "src": "4019:8:5"
                                                    }
                                                ]
                                            }
                                        }
                                    ]
                                },
                                "documentation": {
                                    "id": 2164,
                                    "nodeType": "StructuredDocumentation",
                                    "src": "3538:323:5",
                                    "text": " Returns the collateral rate for the given collateral type and 0 if that type\n of collateral is not accepted. By default, only the token itself is accepted at\n a rate of 1:1.\n Subclasses should override this method if they want to add additional types of\n collateral."
                                },
                                "functionSelector": "77e071ad",
                                "id": 2192,
                                "implemented": true,
                                "kind": "function",
                                "modifiers": [],
                                "name": "getCollateralRate",
                                "nodeType": "FunctionDefinition",
                                "parameters": {
                                    "id": 2167,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 2166,
                                            "mutability": "mutable",
                                            "name": "collateralType",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 2192,
                                            "src": "3894:22:5",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            },
                                            "typeName": {
                                                "id": 2165,
                                                "name": "address",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "3894:7:5",
                                                "stateMutability": "nonpayable",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "3893:24:5"
                                },
                                "returnParameters": {
                                    "id": 2170,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 2169,
                                            "mutability": "mutable",
                                            "name": "",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 2192,
                                            "src": "3947:7:5",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            },
                                            "typeName": {
                                                "id": 2168,
                                                "name": "uint256",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "3947:7:5",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "3946:9:5"
                                },
                                "scope": 2716,
                                "src": "3867:327:5",
                                "stateMutability": "view",
                                "virtual": true,
                                "visibility": "public"
                            },
                            {
                                "body": {
                                    "id": 2233,
                                    "nodeType": "Block",
                                    "src": "4728:358:5",
                                    "statements": [
                                        {
                                            "expression": {
                                                "id": 2202,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftHandSide": {
                                                    "id": 2200,
                                                    "name": "customCollateralAddress",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 2161,
                                                    "src": "4739:23:5",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_address",
                                                        "typeString": "address"
                                                    }
                                                },
                                                "nodeType": "Assignment",
                                                "operator": "=",
                                                "rightHandSide": {
                                                    "id": 2201,
                                                    "name": "collateral",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 2195,
                                                    "src": "4765:10:5",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_address",
                                                        "typeString": "address"
                                                    }
                                                },
                                                "src": "4739:36:5",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            "id": 2203,
                                            "nodeType": "ExpressionStatement",
                                            "src": "4739:36:5"
                                        },
                                        {
                                            "condition": {
                                                "commonType": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                },
                                                "id": 2209,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftExpression": {
                                                    "id": 2204,
                                                    "name": "customCollateralAddress",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 2161,
                                                    "src": "4790:23:5",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_address",
                                                        "typeString": "address"
                                                    }
                                                },
                                                "nodeType": "BinaryOperation",
                                                "operator": "==",
                                                "rightExpression": {
                                                    "arguments": [
                                                        {
                                                            "hexValue": "30",
                                                            "id": 2207,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": true,
                                                            "kind": "number",
                                                            "lValueRequested": false,
                                                            "nodeType": "Literal",
                                                            "src": "4825:1:5",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_rational_0_by_1",
                                                                "typeString": "int_const 0"
                                                            },
                                                            "value": "0"
                                                        }
                                                    ],
                                                    "expression": {
                                                        "argumentTypes": [
                                                            {
                                                                "typeIdentifier": "t_rational_0_by_1",
                                                                "typeString": "int_const 0"
                                                            }
                                                        ],
                                                        "id": 2206,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": true,
                                                        "lValueRequested": false,
                                                        "nodeType": "ElementaryTypeNameExpression",
                                                        "src": "4817:7:5",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_type$_t_address_$",
                                                            "typeString": "type(address)"
                                                        },
                                                        "typeName": {
                                                            "id": 2205,
                                                            "name": "address",
                                                            "nodeType": "ElementaryTypeName",
                                                            "src": "4817:7:5",
                                                            "typeDescriptions": {}
                                                        }
                                                    },
                                                    "id": 2208,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "kind": "typeConversion",
                                                    "lValueRequested": false,
                                                    "names": [],
                                                    "nodeType": "FunctionCall",
                                                    "src": "4817:10:5",
                                                    "tryCall": false,
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_address_payable",
                                                        "typeString": "address payable"
                                                    }
                                                },
                                                "src": "4790:37:5",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            },
                                            "falseBody": {
                                                "id": 2226,
                                                "nodeType": "Block",
                                                "src": "4898:119:5",
                                                "statements": [
                                                    {
                                                        "expression": {
                                                            "arguments": [
                                                                {
                                                                    "commonType": {
                                                                        "typeIdentifier": "t_uint256",
                                                                        "typeString": "uint256"
                                                                    },
                                                                    "id": 2218,
                                                                    "isConstant": false,
                                                                    "isLValue": false,
                                                                    "isPure": false,
                                                                    "lValueRequested": false,
                                                                    "leftExpression": {
                                                                        "id": 2216,
                                                                        "name": "rate",
                                                                        "nodeType": "Identifier",
                                                                        "overloadedDeclarations": [],
                                                                        "referencedDeclaration": 2197,
                                                                        "src": "4921:4:5",
                                                                        "typeDescriptions": {
                                                                            "typeIdentifier": "t_uint256",
                                                                            "typeString": "uint256"
                                                                        }
                                                                    },
                                                                    "nodeType": "BinaryOperation",
                                                                    "operator": ">",
                                                                    "rightExpression": {
                                                                        "hexValue": "30",
                                                                        "id": 2217,
                                                                        "isConstant": false,
                                                                        "isLValue": false,
                                                                        "isPure": true,
                                                                        "kind": "number",
                                                                        "lValueRequested": false,
                                                                        "nodeType": "Literal",
                                                                        "src": "4928:1:5",
                                                                        "typeDescriptions": {
                                                                            "typeIdentifier": "t_rational_0_by_1",
                                                                            "typeString": "int_const 0"
                                                                        },
                                                                        "value": "0"
                                                                    },
                                                                    "src": "4921:8:5",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_bool",
                                                                        "typeString": "bool"
                                                                    }
                                                                },
                                                                {
                                                                    "hexValue": "436f6c6c61746572616c20726174652063616e2774206265207a65726f",
                                                                    "id": 2219,
                                                                    "isConstant": false,
                                                                    "isLValue": false,
                                                                    "isPure": true,
                                                                    "kind": "string",
                                                                    "lValueRequested": false,
                                                                    "nodeType": "Literal",
                                                                    "src": "4931:31:5",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_stringliteral_8ce2fb66d3ac8dd4efd2528c89b2f88cb495fa95a1fb5d9e371822068bd6445e",
                                                                        "typeString": "literal_string \"Collateral rate can't be zero\""
                                                                    },
                                                                    "value": "Collateral rate can't be zero"
                                                                }
                                                            ],
                                                            "expression": {
                                                                "argumentTypes": [
                                                                    {
                                                                        "typeIdentifier": "t_bool",
                                                                        "typeString": "bool"
                                                                    },
                                                                    {
                                                                        "typeIdentifier": "t_stringliteral_8ce2fb66d3ac8dd4efd2528c89b2f88cb495fa95a1fb5d9e371822068bd6445e",
                                                                        "typeString": "literal_string \"Collateral rate can't be zero\""
                                                                    }
                                                                ],
                                                                "id": 2215,
                                                                "name": "require",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [
                                                                    -18,
                                                                    -18
                                                                ],
                                                                "referencedDeclaration": -18,
                                                                "src": "4913:7:5",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                                                    "typeString": "function (bool,string memory) pure"
                                                                }
                                                            },
                                                            "id": 2220,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": false,
                                                            "kind": "functionCall",
                                                            "lValueRequested": false,
                                                            "names": [],
                                                            "nodeType": "FunctionCall",
                                                            "src": "4913:50:5",
                                                            "tryCall": false,
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_tuple$__$",
                                                                "typeString": "tuple()"
                                                            }
                                                        },
                                                        "id": 2221,
                                                        "nodeType": "ExpressionStatement",
                                                        "src": "4913:50:5"
                                                    },
                                                    {
                                                        "expression": {
                                                            "id": 2224,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": false,
                                                            "lValueRequested": false,
                                                            "leftHandSide": {
                                                                "id": 2222,
                                                                "name": "customCollateralRate",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [],
                                                                "referencedDeclaration": 2163,
                                                                "src": "4978:20:5",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_uint256",
                                                                    "typeString": "uint256"
                                                                }
                                                            },
                                                            "nodeType": "Assignment",
                                                            "operator": "=",
                                                            "rightHandSide": {
                                                                "id": 2223,
                                                                "name": "rate",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [],
                                                                "referencedDeclaration": 2197,
                                                                "src": "5001:4:5",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_uint256",
                                                                    "typeString": "uint256"
                                                                }
                                                            },
                                                            "src": "4978:27:5",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_uint256",
                                                                "typeString": "uint256"
                                                            }
                                                        },
                                                        "id": 2225,
                                                        "nodeType": "ExpressionStatement",
                                                        "src": "4978:27:5"
                                                    }
                                                ]
                                            },
                                            "id": 2227,
                                            "nodeType": "IfStatement",
                                            "src": "4786:231:5",
                                            "trueBody": {
                                                "id": 2214,
                                                "nodeType": "Block",
                                                "src": "4829:63:5",
                                                "statements": [
                                                    {
                                                        "expression": {
                                                            "id": 2212,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": false,
                                                            "lValueRequested": false,
                                                            "leftHandSide": {
                                                                "id": 2210,
                                                                "name": "customCollateralRate",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [],
                                                                "referencedDeclaration": 2163,
                                                                "src": "4844:20:5",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_uint256",
                                                                    "typeString": "uint256"
                                                                }
                                                            },
                                                            "nodeType": "Assignment",
                                                            "operator": "=",
                                                            "rightHandSide": {
                                                                "hexValue": "30",
                                                                "id": 2211,
                                                                "isConstant": false,
                                                                "isLValue": false,
                                                                "isPure": true,
                                                                "kind": "number",
                                                                "lValueRequested": false,
                                                                "nodeType": "Literal",
                                                                "src": "4867:1:5",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_rational_0_by_1",
                                                                    "typeString": "int_const 0"
                                                                },
                                                                "value": "0"
                                                            },
                                                            "src": "4844:24:5",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_uint256",
                                                                "typeString": "uint256"
                                                            }
                                                        },
                                                        "id": 2213,
                                                        "nodeType": "ExpressionStatement",
                                                        "src": "4844:24:5"
                                                    }
                                                ]
                                            }
                                        },
                                        {
                                            "eventCall": {
                                                "arguments": [
                                                    {
                                                        "id": 2229,
                                                        "name": "collateral",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 2195,
                                                        "src": "5061:10:5",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        }
                                                    },
                                                    {
                                                        "id": 2230,
                                                        "name": "rate",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 2197,
                                                        "src": "5073:4:5",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        }
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        },
                                                        {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        }
                                                    ],
                                                    "id": 2228,
                                                    "name": "CustomClaimCollateralChanged",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 2336,
                                                    "src": "5032:28:5",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                                                        "typeString": "function (address,uint256)"
                                                    }
                                                },
                                                "id": 2231,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "5032:46:5",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_tuple$__$",
                                                    "typeString": "tuple()"
                                                }
                                            },
                                            "id": 2232,
                                            "nodeType": "EmitStatement",
                                            "src": "5027:51:5"
                                        }
                                    ]
                                },
                                "documentation": {
                                    "id": 2193,
                                    "nodeType": "StructuredDocumentation",
                                    "src": "4202:442:5",
                                    "text": " Allows subclasses to set a custom collateral besides the token itself.\n The collateral must be an ERC-20 token that returns true on successful transfers and\n throws an exception or returns false on failure.\n Also, do not forget to multiply the rate in accordance with the number of decimals of the collateral.\n For example, rate should be 7*10**18 for 7 units of a collateral with 18 decimals."
                                },
                                "id": 2234,
                                "implemented": true,
                                "kind": "function",
                                "modifiers": [],
                                "name": "_setCustomClaimCollateral",
                                "nodeType": "FunctionDefinition",
                                "parameters": {
                                    "id": 2198,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 2195,
                                            "mutability": "mutable",
                                            "name": "collateral",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 2234,
                                            "src": "4685:18:5",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            },
                                            "typeName": {
                                                "id": 2194,
                                                "name": "address",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "4685:7:5",
                                                "stateMutability": "nonpayable",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            "visibility": "internal"
                                        },
                                        {
                                            "constant": false,
                                            "id": 2197,
                                            "mutability": "mutable",
                                            "name": "rate",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 2234,
                                            "src": "4705:12:5",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            },
                                            "typeName": {
                                                "id": 2196,
                                                "name": "uint256",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "4705:7:5",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "4684:34:5"
                                },
                                "returnParameters": {
                                    "id": 2199,
                                    "nodeType": "ParameterList",
                                    "parameters": [],
                                    "src": "4728:0:5"
                                },
                                "scope": 2716,
                                "src": "4650:436:5",
                                "stateMutability": "nonpayable",
                                "virtual": false,
                                "visibility": "internal"
                            },
                            {
                                "functionSelector": "2a0a4ed5",
                                "id": 2239,
                                "implemented": false,
                                "kind": "function",
                                "modifiers": [],
                                "name": "getClaimDeleter",
                                "nodeType": "FunctionDefinition",
                                "parameters": {
                                    "id": 2235,
                                    "nodeType": "ParameterList",
                                    "parameters": [],
                                    "src": "5118:2:5"
                                },
                                "returnParameters": {
                                    "id": 2238,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 2237,
                                            "mutability": "mutable",
                                            "name": "",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 2239,
                                            "src": "5150:7:5",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            },
                                            "typeName": {
                                                "id": 2236,
                                                "name": "address",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "5150:7:5",
                                                "stateMutability": "nonpayable",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "5149:9:5"
                                },
                                "scope": 2716,
                                "src": "5094:65:5",
                                "stateMutability": "view",
                                "virtual": true,
                                "visibility": "public"
                            },
                            {
                                "body": {
                                    "id": 2267,
                                    "nodeType": "Block",
                                    "src": "5331:282:5",
                                    "statements": [
                                        {
                                            "expression": {
                                                "arguments": [
                                                    {
                                                        "commonType": {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        },
                                                        "id": 2248,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "leftExpression": {
                                                            "id": 2246,
                                                            "name": "claimPeriodInDays",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 2242,
                                                            "src": "5350:17:5",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_uint256",
                                                                "typeString": "uint256"
                                                            }
                                                        },
                                                        "nodeType": "BinaryOperation",
                                                        "operator": ">",
                                                        "rightExpression": {
                                                            "hexValue": "3930",
                                                            "id": 2247,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": true,
                                                            "kind": "number",
                                                            "lValueRequested": false,
                                                            "nodeType": "Literal",
                                                            "src": "5370:2:5",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_rational_90_by_1",
                                                                "typeString": "int_const 90"
                                                            },
                                                            "value": "90"
                                                        },
                                                        "src": "5350:22:5",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_bool",
                                                            "typeString": "bool"
                                                        }
                                                    },
                                                    {
                                                        "hexValue": "436c61696d20706572696f64206d757374206265206174206c656173742039302064617973",
                                                        "id": 2249,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": true,
                                                        "kind": "string",
                                                        "lValueRequested": false,
                                                        "nodeType": "Literal",
                                                        "src": "5374:39:5",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_stringliteral_dce85a4d4a4a12a00a945ff830eb26682e7d42d45aa7b259165e19c8f9b3b368",
                                                            "typeString": "literal_string \"Claim period must be at least 90 days\""
                                                        },
                                                        "value": "Claim period must be at least 90 days"
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_bool",
                                                            "typeString": "bool"
                                                        },
                                                        {
                                                            "typeIdentifier": "t_stringliteral_dce85a4d4a4a12a00a945ff830eb26682e7d42d45aa7b259165e19c8f9b3b368",
                                                            "typeString": "literal_string \"Claim period must be at least 90 days\""
                                                        }
                                                    ],
                                                    "id": 2245,
                                                    "name": "require",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [
                                                        -18,
                                                        -18
                                                    ],
                                                    "referencedDeclaration": -18,
                                                    "src": "5342:7:5",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                                        "typeString": "function (bool,string memory) pure"
                                                    }
                                                },
                                                "id": 2250,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "5342:72:5",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_tuple$__$",
                                                    "typeString": "tuple()"
                                                }
                                            },
                                            "id": 2251,
                                            "nodeType": "ExpressionStatement",
                                            "src": "5342:72:5"
                                        },
                                        {
                                            "assignments": [
                                                2253
                                            ],
                                            "declarations": [
                                                {
                                                    "constant": false,
                                                    "id": 2253,
                                                    "mutability": "mutable",
                                                    "name": "claimPeriodInSeconds",
                                                    "nodeType": "VariableDeclaration",
                                                    "scope": 2267,
                                                    "src": "5453:28:5",
                                                    "stateVariable": false,
                                                    "storageLocation": "default",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    },
                                                    "typeName": {
                                                        "id": 2252,
                                                        "name": "uint256",
                                                        "nodeType": "ElementaryTypeName",
                                                        "src": "5453:7:5",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        }
                                                    },
                                                    "visibility": "internal"
                                                }
                                            ],
                                            "id": 2258,
                                            "initialValue": {
                                                "arguments": [
                                                    {
                                                        "hexValue": "31",
                                                        "id": 2256,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": true,
                                                        "kind": "number",
                                                        "lValueRequested": false,
                                                        "nodeType": "Literal",
                                                        "src": "5506:6:5",
                                                        "subdenomination": "days",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_rational_86400_by_1",
                                                            "typeString": "int_const 86400"
                                                        },
                                                        "value": "1"
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_rational_86400_by_1",
                                                            "typeString": "int_const 86400"
                                                        }
                                                    ],
                                                    "expression": {
                                                        "id": 2254,
                                                        "name": "claimPeriodInDays",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 2242,
                                                        "src": "5484:17:5",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        }
                                                    },
                                                    "id": 2255,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "memberName": "mul",
                                                    "nodeType": "MemberAccess",
                                                    "referencedDeclaration": 2866,
                                                    "src": "5484:21:5",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                                                    }
                                                },
                                                "id": 2257,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "5484:29:5",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            },
                                            "nodeType": "VariableDeclarationStatement",
                                            "src": "5453:60:5"
                                        },
                                        {
                                            "expression": {
                                                "id": 2261,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftHandSide": {
                                                    "id": 2259,
                                                    "name": "claimPeriod",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 2151,
                                                    "src": "5524:11:5",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    }
                                                },
                                                "nodeType": "Assignment",
                                                "operator": "=",
                                                "rightHandSide": {
                                                    "id": 2260,
                                                    "name": "claimPeriodInSeconds",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 2253,
                                                    "src": "5538:20:5",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    }
                                                },
                                                "src": "5524:34:5",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            },
                                            "id": 2262,
                                            "nodeType": "ExpressionStatement",
                                            "src": "5524:34:5"
                                        },
                                        {
                                            "eventCall": {
                                                "arguments": [
                                                    {
                                                        "id": 2264,
                                                        "name": "claimPeriod",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 2151,
                                                        "src": "5593:11:5",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        }
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        }
                                                    ],
                                                    "id": 2263,
                                                    "name": "ClaimPeriodChanged",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 2330,
                                                    "src": "5574:18:5",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                                                        "typeString": "function (uint256)"
                                                    }
                                                },
                                                "id": 2265,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "5574:31:5",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_tuple$__$",
                                                    "typeString": "tuple()"
                                                }
                                            },
                                            "id": 2266,
                                            "nodeType": "EmitStatement",
                                            "src": "5569:36:5"
                                        }
                                    ]
                                },
                                "documentation": {
                                    "id": 2240,
                                    "nodeType": "StructuredDocumentation",
                                    "src": "5167:97:5",
                                    "text": " Allows subclasses to change the claim period, but not to fewer than 90 days."
                                },
                                "id": 2268,
                                "implemented": true,
                                "kind": "function",
                                "modifiers": [],
                                "name": "_setClaimPeriod",
                                "nodeType": "FunctionDefinition",
                                "parameters": {
                                    "id": 2243,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 2242,
                                            "mutability": "mutable",
                                            "name": "claimPeriodInDays",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 2268,
                                            "src": "5295:25:5",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            },
                                            "typeName": {
                                                "id": 2241,
                                                "name": "uint256",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "5295:7:5",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "5294:27:5"
                                },
                                "returnParameters": {
                                    "id": 2244,
                                    "nodeType": "ParameterList",
                                    "parameters": [],
                                    "src": "5331:0:5"
                                },
                                "scope": 2716,
                                "src": "5270:343:5",
                                "stateMutability": "nonpayable",
                                "virtual": false,
                                "visibility": "internal"
                            },
                            {
                                "body": {
                                    "id": 2281,
                                    "nodeType": "Block",
                                    "src": "5666:58:5",
                                    "statements": [
                                        {
                                            "expression": {
                                                "id": 2279,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftHandSide": {
                                                    "baseExpression": {
                                                        "id": 2273,
                                                        "name": "recoveryDisabled",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 2159,
                                                        "src": "5677:16:5",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                                            "typeString": "mapping(address => bool)"
                                                        }
                                                    },
                                                    "id": 2276,
                                                    "indexExpression": {
                                                        "expression": {
                                                            "id": 2274,
                                                            "name": "msg",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": -15,
                                                            "src": "5694:3:5",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_magic_message",
                                                                "typeString": "msg"
                                                            }
                                                        },
                                                        "id": 2275,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "memberName": "sender",
                                                        "nodeType": "MemberAccess",
                                                        "src": "5694:10:5",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_address_payable",
                                                            "typeString": "address payable"
                                                        }
                                                    },
                                                    "isConstant": false,
                                                    "isLValue": true,
                                                    "isPure": false,
                                                    "lValueRequested": true,
                                                    "nodeType": "IndexAccess",
                                                    "src": "5677:28:5",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_bool",
                                                        "typeString": "bool"
                                                    }
                                                },
                                                "nodeType": "Assignment",
                                                "operator": "=",
                                                "rightHandSide": {
                                                    "id": 2278,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "nodeType": "UnaryOperation",
                                                    "operator": "!",
                                                    "prefix": true,
                                                    "src": "5708:8:5",
                                                    "subExpression": {
                                                        "id": 2277,
                                                        "name": "enabled",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 2270,
                                                        "src": "5709:7:5",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_bool",
                                                            "typeString": "bool"
                                                        }
                                                    },
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_bool",
                                                        "typeString": "bool"
                                                    }
                                                },
                                                "src": "5677:39:5",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            },
                                            "id": 2280,
                                            "nodeType": "ExpressionStatement",
                                            "src": "5677:39:5"
                                        }
                                    ]
                                },
                                "functionSelector": "6427ed97",
                                "id": 2282,
                                "implemented": true,
                                "kind": "function",
                                "modifiers": [],
                                "name": "setRecoverable",
                                "nodeType": "FunctionDefinition",
                                "parameters": {
                                    "id": 2271,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 2270,
                                            "mutability": "mutable",
                                            "name": "enabled",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 2282,
                                            "src": "5645:12:5",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_bool",
                                                "typeString": "bool"
                                            },
                                            "typeName": {
                                                "id": 2269,
                                                "name": "bool",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "5645:4:5",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "5644:14:5"
                                },
                                "returnParameters": {
                                    "id": 2272,
                                    "nodeType": "ParameterList",
                                    "parameters": [],
                                    "src": "5666:0:5"
                                },
                                "scope": 2716,
                                "src": "5621:103:5",
                                "stateMutability": "nonpayable",
                                "virtual": false,
                                "visibility": "public"
                            },
                            {
                                "body": {
                                    "id": 2295,
                                    "nodeType": "Block",
                                    "src": "5976:51:5",
                                    "statements": [
                                        {
                                            "expression": {
                                                "id": 2293,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "nodeType": "UnaryOperation",
                                                "operator": "!",
                                                "prefix": true,
                                                "src": "5994:25:5",
                                                "subExpression": {
                                                    "baseExpression": {
                                                        "id": 2290,
                                                        "name": "recoveryDisabled",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 2159,
                                                        "src": "5995:16:5",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                                            "typeString": "mapping(address => bool)"
                                                        }
                                                    },
                                                    "id": 2292,
                                                    "indexExpression": {
                                                        "id": 2291,
                                                        "name": "target",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 2285,
                                                        "src": "6012:6:5",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        }
                                                    },
                                                    "isConstant": false,
                                                    "isLValue": true,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "nodeType": "IndexAccess",
                                                    "src": "5995:24:5",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_bool",
                                                        "typeString": "bool"
                                                    }
                                                },
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            },
                                            "functionReturnParameters": 2289,
                                            "id": 2294,
                                            "nodeType": "Return",
                                            "src": "5987:32:5"
                                        }
                                    ]
                                },
                                "documentation": {
                                    "id": 2283,
                                    "nodeType": "StructuredDocumentation",
                                    "src": "5732:168:5",
                                    "text": " Some users might want to disable claims for their address completely.\n For example if they use a deep cold storage solution or paper wallet."
                                },
                                "functionSelector": "a3ec1883",
                                "id": 2296,
                                "implemented": true,
                                "kind": "function",
                                "modifiers": [],
                                "name": "isRecoveryEnabled",
                                "nodeType": "FunctionDefinition",
                                "parameters": {
                                    "id": 2286,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 2285,
                                            "mutability": "mutable",
                                            "name": "target",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 2296,
                                            "src": "5933:14:5",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            },
                                            "typeName": {
                                                "id": 2284,
                                                "name": "address",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "5933:7:5",
                                                "stateMutability": "nonpayable",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "5932:16:5"
                                },
                                "returnParameters": {
                                    "id": 2289,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 2288,
                                            "mutability": "mutable",
                                            "name": "",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 2296,
                                            "src": "5970:4:5",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_bool",
                                                "typeString": "bool"
                                            },
                                            "typeName": {
                                                "id": 2287,
                                                "name": "bool",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "5970:4:5",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "5969:6:5"
                                },
                                "scope": 2716,
                                "src": "5906:121:5",
                                "stateMutability": "view",
                                "virtual": false,
                                "visibility": "public"
                            },
                            {
                                "anonymous": false,
                                "id": 2304,
                                "name": "ClaimMade",
                                "nodeType": "EventDefinition",
                                "parameters": {
                                    "id": 2303,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 2298,
                                            "indexed": true,
                                            "mutability": "mutable",
                                            "name": "lostAddress",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 2304,
                                            "src": "6051:27:5",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            },
                                            "typeName": {
                                                "id": 2297,
                                                "name": "address",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "6051:7:5",
                                                "stateMutability": "nonpayable",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            "visibility": "internal"
                                        },
                                        {
                                            "constant": false,
                                            "id": 2300,
                                            "indexed": true,
                                            "mutability": "mutable",
                                            "name": "claimant",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 2304,
                                            "src": "6080:24:5",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            },
                                            "typeName": {
                                                "id": 2299,
                                                "name": "address",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "6080:7:5",
                                                "stateMutability": "nonpayable",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            "visibility": "internal"
                                        },
                                        {
                                            "constant": false,
                                            "id": 2302,
                                            "indexed": false,
                                            "mutability": "mutable",
                                            "name": "balance",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 2304,
                                            "src": "6106:15:5",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            },
                                            "typeName": {
                                                "id": 2301,
                                                "name": "uint256",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "6106:7:5",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "6050:72:5"
                                },
                                "src": "6035:88:5"
                            },
                            {
                                "anonymous": false,
                                "id": 2310,
                                "name": "ClaimCleared",
                                "nodeType": "EventDefinition",
                                "parameters": {
                                    "id": 2309,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 2306,
                                            "indexed": true,
                                            "mutability": "mutable",
                                            "name": "lostAddress",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 2310,
                                            "src": "6148:27:5",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            },
                                            "typeName": {
                                                "id": 2305,
                                                "name": "address",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "6148:7:5",
                                                "stateMutability": "nonpayable",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            "visibility": "internal"
                                        },
                                        {
                                            "constant": false,
                                            "id": 2308,
                                            "indexed": false,
                                            "mutability": "mutable",
                                            "name": "collateral",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 2310,
                                            "src": "6177:18:5",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            },
                                            "typeName": {
                                                "id": 2307,
                                                "name": "uint256",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "6177:7:5",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "6147:49:5"
                                },
                                "src": "6129:68:5"
                            },
                            {
                                "anonymous": false,
                                "id": 2318,
                                "name": "ClaimDeleted",
                                "nodeType": "EventDefinition",
                                "parameters": {
                                    "id": 2317,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 2312,
                                            "indexed": true,
                                            "mutability": "mutable",
                                            "name": "lostAddress",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 2318,
                                            "src": "6222:27:5",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            },
                                            "typeName": {
                                                "id": 2311,
                                                "name": "address",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "6222:7:5",
                                                "stateMutability": "nonpayable",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            "visibility": "internal"
                                        },
                                        {
                                            "constant": false,
                                            "id": 2314,
                                            "indexed": true,
                                            "mutability": "mutable",
                                            "name": "claimant",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 2318,
                                            "src": "6251:24:5",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            },
                                            "typeName": {
                                                "id": 2313,
                                                "name": "address",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "6251:7:5",
                                                "stateMutability": "nonpayable",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            "visibility": "internal"
                                        },
                                        {
                                            "constant": false,
                                            "id": 2316,
                                            "indexed": false,
                                            "mutability": "mutable",
                                            "name": "collateral",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 2318,
                                            "src": "6277:18:5",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            },
                                            "typeName": {
                                                "id": 2315,
                                                "name": "uint256",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "6277:7:5",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "6221:75:5"
                                },
                                "src": "6203:94:5"
                            },
                            {
                                "anonymous": false,
                                "id": 2326,
                                "name": "ClaimResolved",
                                "nodeType": "EventDefinition",
                                "parameters": {
                                    "id": 2325,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 2320,
                                            "indexed": true,
                                            "mutability": "mutable",
                                            "name": "lostAddress",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 2326,
                                            "src": "6323:27:5",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            },
                                            "typeName": {
                                                "id": 2319,
                                                "name": "address",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "6323:7:5",
                                                "stateMutability": "nonpayable",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            "visibility": "internal"
                                        },
                                        {
                                            "constant": false,
                                            "id": 2322,
                                            "indexed": true,
                                            "mutability": "mutable",
                                            "name": "claimant",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 2326,
                                            "src": "6352:24:5",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            },
                                            "typeName": {
                                                "id": 2321,
                                                "name": "address",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "6352:7:5",
                                                "stateMutability": "nonpayable",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            "visibility": "internal"
                                        },
                                        {
                                            "constant": false,
                                            "id": 2324,
                                            "indexed": false,
                                            "mutability": "mutable",
                                            "name": "collateral",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 2326,
                                            "src": "6378:18:5",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            },
                                            "typeName": {
                                                "id": 2323,
                                                "name": "uint256",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "6378:7:5",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "6322:75:5"
                                },
                                "src": "6303:95:5"
                            },
                            {
                                "anonymous": false,
                                "id": 2330,
                                "name": "ClaimPeriodChanged",
                                "nodeType": "EventDefinition",
                                "parameters": {
                                    "id": 2329,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 2328,
                                            "indexed": false,
                                            "mutability": "mutable",
                                            "name": "newClaimPeriodInDays",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 2330,
                                            "src": "6429:28:5",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            },
                                            "typeName": {
                                                "id": 2327,
                                                "name": "uint256",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "6429:7:5",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "6428:30:5"
                                },
                                "src": "6404:55:5"
                            },
                            {
                                "anonymous": false,
                                "id": 2336,
                                "name": "CustomClaimCollateralChanged",
                                "nodeType": "EventDefinition",
                                "parameters": {
                                    "id": 2335,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 2332,
                                            "indexed": false,
                                            "mutability": "mutable",
                                            "name": "newCustomCollateralAddress",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 2336,
                                            "src": "6500:34:5",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            },
                                            "typeName": {
                                                "id": 2331,
                                                "name": "address",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "6500:7:5",
                                                "stateMutability": "nonpayable",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            "visibility": "internal"
                                        },
                                        {
                                            "constant": false,
                                            "id": 2334,
                                            "indexed": false,
                                            "mutability": "mutable",
                                            "name": "newCustomCollareralRate",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 2336,
                                            "src": "6536:31:5",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            },
                                            "typeName": {
                                                "id": 2333,
                                                "name": "uint256",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "6536:7:5",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "6499:69:5"
                                },
                                "src": "6465:104:5"
                            },
                            {
                                "body": {
                                    "id": 2436,
                                    "nodeType": "Block",
                                    "src": "8198:950:5",
                                    "statements": [
                                        {
                                            "expression": {
                                                "arguments": [
                                                    {
                                                        "arguments": [
                                                            {
                                                                "id": 2346,
                                                                "name": "lostAddress",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [],
                                                                "referencedDeclaration": 2341,
                                                                "src": "8235:11:5",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_address",
                                                                    "typeString": "address"
                                                                }
                                                            }
                                                        ],
                                                        "expression": {
                                                            "argumentTypes": [
                                                                {
                                                                    "typeIdentifier": "t_address",
                                                                    "typeString": "address"
                                                                }
                                                            ],
                                                            "id": 2345,
                                                            "name": "isRecoveryEnabled",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 2296,
                                                            "src": "8217:17:5",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                                                                "typeString": "function (address) view returns (bool)"
                                                            }
                                                        },
                                                        "id": 2347,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "kind": "functionCall",
                                                        "lValueRequested": false,
                                                        "names": [],
                                                        "nodeType": "FunctionCall",
                                                        "src": "8217:30:5",
                                                        "tryCall": false,
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_bool",
                                                            "typeString": "bool"
                                                        }
                                                    },
                                                    {
                                                        "hexValue": "436c61696d732064697361626c656420666f7220746869732061646472657373",
                                                        "id": 2348,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": true,
                                                        "kind": "string",
                                                        "lValueRequested": false,
                                                        "nodeType": "Literal",
                                                        "src": "8249:34:5",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_stringliteral_7c791734f3b8a73534de457609bb11a47ad9f37ad02b03d2c7a438a50801e1cb",
                                                            "typeString": "literal_string \"Claims disabled for this address\""
                                                        },
                                                        "value": "Claims disabled for this address"
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_bool",
                                                            "typeString": "bool"
                                                        },
                                                        {
                                                            "typeIdentifier": "t_stringliteral_7c791734f3b8a73534de457609bb11a47ad9f37ad02b03d2c7a438a50801e1cb",
                                                            "typeString": "literal_string \"Claims disabled for this address\""
                                                        }
                                                    ],
                                                    "id": 2344,
                                                    "name": "require",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [
                                                        -18,
                                                        -18
                                                    ],
                                                    "referencedDeclaration": -18,
                                                    "src": "8209:7:5",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                                        "typeString": "function (bool,string memory) pure"
                                                    }
                                                },
                                                "id": 2349,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "8209:75:5",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_tuple$__$",
                                                    "typeString": "tuple()"
                                                }
                                            },
                                            "id": 2350,
                                            "nodeType": "ExpressionStatement",
                                            "src": "8209:75:5"
                                        },
                                        {
                                            "assignments": [
                                                2352
                                            ],
                                            "declarations": [
                                                {
                                                    "constant": false,
                                                    "id": 2352,
                                                    "mutability": "mutable",
                                                    "name": "collateralRate",
                                                    "nodeType": "VariableDeclaration",
                                                    "scope": 2436,
                                                    "src": "8295:22:5",
                                                    "stateVariable": false,
                                                    "storageLocation": "default",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    },
                                                    "typeName": {
                                                        "id": 2351,
                                                        "name": "uint256",
                                                        "nodeType": "ElementaryTypeName",
                                                        "src": "8295:7:5",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        }
                                                    },
                                                    "visibility": "internal"
                                                }
                                            ],
                                            "id": 2356,
                                            "initialValue": {
                                                "arguments": [
                                                    {
                                                        "id": 2354,
                                                        "name": "collateralType",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 2339,
                                                        "src": "8338:14:5",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        }
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        }
                                                    ],
                                                    "id": 2353,
                                                    "name": "getCollateralRate",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 2192,
                                                    "src": "8320:17:5",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                                                        "typeString": "function (address) view returns (uint256)"
                                                    }
                                                },
                                                "id": 2355,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "8320:33:5",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            },
                                            "nodeType": "VariableDeclarationStatement",
                                            "src": "8295:58:5"
                                        },
                                        {
                                            "expression": {
                                                "arguments": [
                                                    {
                                                        "commonType": {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        },
                                                        "id": 2360,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "leftExpression": {
                                                            "id": 2358,
                                                            "name": "collateralRate",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 2352,
                                                            "src": "8372:14:5",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_uint256",
                                                                "typeString": "uint256"
                                                            }
                                                        },
                                                        "nodeType": "BinaryOperation",
                                                        "operator": ">",
                                                        "rightExpression": {
                                                            "hexValue": "30",
                                                            "id": 2359,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": true,
                                                            "kind": "number",
                                                            "lValueRequested": false,
                                                            "nodeType": "Literal",
                                                            "src": "8389:1:5",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_rational_0_by_1",
                                                                "typeString": "int_const 0"
                                                            },
                                                            "value": "0"
                                                        },
                                                        "src": "8372:18:5",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_bool",
                                                            "typeString": "bool"
                                                        }
                                                    },
                                                    {
                                                        "hexValue": "556e737570706f7274656420636f6c6c61746572616c",
                                                        "id": 2361,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": true,
                                                        "kind": "string",
                                                        "lValueRequested": false,
                                                        "nodeType": "Literal",
                                                        "src": "8392:24:5",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_stringliteral_41c77918414ce7376af142585cf2910ef48779549e6521958ed3f22297b01357",
                                                            "typeString": "literal_string \"Unsupported collateral\""
                                                        },
                                                        "value": "Unsupported collateral"
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_bool",
                                                            "typeString": "bool"
                                                        },
                                                        {
                                                            "typeIdentifier": "t_stringliteral_41c77918414ce7376af142585cf2910ef48779549e6521958ed3f22297b01357",
                                                            "typeString": "literal_string \"Unsupported collateral\""
                                                        }
                                                    ],
                                                    "id": 2357,
                                                    "name": "require",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [
                                                        -18,
                                                        -18
                                                    ],
                                                    "referencedDeclaration": -18,
                                                    "src": "8364:7:5",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                                        "typeString": "function (bool,string memory) pure"
                                                    }
                                                },
                                                "id": 2362,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "8364:53:5",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_tuple$__$",
                                                    "typeString": "tuple()"
                                                }
                                            },
                                            "id": 2363,
                                            "nodeType": "ExpressionStatement",
                                            "src": "8364:53:5"
                                        },
                                        {
                                            "assignments": [
                                                2365
                                            ],
                                            "declarations": [
                                                {
                                                    "constant": false,
                                                    "id": 2365,
                                                    "mutability": "mutable",
                                                    "name": "claimant",
                                                    "nodeType": "VariableDeclaration",
                                                    "scope": 2436,
                                                    "src": "8428:16:5",
                                                    "stateVariable": false,
                                                    "storageLocation": "default",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_address",
                                                        "typeString": "address"
                                                    },
                                                    "typeName": {
                                                        "id": 2364,
                                                        "name": "address",
                                                        "nodeType": "ElementaryTypeName",
                                                        "src": "8428:7:5",
                                                        "stateMutability": "nonpayable",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        }
                                                    },
                                                    "visibility": "internal"
                                                }
                                            ],
                                            "id": 2368,
                                            "initialValue": {
                                                "expression": {
                                                    "id": 2366,
                                                    "name": "msg",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": -15,
                                                    "src": "8447:3:5",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_magic_message",
                                                        "typeString": "msg"
                                                    }
                                                },
                                                "id": 2367,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberName": "sender",
                                                "nodeType": "MemberAccess",
                                                "src": "8447:10:5",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address_payable",
                                                    "typeString": "address payable"
                                                }
                                            },
                                            "nodeType": "VariableDeclarationStatement",
                                            "src": "8428:29:5"
                                        },
                                        {
                                            "assignments": [
                                                2370
                                            ],
                                            "declarations": [
                                                {
                                                    "constant": false,
                                                    "id": 2370,
                                                    "mutability": "mutable",
                                                    "name": "balance",
                                                    "nodeType": "VariableDeclaration",
                                                    "scope": 2436,
                                                    "src": "8468:15:5",
                                                    "stateVariable": false,
                                                    "storageLocation": "default",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    },
                                                    "typeName": {
                                                        "id": 2369,
                                                        "name": "uint256",
                                                        "nodeType": "ElementaryTypeName",
                                                        "src": "8468:7:5",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        }
                                                    },
                                                    "visibility": "internal"
                                                }
                                            ],
                                            "id": 2374,
                                            "initialValue": {
                                                "arguments": [
                                                    {
                                                        "id": 2372,
                                                        "name": "lostAddress",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 2341,
                                                        "src": "8496:11:5",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        }
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        }
                                                    ],
                                                    "id": 2371,
                                                    "name": "balanceOf",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 774,
                                                    "src": "8486:9:5",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                                                        "typeString": "function (address) view returns (uint256)"
                                                    }
                                                },
                                                "id": 2373,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "8486:22:5",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            },
                                            "nodeType": "VariableDeclarationStatement",
                                            "src": "8468:40:5"
                                        },
                                        {
                                            "assignments": [
                                                2376
                                            ],
                                            "declarations": [
                                                {
                                                    "constant": false,
                                                    "id": 2376,
                                                    "mutability": "mutable",
                                                    "name": "collateral",
                                                    "nodeType": "VariableDeclaration",
                                                    "scope": 2436,
                                                    "src": "8519:18:5",
                                                    "stateVariable": false,
                                                    "storageLocation": "default",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    },
                                                    "typeName": {
                                                        "id": 2375,
                                                        "name": "uint256",
                                                        "nodeType": "ElementaryTypeName",
                                                        "src": "8519:7:5",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        }
                                                    },
                                                    "visibility": "internal"
                                                }
                                            ],
                                            "id": 2381,
                                            "initialValue": {
                                                "arguments": [
                                                    {
                                                        "id": 2379,
                                                        "name": "collateralRate",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 2352,
                                                        "src": "8552:14:5",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        }
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        }
                                                    ],
                                                    "expression": {
                                                        "id": 2377,
                                                        "name": "balance",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 2370,
                                                        "src": "8540:7:5",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        }
                                                    },
                                                    "id": 2378,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "memberName": "mul",
                                                    "nodeType": "MemberAccess",
                                                    "referencedDeclaration": 2866,
                                                    "src": "8540:11:5",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                                                    }
                                                },
                                                "id": 2380,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "8540:27:5",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            },
                                            "nodeType": "VariableDeclarationStatement",
                                            "src": "8519:48:5"
                                        },
                                        {
                                            "assignments": [
                                                2383
                                            ],
                                            "declarations": [
                                                {
                                                    "constant": false,
                                                    "id": 2383,
                                                    "mutability": "mutable",
                                                    "name": "currency",
                                                    "nodeType": "VariableDeclaration",
                                                    "scope": 2436,
                                                    "src": "8578:15:5",
                                                    "stateVariable": false,
                                                    "storageLocation": "default",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_contract$_IERC20_$2809",
                                                        "typeString": "contract IERC20"
                                                    },
                                                    "typeName": {
                                                        "id": 2382,
                                                        "name": "IERC20",
                                                        "nodeType": "UserDefinedTypeName",
                                                        "referencedDeclaration": 2809,
                                                        "src": "8578:6:5",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_contract$_IERC20_$2809",
                                                            "typeString": "contract IERC20"
                                                        }
                                                    },
                                                    "visibility": "internal"
                                                }
                                            ],
                                            "id": 2387,
                                            "initialValue": {
                                                "arguments": [
                                                    {
                                                        "id": 2385,
                                                        "name": "collateralType",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 2339,
                                                        "src": "8603:14:5",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        }
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        }
                                                    ],
                                                    "id": 2384,
                                                    "name": "IERC20",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 2809,
                                                    "src": "8596:6:5",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_type$_t_contract$_IERC20_$2809_$",
                                                        "typeString": "type(contract IERC20)"
                                                    }
                                                },
                                                "id": 2386,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "typeConversion",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "8596:22:5",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_contract$_IERC20_$2809",
                                                    "typeString": "contract IERC20"
                                                }
                                            },
                                            "nodeType": "VariableDeclarationStatement",
                                            "src": "8578:40:5"
                                        },
                                        {
                                            "expression": {
                                                "arguments": [
                                                    {
                                                        "commonType": {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        },
                                                        "id": 2391,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "leftExpression": {
                                                            "id": 2389,
                                                            "name": "balance",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 2370,
                                                            "src": "8637:7:5",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_uint256",
                                                                "typeString": "uint256"
                                                            }
                                                        },
                                                        "nodeType": "BinaryOperation",
                                                        "operator": ">",
                                                        "rightExpression": {
                                                            "hexValue": "30",
                                                            "id": 2390,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": true,
                                                            "kind": "number",
                                                            "lValueRequested": false,
                                                            "nodeType": "Literal",
                                                            "src": "8647:1:5",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_rational_0_by_1",
                                                                "typeString": "int_const 0"
                                                            },
                                                            "value": "0"
                                                        },
                                                        "src": "8637:11:5",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_bool",
                                                            "typeString": "bool"
                                                        }
                                                    },
                                                    {
                                                        "hexValue": "436c61696d6564206164647265737320686f6c6473206e6f20736861726573",
                                                        "id": 2392,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": true,
                                                        "kind": "string",
                                                        "lValueRequested": false,
                                                        "nodeType": "Literal",
                                                        "src": "8650:33:5",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_stringliteral_bf149e40592dc2036fc1008b79f734a9afd6c9aaf5e93076cfe9ea62dde8b9e4",
                                                            "typeString": "literal_string \"Claimed address holds no shares\""
                                                        },
                                                        "value": "Claimed address holds no shares"
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_bool",
                                                            "typeString": "bool"
                                                        },
                                                        {
                                                            "typeIdentifier": "t_stringliteral_bf149e40592dc2036fc1008b79f734a9afd6c9aaf5e93076cfe9ea62dde8b9e4",
                                                            "typeString": "literal_string \"Claimed address holds no shares\""
                                                        }
                                                    ],
                                                    "id": 2388,
                                                    "name": "require",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [
                                                        -18,
                                                        -18
                                                    ],
                                                    "referencedDeclaration": -18,
                                                    "src": "8629:7:5",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                                        "typeString": "function (bool,string memory) pure"
                                                    }
                                                },
                                                "id": 2393,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "8629:55:5",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_tuple$__$",
                                                    "typeString": "tuple()"
                                                }
                                            },
                                            "id": 2394,
                                            "nodeType": "ExpressionStatement",
                                            "src": "8629:55:5"
                                        },
                                        {
                                            "expression": {
                                                "arguments": [
                                                    {
                                                        "commonType": {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        },
                                                        "id": 2401,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "leftExpression": {
                                                            "expression": {
                                                                "baseExpression": {
                                                                    "id": 2396,
                                                                    "name": "claims",
                                                                    "nodeType": "Identifier",
                                                                    "overloadedDeclarations": [],
                                                                    "referencedDeclaration": 2155,
                                                                    "src": "8703:6:5",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Claim_$2148_storage_$",
                                                                        "typeString": "mapping(address => struct ERC20Recoverable.Claim storage ref)"
                                                                    }
                                                                },
                                                                "id": 2398,
                                                                "indexExpression": {
                                                                    "id": 2397,
                                                                    "name": "lostAddress",
                                                                    "nodeType": "Identifier",
                                                                    "overloadedDeclarations": [],
                                                                    "referencedDeclaration": 2341,
                                                                    "src": "8710:11:5",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_address",
                                                                        "typeString": "address"
                                                                    }
                                                                },
                                                                "isConstant": false,
                                                                "isLValue": true,
                                                                "isPure": false,
                                                                "lValueRequested": false,
                                                                "nodeType": "IndexAccess",
                                                                "src": "8703:19:5",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_struct$_Claim_$2148_storage",
                                                                    "typeString": "struct ERC20Recoverable.Claim storage ref"
                                                                }
                                                            },
                                                            "id": 2399,
                                                            "isConstant": false,
                                                            "isLValue": true,
                                                            "isPure": false,
                                                            "lValueRequested": false,
                                                            "memberName": "collateral",
                                                            "nodeType": "MemberAccess",
                                                            "referencedDeclaration": 2143,
                                                            "src": "8703:30:5",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_uint256",
                                                                "typeString": "uint256"
                                                            }
                                                        },
                                                        "nodeType": "BinaryOperation",
                                                        "operator": "==",
                                                        "rightExpression": {
                                                            "hexValue": "30",
                                                            "id": 2400,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": true,
                                                            "kind": "number",
                                                            "lValueRequested": false,
                                                            "nodeType": "Literal",
                                                            "src": "8737:1:5",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_rational_0_by_1",
                                                                "typeString": "int_const 0"
                                                            },
                                                            "value": "0"
                                                        },
                                                        "src": "8703:35:5",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_bool",
                                                            "typeString": "bool"
                                                        }
                                                    },
                                                    {
                                                        "hexValue": "4164647265737320616c726561647920636c61696d6564",
                                                        "id": 2402,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": true,
                                                        "kind": "string",
                                                        "lValueRequested": false,
                                                        "nodeType": "Literal",
                                                        "src": "8740:25:5",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_stringliteral_9df879dac2b251a6406f54bdb62c794fb7b2ee9a2d5502730b4d0cde276d5eb6",
                                                            "typeString": "literal_string \"Address already claimed\""
                                                        },
                                                        "value": "Address already claimed"
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_bool",
                                                            "typeString": "bool"
                                                        },
                                                        {
                                                            "typeIdentifier": "t_stringliteral_9df879dac2b251a6406f54bdb62c794fb7b2ee9a2d5502730b4d0cde276d5eb6",
                                                            "typeString": "literal_string \"Address already claimed\""
                                                        }
                                                    ],
                                                    "id": 2395,
                                                    "name": "require",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [
                                                        -18,
                                                        -18
                                                    ],
                                                    "referencedDeclaration": -18,
                                                    "src": "8695:7:5",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                                        "typeString": "function (bool,string memory) pure"
                                                    }
                                                },
                                                "id": 2403,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "8695:71:5",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_tuple$__$",
                                                    "typeString": "tuple()"
                                                }
                                            },
                                            "id": 2404,
                                            "nodeType": "ExpressionStatement",
                                            "src": "8695:71:5"
                                        },
                                        {
                                            "expression": {
                                                "arguments": [
                                                    {
                                                        "arguments": [
                                                            {
                                                                "id": 2408,
                                                                "name": "claimant",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [],
                                                                "referencedDeclaration": 2365,
                                                                "src": "8807:8:5",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_address",
                                                                    "typeString": "address"
                                                                }
                                                            },
                                                            {
                                                                "arguments": [
                                                                    {
                                                                        "id": 2411,
                                                                        "name": "this",
                                                                        "nodeType": "Identifier",
                                                                        "overloadedDeclarations": [],
                                                                        "referencedDeclaration": -28,
                                                                        "src": "8825:4:5",
                                                                        "typeDescriptions": {
                                                                            "typeIdentifier": "t_contract$_ERC20Recoverable_$2716",
                                                                            "typeString": "contract ERC20Recoverable"
                                                                        }
                                                                    }
                                                                ],
                                                                "expression": {
                                                                    "argumentTypes": [
                                                                        {
                                                                            "typeIdentifier": "t_contract$_ERC20Recoverable_$2716",
                                                                            "typeString": "contract ERC20Recoverable"
                                                                        }
                                                                    ],
                                                                    "id": 2410,
                                                                    "isConstant": false,
                                                                    "isLValue": false,
                                                                    "isPure": true,
                                                                    "lValueRequested": false,
                                                                    "nodeType": "ElementaryTypeNameExpression",
                                                                    "src": "8817:7:5",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_type$_t_address_$",
                                                                        "typeString": "type(address)"
                                                                    },
                                                                    "typeName": {
                                                                        "id": 2409,
                                                                        "name": "address",
                                                                        "nodeType": "ElementaryTypeName",
                                                                        "src": "8817:7:5",
                                                                        "typeDescriptions": {}
                                                                    }
                                                                },
                                                                "id": 2412,
                                                                "isConstant": false,
                                                                "isLValue": false,
                                                                "isPure": false,
                                                                "kind": "typeConversion",
                                                                "lValueRequested": false,
                                                                "names": [],
                                                                "nodeType": "FunctionCall",
                                                                "src": "8817:13:5",
                                                                "tryCall": false,
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_address",
                                                                    "typeString": "address"
                                                                }
                                                            },
                                                            {
                                                                "id": 2413,
                                                                "name": "collateral",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [],
                                                                "referencedDeclaration": 2376,
                                                                "src": "8832:10:5",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_uint256",
                                                                    "typeString": "uint256"
                                                                }
                                                            }
                                                        ],
                                                        "expression": {
                                                            "argumentTypes": [
                                                                {
                                                                    "typeIdentifier": "t_address",
                                                                    "typeString": "address"
                                                                },
                                                                {
                                                                    "typeIdentifier": "t_address",
                                                                    "typeString": "address"
                                                                },
                                                                {
                                                                    "typeIdentifier": "t_uint256",
                                                                    "typeString": "uint256"
                                                                }
                                                            ],
                                                            "expression": {
                                                                "id": 2406,
                                                                "name": "currency",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [],
                                                                "referencedDeclaration": 2383,
                                                                "src": "8785:8:5",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_contract$_IERC20_$2809",
                                                                    "typeString": "contract IERC20"
                                                                }
                                                            },
                                                            "id": 2407,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": false,
                                                            "lValueRequested": false,
                                                            "memberName": "transferFrom",
                                                            "nodeType": "MemberAccess",
                                                            "referencedDeclaration": 2790,
                                                            "src": "8785:21:5",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                                                                "typeString": "function (address,address,uint256) external returns (bool)"
                                                            }
                                                        },
                                                        "id": 2414,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "kind": "functionCall",
                                                        "lValueRequested": false,
                                                        "names": [],
                                                        "nodeType": "FunctionCall",
                                                        "src": "8785:58:5",
                                                        "tryCall": false,
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_bool",
                                                            "typeString": "bool"
                                                        }
                                                    },
                                                    {
                                                        "hexValue": "436f6c6c61746572616c207472616e73666572206661696c6564",
                                                        "id": 2415,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": true,
                                                        "kind": "string",
                                                        "lValueRequested": false,
                                                        "nodeType": "Literal",
                                                        "src": "8845:28:5",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_stringliteral_6688cb8a28c83c825d376ee3aee513c2b794dfe9908b9522640403cf6a3f042e",
                                                            "typeString": "literal_string \"Collateral transfer failed\""
                                                        },
                                                        "value": "Collateral transfer failed"
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_bool",
                                                            "typeString": "bool"
                                                        },
                                                        {
                                                            "typeIdentifier": "t_stringliteral_6688cb8a28c83c825d376ee3aee513c2b794dfe9908b9522640403cf6a3f042e",
                                                            "typeString": "literal_string \"Collateral transfer failed\""
                                                        }
                                                    ],
                                                    "id": 2405,
                                                    "name": "require",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [
                                                        -18,
                                                        -18
                                                    ],
                                                    "referencedDeclaration": -18,
                                                    "src": "8777:7:5",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                                        "typeString": "function (bool,string memory) pure"
                                                    }
                                                },
                                                "id": 2416,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "8777:97:5",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_tuple$__$",
                                                    "typeString": "tuple()"
                                                }
                                            },
                                            "id": 2417,
                                            "nodeType": "ExpressionStatement",
                                            "src": "8777:97:5"
                                        },
                                        {
                                            "expression": {
                                                "id": 2428,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftHandSide": {
                                                    "baseExpression": {
                                                        "id": 2418,
                                                        "name": "claims",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 2155,
                                                        "src": "8887:6:5",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Claim_$2148_storage_$",
                                                            "typeString": "mapping(address => struct ERC20Recoverable.Claim storage ref)"
                                                        }
                                                    },
                                                    "id": 2420,
                                                    "indexExpression": {
                                                        "id": 2419,
                                                        "name": "lostAddress",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 2341,
                                                        "src": "8894:11:5",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        }
                                                    },
                                                    "isConstant": false,
                                                    "isLValue": true,
                                                    "isPure": false,
                                                    "lValueRequested": true,
                                                    "nodeType": "IndexAccess",
                                                    "src": "8887:19:5",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_struct$_Claim_$2148_storage",
                                                        "typeString": "struct ERC20Recoverable.Claim storage ref"
                                                    }
                                                },
                                                "nodeType": "Assignment",
                                                "operator": "=",
                                                "rightHandSide": {
                                                    "arguments": [
                                                        {
                                                            "id": 2422,
                                                            "name": "claimant",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 2365,
                                                            "src": "8940:8:5",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_address",
                                                                "typeString": "address"
                                                            }
                                                        },
                                                        {
                                                            "id": 2423,
                                                            "name": "collateral",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 2376,
                                                            "src": "8975:10:5",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_uint256",
                                                                "typeString": "uint256"
                                                            }
                                                        },
                                                        {
                                                            "expression": {
                                                                "id": 2424,
                                                                "name": "block",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [],
                                                                "referencedDeclaration": -4,
                                                                "src": "9011:5:5",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_magic_block",
                                                                    "typeString": "block"
                                                                }
                                                            },
                                                            "id": 2425,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": false,
                                                            "lValueRequested": false,
                                                            "memberName": "timestamp",
                                                            "nodeType": "MemberAccess",
                                                            "src": "9011:15:5",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_uint256",
                                                                "typeString": "uint256"
                                                            }
                                                        },
                                                        {
                                                            "id": 2426,
                                                            "name": "collateralType",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 2339,
                                                            "src": "9055:14:5",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_address",
                                                                "typeString": "address"
                                                            }
                                                        }
                                                    ],
                                                    "expression": {
                                                        "argumentTypes": [
                                                            {
                                                                "typeIdentifier": "t_address",
                                                                "typeString": "address"
                                                            },
                                                            {
                                                                "typeIdentifier": "t_uint256",
                                                                "typeString": "uint256"
                                                            },
                                                            {
                                                                "typeIdentifier": "t_uint256",
                                                                "typeString": "uint256"
                                                            },
                                                            {
                                                                "typeIdentifier": "t_address",
                                                                "typeString": "address"
                                                            }
                                                        ],
                                                        "id": 2421,
                                                        "name": "Claim",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 2148,
                                                        "src": "8909:5:5",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_type$_t_struct$_Claim_$2148_storage_ptr_$",
                                                            "typeString": "type(struct ERC20Recoverable.Claim storage pointer)"
                                                        }
                                                    },
                                                    "id": 2427,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "kind": "structConstructorCall",
                                                    "lValueRequested": false,
                                                    "names": [
                                                        "claimant",
                                                        "collateral",
                                                        "timestamp",
                                                        "currencyUsed"
                                                    ],
                                                    "nodeType": "FunctionCall",
                                                    "src": "8909:172:5",
                                                    "tryCall": false,
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_struct$_Claim_$2148_memory_ptr",
                                                        "typeString": "struct ERC20Recoverable.Claim memory"
                                                    }
                                                },
                                                "src": "8887:194:5",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_struct$_Claim_$2148_storage",
                                                    "typeString": "struct ERC20Recoverable.Claim storage ref"
                                                }
                                            },
                                            "id": 2429,
                                            "nodeType": "ExpressionStatement",
                                            "src": "8887:194:5"
                                        },
                                        {
                                            "eventCall": {
                                                "arguments": [
                                                    {
                                                        "id": 2431,
                                                        "name": "lostAddress",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 2341,
                                                        "src": "9109:11:5",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        }
                                                    },
                                                    {
                                                        "id": 2432,
                                                        "name": "claimant",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 2365,
                                                        "src": "9122:8:5",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        }
                                                    },
                                                    {
                                                        "id": 2433,
                                                        "name": "balance",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 2370,
                                                        "src": "9132:7:5",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        }
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        },
                                                        {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        },
                                                        {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        }
                                                    ],
                                                    "id": 2430,
                                                    "name": "ClaimMade",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 2304,
                                                    "src": "9099:9:5",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                                                        "typeString": "function (address,address,uint256)"
                                                    }
                                                },
                                                "id": 2434,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "9099:41:5",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_tuple$__$",
                                                    "typeString": "tuple()"
                                                }
                                            },
                                            "id": 2435,
                                            "nodeType": "EmitStatement",
                                            "src": "9094:46:5"
                                        }
                                    ]
                                },
                                "documentation": {
                                    "id": 2337,
                                    "nodeType": "StructuredDocumentation",
                                    "src": "6575:1544:5",
                                    "text": "Anyone can declare that the private key to a certain address was lost by calling declareLost\n providing a deposit/collateral. There are three possibilities of what can happen with the claim:\n 1) The claim period expires and the claimant can get the deposit and the shares back by calling recover\n 2) The \"lost\" private key is used at any time to call clearClaim. In that case, the claim is deleted and\n    the deposit sent to the shareholder (the owner of the private key). It is recommended to call recover\n    whenever someone transfers funds to let claims be resolved automatically when the \"lost\" private key is\n    used again.\n 3) The owner deletes the claim and assigns the deposit to the claimant. This is intended to be used to resolve\n    disputes. Generally, using this function implies that you have to trust the issuer of the tokens to handle\n    the situation well. As a rule of thumb, the contract owner should assume the owner of the lost address to be the\n    rightful owner of the deposit.\n It is highly recommended that the owner observes the claims made and informs the owners of the claimed addresses\n whenever a claim is made for their address (this of course is only possible if they are known to the owner, e.g.\n through a shareholder register).\n To prevent frontrunning attacks, a claim can only be made if the information revealed when calling \"declareLost\"\n was previously commited using the \"prepareClaim\" function."
                                },
                                "functionSelector": "26773ddd",
                                "id": 2437,
                                "implemented": true,
                                "kind": "function",
                                "modifiers": [],
                                "name": "declareLost",
                                "nodeType": "FunctionDefinition",
                                "parameters": {
                                    "id": 2342,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 2339,
                                            "mutability": "mutable",
                                            "name": "collateralType",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 2437,
                                            "src": "8146:22:5",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            },
                                            "typeName": {
                                                "id": 2338,
                                                "name": "address",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "8146:7:5",
                                                "stateMutability": "nonpayable",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            "visibility": "internal"
                                        },
                                        {
                                            "constant": false,
                                            "id": 2341,
                                            "mutability": "mutable",
                                            "name": "lostAddress",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 2437,
                                            "src": "8170:19:5",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            },
                                            "typeName": {
                                                "id": 2340,
                                                "name": "address",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "8170:7:5",
                                                "stateMutability": "nonpayable",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "8145:45:5"
                                },
                                "returnParameters": {
                                    "id": 2343,
                                    "nodeType": "ParameterList",
                                    "parameters": [],
                                    "src": "8198:0:5"
                                },
                                "scope": 2716,
                                "src": "8125:1023:5",
                                "stateMutability": "nonpayable",
                                "virtual": false,
                                "visibility": "public"
                            },
                            {
                                "body": {
                                    "id": 2449,
                                    "nodeType": "Block",
                                    "src": "9228:54:5",
                                    "statements": [
                                        {
                                            "expression": {
                                                "expression": {
                                                    "baseExpression": {
                                                        "id": 2444,
                                                        "name": "claims",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 2155,
                                                        "src": "9246:6:5",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Claim_$2148_storage_$",
                                                            "typeString": "mapping(address => struct ERC20Recoverable.Claim storage ref)"
                                                        }
                                                    },
                                                    "id": 2446,
                                                    "indexExpression": {
                                                        "id": 2445,
                                                        "name": "lostAddress",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 2439,
                                                        "src": "9253:11:5",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        }
                                                    },
                                                    "isConstant": false,
                                                    "isLValue": true,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "nodeType": "IndexAccess",
                                                    "src": "9246:19:5",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_struct$_Claim_$2148_storage",
                                                        "typeString": "struct ERC20Recoverable.Claim storage ref"
                                                    }
                                                },
                                                "id": 2447,
                                                "isConstant": false,
                                                "isLValue": true,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberName": "claimant",
                                                "nodeType": "MemberAccess",
                                                "referencedDeclaration": 2141,
                                                "src": "9246:28:5",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            "functionReturnParameters": 2443,
                                            "id": 2448,
                                            "nodeType": "Return",
                                            "src": "9239:35:5"
                                        }
                                    ]
                                },
                                "functionSelector": "1e3b9de5",
                                "id": 2450,
                                "implemented": true,
                                "kind": "function",
                                "modifiers": [],
                                "name": "getClaimant",
                                "nodeType": "FunctionDefinition",
                                "parameters": {
                                    "id": 2440,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 2439,
                                            "mutability": "mutable",
                                            "name": "lostAddress",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 2450,
                                            "src": "9177:19:5",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            },
                                            "typeName": {
                                                "id": 2438,
                                                "name": "address",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "9177:7:5",
                                                "stateMutability": "nonpayable",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "9176:21:5"
                                },
                                "returnParameters": {
                                    "id": 2443,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 2442,
                                            "mutability": "mutable",
                                            "name": "",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 2450,
                                            "src": "9219:7:5",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            },
                                            "typeName": {
                                                "id": 2441,
                                                "name": "address",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "9219:7:5",
                                                "stateMutability": "nonpayable",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "9218:9:5"
                                },
                                "scope": 2716,
                                "src": "9156:126:5",
                                "stateMutability": "view",
                                "virtual": false,
                                "visibility": "public"
                            },
                            {
                                "body": {
                                    "id": 2462,
                                    "nodeType": "Block",
                                    "src": "9364:56:5",
                                    "statements": [
                                        {
                                            "expression": {
                                                "expression": {
                                                    "baseExpression": {
                                                        "id": 2457,
                                                        "name": "claims",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 2155,
                                                        "src": "9382:6:5",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Claim_$2148_storage_$",
                                                            "typeString": "mapping(address => struct ERC20Recoverable.Claim storage ref)"
                                                        }
                                                    },
                                                    "id": 2459,
                                                    "indexExpression": {
                                                        "id": 2458,
                                                        "name": "lostAddress",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 2452,
                                                        "src": "9389:11:5",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        }
                                                    },
                                                    "isConstant": false,
                                                    "isLValue": true,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "nodeType": "IndexAccess",
                                                    "src": "9382:19:5",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_struct$_Claim_$2148_storage",
                                                        "typeString": "struct ERC20Recoverable.Claim storage ref"
                                                    }
                                                },
                                                "id": 2460,
                                                "isConstant": false,
                                                "isLValue": true,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberName": "collateral",
                                                "nodeType": "MemberAccess",
                                                "referencedDeclaration": 2143,
                                                "src": "9382:30:5",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            },
                                            "functionReturnParameters": 2456,
                                            "id": 2461,
                                            "nodeType": "Return",
                                            "src": "9375:37:5"
                                        }
                                    ]
                                },
                                "functionSelector": "9b56d6c9",
                                "id": 2463,
                                "implemented": true,
                                "kind": "function",
                                "modifiers": [],
                                "name": "getCollateral",
                                "nodeType": "FunctionDefinition",
                                "parameters": {
                                    "id": 2453,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 2452,
                                            "mutability": "mutable",
                                            "name": "lostAddress",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 2463,
                                            "src": "9313:19:5",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            },
                                            "typeName": {
                                                "id": 2451,
                                                "name": "address",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "9313:7:5",
                                                "stateMutability": "nonpayable",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "9312:21:5"
                                },
                                "returnParameters": {
                                    "id": 2456,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 2455,
                                            "mutability": "mutable",
                                            "name": "",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 2463,
                                            "src": "9355:7:5",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            },
                                            "typeName": {
                                                "id": 2454,
                                                "name": "uint256",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "9355:7:5",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "9354:9:5"
                                },
                                "scope": 2716,
                                "src": "9290:130:5",
                                "stateMutability": "view",
                                "virtual": false,
                                "visibility": "public"
                            },
                            {
                                "body": {
                                    "id": 2475,
                                    "nodeType": "Block",
                                    "src": "9506:58:5",
                                    "statements": [
                                        {
                                            "expression": {
                                                "expression": {
                                                    "baseExpression": {
                                                        "id": 2470,
                                                        "name": "claims",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 2155,
                                                        "src": "9524:6:5",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Claim_$2148_storage_$",
                                                            "typeString": "mapping(address => struct ERC20Recoverable.Claim storage ref)"
                                                        }
                                                    },
                                                    "id": 2472,
                                                    "indexExpression": {
                                                        "id": 2471,
                                                        "name": "lostAddress",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 2465,
                                                        "src": "9531:11:5",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        }
                                                    },
                                                    "isConstant": false,
                                                    "isLValue": true,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "nodeType": "IndexAccess",
                                                    "src": "9524:19:5",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_struct$_Claim_$2148_storage",
                                                        "typeString": "struct ERC20Recoverable.Claim storage ref"
                                                    }
                                                },
                                                "id": 2473,
                                                "isConstant": false,
                                                "isLValue": true,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberName": "currencyUsed",
                                                "nodeType": "MemberAccess",
                                                "referencedDeclaration": 2147,
                                                "src": "9524:32:5",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            "functionReturnParameters": 2469,
                                            "id": 2474,
                                            "nodeType": "Return",
                                            "src": "9517:39:5"
                                        }
                                    ]
                                },
                                "functionSelector": "3bcc45ba",
                                "id": 2476,
                                "implemented": true,
                                "kind": "function",
                                "modifiers": [],
                                "name": "getCollateralType",
                                "nodeType": "FunctionDefinition",
                                "parameters": {
                                    "id": 2466,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 2465,
                                            "mutability": "mutable",
                                            "name": "lostAddress",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 2476,
                                            "src": "9455:19:5",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            },
                                            "typeName": {
                                                "id": 2464,
                                                "name": "address",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "9455:7:5",
                                                "stateMutability": "nonpayable",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "9454:21:5"
                                },
                                "returnParameters": {
                                    "id": 2469,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 2468,
                                            "mutability": "mutable",
                                            "name": "",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 2476,
                                            "src": "9497:7:5",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            },
                                            "typeName": {
                                                "id": 2467,
                                                "name": "address",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "9497:7:5",
                                                "stateMutability": "nonpayable",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "9496:9:5"
                                },
                                "scope": 2716,
                                "src": "9428:136:5",
                                "stateMutability": "view",
                                "virtual": false,
                                "visibility": "public"
                            },
                            {
                                "body": {
                                    "id": 2488,
                                    "nodeType": "Block",
                                    "src": "9645:55:5",
                                    "statements": [
                                        {
                                            "expression": {
                                                "expression": {
                                                    "baseExpression": {
                                                        "id": 2483,
                                                        "name": "claims",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 2155,
                                                        "src": "9663:6:5",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Claim_$2148_storage_$",
                                                            "typeString": "mapping(address => struct ERC20Recoverable.Claim storage ref)"
                                                        }
                                                    },
                                                    "id": 2485,
                                                    "indexExpression": {
                                                        "id": 2484,
                                                        "name": "lostAddress",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 2478,
                                                        "src": "9670:11:5",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        }
                                                    },
                                                    "isConstant": false,
                                                    "isLValue": true,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "nodeType": "IndexAccess",
                                                    "src": "9663:19:5",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_struct$_Claim_$2148_storage",
                                                        "typeString": "struct ERC20Recoverable.Claim storage ref"
                                                    }
                                                },
                                                "id": 2486,
                                                "isConstant": false,
                                                "isLValue": true,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberName": "timestamp",
                                                "nodeType": "MemberAccess",
                                                "referencedDeclaration": 2145,
                                                "src": "9663:29:5",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            },
                                            "functionReturnParameters": 2482,
                                            "id": 2487,
                                            "nodeType": "Return",
                                            "src": "9656:36:5"
                                        }
                                    ]
                                },
                                "functionSelector": "eb470ebf",
                                "id": 2489,
                                "implemented": true,
                                "kind": "function",
                                "modifiers": [],
                                "name": "getTimeStamp",
                                "nodeType": "FunctionDefinition",
                                "parameters": {
                                    "id": 2479,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 2478,
                                            "mutability": "mutable",
                                            "name": "lostAddress",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 2489,
                                            "src": "9594:19:5",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            },
                                            "typeName": {
                                                "id": 2477,
                                                "name": "address",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "9594:7:5",
                                                "stateMutability": "nonpayable",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "9593:21:5"
                                },
                                "returnParameters": {
                                    "id": 2482,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 2481,
                                            "mutability": "mutable",
                                            "name": "",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 2489,
                                            "src": "9636:7:5",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            },
                                            "typeName": {
                                                "id": 2480,
                                                "name": "uint256",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "9636:7:5",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "9635:9:5"
                                },
                                "scope": 2716,
                                "src": "9572:128:5",
                                "stateMutability": "view",
                                "virtual": false,
                                "visibility": "public"
                            },
                            {
                                "baseFunctions": [
                                    795
                                ],
                                "body": {
                                    "id": 2513,
                                    "nodeType": "Block",
                                    "src": "9800:125:5",
                                    "statements": [
                                        {
                                            "expression": {
                                                "arguments": [
                                                    {
                                                        "arguments": [
                                                            {
                                                                "id": 2502,
                                                                "name": "recipient",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [],
                                                                "referencedDeclaration": 2491,
                                                                "src": "9834:9:5",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_address",
                                                                    "typeString": "address"
                                                                }
                                                            },
                                                            {
                                                                "id": 2503,
                                                                "name": "amount",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [],
                                                                "referencedDeclaration": 2493,
                                                                "src": "9845:6:5",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_uint256",
                                                                    "typeString": "uint256"
                                                                }
                                                            }
                                                        ],
                                                        "expression": {
                                                            "argumentTypes": [
                                                                {
                                                                    "typeIdentifier": "t_address",
                                                                    "typeString": "address"
                                                                },
                                                                {
                                                                    "typeIdentifier": "t_uint256",
                                                                    "typeString": "uint256"
                                                                }
                                                            ],
                                                            "expression": {
                                                                "id": 2500,
                                                                "name": "super",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [],
                                                                "referencedDeclaration": -25,
                                                                "src": "9819:5:5",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_super$_ERC20Recoverable_$2716",
                                                                    "typeString": "contract super ERC20Recoverable"
                                                                }
                                                            },
                                                            "id": 2501,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": false,
                                                            "lValueRequested": false,
                                                            "memberName": "transfer",
                                                            "nodeType": "MemberAccess",
                                                            "referencedDeclaration": 795,
                                                            "src": "9819:14:5",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                                                "typeString": "function (address,uint256) returns (bool)"
                                                            }
                                                        },
                                                        "id": 2504,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "kind": "functionCall",
                                                        "lValueRequested": false,
                                                        "names": [],
                                                        "nodeType": "FunctionCall",
                                                        "src": "9819:33:5",
                                                        "tryCall": false,
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_bool",
                                                            "typeString": "bool"
                                                        }
                                                    },
                                                    {
                                                        "hexValue": "5472616e73666572206661696c6564",
                                                        "id": 2505,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": true,
                                                        "kind": "string",
                                                        "lValueRequested": false,
                                                        "nodeType": "Literal",
                                                        "src": "9854:17:5",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51",
                                                            "typeString": "literal_string \"Transfer failed\""
                                                        },
                                                        "value": "Transfer failed"
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_bool",
                                                            "typeString": "bool"
                                                        },
                                                        {
                                                            "typeIdentifier": "t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51",
                                                            "typeString": "literal_string \"Transfer failed\""
                                                        }
                                                    ],
                                                    "id": 2499,
                                                    "name": "require",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [
                                                        -18,
                                                        -18
                                                    ],
                                                    "referencedDeclaration": -18,
                                                    "src": "9811:7:5",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                                        "typeString": "function (bool,string memory) pure"
                                                    }
                                                },
                                                "id": 2506,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "9811:61:5",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_tuple$__$",
                                                    "typeString": "tuple()"
                                                }
                                            },
                                            "id": 2507,
                                            "nodeType": "ExpressionStatement",
                                            "src": "9811:61:5"
                                        },
                                        {
                                            "expression": {
                                                "arguments": [],
                                                "expression": {
                                                    "argumentTypes": [],
                                                    "id": 2508,
                                                    "name": "clearClaim",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 2568,
                                                    "src": "9883:10:5",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                                                        "typeString": "function ()"
                                                    }
                                                },
                                                "id": 2509,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "9883:12:5",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_tuple$__$",
                                                    "typeString": "tuple()"
                                                }
                                            },
                                            "id": 2510,
                                            "nodeType": "ExpressionStatement",
                                            "src": "9883:12:5"
                                        },
                                        {
                                            "expression": {
                                                "hexValue": "74727565",
                                                "id": 2511,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "bool",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "9913:4:5",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                },
                                                "value": "true"
                                            },
                                            "functionReturnParameters": 2498,
                                            "id": 2512,
                                            "nodeType": "Return",
                                            "src": "9906:11:5"
                                        }
                                    ]
                                },
                                "functionSelector": "a9059cbb",
                                "id": 2514,
                                "implemented": true,
                                "kind": "function",
                                "modifiers": [],
                                "name": "transfer",
                                "nodeType": "FunctionDefinition",
                                "overrides": {
                                    "id": 2495,
                                    "nodeType": "OverrideSpecifier",
                                    "overrides": [],
                                    "src": "9761:8:5"
                                },
                                "parameters": {
                                    "id": 2494,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 2491,
                                            "mutability": "mutable",
                                            "name": "recipient",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 2514,
                                            "src": "9726:17:5",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            },
                                            "typeName": {
                                                "id": 2490,
                                                "name": "address",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "9726:7:5",
                                                "stateMutability": "nonpayable",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            "visibility": "internal"
                                        },
                                        {
                                            "constant": false,
                                            "id": 2493,
                                            "mutability": "mutable",
                                            "name": "amount",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 2514,
                                            "src": "9745:14:5",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            },
                                            "typeName": {
                                                "id": 2492,
                                                "name": "uint256",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "9745:7:5",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "9725:35:5"
                                },
                                "returnParameters": {
                                    "id": 2498,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 2497,
                                            "mutability": "mutable",
                                            "name": "",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 2514,
                                            "src": "9794:4:5",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_bool",
                                                "typeString": "bool"
                                            },
                                            "typeName": {
                                                "id": 2496,
                                                "name": "bool",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "9794:4:5",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "9793:6:5"
                                },
                                "scope": 2716,
                                "src": "9708:217:5",
                                "stateMutability": "nonpayable",
                                "virtual": true,
                                "visibility": "public"
                            },
                            {
                                "body": {
                                    "id": 2567,
                                    "nodeType": "Block",
                                    "src": "10192:398:5",
                                    "statements": [
                                        {
                                            "condition": {
                                                "commonType": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                },
                                                "id": 2524,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftExpression": {
                                                    "expression": {
                                                        "baseExpression": {
                                                            "id": 2518,
                                                            "name": "claims",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 2155,
                                                            "src": "10207:6:5",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Claim_$2148_storage_$",
                                                                "typeString": "mapping(address => struct ERC20Recoverable.Claim storage ref)"
                                                            }
                                                        },
                                                        "id": 2521,
                                                        "indexExpression": {
                                                            "expression": {
                                                                "id": 2519,
                                                                "name": "msg",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [],
                                                                "referencedDeclaration": -15,
                                                                "src": "10214:3:5",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_magic_message",
                                                                    "typeString": "msg"
                                                                }
                                                            },
                                                            "id": 2520,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": false,
                                                            "lValueRequested": false,
                                                            "memberName": "sender",
                                                            "nodeType": "MemberAccess",
                                                            "src": "10214:10:5",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_address_payable",
                                                                "typeString": "address payable"
                                                            }
                                                        },
                                                        "isConstant": false,
                                                        "isLValue": true,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "nodeType": "IndexAccess",
                                                        "src": "10207:18:5",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_struct$_Claim_$2148_storage",
                                                            "typeString": "struct ERC20Recoverable.Claim storage ref"
                                                        }
                                                    },
                                                    "id": 2522,
                                                    "isConstant": false,
                                                    "isLValue": true,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "memberName": "collateral",
                                                    "nodeType": "MemberAccess",
                                                    "referencedDeclaration": 2143,
                                                    "src": "10207:29:5",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    }
                                                },
                                                "nodeType": "BinaryOperation",
                                                "operator": "!=",
                                                "rightExpression": {
                                                    "hexValue": "30",
                                                    "id": 2523,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "kind": "number",
                                                    "lValueRequested": false,
                                                    "nodeType": "Literal",
                                                    "src": "10240:1:5",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_rational_0_by_1",
                                                        "typeString": "int_const 0"
                                                    },
                                                    "value": "0"
                                                },
                                                "src": "10207:34:5",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            },
                                            "id": 2566,
                                            "nodeType": "IfStatement",
                                            "src": "10203:380:5",
                                            "trueBody": {
                                                "id": 2565,
                                                "nodeType": "Block",
                                                "src": "10243:340:5",
                                                "statements": [
                                                    {
                                                        "assignments": [
                                                            2526
                                                        ],
                                                        "declarations": [
                                                            {
                                                                "constant": false,
                                                                "id": 2526,
                                                                "mutability": "mutable",
                                                                "name": "collateral",
                                                                "nodeType": "VariableDeclaration",
                                                                "scope": 2565,
                                                                "src": "10258:18:5",
                                                                "stateVariable": false,
                                                                "storageLocation": "default",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_uint256",
                                                                    "typeString": "uint256"
                                                                },
                                                                "typeName": {
                                                                    "id": 2525,
                                                                    "name": "uint256",
                                                                    "nodeType": "ElementaryTypeName",
                                                                    "src": "10258:7:5",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_uint256",
                                                                        "typeString": "uint256"
                                                                    }
                                                                },
                                                                "visibility": "internal"
                                                            }
                                                        ],
                                                        "id": 2532,
                                                        "initialValue": {
                                                            "expression": {
                                                                "baseExpression": {
                                                                    "id": 2527,
                                                                    "name": "claims",
                                                                    "nodeType": "Identifier",
                                                                    "overloadedDeclarations": [],
                                                                    "referencedDeclaration": 2155,
                                                                    "src": "10279:6:5",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Claim_$2148_storage_$",
                                                                        "typeString": "mapping(address => struct ERC20Recoverable.Claim storage ref)"
                                                                    }
                                                                },
                                                                "id": 2530,
                                                                "indexExpression": {
                                                                    "expression": {
                                                                        "id": 2528,
                                                                        "name": "msg",
                                                                        "nodeType": "Identifier",
                                                                        "overloadedDeclarations": [],
                                                                        "referencedDeclaration": -15,
                                                                        "src": "10286:3:5",
                                                                        "typeDescriptions": {
                                                                            "typeIdentifier": "t_magic_message",
                                                                            "typeString": "msg"
                                                                        }
                                                                    },
                                                                    "id": 2529,
                                                                    "isConstant": false,
                                                                    "isLValue": false,
                                                                    "isPure": false,
                                                                    "lValueRequested": false,
                                                                    "memberName": "sender",
                                                                    "nodeType": "MemberAccess",
                                                                    "src": "10286:10:5",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_address_payable",
                                                                        "typeString": "address payable"
                                                                    }
                                                                },
                                                                "isConstant": false,
                                                                "isLValue": true,
                                                                "isPure": false,
                                                                "lValueRequested": false,
                                                                "nodeType": "IndexAccess",
                                                                "src": "10279:18:5",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_struct$_Claim_$2148_storage",
                                                                    "typeString": "struct ERC20Recoverable.Claim storage ref"
                                                                }
                                                            },
                                                            "id": 2531,
                                                            "isConstant": false,
                                                            "isLValue": true,
                                                            "isPure": false,
                                                            "lValueRequested": false,
                                                            "memberName": "collateral",
                                                            "nodeType": "MemberAccess",
                                                            "referencedDeclaration": 2143,
                                                            "src": "10279:29:5",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_uint256",
                                                                "typeString": "uint256"
                                                            }
                                                        },
                                                        "nodeType": "VariableDeclarationStatement",
                                                        "src": "10258:50:5"
                                                    },
                                                    {
                                                        "assignments": [
                                                            2534
                                                        ],
                                                        "declarations": [
                                                            {
                                                                "constant": false,
                                                                "id": 2534,
                                                                "mutability": "mutable",
                                                                "name": "currency",
                                                                "nodeType": "VariableDeclaration",
                                                                "scope": 2565,
                                                                "src": "10323:15:5",
                                                                "stateVariable": false,
                                                                "storageLocation": "default",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_contract$_IERC20_$2809",
                                                                    "typeString": "contract IERC20"
                                                                },
                                                                "typeName": {
                                                                    "id": 2533,
                                                                    "name": "IERC20",
                                                                    "nodeType": "UserDefinedTypeName",
                                                                    "referencedDeclaration": 2809,
                                                                    "src": "10323:6:5",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_contract$_IERC20_$2809",
                                                                        "typeString": "contract IERC20"
                                                                    }
                                                                },
                                                                "visibility": "internal"
                                                            }
                                                        ],
                                                        "id": 2542,
                                                        "initialValue": {
                                                            "arguments": [
                                                                {
                                                                    "expression": {
                                                                        "baseExpression": {
                                                                            "id": 2536,
                                                                            "name": "claims",
                                                                            "nodeType": "Identifier",
                                                                            "overloadedDeclarations": [],
                                                                            "referencedDeclaration": 2155,
                                                                            "src": "10348:6:5",
                                                                            "typeDescriptions": {
                                                                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Claim_$2148_storage_$",
                                                                                "typeString": "mapping(address => struct ERC20Recoverable.Claim storage ref)"
                                                                            }
                                                                        },
                                                                        "id": 2539,
                                                                        "indexExpression": {
                                                                            "expression": {
                                                                                "id": 2537,
                                                                                "name": "msg",
                                                                                "nodeType": "Identifier",
                                                                                "overloadedDeclarations": [],
                                                                                "referencedDeclaration": -15,
                                                                                "src": "10355:3:5",
                                                                                "typeDescriptions": {
                                                                                    "typeIdentifier": "t_magic_message",
                                                                                    "typeString": "msg"
                                                                                }
                                                                            },
                                                                            "id": 2538,
                                                                            "isConstant": false,
                                                                            "isLValue": false,
                                                                            "isPure": false,
                                                                            "lValueRequested": false,
                                                                            "memberName": "sender",
                                                                            "nodeType": "MemberAccess",
                                                                            "src": "10355:10:5",
                                                                            "typeDescriptions": {
                                                                                "typeIdentifier": "t_address_payable",
                                                                                "typeString": "address payable"
                                                                            }
                                                                        },
                                                                        "isConstant": false,
                                                                        "isLValue": true,
                                                                        "isPure": false,
                                                                        "lValueRequested": false,
                                                                        "nodeType": "IndexAccess",
                                                                        "src": "10348:18:5",
                                                                        "typeDescriptions": {
                                                                            "typeIdentifier": "t_struct$_Claim_$2148_storage",
                                                                            "typeString": "struct ERC20Recoverable.Claim storage ref"
                                                                        }
                                                                    },
                                                                    "id": 2540,
                                                                    "isConstant": false,
                                                                    "isLValue": true,
                                                                    "isPure": false,
                                                                    "lValueRequested": false,
                                                                    "memberName": "currencyUsed",
                                                                    "nodeType": "MemberAccess",
                                                                    "referencedDeclaration": 2147,
                                                                    "src": "10348:31:5",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_address",
                                                                        "typeString": "address"
                                                                    }
                                                                }
                                                            ],
                                                            "expression": {
                                                                "argumentTypes": [
                                                                    {
                                                                        "typeIdentifier": "t_address",
                                                                        "typeString": "address"
                                                                    }
                                                                ],
                                                                "id": 2535,
                                                                "name": "IERC20",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [],
                                                                "referencedDeclaration": 2809,
                                                                "src": "10341:6:5",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_type$_t_contract$_IERC20_$2809_$",
                                                                    "typeString": "type(contract IERC20)"
                                                                }
                                                            },
                                                            "id": 2541,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": false,
                                                            "kind": "typeConversion",
                                                            "lValueRequested": false,
                                                            "names": [],
                                                            "nodeType": "FunctionCall",
                                                            "src": "10341:39:5",
                                                            "tryCall": false,
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_contract$_IERC20_$2809",
                                                                "typeString": "contract IERC20"
                                                            }
                                                        },
                                                        "nodeType": "VariableDeclarationStatement",
                                                        "src": "10323:57:5"
                                                    },
                                                    {
                                                        "expression": {
                                                            "id": 2547,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": false,
                                                            "lValueRequested": false,
                                                            "nodeType": "UnaryOperation",
                                                            "operator": "delete",
                                                            "prefix": true,
                                                            "src": "10395:25:5",
                                                            "subExpression": {
                                                                "baseExpression": {
                                                                    "id": 2543,
                                                                    "name": "claims",
                                                                    "nodeType": "Identifier",
                                                                    "overloadedDeclarations": [],
                                                                    "referencedDeclaration": 2155,
                                                                    "src": "10402:6:5",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Claim_$2148_storage_$",
                                                                        "typeString": "mapping(address => struct ERC20Recoverable.Claim storage ref)"
                                                                    }
                                                                },
                                                                "id": 2546,
                                                                "indexExpression": {
                                                                    "expression": {
                                                                        "id": 2544,
                                                                        "name": "msg",
                                                                        "nodeType": "Identifier",
                                                                        "overloadedDeclarations": [],
                                                                        "referencedDeclaration": -15,
                                                                        "src": "10409:3:5",
                                                                        "typeDescriptions": {
                                                                            "typeIdentifier": "t_magic_message",
                                                                            "typeString": "msg"
                                                                        }
                                                                    },
                                                                    "id": 2545,
                                                                    "isConstant": false,
                                                                    "isLValue": false,
                                                                    "isPure": false,
                                                                    "lValueRequested": false,
                                                                    "memberName": "sender",
                                                                    "nodeType": "MemberAccess",
                                                                    "src": "10409:10:5",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_address_payable",
                                                                        "typeString": "address payable"
                                                                    }
                                                                },
                                                                "isConstant": false,
                                                                "isLValue": true,
                                                                "isPure": false,
                                                                "lValueRequested": true,
                                                                "nodeType": "IndexAccess",
                                                                "src": "10402:18:5",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_struct$_Claim_$2148_storage",
                                                                    "typeString": "struct ERC20Recoverable.Claim storage ref"
                                                                }
                                                            },
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_tuple$__$",
                                                                "typeString": "tuple()"
                                                            }
                                                        },
                                                        "id": 2548,
                                                        "nodeType": "ExpressionStatement",
                                                        "src": "10395:25:5"
                                                    },
                                                    {
                                                        "expression": {
                                                            "arguments": [
                                                                {
                                                                    "arguments": [
                                                                        {
                                                                            "expression": {
                                                                                "id": 2552,
                                                                                "name": "msg",
                                                                                "nodeType": "Identifier",
                                                                                "overloadedDeclarations": [],
                                                                                "referencedDeclaration": -15,
                                                                                "src": "10461:3:5",
                                                                                "typeDescriptions": {
                                                                                    "typeIdentifier": "t_magic_message",
                                                                                    "typeString": "msg"
                                                                                }
                                                                            },
                                                                            "id": 2553,
                                                                            "isConstant": false,
                                                                            "isLValue": false,
                                                                            "isPure": false,
                                                                            "lValueRequested": false,
                                                                            "memberName": "sender",
                                                                            "nodeType": "MemberAccess",
                                                                            "src": "10461:10:5",
                                                                            "typeDescriptions": {
                                                                                "typeIdentifier": "t_address_payable",
                                                                                "typeString": "address payable"
                                                                            }
                                                                        },
                                                                        {
                                                                            "id": 2554,
                                                                            "name": "collateral",
                                                                            "nodeType": "Identifier",
                                                                            "overloadedDeclarations": [],
                                                                            "referencedDeclaration": 2526,
                                                                            "src": "10473:10:5",
                                                                            "typeDescriptions": {
                                                                                "typeIdentifier": "t_uint256",
                                                                                "typeString": "uint256"
                                                                            }
                                                                        }
                                                                    ],
                                                                    "expression": {
                                                                        "argumentTypes": [
                                                                            {
                                                                                "typeIdentifier": "t_address_payable",
                                                                                "typeString": "address payable"
                                                                            },
                                                                            {
                                                                                "typeIdentifier": "t_uint256",
                                                                                "typeString": "uint256"
                                                                            }
                                                                        ],
                                                                        "expression": {
                                                                            "id": 2550,
                                                                            "name": "currency",
                                                                            "nodeType": "Identifier",
                                                                            "overloadedDeclarations": [],
                                                                            "referencedDeclaration": 2534,
                                                                            "src": "10443:8:5",
                                                                            "typeDescriptions": {
                                                                                "typeIdentifier": "t_contract$_IERC20_$2809",
                                                                                "typeString": "contract IERC20"
                                                                            }
                                                                        },
                                                                        "id": 2551,
                                                                        "isConstant": false,
                                                                        "isLValue": false,
                                                                        "isPure": false,
                                                                        "lValueRequested": false,
                                                                        "memberName": "transfer",
                                                                        "nodeType": "MemberAccess",
                                                                        "referencedDeclaration": 2758,
                                                                        "src": "10443:17:5",
                                                                        "typeDescriptions": {
                                                                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                                                            "typeString": "function (address,uint256) external returns (bool)"
                                                                        }
                                                                    },
                                                                    "id": 2555,
                                                                    "isConstant": false,
                                                                    "isLValue": false,
                                                                    "isPure": false,
                                                                    "kind": "functionCall",
                                                                    "lValueRequested": false,
                                                                    "names": [],
                                                                    "nodeType": "FunctionCall",
                                                                    "src": "10443:41:5",
                                                                    "tryCall": false,
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_bool",
                                                                        "typeString": "bool"
                                                                    }
                                                                },
                                                                {
                                                                    "hexValue": "436f6c6c61746572616c207472616e73666572206661696c6564",
                                                                    "id": 2556,
                                                                    "isConstant": false,
                                                                    "isLValue": false,
                                                                    "isPure": true,
                                                                    "kind": "string",
                                                                    "lValueRequested": false,
                                                                    "nodeType": "Literal",
                                                                    "src": "10486:28:5",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_stringliteral_6688cb8a28c83c825d376ee3aee513c2b794dfe9908b9522640403cf6a3f042e",
                                                                        "typeString": "literal_string \"Collateral transfer failed\""
                                                                    },
                                                                    "value": "Collateral transfer failed"
                                                                }
                                                            ],
                                                            "expression": {
                                                                "argumentTypes": [
                                                                    {
                                                                        "typeIdentifier": "t_bool",
                                                                        "typeString": "bool"
                                                                    },
                                                                    {
                                                                        "typeIdentifier": "t_stringliteral_6688cb8a28c83c825d376ee3aee513c2b794dfe9908b9522640403cf6a3f042e",
                                                                        "typeString": "literal_string \"Collateral transfer failed\""
                                                                    }
                                                                ],
                                                                "id": 2549,
                                                                "name": "require",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [
                                                                    -18,
                                                                    -18
                                                                ],
                                                                "referencedDeclaration": -18,
                                                                "src": "10435:7:5",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                                                    "typeString": "function (bool,string memory) pure"
                                                                }
                                                            },
                                                            "id": 2557,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": false,
                                                            "kind": "functionCall",
                                                            "lValueRequested": false,
                                                            "names": [],
                                                            "nodeType": "FunctionCall",
                                                            "src": "10435:80:5",
                                                            "tryCall": false,
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_tuple$__$",
                                                                "typeString": "tuple()"
                                                            }
                                                        },
                                                        "id": 2558,
                                                        "nodeType": "ExpressionStatement",
                                                        "src": "10435:80:5"
                                                    },
                                                    {
                                                        "eventCall": {
                                                            "arguments": [
                                                                {
                                                                    "expression": {
                                                                        "id": 2560,
                                                                        "name": "msg",
                                                                        "nodeType": "Identifier",
                                                                        "overloadedDeclarations": [],
                                                                        "referencedDeclaration": -15,
                                                                        "src": "10548:3:5",
                                                                        "typeDescriptions": {
                                                                            "typeIdentifier": "t_magic_message",
                                                                            "typeString": "msg"
                                                                        }
                                                                    },
                                                                    "id": 2561,
                                                                    "isConstant": false,
                                                                    "isLValue": false,
                                                                    "isPure": false,
                                                                    "lValueRequested": false,
                                                                    "memberName": "sender",
                                                                    "nodeType": "MemberAccess",
                                                                    "src": "10548:10:5",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_address_payable",
                                                                        "typeString": "address payable"
                                                                    }
                                                                },
                                                                {
                                                                    "id": 2562,
                                                                    "name": "collateral",
                                                                    "nodeType": "Identifier",
                                                                    "overloadedDeclarations": [],
                                                                    "referencedDeclaration": 2526,
                                                                    "src": "10560:10:5",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_uint256",
                                                                        "typeString": "uint256"
                                                                    }
                                                                }
                                                            ],
                                                            "expression": {
                                                                "argumentTypes": [
                                                                    {
                                                                        "typeIdentifier": "t_address_payable",
                                                                        "typeString": "address payable"
                                                                    },
                                                                    {
                                                                        "typeIdentifier": "t_uint256",
                                                                        "typeString": "uint256"
                                                                    }
                                                                ],
                                                                "id": 2559,
                                                                "name": "ClaimCleared",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [],
                                                                "referencedDeclaration": 2310,
                                                                "src": "10535:12:5",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                                                                    "typeString": "function (address,uint256)"
                                                                }
                                                            },
                                                            "id": 2563,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": false,
                                                            "kind": "functionCall",
                                                            "lValueRequested": false,
                                                            "names": [],
                                                            "nodeType": "FunctionCall",
                                                            "src": "10535:36:5",
                                                            "tryCall": false,
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_tuple$__$",
                                                                "typeString": "tuple()"
                                                            }
                                                        },
                                                        "id": 2564,
                                                        "nodeType": "EmitStatement",
                                                        "src": "10530:41:5"
                                                    }
                                                ]
                                            }
                                        }
                                    ]
                                },
                                "documentation": {
                                    "id": 2515,
                                    "nodeType": "StructuredDocumentation",
                                    "src": "9933:224:5",
                                    "text": " Clears a claim after the key has been found again and assigns the collateral to the \"lost\" address.\n This is the price an adverse claimer pays for filing a false claim and makes it risky to do so."
                                },
                                "functionSelector": "6b03ed5f",
                                "id": 2568,
                                "implemented": true,
                                "kind": "function",
                                "modifiers": [],
                                "name": "clearClaim",
                                "nodeType": "FunctionDefinition",
                                "parameters": {
                                    "id": 2516,
                                    "nodeType": "ParameterList",
                                    "parameters": [],
                                    "src": "10182:2:5"
                                },
                                "returnParameters": {
                                    "id": 2517,
                                    "nodeType": "ParameterList",
                                    "parameters": [],
                                    "src": "10192:0:5"
                                },
                                "scope": 2716,
                                "src": "10163:427:5",
                                "stateMutability": "nonpayable",
                                "virtual": false,
                                "visibility": "public"
                            },
                            {
                                "body": {
                                    "id": 2653,
                                    "nodeType": "Block",
                                    "src": "10821:699:5",
                                    "statements": [
                                        {
                                            "assignments": [
                                                2575
                                            ],
                                            "declarations": [
                                                {
                                                    "constant": false,
                                                    "id": 2575,
                                                    "mutability": "mutable",
                                                    "name": "claim",
                                                    "nodeType": "VariableDeclaration",
                                                    "scope": 2653,
                                                    "src": "10832:18:5",
                                                    "stateVariable": false,
                                                    "storageLocation": "memory",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_struct$_Claim_$2148_memory_ptr",
                                                        "typeString": "struct ERC20Recoverable.Claim"
                                                    },
                                                    "typeName": {
                                                        "id": 2574,
                                                        "name": "Claim",
                                                        "nodeType": "UserDefinedTypeName",
                                                        "referencedDeclaration": 2148,
                                                        "src": "10832:5:5",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_struct$_Claim_$2148_storage_ptr",
                                                            "typeString": "struct ERC20Recoverable.Claim"
                                                        }
                                                    },
                                                    "visibility": "internal"
                                                }
                                            ],
                                            "id": 2579,
                                            "initialValue": {
                                                "baseExpression": {
                                                    "id": 2576,
                                                    "name": "claims",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 2155,
                                                    "src": "10853:6:5",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Claim_$2148_storage_$",
                                                        "typeString": "mapping(address => struct ERC20Recoverable.Claim storage ref)"
                                                    }
                                                },
                                                "id": 2578,
                                                "indexExpression": {
                                                    "id": 2577,
                                                    "name": "lostAddress",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 2571,
                                                    "src": "10860:11:5",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_address",
                                                        "typeString": "address"
                                                    }
                                                },
                                                "isConstant": false,
                                                "isLValue": true,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "nodeType": "IndexAccess",
                                                "src": "10853:19:5",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_struct$_Claim_$2148_storage",
                                                    "typeString": "struct ERC20Recoverable.Claim storage ref"
                                                }
                                            },
                                            "nodeType": "VariableDeclarationStatement",
                                            "src": "10832:40:5"
                                        },
                                        {
                                            "assignments": [
                                                2581
                                            ],
                                            "declarations": [
                                                {
                                                    "constant": false,
                                                    "id": 2581,
                                                    "mutability": "mutable",
                                                    "name": "collateral",
                                                    "nodeType": "VariableDeclaration",
                                                    "scope": 2653,
                                                    "src": "10883:18:5",
                                                    "stateVariable": false,
                                                    "storageLocation": "default",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    },
                                                    "typeName": {
                                                        "id": 2580,
                                                        "name": "uint256",
                                                        "nodeType": "ElementaryTypeName",
                                                        "src": "10883:7:5",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        }
                                                    },
                                                    "visibility": "internal"
                                                }
                                            ],
                                            "id": 2584,
                                            "initialValue": {
                                                "expression": {
                                                    "id": 2582,
                                                    "name": "claim",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 2575,
                                                    "src": "10904:5:5",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_struct$_Claim_$2148_memory_ptr",
                                                        "typeString": "struct ERC20Recoverable.Claim memory"
                                                    }
                                                },
                                                "id": 2583,
                                                "isConstant": false,
                                                "isLValue": true,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberName": "collateral",
                                                "nodeType": "MemberAccess",
                                                "referencedDeclaration": 2143,
                                                "src": "10904:16:5",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            },
                                            "nodeType": "VariableDeclarationStatement",
                                            "src": "10883:37:5"
                                        },
                                        {
                                            "assignments": [
                                                2586
                                            ],
                                            "declarations": [
                                                {
                                                    "constant": false,
                                                    "id": 2586,
                                                    "mutability": "mutable",
                                                    "name": "currency",
                                                    "nodeType": "VariableDeclaration",
                                                    "scope": 2653,
                                                    "src": "10931:15:5",
                                                    "stateVariable": false,
                                                    "storageLocation": "default",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_contract$_IERC20_$2809",
                                                        "typeString": "contract IERC20"
                                                    },
                                                    "typeName": {
                                                        "id": 2585,
                                                        "name": "IERC20",
                                                        "nodeType": "UserDefinedTypeName",
                                                        "referencedDeclaration": 2809,
                                                        "src": "10931:6:5",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_contract$_IERC20_$2809",
                                                            "typeString": "contract IERC20"
                                                        }
                                                    },
                                                    "visibility": "internal"
                                                }
                                            ],
                                            "id": 2591,
                                            "initialValue": {
                                                "arguments": [
                                                    {
                                                        "expression": {
                                                            "id": 2588,
                                                            "name": "claim",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 2575,
                                                            "src": "10956:5:5",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_struct$_Claim_$2148_memory_ptr",
                                                                "typeString": "struct ERC20Recoverable.Claim memory"
                                                            }
                                                        },
                                                        "id": 2589,
                                                        "isConstant": false,
                                                        "isLValue": true,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "memberName": "currencyUsed",
                                                        "nodeType": "MemberAccess",
                                                        "referencedDeclaration": 2147,
                                                        "src": "10956:18:5",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        }
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        }
                                                    ],
                                                    "id": 2587,
                                                    "name": "IERC20",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 2809,
                                                    "src": "10949:6:5",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_type$_t_contract$_IERC20_$2809_$",
                                                        "typeString": "type(contract IERC20)"
                                                    }
                                                },
                                                "id": 2590,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "typeConversion",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "10949:26:5",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_contract$_IERC20_$2809",
                                                    "typeString": "contract IERC20"
                                                }
                                            },
                                            "nodeType": "VariableDeclarationStatement",
                                            "src": "10931:44:5"
                                        },
                                        {
                                            "expression": {
                                                "arguments": [
                                                    {
                                                        "commonType": {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        },
                                                        "id": 2595,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "leftExpression": {
                                                            "id": 2593,
                                                            "name": "collateral",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 2581,
                                                            "src": "10994:10:5",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_uint256",
                                                                "typeString": "uint256"
                                                            }
                                                        },
                                                        "nodeType": "BinaryOperation",
                                                        "operator": "!=",
                                                        "rightExpression": {
                                                            "hexValue": "30",
                                                            "id": 2594,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": true,
                                                            "kind": "number",
                                                            "lValueRequested": false,
                                                            "nodeType": "Literal",
                                                            "src": "11008:1:5",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_rational_0_by_1",
                                                                "typeString": "int_const 0"
                                                            },
                                                            "value": "0"
                                                        },
                                                        "src": "10994:15:5",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_bool",
                                                            "typeString": "bool"
                                                        }
                                                    },
                                                    {
                                                        "hexValue": "4e6f20636c61696d20666f756e64",
                                                        "id": 2596,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": true,
                                                        "kind": "string",
                                                        "lValueRequested": false,
                                                        "nodeType": "Literal",
                                                        "src": "11011:16:5",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_stringliteral_476d33eaff32de8270607457d6e4e606a2e8598a850ec92a3d443d6dfc304161",
                                                            "typeString": "literal_string \"No claim found\""
                                                        },
                                                        "value": "No claim found"
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_bool",
                                                            "typeString": "bool"
                                                        },
                                                        {
                                                            "typeIdentifier": "t_stringliteral_476d33eaff32de8270607457d6e4e606a2e8598a850ec92a3d443d6dfc304161",
                                                            "typeString": "literal_string \"No claim found\""
                                                        }
                                                    ],
                                                    "id": 2592,
                                                    "name": "require",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [
                                                        -18,
                                                        -18
                                                    ],
                                                    "referencedDeclaration": -18,
                                                    "src": "10986:7:5",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                                        "typeString": "function (bool,string memory) pure"
                                                    }
                                                },
                                                "id": 2597,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "10986:42:5",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_tuple$__$",
                                                    "typeString": "tuple()"
                                                }
                                            },
                                            "id": 2598,
                                            "nodeType": "ExpressionStatement",
                                            "src": "10986:42:5"
                                        },
                                        {
                                            "expression": {
                                                "arguments": [
                                                    {
                                                        "commonType": {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        },
                                                        "id": 2604,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "leftExpression": {
                                                            "expression": {
                                                                "id": 2600,
                                                                "name": "claim",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [],
                                                                "referencedDeclaration": 2575,
                                                                "src": "11047:5:5",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_struct$_Claim_$2148_memory_ptr",
                                                                    "typeString": "struct ERC20Recoverable.Claim memory"
                                                                }
                                                            },
                                                            "id": 2601,
                                                            "isConstant": false,
                                                            "isLValue": true,
                                                            "isPure": false,
                                                            "lValueRequested": false,
                                                            "memberName": "claimant",
                                                            "nodeType": "MemberAccess",
                                                            "referencedDeclaration": 2141,
                                                            "src": "11047:14:5",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_address",
                                                                "typeString": "address"
                                                            }
                                                        },
                                                        "nodeType": "BinaryOperation",
                                                        "operator": "==",
                                                        "rightExpression": {
                                                            "expression": {
                                                                "id": 2602,
                                                                "name": "msg",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [],
                                                                "referencedDeclaration": -15,
                                                                "src": "11065:3:5",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_magic_message",
                                                                    "typeString": "msg"
                                                                }
                                                            },
                                                            "id": 2603,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": false,
                                                            "lValueRequested": false,
                                                            "memberName": "sender",
                                                            "nodeType": "MemberAccess",
                                                            "src": "11065:10:5",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_address_payable",
                                                                "typeString": "address payable"
                                                            }
                                                        },
                                                        "src": "11047:28:5",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_bool",
                                                            "typeString": "bool"
                                                        }
                                                    },
                                                    {
                                                        "hexValue": "4f6e6c7920636c61696d616e742063616e207265736f6c766520636c61696d",
                                                        "id": 2605,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": true,
                                                        "kind": "string",
                                                        "lValueRequested": false,
                                                        "nodeType": "Literal",
                                                        "src": "11077:33:5",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_stringliteral_09d0c84c9c72a1ec86e8a29cdb3cdcd05a44fccf8a75b9982cb7ded3e38c612c",
                                                            "typeString": "literal_string \"Only claimant can resolve claim\""
                                                        },
                                                        "value": "Only claimant can resolve claim"
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_bool",
                                                            "typeString": "bool"
                                                        },
                                                        {
                                                            "typeIdentifier": "t_stringliteral_09d0c84c9c72a1ec86e8a29cdb3cdcd05a44fccf8a75b9982cb7ded3e38c612c",
                                                            "typeString": "literal_string \"Only claimant can resolve claim\""
                                                        }
                                                    ],
                                                    "id": 2599,
                                                    "name": "require",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [
                                                        -18,
                                                        -18
                                                    ],
                                                    "referencedDeclaration": -18,
                                                    "src": "11039:7:5",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                                        "typeString": "function (bool,string memory) pure"
                                                    }
                                                },
                                                "id": 2606,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "11039:72:5",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_tuple$__$",
                                                    "typeString": "tuple()"
                                                }
                                            },
                                            "id": 2607,
                                            "nodeType": "ExpressionStatement",
                                            "src": "11039:72:5"
                                        },
                                        {
                                            "expression": {
                                                "arguments": [
                                                    {
                                                        "commonType": {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        },
                                                        "id": 2616,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "leftExpression": {
                                                            "arguments": [
                                                                {
                                                                    "id": 2612,
                                                                    "name": "claimPeriod",
                                                                    "nodeType": "Identifier",
                                                                    "overloadedDeclarations": [],
                                                                    "referencedDeclaration": 2151,
                                                                    "src": "11150:11:5",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_uint256",
                                                                        "typeString": "uint256"
                                                                    }
                                                                }
                                                            ],
                                                            "expression": {
                                                                "argumentTypes": [
                                                                    {
                                                                        "typeIdentifier": "t_uint256",
                                                                        "typeString": "uint256"
                                                                    }
                                                                ],
                                                                "expression": {
                                                                    "expression": {
                                                                        "id": 2609,
                                                                        "name": "claim",
                                                                        "nodeType": "Identifier",
                                                                        "overloadedDeclarations": [],
                                                                        "referencedDeclaration": 2575,
                                                                        "src": "11130:5:5",
                                                                        "typeDescriptions": {
                                                                            "typeIdentifier": "t_struct$_Claim_$2148_memory_ptr",
                                                                            "typeString": "struct ERC20Recoverable.Claim memory"
                                                                        }
                                                                    },
                                                                    "id": 2610,
                                                                    "isConstant": false,
                                                                    "isLValue": true,
                                                                    "isPure": false,
                                                                    "lValueRequested": false,
                                                                    "memberName": "timestamp",
                                                                    "nodeType": "MemberAccess",
                                                                    "referencedDeclaration": 2145,
                                                                    "src": "11130:15:5",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_uint256",
                                                                        "typeString": "uint256"
                                                                    }
                                                                },
                                                                "id": 2611,
                                                                "isConstant": false,
                                                                "isLValue": false,
                                                                "isPure": false,
                                                                "lValueRequested": false,
                                                                "memberName": "add",
                                                                "nodeType": "MemberAccess",
                                                                "referencedDeclaration": 2927,
                                                                "src": "11130:19:5",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                                                    "typeString": "function (uint256,uint256) pure returns (uint256)"
                                                                }
                                                            },
                                                            "id": 2613,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": false,
                                                            "kind": "functionCall",
                                                            "lValueRequested": false,
                                                            "names": [],
                                                            "nodeType": "FunctionCall",
                                                            "src": "11130:32:5",
                                                            "tryCall": false,
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_uint256",
                                                                "typeString": "uint256"
                                                            }
                                                        },
                                                        "nodeType": "BinaryOperation",
                                                        "operator": "<=",
                                                        "rightExpression": {
                                                            "expression": {
                                                                "id": 2614,
                                                                "name": "block",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [],
                                                                "referencedDeclaration": -4,
                                                                "src": "11166:5:5",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_magic_block",
                                                                    "typeString": "block"
                                                                }
                                                            },
                                                            "id": 2615,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": false,
                                                            "lValueRequested": false,
                                                            "memberName": "timestamp",
                                                            "nodeType": "MemberAccess",
                                                            "src": "11166:15:5",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_uint256",
                                                                "typeString": "uint256"
                                                            }
                                                        },
                                                        "src": "11130:51:5",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_bool",
                                                            "typeString": "bool"
                                                        }
                                                    },
                                                    {
                                                        "hexValue": "436c61696d20706572696f64206e6f74206f76657220796574",
                                                        "id": 2617,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": true,
                                                        "kind": "string",
                                                        "lValueRequested": false,
                                                        "nodeType": "Literal",
                                                        "src": "11183:27:5",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_stringliteral_0b086a8397f65ed34b32131dc0091efa5d739836df4ae1f337a5e15f66da112b",
                                                            "typeString": "literal_string \"Claim period not over yet\""
                                                        },
                                                        "value": "Claim period not over yet"
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_bool",
                                                            "typeString": "bool"
                                                        },
                                                        {
                                                            "typeIdentifier": "t_stringliteral_0b086a8397f65ed34b32131dc0091efa5d739836df4ae1f337a5e15f66da112b",
                                                            "typeString": "literal_string \"Claim period not over yet\""
                                                        }
                                                    ],
                                                    "id": 2608,
                                                    "name": "require",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [
                                                        -18,
                                                        -18
                                                    ],
                                                    "referencedDeclaration": -18,
                                                    "src": "11122:7:5",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                                        "typeString": "function (bool,string memory) pure"
                                                    }
                                                },
                                                "id": 2618,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "11122:89:5",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_tuple$__$",
                                                    "typeString": "tuple()"
                                                }
                                            },
                                            "id": 2619,
                                            "nodeType": "ExpressionStatement",
                                            "src": "11122:89:5"
                                        },
                                        {
                                            "assignments": [
                                                2621
                                            ],
                                            "declarations": [
                                                {
                                                    "constant": false,
                                                    "id": 2621,
                                                    "mutability": "mutable",
                                                    "name": "claimant",
                                                    "nodeType": "VariableDeclaration",
                                                    "scope": 2653,
                                                    "src": "11222:16:5",
                                                    "stateVariable": false,
                                                    "storageLocation": "default",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_address",
                                                        "typeString": "address"
                                                    },
                                                    "typeName": {
                                                        "id": 2620,
                                                        "name": "address",
                                                        "nodeType": "ElementaryTypeName",
                                                        "src": "11222:7:5",
                                                        "stateMutability": "nonpayable",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        }
                                                    },
                                                    "visibility": "internal"
                                                }
                                            ],
                                            "id": 2624,
                                            "initialValue": {
                                                "expression": {
                                                    "id": 2622,
                                                    "name": "claim",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 2575,
                                                    "src": "11241:5:5",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_struct$_Claim_$2148_memory_ptr",
                                                        "typeString": "struct ERC20Recoverable.Claim memory"
                                                    }
                                                },
                                                "id": 2623,
                                                "isConstant": false,
                                                "isLValue": true,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberName": "claimant",
                                                "nodeType": "MemberAccess",
                                                "referencedDeclaration": 2141,
                                                "src": "11241:14:5",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            "nodeType": "VariableDeclarationStatement",
                                            "src": "11222:33:5"
                                        },
                                        {
                                            "expression": {
                                                "id": 2628,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "nodeType": "UnaryOperation",
                                                "operator": "delete",
                                                "prefix": true,
                                                "src": "11266:26:5",
                                                "subExpression": {
                                                    "baseExpression": {
                                                        "id": 2625,
                                                        "name": "claims",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 2155,
                                                        "src": "11273:6:5",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Claim_$2148_storage_$",
                                                            "typeString": "mapping(address => struct ERC20Recoverable.Claim storage ref)"
                                                        }
                                                    },
                                                    "id": 2627,
                                                    "indexExpression": {
                                                        "id": 2626,
                                                        "name": "lostAddress",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 2571,
                                                        "src": "11280:11:5",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        }
                                                    },
                                                    "isConstant": false,
                                                    "isLValue": true,
                                                    "isPure": false,
                                                    "lValueRequested": true,
                                                    "nodeType": "IndexAccess",
                                                    "src": "11273:19:5",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_struct$_Claim_$2148_storage",
                                                        "typeString": "struct ERC20Recoverable.Claim storage ref"
                                                    }
                                                },
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_tuple$__$",
                                                    "typeString": "tuple()"
                                                }
                                            },
                                            "id": 2629,
                                            "nodeType": "ExpressionStatement",
                                            "src": "11266:26:5"
                                        },
                                        {
                                            "expression": {
                                                "arguments": [
                                                    {
                                                        "arguments": [
                                                            {
                                                                "id": 2633,
                                                                "name": "claimant",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [],
                                                                "referencedDeclaration": 2621,
                                                                "src": "11329:8:5",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_address",
                                                                    "typeString": "address"
                                                                }
                                                            },
                                                            {
                                                                "id": 2634,
                                                                "name": "collateral",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [],
                                                                "referencedDeclaration": 2581,
                                                                "src": "11339:10:5",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_uint256",
                                                                    "typeString": "uint256"
                                                                }
                                                            }
                                                        ],
                                                        "expression": {
                                                            "argumentTypes": [
                                                                {
                                                                    "typeIdentifier": "t_address",
                                                                    "typeString": "address"
                                                                },
                                                                {
                                                                    "typeIdentifier": "t_uint256",
                                                                    "typeString": "uint256"
                                                                }
                                                            ],
                                                            "expression": {
                                                                "id": 2631,
                                                                "name": "currency",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [],
                                                                "referencedDeclaration": 2586,
                                                                "src": "11311:8:5",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_contract$_IERC20_$2809",
                                                                    "typeString": "contract IERC20"
                                                                }
                                                            },
                                                            "id": 2632,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": false,
                                                            "lValueRequested": false,
                                                            "memberName": "transfer",
                                                            "nodeType": "MemberAccess",
                                                            "referencedDeclaration": 2758,
                                                            "src": "11311:17:5",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                                                "typeString": "function (address,uint256) external returns (bool)"
                                                            }
                                                        },
                                                        "id": 2635,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "kind": "functionCall",
                                                        "lValueRequested": false,
                                                        "names": [],
                                                        "nodeType": "FunctionCall",
                                                        "src": "11311:39:5",
                                                        "tryCall": false,
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_bool",
                                                            "typeString": "bool"
                                                        }
                                                    },
                                                    {
                                                        "hexValue": "436f6c6c61746572616c207472616e73666572206661696c6564",
                                                        "id": 2636,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": true,
                                                        "kind": "string",
                                                        "lValueRequested": false,
                                                        "nodeType": "Literal",
                                                        "src": "11352:28:5",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_stringliteral_6688cb8a28c83c825d376ee3aee513c2b794dfe9908b9522640403cf6a3f042e",
                                                            "typeString": "literal_string \"Collateral transfer failed\""
                                                        },
                                                        "value": "Collateral transfer failed"
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_bool",
                                                            "typeString": "bool"
                                                        },
                                                        {
                                                            "typeIdentifier": "t_stringliteral_6688cb8a28c83c825d376ee3aee513c2b794dfe9908b9522640403cf6a3f042e",
                                                            "typeString": "literal_string \"Collateral transfer failed\""
                                                        }
                                                    ],
                                                    "id": 2630,
                                                    "name": "require",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [
                                                        -18,
                                                        -18
                                                    ],
                                                    "referencedDeclaration": -18,
                                                    "src": "11303:7:5",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                                        "typeString": "function (bool,string memory) pure"
                                                    }
                                                },
                                                "id": 2637,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "11303:78:5",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_tuple$__$",
                                                    "typeString": "tuple()"
                                                }
                                            },
                                            "id": 2638,
                                            "nodeType": "ExpressionStatement",
                                            "src": "11303:78:5"
                                        },
                                        {
                                            "expression": {
                                                "arguments": [
                                                    {
                                                        "id": 2640,
                                                        "name": "lostAddress",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 2571,
                                                        "src": "11402:11:5",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        }
                                                    },
                                                    {
                                                        "id": 2641,
                                                        "name": "claimant",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 2621,
                                                        "src": "11415:8:5",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        }
                                                    },
                                                    {
                                                        "arguments": [
                                                            {
                                                                "id": 2643,
                                                                "name": "lostAddress",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [],
                                                                "referencedDeclaration": 2571,
                                                                "src": "11435:11:5",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_address",
                                                                    "typeString": "address"
                                                                }
                                                            }
                                                        ],
                                                        "expression": {
                                                            "argumentTypes": [
                                                                {
                                                                    "typeIdentifier": "t_address",
                                                                    "typeString": "address"
                                                                }
                                                            ],
                                                            "id": 2642,
                                                            "name": "balanceOf",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 774,
                                                            "src": "11425:9:5",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                                                                "typeString": "function (address) view returns (uint256)"
                                                            }
                                                        },
                                                        "id": 2644,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "kind": "functionCall",
                                                        "lValueRequested": false,
                                                        "names": [],
                                                        "nodeType": "FunctionCall",
                                                        "src": "11425:22:5",
                                                        "tryCall": false,
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        }
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        },
                                                        {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        },
                                                        {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        }
                                                    ],
                                                    "id": 2639,
                                                    "name": "_transfer",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 986,
                                                    "src": "11392:9:5",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                                                        "typeString": "function (address,address,uint256)"
                                                    }
                                                },
                                                "id": 2645,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "11392:56:5",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_tuple$__$",
                                                    "typeString": "tuple()"
                                                }
                                            },
                                            "id": 2646,
                                            "nodeType": "ExpressionStatement",
                                            "src": "11392:56:5"
                                        },
                                        {
                                            "eventCall": {
                                                "arguments": [
                                                    {
                                                        "id": 2648,
                                                        "name": "lostAddress",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 2571,
                                                        "src": "11478:11:5",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        }
                                                    },
                                                    {
                                                        "id": 2649,
                                                        "name": "claimant",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 2621,
                                                        "src": "11491:8:5",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        }
                                                    },
                                                    {
                                                        "id": 2650,
                                                        "name": "collateral",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 2581,
                                                        "src": "11501:10:5",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        }
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        },
                                                        {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        },
                                                        {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        }
                                                    ],
                                                    "id": 2647,
                                                    "name": "ClaimResolved",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 2326,
                                                    "src": "11464:13:5",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                                                        "typeString": "function (address,address,uint256)"
                                                    }
                                                },
                                                "id": 2651,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "11464:48:5",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_tuple$__$",
                                                    "typeString": "tuple()"
                                                }
                                            },
                                            "id": 2652,
                                            "nodeType": "EmitStatement",
                                            "src": "11459:53:5"
                                        }
                                    ]
                                },
                                "documentation": {
                                    "id": 2569,
                                    "nodeType": "StructuredDocumentation",
                                    "src": "10597:173:5",
                                    "text": " After the claim period has passed, the claimant can call this function to send the\n tokens on the lost address as well as the collateral to himself."
                                },
                                "functionSelector": "0cd865ec",
                                "id": 2654,
                                "implemented": true,
                                "kind": "function",
                                "modifiers": [],
                                "name": "recover",
                                "nodeType": "FunctionDefinition",
                                "parameters": {
                                    "id": 2572,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 2571,
                                            "mutability": "mutable",
                                            "name": "lostAddress",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 2654,
                                            "src": "10793:19:5",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            },
                                            "typeName": {
                                                "id": 2570,
                                                "name": "address",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "10793:7:5",
                                                "stateMutability": "nonpayable",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "10792:21:5"
                                },
                                "returnParameters": {
                                    "id": 2573,
                                    "nodeType": "ParameterList",
                                    "parameters": [],
                                    "src": "10821:0:5"
                                },
                                "scope": 2716,
                                "src": "10776:744:5",
                                "stateMutability": "nonpayable",
                                "virtual": false,
                                "visibility": "public"
                            },
                            {
                                "body": {
                                    "id": 2714,
                                    "nodeType": "Block",
                                    "src": "11710:465:5",
                                    "statements": [
                                        {
                                            "expression": {
                                                "arguments": [
                                                    {
                                                        "commonType": {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        },
                                                        "id": 2665,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "leftExpression": {
                                                            "expression": {
                                                                "id": 2661,
                                                                "name": "msg",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [],
                                                                "referencedDeclaration": -15,
                                                                "src": "11729:3:5",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_magic_message",
                                                                    "typeString": "msg"
                                                                }
                                                            },
                                                            "id": 2662,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": false,
                                                            "lValueRequested": false,
                                                            "memberName": "sender",
                                                            "nodeType": "MemberAccess",
                                                            "src": "11729:10:5",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_address_payable",
                                                                "typeString": "address payable"
                                                            }
                                                        },
                                                        "nodeType": "BinaryOperation",
                                                        "operator": "==",
                                                        "rightExpression": {
                                                            "arguments": [],
                                                            "expression": {
                                                                "argumentTypes": [],
                                                                "id": 2663,
                                                                "name": "getClaimDeleter",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [],
                                                                "referencedDeclaration": 2239,
                                                                "src": "11743:15:5",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                                                    "typeString": "function () view returns (address)"
                                                                }
                                                            },
                                                            "id": 2664,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": false,
                                                            "kind": "functionCall",
                                                            "lValueRequested": false,
                                                            "names": [],
                                                            "nodeType": "FunctionCall",
                                                            "src": "11743:17:5",
                                                            "tryCall": false,
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_address",
                                                                "typeString": "address"
                                                            }
                                                        },
                                                        "src": "11729:31:5",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_bool",
                                                            "typeString": "bool"
                                                        }
                                                    },
                                                    {
                                                        "hexValue": "596f752063616e6e6f742064656c65746520636c61696d73",
                                                        "id": 2666,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": true,
                                                        "kind": "string",
                                                        "lValueRequested": false,
                                                        "nodeType": "Literal",
                                                        "src": "11762:26:5",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_stringliteral_f85e00c6d224c39cdccba2eee4e2c30954dbeeb30c7961c0595901a12c28c67b",
                                                            "typeString": "literal_string \"You cannot delete claims\""
                                                        },
                                                        "value": "You cannot delete claims"
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_bool",
                                                            "typeString": "bool"
                                                        },
                                                        {
                                                            "typeIdentifier": "t_stringliteral_f85e00c6d224c39cdccba2eee4e2c30954dbeeb30c7961c0595901a12c28c67b",
                                                            "typeString": "literal_string \"You cannot delete claims\""
                                                        }
                                                    ],
                                                    "id": 2660,
                                                    "name": "require",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [
                                                        -18,
                                                        -18
                                                    ],
                                                    "referencedDeclaration": -18,
                                                    "src": "11721:7:5",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                                        "typeString": "function (bool,string memory) pure"
                                                    }
                                                },
                                                "id": 2667,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "11721:68:5",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_tuple$__$",
                                                    "typeString": "tuple()"
                                                }
                                            },
                                            "id": 2668,
                                            "nodeType": "ExpressionStatement",
                                            "src": "11721:68:5"
                                        },
                                        {
                                            "assignments": [
                                                2670
                                            ],
                                            "declarations": [
                                                {
                                                    "constant": false,
                                                    "id": 2670,
                                                    "mutability": "mutable",
                                                    "name": "claim",
                                                    "nodeType": "VariableDeclaration",
                                                    "scope": 2714,
                                                    "src": "11800:18:5",
                                                    "stateVariable": false,
                                                    "storageLocation": "memory",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_struct$_Claim_$2148_memory_ptr",
                                                        "typeString": "struct ERC20Recoverable.Claim"
                                                    },
                                                    "typeName": {
                                                        "id": 2669,
                                                        "name": "Claim",
                                                        "nodeType": "UserDefinedTypeName",
                                                        "referencedDeclaration": 2148,
                                                        "src": "11800:5:5",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_struct$_Claim_$2148_storage_ptr",
                                                            "typeString": "struct ERC20Recoverable.Claim"
                                                        }
                                                    },
                                                    "visibility": "internal"
                                                }
                                            ],
                                            "id": 2674,
                                            "initialValue": {
                                                "baseExpression": {
                                                    "id": 2671,
                                                    "name": "claims",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 2155,
                                                    "src": "11821:6:5",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Claim_$2148_storage_$",
                                                        "typeString": "mapping(address => struct ERC20Recoverable.Claim storage ref)"
                                                    }
                                                },
                                                "id": 2673,
                                                "indexExpression": {
                                                    "id": 2672,
                                                    "name": "lostAddress",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 2657,
                                                    "src": "11828:11:5",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_address",
                                                        "typeString": "address"
                                                    }
                                                },
                                                "isConstant": false,
                                                "isLValue": true,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "nodeType": "IndexAccess",
                                                "src": "11821:19:5",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_struct$_Claim_$2148_storage",
                                                    "typeString": "struct ERC20Recoverable.Claim storage ref"
                                                }
                                            },
                                            "nodeType": "VariableDeclarationStatement",
                                            "src": "11800:40:5"
                                        },
                                        {
                                            "assignments": [
                                                2676
                                            ],
                                            "declarations": [
                                                {
                                                    "constant": false,
                                                    "id": 2676,
                                                    "mutability": "mutable",
                                                    "name": "currency",
                                                    "nodeType": "VariableDeclaration",
                                                    "scope": 2714,
                                                    "src": "11851:15:5",
                                                    "stateVariable": false,
                                                    "storageLocation": "default",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_contract$_IERC20_$2809",
                                                        "typeString": "contract IERC20"
                                                    },
                                                    "typeName": {
                                                        "id": 2675,
                                                        "name": "IERC20",
                                                        "nodeType": "UserDefinedTypeName",
                                                        "referencedDeclaration": 2809,
                                                        "src": "11851:6:5",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_contract$_IERC20_$2809",
                                                            "typeString": "contract IERC20"
                                                        }
                                                    },
                                                    "visibility": "internal"
                                                }
                                            ],
                                            "id": 2681,
                                            "initialValue": {
                                                "arguments": [
                                                    {
                                                        "expression": {
                                                            "id": 2678,
                                                            "name": "claim",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 2670,
                                                            "src": "11876:5:5",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_struct$_Claim_$2148_memory_ptr",
                                                                "typeString": "struct ERC20Recoverable.Claim memory"
                                                            }
                                                        },
                                                        "id": 2679,
                                                        "isConstant": false,
                                                        "isLValue": true,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "memberName": "currencyUsed",
                                                        "nodeType": "MemberAccess",
                                                        "referencedDeclaration": 2147,
                                                        "src": "11876:18:5",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        }
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        }
                                                    ],
                                                    "id": 2677,
                                                    "name": "IERC20",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 2809,
                                                    "src": "11869:6:5",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_type$_t_contract$_IERC20_$2809_$",
                                                        "typeString": "type(contract IERC20)"
                                                    }
                                                },
                                                "id": 2680,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "typeConversion",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "11869:26:5",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_contract$_IERC20_$2809",
                                                    "typeString": "contract IERC20"
                                                }
                                            },
                                            "nodeType": "VariableDeclarationStatement",
                                            "src": "11851:44:5"
                                        },
                                        {
                                            "expression": {
                                                "arguments": [
                                                    {
                                                        "commonType": {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        },
                                                        "id": 2686,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "leftExpression": {
                                                            "expression": {
                                                                "id": 2683,
                                                                "name": "claim",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [],
                                                                "referencedDeclaration": 2670,
                                                                "src": "11914:5:5",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_struct$_Claim_$2148_memory_ptr",
                                                                    "typeString": "struct ERC20Recoverable.Claim memory"
                                                                }
                                                            },
                                                            "id": 2684,
                                                            "isConstant": false,
                                                            "isLValue": true,
                                                            "isPure": false,
                                                            "lValueRequested": false,
                                                            "memberName": "collateral",
                                                            "nodeType": "MemberAccess",
                                                            "referencedDeclaration": 2143,
                                                            "src": "11914:16:5",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_uint256",
                                                                "typeString": "uint256"
                                                            }
                                                        },
                                                        "nodeType": "BinaryOperation",
                                                        "operator": "!=",
                                                        "rightExpression": {
                                                            "hexValue": "30",
                                                            "id": 2685,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": true,
                                                            "kind": "number",
                                                            "lValueRequested": false,
                                                            "nodeType": "Literal",
                                                            "src": "11934:1:5",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_rational_0_by_1",
                                                                "typeString": "int_const 0"
                                                            },
                                                            "value": "0"
                                                        },
                                                        "src": "11914:21:5",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_bool",
                                                            "typeString": "bool"
                                                        }
                                                    },
                                                    {
                                                        "hexValue": "4e6f20636c61696d20666f756e64",
                                                        "id": 2687,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": true,
                                                        "kind": "string",
                                                        "lValueRequested": false,
                                                        "nodeType": "Literal",
                                                        "src": "11937:16:5",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_stringliteral_476d33eaff32de8270607457d6e4e606a2e8598a850ec92a3d443d6dfc304161",
                                                            "typeString": "literal_string \"No claim found\""
                                                        },
                                                        "value": "No claim found"
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_bool",
                                                            "typeString": "bool"
                                                        },
                                                        {
                                                            "typeIdentifier": "t_stringliteral_476d33eaff32de8270607457d6e4e606a2e8598a850ec92a3d443d6dfc304161",
                                                            "typeString": "literal_string \"No claim found\""
                                                        }
                                                    ],
                                                    "id": 2682,
                                                    "name": "require",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [
                                                        -18,
                                                        -18
                                                    ],
                                                    "referencedDeclaration": -18,
                                                    "src": "11906:7:5",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                                        "typeString": "function (bool,string memory) pure"
                                                    }
                                                },
                                                "id": 2688,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "11906:48:5",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_tuple$__$",
                                                    "typeString": "tuple()"
                                                }
                                            },
                                            "id": 2689,
                                            "nodeType": "ExpressionStatement",
                                            "src": "11906:48:5"
                                        },
                                        {
                                            "expression": {
                                                "id": 2693,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "nodeType": "UnaryOperation",
                                                "operator": "delete",
                                                "prefix": true,
                                                "src": "11965:26:5",
                                                "subExpression": {
                                                    "baseExpression": {
                                                        "id": 2690,
                                                        "name": "claims",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 2155,
                                                        "src": "11972:6:5",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Claim_$2148_storage_$",
                                                            "typeString": "mapping(address => struct ERC20Recoverable.Claim storage ref)"
                                                        }
                                                    },
                                                    "id": 2692,
                                                    "indexExpression": {
                                                        "id": 2691,
                                                        "name": "lostAddress",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 2657,
                                                        "src": "11979:11:5",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        }
                                                    },
                                                    "isConstant": false,
                                                    "isLValue": true,
                                                    "isPure": false,
                                                    "lValueRequested": true,
                                                    "nodeType": "IndexAccess",
                                                    "src": "11972:19:5",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_struct$_Claim_$2148_storage",
                                                        "typeString": "struct ERC20Recoverable.Claim storage ref"
                                                    }
                                                },
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_tuple$__$",
                                                    "typeString": "tuple()"
                                                }
                                            },
                                            "id": 2694,
                                            "nodeType": "ExpressionStatement",
                                            "src": "11965:26:5"
                                        },
                                        {
                                            "expression": {
                                                "arguments": [
                                                    {
                                                        "arguments": [
                                                            {
                                                                "expression": {
                                                                    "id": 2698,
                                                                    "name": "claim",
                                                                    "nodeType": "Identifier",
                                                                    "overloadedDeclarations": [],
                                                                    "referencedDeclaration": 2670,
                                                                    "src": "12028:5:5",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_struct$_Claim_$2148_memory_ptr",
                                                                        "typeString": "struct ERC20Recoverable.Claim memory"
                                                                    }
                                                                },
                                                                "id": 2699,
                                                                "isConstant": false,
                                                                "isLValue": true,
                                                                "isPure": false,
                                                                "lValueRequested": false,
                                                                "memberName": "claimant",
                                                                "nodeType": "MemberAccess",
                                                                "referencedDeclaration": 2141,
                                                                "src": "12028:14:5",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_address",
                                                                    "typeString": "address"
                                                                }
                                                            },
                                                            {
                                                                "expression": {
                                                                    "id": 2700,
                                                                    "name": "claim",
                                                                    "nodeType": "Identifier",
                                                                    "overloadedDeclarations": [],
                                                                    "referencedDeclaration": 2670,
                                                                    "src": "12044:5:5",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_struct$_Claim_$2148_memory_ptr",
                                                                        "typeString": "struct ERC20Recoverable.Claim memory"
                                                                    }
                                                                },
                                                                "id": 2701,
                                                                "isConstant": false,
                                                                "isLValue": true,
                                                                "isPure": false,
                                                                "lValueRequested": false,
                                                                "memberName": "collateral",
                                                                "nodeType": "MemberAccess",
                                                                "referencedDeclaration": 2143,
                                                                "src": "12044:16:5",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_uint256",
                                                                    "typeString": "uint256"
                                                                }
                                                            }
                                                        ],
                                                        "expression": {
                                                            "argumentTypes": [
                                                                {
                                                                    "typeIdentifier": "t_address",
                                                                    "typeString": "address"
                                                                },
                                                                {
                                                                    "typeIdentifier": "t_uint256",
                                                                    "typeString": "uint256"
                                                                }
                                                            ],
                                                            "expression": {
                                                                "id": 2696,
                                                                "name": "currency",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [],
                                                                "referencedDeclaration": 2676,
                                                                "src": "12010:8:5",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_contract$_IERC20_$2809",
                                                                    "typeString": "contract IERC20"
                                                                }
                                                            },
                                                            "id": 2697,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": false,
                                                            "lValueRequested": false,
                                                            "memberName": "transfer",
                                                            "nodeType": "MemberAccess",
                                                            "referencedDeclaration": 2758,
                                                            "src": "12010:17:5",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                                                "typeString": "function (address,uint256) external returns (bool)"
                                                            }
                                                        },
                                                        "id": 2702,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "kind": "functionCall",
                                                        "lValueRequested": false,
                                                        "names": [],
                                                        "nodeType": "FunctionCall",
                                                        "src": "12010:51:5",
                                                        "tryCall": false,
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_bool",
                                                            "typeString": "bool"
                                                        }
                                                    },
                                                    {
                                                        "hexValue": "436f6c6c61746572616c207472616e73666572206661696c6564",
                                                        "id": 2703,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": true,
                                                        "kind": "string",
                                                        "lValueRequested": false,
                                                        "nodeType": "Literal",
                                                        "src": "12063:28:5",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_stringliteral_6688cb8a28c83c825d376ee3aee513c2b794dfe9908b9522640403cf6a3f042e",
                                                            "typeString": "literal_string \"Collateral transfer failed\""
                                                        },
                                                        "value": "Collateral transfer failed"
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_bool",
                                                            "typeString": "bool"
                                                        },
                                                        {
                                                            "typeIdentifier": "t_stringliteral_6688cb8a28c83c825d376ee3aee513c2b794dfe9908b9522640403cf6a3f042e",
                                                            "typeString": "literal_string \"Collateral transfer failed\""
                                                        }
                                                    ],
                                                    "id": 2695,
                                                    "name": "require",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [
                                                        -18,
                                                        -18
                                                    ],
                                                    "referencedDeclaration": -18,
                                                    "src": "12002:7:5",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                                        "typeString": "function (bool,string memory) pure"
                                                    }
                                                },
                                                "id": 2704,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "12002:90:5",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_tuple$__$",
                                                    "typeString": "tuple()"
                                                }
                                            },
                                            "id": 2705,
                                            "nodeType": "ExpressionStatement",
                                            "src": "12002:90:5"
                                        },
                                        {
                                            "eventCall": {
                                                "arguments": [
                                                    {
                                                        "id": 2707,
                                                        "name": "lostAddress",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 2657,
                                                        "src": "12121:11:5",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        }
                                                    },
                                                    {
                                                        "expression": {
                                                            "id": 2708,
                                                            "name": "claim",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 2670,
                                                            "src": "12134:5:5",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_struct$_Claim_$2148_memory_ptr",
                                                                "typeString": "struct ERC20Recoverable.Claim memory"
                                                            }
                                                        },
                                                        "id": 2709,
                                                        "isConstant": false,
                                                        "isLValue": true,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "memberName": "claimant",
                                                        "nodeType": "MemberAccess",
                                                        "referencedDeclaration": 2141,
                                                        "src": "12134:14:5",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        }
                                                    },
                                                    {
                                                        "expression": {
                                                            "id": 2710,
                                                            "name": "claim",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 2670,
                                                            "src": "12150:5:5",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_struct$_Claim_$2148_memory_ptr",
                                                                "typeString": "struct ERC20Recoverable.Claim memory"
                                                            }
                                                        },
                                                        "id": 2711,
                                                        "isConstant": false,
                                                        "isLValue": true,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "memberName": "collateral",
                                                        "nodeType": "MemberAccess",
                                                        "referencedDeclaration": 2143,
                                                        "src": "12150:16:5",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        }
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        },
                                                        {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        },
                                                        {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        }
                                                    ],
                                                    "id": 2706,
                                                    "name": "ClaimDeleted",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 2318,
                                                    "src": "12108:12:5",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                                                        "typeString": "function (address,address,uint256)"
                                                    }
                                                },
                                                "id": 2712,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "12108:59:5",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_tuple$__$",
                                                    "typeString": "tuple()"
                                                }
                                            },
                                            "id": 2713,
                                            "nodeType": "EmitStatement",
                                            "src": "12103:64:5"
                                        }
                                    ]
                                },
                                "documentation": {
                                    "id": 2655,
                                    "nodeType": "StructuredDocumentation",
                                    "src": "11528:127:5",
                                    "text": " This function is to be executed by the claim deleter only in case a dispute needs to be resolved manually."
                                },
                                "functionSelector": "32a7ae95",
                                "id": 2715,
                                "implemented": true,
                                "kind": "function",
                                "modifiers": [],
                                "name": "deleteClaim",
                                "nodeType": "FunctionDefinition",
                                "parameters": {
                                    "id": 2658,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 2657,
                                            "mutability": "mutable",
                                            "name": "lostAddress",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 2715,
                                            "src": "11682:19:5",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            },
                                            "typeName": {
                                                "id": 2656,
                                                "name": "address",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "11682:7:5",
                                                "stateMutability": "nonpayable",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "11681:21:5"
                                },
                                "returnParameters": {
                                    "id": 2659,
                                    "nodeType": "ParameterList",
                                    "parameters": [],
                                    "src": "11710:0:5"
                                },
                                "scope": 2716,
                                "src": "11661:514:5",
                                "stateMutability": "nonpayable",
                                "virtual": false,
                                "visibility": "public"
                            }
                        ],
                        "scope": 2717,
                        "src": "2577:9603:5"
                    }
                ],
                "src": "1336:10844:5"
            },
            "id": 5
        },
        "c:/Users/luziu/Documents/aktionariat/contracts/src/IERC20.sol": {
            "ast": {
                "absolutePath": "c:/Users/luziu/Documents/aktionariat/contracts/src/IERC20.sol",
                "exportedSymbols": {
                    "IERC20": [
                        2809
                    ]
                },
                "id": 2810,
                "license": "MIT",
                "nodeType": "SourceUnit",
                "nodes": [
                    {
                        "id": 2718,
                        "literals": [
                            "solidity",
                            ">=",
                            "0.7"
                        ],
                        "nodeType": "PragmaDirective",
                        "src": "93:22:6"
                    },
                    {
                        "abstract": false,
                        "baseContracts": [],
                        "contractDependencies": [],
                        "contractKind": "interface",
                        "documentation": {
                            "id": 2719,
                            "nodeType": "StructuredDocumentation",
                            "src": "119:153:6",
                            "text": " @dev Interface of the ERC20 standard as defined in the EIP. Does not include\n the optional functions; to access them see `ERC20Detailed`."
                        },
                        "fullyImplemented": false,
                        "id": 2809,
                        "linearizedBaseContracts": [
                            2809
                        ],
                        "name": "IERC20",
                        "nodeType": "ContractDefinition",
                        "nodes": [
                            {
                                "functionSelector": "06fdde03",
                                "id": 2724,
                                "implemented": false,
                                "kind": "function",
                                "modifiers": [],
                                "name": "name",
                                "nodeType": "FunctionDefinition",
                                "parameters": {
                                    "id": 2720,
                                    "nodeType": "ParameterList",
                                    "parameters": [],
                                    "src": "342:2:6"
                                },
                                "returnParameters": {
                                    "id": 2723,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 2722,
                                            "mutability": "mutable",
                                            "name": "",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 2724,
                                            "src": "368:13:6",
                                            "stateVariable": false,
                                            "storageLocation": "memory",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_string_memory_ptr",
                                                "typeString": "string"
                                            },
                                            "typeName": {
                                                "id": 2721,
                                                "name": "string",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "368:6:6",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_string_storage_ptr",
                                                    "typeString": "string"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "367:15:6"
                                },
                                "scope": 2809,
                                "src": "329:54:6",
                                "stateMutability": "view",
                                "virtual": false,
                                "visibility": "external"
                            },
                            {
                                "functionSelector": "95d89b41",
                                "id": 2729,
                                "implemented": false,
                                "kind": "function",
                                "modifiers": [],
                                "name": "symbol",
                                "nodeType": "FunctionDefinition",
                                "parameters": {
                                    "id": 2725,
                                    "nodeType": "ParameterList",
                                    "parameters": [],
                                    "src": "406:2:6"
                                },
                                "returnParameters": {
                                    "id": 2728,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 2727,
                                            "mutability": "mutable",
                                            "name": "",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 2729,
                                            "src": "432:13:6",
                                            "stateVariable": false,
                                            "storageLocation": "memory",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_string_memory_ptr",
                                                "typeString": "string"
                                            },
                                            "typeName": {
                                                "id": 2726,
                                                "name": "string",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "432:6:6",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_string_storage_ptr",
                                                    "typeString": "string"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "431:15:6"
                                },
                                "scope": 2809,
                                "src": "391:56:6",
                                "stateMutability": "view",
                                "virtual": false,
                                "visibility": "external"
                            },
                            {
                                "functionSelector": "313ce567",
                                "id": 2734,
                                "implemented": false,
                                "kind": "function",
                                "modifiers": [],
                                "name": "decimals",
                                "nodeType": "FunctionDefinition",
                                "parameters": {
                                    "id": 2730,
                                    "nodeType": "ParameterList",
                                    "parameters": [],
                                    "src": "472:2:6"
                                },
                                "returnParameters": {
                                    "id": 2733,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 2732,
                                            "mutability": "mutable",
                                            "name": "",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 2734,
                                            "src": "498:5:6",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint8",
                                                "typeString": "uint8"
                                            },
                                            "typeName": {
                                                "id": 2731,
                                                "name": "uint8",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "498:5:6",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint8",
                                                    "typeString": "uint8"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "497:7:6"
                                },
                                "scope": 2809,
                                "src": "455:50:6",
                                "stateMutability": "view",
                                "virtual": false,
                                "visibility": "external"
                            },
                            {
                                "documentation": {
                                    "id": 2735,
                                    "nodeType": "StructuredDocumentation",
                                    "src": "513:68:6",
                                    "text": " @dev Returns the amount of tokens in existence."
                                },
                                "functionSelector": "18160ddd",
                                "id": 2740,
                                "implemented": false,
                                "kind": "function",
                                "modifiers": [],
                                "name": "totalSupply",
                                "nodeType": "FunctionDefinition",
                                "parameters": {
                                    "id": 2736,
                                    "nodeType": "ParameterList",
                                    "parameters": [],
                                    "src": "607:2:6"
                                },
                                "returnParameters": {
                                    "id": 2739,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 2738,
                                            "mutability": "mutable",
                                            "name": "",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 2740,
                                            "src": "633:7:6",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            },
                                            "typeName": {
                                                "id": 2737,
                                                "name": "uint256",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "633:7:6",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "632:9:6"
                                },
                                "scope": 2809,
                                "src": "587:55:6",
                                "stateMutability": "view",
                                "virtual": false,
                                "visibility": "external"
                            },
                            {
                                "documentation": {
                                    "id": 2741,
                                    "nodeType": "StructuredDocumentation",
                                    "src": "650:74:6",
                                    "text": " @dev Returns the amount of tokens owned by `account`."
                                },
                                "functionSelector": "70a08231",
                                "id": 2748,
                                "implemented": false,
                                "kind": "function",
                                "modifiers": [],
                                "name": "balanceOf",
                                "nodeType": "FunctionDefinition",
                                "parameters": {
                                    "id": 2744,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 2743,
                                            "mutability": "mutable",
                                            "name": "account",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 2748,
                                            "src": "749:15:6",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            },
                                            "typeName": {
                                                "id": 2742,
                                                "name": "address",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "749:7:6",
                                                "stateMutability": "nonpayable",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "748:17:6"
                                },
                                "returnParameters": {
                                    "id": 2747,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 2746,
                                            "mutability": "mutable",
                                            "name": "",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 2748,
                                            "src": "789:7:6",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            },
                                            "typeName": {
                                                "id": 2745,
                                                "name": "uint256",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "789:7:6",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "788:9:6"
                                },
                                "scope": 2809,
                                "src": "730:68:6",
                                "stateMutability": "view",
                                "virtual": false,
                                "visibility": "external"
                            },
                            {
                                "documentation": {
                                    "id": 2749,
                                    "nodeType": "StructuredDocumentation",
                                    "src": "806:215:6",
                                    "text": " @dev Moves `amount` tokens from the caller's account to `recipient`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a `Transfer` event."
                                },
                                "functionSelector": "a9059cbb",
                                "id": 2758,
                                "implemented": false,
                                "kind": "function",
                                "modifiers": [],
                                "name": "transfer",
                                "nodeType": "FunctionDefinition",
                                "parameters": {
                                    "id": 2754,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 2751,
                                            "mutability": "mutable",
                                            "name": "recipient",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 2758,
                                            "src": "1045:17:6",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            },
                                            "typeName": {
                                                "id": 2750,
                                                "name": "address",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "1045:7:6",
                                                "stateMutability": "nonpayable",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            "visibility": "internal"
                                        },
                                        {
                                            "constant": false,
                                            "id": 2753,
                                            "mutability": "mutable",
                                            "name": "amount",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 2758,
                                            "src": "1064:14:6",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            },
                                            "typeName": {
                                                "id": 2752,
                                                "name": "uint256",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "1064:7:6",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "1044:35:6"
                                },
                                "returnParameters": {
                                    "id": 2757,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 2756,
                                            "mutability": "mutable",
                                            "name": "",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 2758,
                                            "src": "1098:4:6",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_bool",
                                                "typeString": "bool"
                                            },
                                            "typeName": {
                                                "id": 2755,
                                                "name": "bool",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "1098:4:6",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "1097:6:6"
                                },
                                "scope": 2809,
                                "src": "1027:77:6",
                                "stateMutability": "nonpayable",
                                "virtual": false,
                                "visibility": "external"
                            },
                            {
                                "documentation": {
                                    "id": 2759,
                                    "nodeType": "StructuredDocumentation",
                                    "src": "1112:270:6",
                                    "text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through `transferFrom`. This is\n zero by default.\n This value changes when `approve` or `transferFrom` are called."
                                },
                                "functionSelector": "dd62ed3e",
                                "id": 2768,
                                "implemented": false,
                                "kind": "function",
                                "modifiers": [],
                                "name": "allowance",
                                "nodeType": "FunctionDefinition",
                                "parameters": {
                                    "id": 2764,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 2761,
                                            "mutability": "mutable",
                                            "name": "owner",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 2768,
                                            "src": "1407:13:6",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            },
                                            "typeName": {
                                                "id": 2760,
                                                "name": "address",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "1407:7:6",
                                                "stateMutability": "nonpayable",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            "visibility": "internal"
                                        },
                                        {
                                            "constant": false,
                                            "id": 2763,
                                            "mutability": "mutable",
                                            "name": "spender",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 2768,
                                            "src": "1422:15:6",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            },
                                            "typeName": {
                                                "id": 2762,
                                                "name": "address",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "1422:7:6",
                                                "stateMutability": "nonpayable",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "1406:32:6"
                                },
                                "returnParameters": {
                                    "id": 2767,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 2766,
                                            "mutability": "mutable",
                                            "name": "",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 2768,
                                            "src": "1462:7:6",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            },
                                            "typeName": {
                                                "id": 2765,
                                                "name": "uint256",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "1462:7:6",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "1461:9:6"
                                },
                                "scope": 2809,
                                "src": "1388:83:6",
                                "stateMutability": "view",
                                "virtual": false,
                                "visibility": "external"
                            },
                            {
                                "documentation": {
                                    "id": 2769,
                                    "nodeType": "StructuredDocumentation",
                                    "src": "1479:646:6",
                                    "text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n > Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an `Approval` event."
                                },
                                "functionSelector": "095ea7b3",
                                "id": 2778,
                                "implemented": false,
                                "kind": "function",
                                "modifiers": [],
                                "name": "approve",
                                "nodeType": "FunctionDefinition",
                                "parameters": {
                                    "id": 2774,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 2771,
                                            "mutability": "mutable",
                                            "name": "spender",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 2778,
                                            "src": "2148:15:6",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            },
                                            "typeName": {
                                                "id": 2770,
                                                "name": "address",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "2148:7:6",
                                                "stateMutability": "nonpayable",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            "visibility": "internal"
                                        },
                                        {
                                            "constant": false,
                                            "id": 2773,
                                            "mutability": "mutable",
                                            "name": "amount",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 2778,
                                            "src": "2165:14:6",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            },
                                            "typeName": {
                                                "id": 2772,
                                                "name": "uint256",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "2165:7:6",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "2147:33:6"
                                },
                                "returnParameters": {
                                    "id": 2777,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 2776,
                                            "mutability": "mutable",
                                            "name": "",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 2778,
                                            "src": "2199:4:6",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_bool",
                                                "typeString": "bool"
                                            },
                                            "typeName": {
                                                "id": 2775,
                                                "name": "bool",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "2199:4:6",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "2198:6:6"
                                },
                                "scope": 2809,
                                "src": "2131:74:6",
                                "stateMutability": "nonpayable",
                                "virtual": false,
                                "visibility": "external"
                            },
                            {
                                "documentation": {
                                    "id": 2779,
                                    "nodeType": "StructuredDocumentation",
                                    "src": "2213:304:6",
                                    "text": " @dev Moves `amount` tokens from `sender` to `recipient` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a `Transfer` event."
                                },
                                "functionSelector": "23b872dd",
                                "id": 2790,
                                "implemented": false,
                                "kind": "function",
                                "modifiers": [],
                                "name": "transferFrom",
                                "nodeType": "FunctionDefinition",
                                "parameters": {
                                    "id": 2786,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 2781,
                                            "mutability": "mutable",
                                            "name": "sender",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 2790,
                                            "src": "2545:14:6",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            },
                                            "typeName": {
                                                "id": 2780,
                                                "name": "address",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "2545:7:6",
                                                "stateMutability": "nonpayable",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            "visibility": "internal"
                                        },
                                        {
                                            "constant": false,
                                            "id": 2783,
                                            "mutability": "mutable",
                                            "name": "recipient",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 2790,
                                            "src": "2561:17:6",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            },
                                            "typeName": {
                                                "id": 2782,
                                                "name": "address",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "2561:7:6",
                                                "stateMutability": "nonpayable",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            "visibility": "internal"
                                        },
                                        {
                                            "constant": false,
                                            "id": 2785,
                                            "mutability": "mutable",
                                            "name": "amount",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 2790,
                                            "src": "2580:14:6",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            },
                                            "typeName": {
                                                "id": 2784,
                                                "name": "uint256",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "2580:7:6",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "2544:51:6"
                                },
                                "returnParameters": {
                                    "id": 2789,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 2788,
                                            "mutability": "mutable",
                                            "name": "",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 2790,
                                            "src": "2614:4:6",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_bool",
                                                "typeString": "bool"
                                            },
                                            "typeName": {
                                                "id": 2787,
                                                "name": "bool",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "2614:4:6",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "2613:6:6"
                                },
                                "scope": 2809,
                                "src": "2523:97:6",
                                "stateMutability": "nonpayable",
                                "virtual": false,
                                "visibility": "external"
                            },
                            {
                                "anonymous": false,
                                "documentation": {
                                    "id": 2791,
                                    "nodeType": "StructuredDocumentation",
                                    "src": "2628:163:6",
                                    "text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
                                },
                                "id": 2799,
                                "name": "Transfer",
                                "nodeType": "EventDefinition",
                                "parameters": {
                                    "id": 2798,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 2793,
                                            "indexed": true,
                                            "mutability": "mutable",
                                            "name": "from",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 2799,
                                            "src": "2812:20:6",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            },
                                            "typeName": {
                                                "id": 2792,
                                                "name": "address",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "2812:7:6",
                                                "stateMutability": "nonpayable",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            "visibility": "internal"
                                        },
                                        {
                                            "constant": false,
                                            "id": 2795,
                                            "indexed": true,
                                            "mutability": "mutable",
                                            "name": "to",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 2799,
                                            "src": "2834:18:6",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            },
                                            "typeName": {
                                                "id": 2794,
                                                "name": "address",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "2834:7:6",
                                                "stateMutability": "nonpayable",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            "visibility": "internal"
                                        },
                                        {
                                            "constant": false,
                                            "id": 2797,
                                            "indexed": false,
                                            "mutability": "mutable",
                                            "name": "value",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 2799,
                                            "src": "2854:13:6",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            },
                                            "typeName": {
                                                "id": 2796,
                                                "name": "uint256",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "2854:7:6",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "2811:57:6"
                                },
                                "src": "2797:72:6"
                            },
                            {
                                "anonymous": false,
                                "documentation": {
                                    "id": 2800,
                                    "nodeType": "StructuredDocumentation",
                                    "src": "2877:151:6",
                                    "text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to `approve`. `value` is the new allowance."
                                },
                                "id": 2808,
                                "name": "Approval",
                                "nodeType": "EventDefinition",
                                "parameters": {
                                    "id": 2807,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 2802,
                                            "indexed": true,
                                            "mutability": "mutable",
                                            "name": "owner",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 2808,
                                            "src": "3049:21:6",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            },
                                            "typeName": {
                                                "id": 2801,
                                                "name": "address",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "3049:7:6",
                                                "stateMutability": "nonpayable",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            "visibility": "internal"
                                        },
                                        {
                                            "constant": false,
                                            "id": 2804,
                                            "indexed": true,
                                            "mutability": "mutable",
                                            "name": "spender",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 2808,
                                            "src": "3072:23:6",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            },
                                            "typeName": {
                                                "id": 2803,
                                                "name": "address",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "3072:7:6",
                                                "stateMutability": "nonpayable",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            "visibility": "internal"
                                        },
                                        {
                                            "constant": false,
                                            "id": 2806,
                                            "indexed": false,
                                            "mutability": "mutable",
                                            "name": "value",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 2808,
                                            "src": "3097:13:6",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            },
                                            "typeName": {
                                                "id": 2805,
                                                "name": "uint256",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "3097:7:6",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "3048:63:6"
                                },
                                "src": "3034:78:6"
                            }
                        ],
                        "scope": 2810,
                        "src": "276:2839:6"
                    }
                ],
                "src": "93:3022:6"
            },
            "id": 6
        },
        "c:/Users/luziu/Documents/aktionariat/contracts/src/IERC677Receiver.sol": {
            "ast": {
                "absolutePath": "c:/Users/luziu/Documents/aktionariat/contracts/src/IERC677Receiver.sol",
                "exportedSymbols": {
                    "IERC677Receiver": [
                        2821
                    ]
                },
                "id": 2822,
                "license": "MIT",
                "nodeType": "SourceUnit",
                "nodes": [
                    {
                        "id": 2811,
                        "literals": [
                            "solidity",
                            ">=",
                            "0.7"
                        ],
                        "nodeType": "PragmaDirective",
                        "src": "141:22:7"
                    },
                    {
                        "abstract": false,
                        "baseContracts": [],
                        "contractDependencies": [],
                        "contractKind": "interface",
                        "fullyImplemented": false,
                        "id": 2821,
                        "linearizedBaseContracts": [
                            2821
                        ],
                        "name": "IERC677Receiver",
                        "nodeType": "ContractDefinition",
                        "nodes": [
                            {
                                "functionSelector": "a4c0ed36",
                                "id": 2820,
                                "implemented": false,
                                "kind": "function",
                                "modifiers": [],
                                "name": "onTokenTransfer",
                                "nodeType": "FunctionDefinition",
                                "parameters": {
                                    "id": 2818,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 2813,
                                            "mutability": "mutable",
                                            "name": "from",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 2820,
                                            "src": "227:12:7",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            },
                                            "typeName": {
                                                "id": 2812,
                                                "name": "address",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "227:7:7",
                                                "stateMutability": "nonpayable",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            "visibility": "internal"
                                        },
                                        {
                                            "constant": false,
                                            "id": 2815,
                                            "mutability": "mutable",
                                            "name": "amount",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 2820,
                                            "src": "241:14:7",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            },
                                            "typeName": {
                                                "id": 2814,
                                                "name": "uint256",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "241:7:7",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            },
                                            "visibility": "internal"
                                        },
                                        {
                                            "constant": false,
                                            "id": 2817,
                                            "mutability": "mutable",
                                            "name": "data",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 2820,
                                            "src": "257:19:7",
                                            "stateVariable": false,
                                            "storageLocation": "calldata",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_bytes_calldata_ptr",
                                                "typeString": "bytes"
                                            },
                                            "typeName": {
                                                "id": 2816,
                                                "name": "bytes",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "257:5:7",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bytes_storage_ptr",
                                                    "typeString": "bytes"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "226:51:7"
                                },
                                "returnParameters": {
                                    "id": 2819,
                                    "nodeType": "ParameterList",
                                    "parameters": [],
                                    "src": "286:0:7"
                                },
                                "scope": 2821,
                                "src": "202:85:7",
                                "stateMutability": "nonpayable",
                                "virtual": false,
                                "visibility": "external"
                            }
                        ],
                        "scope": 2822,
                        "src": "167:125:7"
                    }
                ],
                "src": "141:151:7"
            },
            "id": 7
        },
        "c:/Users/luziu/Documents/aktionariat/contracts/src/IMigratable.sol": {
            "ast": {
                "absolutePath": "c:/Users/luziu/Documents/aktionariat/contracts/src/IMigratable.sol",
                "exportedSymbols": {
                    "IMigratable": [
                        2829
                    ]
                },
                "id": 2830,
                "license": "LicenseRef-Aktionariat",
                "nodeType": "SourceUnit",
                "nodes": [
                    {
                        "id": 2823,
                        "literals": [
                            "solidity",
                            ">=",
                            "0.7"
                        ],
                        "nodeType": "PragmaDirective",
                        "src": "1336:22:8"
                    },
                    {
                        "abstract": true,
                        "baseContracts": [],
                        "contractDependencies": [],
                        "contractKind": "contract",
                        "fullyImplemented": false,
                        "id": 2829,
                        "linearizedBaseContracts": [
                            2829
                        ],
                        "name": "IMigratable",
                        "nodeType": "ContractDefinition",
                        "nodes": [
                            {
                                "functionSelector": "ee5554d3",
                                "id": 2828,
                                "implemented": false,
                                "kind": "function",
                                "modifiers": [],
                                "name": "migrationToContract",
                                "nodeType": "FunctionDefinition",
                                "parameters": {
                                    "id": 2824,
                                    "nodeType": "ParameterList",
                                    "parameters": [],
                                    "src": "1427:2:8"
                                },
                                "returnParameters": {
                                    "id": 2827,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 2826,
                                            "mutability": "mutable",
                                            "name": "",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 2828,
                                            "src": "1454:7:8",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            },
                                            "typeName": {
                                                "id": 2825,
                                                "name": "address",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "1454:7:8",
                                                "stateMutability": "nonpayable",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "1453:9:8"
                                },
                                "scope": 2829,
                                "src": "1399:64:8",
                                "stateMutability": "nonpayable",
                                "virtual": true,
                                "visibility": "public"
                            }
                        ],
                        "scope": 2830,
                        "src": "1362:104:8"
                    }
                ],
                "src": "1336:130:8"
            },
            "id": 8
        },
        "c:/Users/luziu/Documents/aktionariat/contracts/src/SafeMath.sol": {
            "ast": {
                "absolutePath": "c:/Users/luziu/Documents/aktionariat/contracts/src/SafeMath.sol",
                "exportedSymbols": {
                    "SafeMath": [
                        2928
                    ]
                },
                "id": 2929,
                "license": "MIT",
                "nodeType": "SourceUnit",
                "nodes": [
                    {
                        "id": 2831,
                        "literals": [
                            "solidity",
                            ">=",
                            "0.7"
                        ],
                        "nodeType": "PragmaDirective",
                        "src": "90:22:9"
                    },
                    {
                        "abstract": false,
                        "baseContracts": [],
                        "contractDependencies": [],
                        "contractKind": "library",
                        "documentation": {
                            "id": 2832,
                            "nodeType": "StructuredDocumentation",
                            "src": "116:92:9",
                            "text": " @title SafeMath\n @dev Math operations with safety checks that throw on error"
                        },
                        "fullyImplemented": true,
                        "id": 2928,
                        "linearizedBaseContracts": [
                            2928
                        ],
                        "name": "SafeMath",
                        "nodeType": "ContractDefinition",
                        "nodes": [
                            {
                                "body": {
                                    "id": 2865,
                                    "nodeType": "Block",
                                    "src": "374:355:9",
                                    "statements": [
                                        {
                                            "condition": {
                                                "commonType": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                },
                                                "id": 2844,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftExpression": {
                                                    "id": 2842,
                                                    "name": "a",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 2835,
                                                    "src": "609:1:9",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    }
                                                },
                                                "nodeType": "BinaryOperation",
                                                "operator": "==",
                                                "rightExpression": {
                                                    "hexValue": "30",
                                                    "id": 2843,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "kind": "number",
                                                    "lValueRequested": false,
                                                    "nodeType": "Literal",
                                                    "src": "614:1:9",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_rational_0_by_1",
                                                        "typeString": "int_const 0"
                                                    },
                                                    "value": "0"
                                                },
                                                "src": "609:6:9",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            },
                                            "id": 2848,
                                            "nodeType": "IfStatement",
                                            "src": "605:47:9",
                                            "trueBody": {
                                                "id": 2847,
                                                "nodeType": "Block",
                                                "src": "617:35:9",
                                                "statements": [
                                                    {
                                                        "expression": {
                                                            "hexValue": "30",
                                                            "id": 2845,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": true,
                                                            "kind": "number",
                                                            "lValueRequested": false,
                                                            "nodeType": "Literal",
                                                            "src": "639:1:9",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_rational_0_by_1",
                                                                "typeString": "int_const 0"
                                                            },
                                                            "value": "0"
                                                        },
                                                        "functionReturnParameters": 2841,
                                                        "id": 2846,
                                                        "nodeType": "Return",
                                                        "src": "632:8:9"
                                                    }
                                                ]
                                            }
                                        },
                                        {
                                            "expression": {
                                                "id": 2853,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftHandSide": {
                                                    "id": 2849,
                                                    "name": "c",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 2840,
                                                    "src": "664:1:9",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    }
                                                },
                                                "nodeType": "Assignment",
                                                "operator": "=",
                                                "rightHandSide": {
                                                    "commonType": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    },
                                                    "id": 2852,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "leftExpression": {
                                                        "id": 2850,
                                                        "name": "a",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 2835,
                                                        "src": "668:1:9",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        }
                                                    },
                                                    "nodeType": "BinaryOperation",
                                                    "operator": "*",
                                                    "rightExpression": {
                                                        "id": 2851,
                                                        "name": "b",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 2837,
                                                        "src": "672:1:9",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        }
                                                    },
                                                    "src": "668:5:9",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    }
                                                },
                                                "src": "664:9:9",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            },
                                            "id": 2854,
                                            "nodeType": "ExpressionStatement",
                                            "src": "664:9:9"
                                        },
                                        {
                                            "expression": {
                                                "arguments": [
                                                    {
                                                        "commonType": {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        },
                                                        "id": 2860,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "leftExpression": {
                                                            "commonType": {
                                                                "typeIdentifier": "t_uint256",
                                                                "typeString": "uint256"
                                                            },
                                                            "id": 2858,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": false,
                                                            "lValueRequested": false,
                                                            "leftExpression": {
                                                                "id": 2856,
                                                                "name": "c",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [],
                                                                "referencedDeclaration": 2840,
                                                                "src": "691:1:9",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_uint256",
                                                                    "typeString": "uint256"
                                                                }
                                                            },
                                                            "nodeType": "BinaryOperation",
                                                            "operator": "/",
                                                            "rightExpression": {
                                                                "id": 2857,
                                                                "name": "a",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [],
                                                                "referencedDeclaration": 2835,
                                                                "src": "695:1:9",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_uint256",
                                                                    "typeString": "uint256"
                                                                }
                                                            },
                                                            "src": "691:5:9",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_uint256",
                                                                "typeString": "uint256"
                                                            }
                                                        },
                                                        "nodeType": "BinaryOperation",
                                                        "operator": "==",
                                                        "rightExpression": {
                                                            "id": 2859,
                                                            "name": "b",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 2837,
                                                            "src": "700:1:9",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_uint256",
                                                                "typeString": "uint256"
                                                            }
                                                        },
                                                        "src": "691:10:9",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_bool",
                                                            "typeString": "bool"
                                                        }
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_bool",
                                                            "typeString": "bool"
                                                        }
                                                    ],
                                                    "id": 2855,
                                                    "name": "assert",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": -3,
                                                    "src": "684:6:9",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
                                                        "typeString": "function (bool) pure"
                                                    }
                                                },
                                                "id": 2861,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "684:18:9",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_tuple$__$",
                                                    "typeString": "tuple()"
                                                }
                                            },
                                            "id": 2862,
                                            "nodeType": "ExpressionStatement",
                                            "src": "684:18:9"
                                        },
                                        {
                                            "expression": {
                                                "id": 2863,
                                                "name": "c",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 2840,
                                                "src": "720:1:9",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            },
                                            "functionReturnParameters": 2841,
                                            "id": 2864,
                                            "nodeType": "Return",
                                            "src": "713:8:9"
                                        }
                                    ]
                                },
                                "documentation": {
                                    "id": 2833,
                                    "nodeType": "StructuredDocumentation",
                                    "src": "236:63:9",
                                    "text": " @dev Multiplies two numbers, throws on overflow."
                                },
                                "id": 2866,
                                "implemented": true,
                                "kind": "function",
                                "modifiers": [],
                                "name": "mul",
                                "nodeType": "FunctionDefinition",
                                "parameters": {
                                    "id": 2838,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 2835,
                                            "mutability": "mutable",
                                            "name": "a",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 2866,
                                            "src": "318:9:9",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            },
                                            "typeName": {
                                                "id": 2834,
                                                "name": "uint256",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "318:7:9",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            },
                                            "visibility": "internal"
                                        },
                                        {
                                            "constant": false,
                                            "id": 2837,
                                            "mutability": "mutable",
                                            "name": "b",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 2866,
                                            "src": "329:9:9",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            },
                                            "typeName": {
                                                "id": 2836,
                                                "name": "uint256",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "329:7:9",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "317:22:9"
                                },
                                "returnParameters": {
                                    "id": 2841,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 2840,
                                            "mutability": "mutable",
                                            "name": "c",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 2866,
                                            "src": "363:9:9",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            },
                                            "typeName": {
                                                "id": 2839,
                                                "name": "uint256",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "363:7:9",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "362:11:9"
                                },
                                "scope": 2928,
                                "src": "305:424:9",
                                "stateMutability": "pure",
                                "virtual": false,
                                "visibility": "internal"
                            },
                            {
                                "body": {
                                    "id": 2880,
                                    "nodeType": "Block",
                                    "src": "885:228:9",
                                    "statements": [
                                        {
                                            "expression": {
                                                "commonType": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                },
                                                "id": 2878,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftExpression": {
                                                    "id": 2876,
                                                    "name": "a",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 2869,
                                                    "src": "1100:1:9",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    }
                                                },
                                                "nodeType": "BinaryOperation",
                                                "operator": "/",
                                                "rightExpression": {
                                                    "id": 2877,
                                                    "name": "b",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 2871,
                                                    "src": "1104:1:9",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    }
                                                },
                                                "src": "1100:5:9",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            },
                                            "functionReturnParameters": 2875,
                                            "id": 2879,
                                            "nodeType": "Return",
                                            "src": "1093:12:9"
                                        }
                                    ]
                                },
                                "documentation": {
                                    "id": 2867,
                                    "nodeType": "StructuredDocumentation",
                                    "src": "735:77:9",
                                    "text": " @dev Integer division of two numbers, truncating the quotient."
                                },
                                "id": 2881,
                                "implemented": true,
                                "kind": "function",
                                "modifiers": [],
                                "name": "div",
                                "nodeType": "FunctionDefinition",
                                "parameters": {
                                    "id": 2872,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 2869,
                                            "mutability": "mutable",
                                            "name": "a",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 2881,
                                            "src": "831:9:9",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            },
                                            "typeName": {
                                                "id": 2868,
                                                "name": "uint256",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "831:7:9",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            },
                                            "visibility": "internal"
                                        },
                                        {
                                            "constant": false,
                                            "id": 2871,
                                            "mutability": "mutable",
                                            "name": "b",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 2881,
                                            "src": "842:9:9",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            },
                                            "typeName": {
                                                "id": 2870,
                                                "name": "uint256",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "842:7:9",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "830:22:9"
                                },
                                "returnParameters": {
                                    "id": 2875,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 2874,
                                            "mutability": "mutable",
                                            "name": "",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 2881,
                                            "src": "876:7:9",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            },
                                            "typeName": {
                                                "id": 2873,
                                                "name": "uint256",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "876:7:9",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "875:9:9"
                                },
                                "scope": 2928,
                                "src": "818:295:9",
                                "stateMutability": "pure",
                                "virtual": false,
                                "visibility": "internal"
                            },
                            {
                                "body": {
                                    "id": 2901,
                                    "nodeType": "Block",
                                    "src": "1299:56:9",
                                    "statements": [
                                        {
                                            "expression": {
                                                "arguments": [
                                                    {
                                                        "commonType": {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        },
                                                        "id": 2894,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "leftExpression": {
                                                            "id": 2892,
                                                            "name": "b",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 2886,
                                                            "src": "1317:1:9",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_uint256",
                                                                "typeString": "uint256"
                                                            }
                                                        },
                                                        "nodeType": "BinaryOperation",
                                                        "operator": "<=",
                                                        "rightExpression": {
                                                            "id": 2893,
                                                            "name": "a",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 2884,
                                                            "src": "1322:1:9",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_uint256",
                                                                "typeString": "uint256"
                                                            }
                                                        },
                                                        "src": "1317:6:9",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_bool",
                                                            "typeString": "bool"
                                                        }
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_bool",
                                                            "typeString": "bool"
                                                        }
                                                    ],
                                                    "id": 2891,
                                                    "name": "assert",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": -3,
                                                    "src": "1310:6:9",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
                                                        "typeString": "function (bool) pure"
                                                    }
                                                },
                                                "id": 2895,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "1310:14:9",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_tuple$__$",
                                                    "typeString": "tuple()"
                                                }
                                            },
                                            "id": 2896,
                                            "nodeType": "ExpressionStatement",
                                            "src": "1310:14:9"
                                        },
                                        {
                                            "expression": {
                                                "commonType": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                },
                                                "id": 2899,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftExpression": {
                                                    "id": 2897,
                                                    "name": "a",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 2884,
                                                    "src": "1342:1:9",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    }
                                                },
                                                "nodeType": "BinaryOperation",
                                                "operator": "-",
                                                "rightExpression": {
                                                    "id": 2898,
                                                    "name": "b",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 2886,
                                                    "src": "1346:1:9",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    }
                                                },
                                                "src": "1342:5:9",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            },
                                            "functionReturnParameters": 2890,
                                            "id": 2900,
                                            "nodeType": "Return",
                                            "src": "1335:12:9"
                                        }
                                    ]
                                },
                                "documentation": {
                                    "id": 2882,
                                    "nodeType": "StructuredDocumentation",
                                    "src": "1119:107:9",
                                    "text": " @dev Subtracts two numbers, throws on overflow (i.e. if subtrahend is greater than minuend)."
                                },
                                "id": 2902,
                                "implemented": true,
                                "kind": "function",
                                "modifiers": [],
                                "name": "sub",
                                "nodeType": "FunctionDefinition",
                                "parameters": {
                                    "id": 2887,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 2884,
                                            "mutability": "mutable",
                                            "name": "a",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 2902,
                                            "src": "1245:9:9",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            },
                                            "typeName": {
                                                "id": 2883,
                                                "name": "uint256",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "1245:7:9",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            },
                                            "visibility": "internal"
                                        },
                                        {
                                            "constant": false,
                                            "id": 2886,
                                            "mutability": "mutable",
                                            "name": "b",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 2902,
                                            "src": "1256:9:9",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            },
                                            "typeName": {
                                                "id": 2885,
                                                "name": "uint256",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "1256:7:9",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "1244:22:9"
                                },
                                "returnParameters": {
                                    "id": 2890,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 2889,
                                            "mutability": "mutable",
                                            "name": "",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 2902,
                                            "src": "1290:7:9",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            },
                                            "typeName": {
                                                "id": 2888,
                                                "name": "uint256",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "1290:7:9",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "1289:9:9"
                                },
                                "scope": 2928,
                                "src": "1232:123:9",
                                "stateMutability": "pure",
                                "virtual": false,
                                "visibility": "internal"
                            },
                            {
                                "body": {
                                    "id": 2926,
                                    "nodeType": "Block",
                                    "src": "1493:72:9",
                                    "statements": [
                                        {
                                            "expression": {
                                                "id": 2916,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftHandSide": {
                                                    "id": 2912,
                                                    "name": "c",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 2910,
                                                    "src": "1504:1:9",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    }
                                                },
                                                "nodeType": "Assignment",
                                                "operator": "=",
                                                "rightHandSide": {
                                                    "commonType": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    },
                                                    "id": 2915,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "leftExpression": {
                                                        "id": 2913,
                                                        "name": "a",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 2905,
                                                        "src": "1508:1:9",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        }
                                                    },
                                                    "nodeType": "BinaryOperation",
                                                    "operator": "+",
                                                    "rightExpression": {
                                                        "id": 2914,
                                                        "name": "b",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 2907,
                                                        "src": "1512:1:9",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        }
                                                    },
                                                    "src": "1508:5:9",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    }
                                                },
                                                "src": "1504:9:9",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            },
                                            "id": 2917,
                                            "nodeType": "ExpressionStatement",
                                            "src": "1504:9:9"
                                        },
                                        {
                                            "expression": {
                                                "arguments": [
                                                    {
                                                        "commonType": {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        },
                                                        "id": 2921,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "leftExpression": {
                                                            "id": 2919,
                                                            "name": "c",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 2910,
                                                            "src": "1531:1:9",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_uint256",
                                                                "typeString": "uint256"
                                                            }
                                                        },
                                                        "nodeType": "BinaryOperation",
                                                        "operator": ">=",
                                                        "rightExpression": {
                                                            "id": 2920,
                                                            "name": "a",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 2905,
                                                            "src": "1536:1:9",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_uint256",
                                                                "typeString": "uint256"
                                                            }
                                                        },
                                                        "src": "1531:6:9",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_bool",
                                                            "typeString": "bool"
                                                        }
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_bool",
                                                            "typeString": "bool"
                                                        }
                                                    ],
                                                    "id": 2918,
                                                    "name": "assert",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": -3,
                                                    "src": "1524:6:9",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
                                                        "typeString": "function (bool) pure"
                                                    }
                                                },
                                                "id": 2922,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "1524:14:9",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_tuple$__$",
                                                    "typeString": "tuple()"
                                                }
                                            },
                                            "id": 2923,
                                            "nodeType": "ExpressionStatement",
                                            "src": "1524:14:9"
                                        },
                                        {
                                            "expression": {
                                                "id": 2924,
                                                "name": "c",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 2910,
                                                "src": "1556:1:9",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            },
                                            "functionReturnParameters": 2911,
                                            "id": 2925,
                                            "nodeType": "Return",
                                            "src": "1549:8:9"
                                        }
                                    ]
                                },
                                "documentation": {
                                    "id": 2903,
                                    "nodeType": "StructuredDocumentation",
                                    "src": "1361:57:9",
                                    "text": " @dev Adds two numbers, throws on overflow."
                                },
                                "id": 2927,
                                "implemented": true,
                                "kind": "function",
                                "modifiers": [],
                                "name": "add",
                                "nodeType": "FunctionDefinition",
                                "parameters": {
                                    "id": 2908,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 2905,
                                            "mutability": "mutable",
                                            "name": "a",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 2927,
                                            "src": "1437:9:9",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            },
                                            "typeName": {
                                                "id": 2904,
                                                "name": "uint256",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "1437:7:9",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            },
                                            "visibility": "internal"
                                        },
                                        {
                                            "constant": false,
                                            "id": 2907,
                                            "mutability": "mutable",
                                            "name": "b",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 2927,
                                            "src": "1448:9:9",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            },
                                            "typeName": {
                                                "id": 2906,
                                                "name": "uint256",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "1448:7:9",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "1436:22:9"
                                },
                                "returnParameters": {
                                    "id": 2911,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 2910,
                                            "mutability": "mutable",
                                            "name": "c",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 2927,
                                            "src": "1482:9:9",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            },
                                            "typeName": {
                                                "id": 2909,
                                                "name": "uint256",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "1482:7:9",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "1481:11:9"
                                },
                                "scope": 2928,
                                "src": "1424:141:9",
                                "stateMutability": "pure",
                                "virtual": false,
                                "visibility": "internal"
                            }
                        ],
                        "scope": 2929,
                        "src": "212:1356:9"
                    }
                ],
                "src": "90:1478:9"
            },
            "id": 9
        }
    }
}